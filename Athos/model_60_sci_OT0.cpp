/*
This is an autogenerated file, generated using the EzPC compiler.
*/


#include "library_fixed.h"
#include <iostream>
using namespace std;

int party = 0;
int port = 32000;
string address = "127.0.0.1";
int num_threads = 1;
int32_t bitlength = 60;


































void TanhImpl(int32_t LUTBITS, int32_t size, int32_t sA, int32_t sB, int32_t bwA, int32_t bwB, uint64_t* A, uint64_t* B){
TanH( (int32_t)1, size, sA, sB, bwA, bwB, A, B);
}


void SigmoidImpl(int32_t LUTBITS, int32_t size, int32_t sA, int32_t sB, int32_t bwA, int32_t bwB, uint64_t* A, uint64_t* B){
Sigmoid( (int32_t)1, size, sA, sB, bwA, bwB, A, B);
}


void SqrtImpl(int32_t LUTBITS, int32_t size, int32_t sA, int32_t sB, int32_t bwA, int32_t bwB, uint32_t inverse, uint64_t* A, uint64_t* B){
Sqrt( (int32_t)1, size, sA, sB, bwA, bwB, inverse, A, B);
}

void MatAddBroadCast2(int32_t a1, int32_t a2, int32_t b1, int32_t s1, int32_t s2, uint64_t* A, uint64_t* B, uint64_t* outArr){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
Arr2DIdxRowM(outArr,s1,s2,i1,i2) = SecretAdd(Arr2DIdxRowM(A,s1,s2,i1,i2), Arr1DIdxRowM(B,s2,i2));
}
}
}

void MatAdd2(int32_t a1, int32_t a2, int32_t b1, int32_t b2, int32_t s1, int32_t s2, uint64_t* A, uint64_t* B, uint64_t* outArr){

int32_t aIdx1 =  (int32_t)0;

int32_t aIdx2 =  (int32_t)0;

int32_t bIdx1 =  (int32_t)0;

int32_t bIdx2 =  (int32_t)0;
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
aIdx1 = (a1 ==  (int32_t)1) ?  (int32_t)0 : i1;
bIdx1 = (b1 ==  (int32_t)1) ?  (int32_t)0 : i1;
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
aIdx2 = (a2 ==  (int32_t)1) ?  (int32_t)0 : i2;
bIdx2 = (b2 ==  (int32_t)1) ?  (int32_t)0 : i2;
Arr2DIdxRowM(outArr,s1,s2,i1,i2) = SecretAdd(Arr2DIdxRowM(A,a1,a2,aIdx1,aIdx2), Arr2DIdxRowM(B,b1,b2,bIdx1,bIdx2));
}
}
}

void MatAddBroadCast4(int32_t a1, int32_t a2, int32_t a3, int32_t a4, int32_t b1, int32_t s1, int32_t s2, int32_t s3, int32_t s4, uint64_t* A, uint64_t* B, uint64_t* outArr){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
Arr4DIdxRowM(outArr,s1,s2,s3,s4,i1,i2,i3,i4) = SecretAdd(Arr4DIdxRowM(A,s1,s2,s3,s4,i1,i2,i3,i4), Arr1DIdxRowM(B,s4,i4));
}
}
}
}
}

void MatAddBroadCast5(int32_t a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5, int32_t b1, int32_t s1, int32_t s2, int32_t s3, int32_t s4, int32_t s5, uint64_t* A, uint64_t* B, uint64_t* outArr){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
for (uint32_t i5 =  (int32_t)0; i5 < s5; i5++){
Arr5DIdxRowM(outArr,s1,s2,s3,s4,s5,i1,i2,i3,i4,i5) = SecretAdd(Arr5DIdxRowM(A,s1,s2,s3,s4,s5,i1,i2,i3,i4,i5), Arr1DIdxRowM(B,s5,i5));
}
}
}
}
}
}

void MatAdd4(int32_t a1, int32_t a2, int32_t a3, int32_t a4, int32_t b1, int32_t b2, int32_t b3, int32_t b4, int32_t s1, int32_t s2, int32_t s3, int32_t s4, uint64_t* A, uint64_t* B, uint64_t* outArr){

int32_t aIdx1 =  (int32_t)0;

int32_t aIdx2 =  (int32_t)0;

int32_t aIdx3 =  (int32_t)0;

int32_t aIdx4 =  (int32_t)0;

int32_t bIdx1 =  (int32_t)0;

int32_t bIdx2 =  (int32_t)0;

int32_t bIdx3 =  (int32_t)0;

int32_t bIdx4 =  (int32_t)0;
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
aIdx1 = (a1 ==  (int32_t)1) ?  (int32_t)0 : i1;
bIdx1 = (b1 ==  (int32_t)1) ?  (int32_t)0 : i1;
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
aIdx2 = (a2 ==  (int32_t)1) ?  (int32_t)0 : i2;
bIdx2 = (b2 ==  (int32_t)1) ?  (int32_t)0 : i2;
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
aIdx3 = (a3 ==  (int32_t)1) ?  (int32_t)0 : i3;
bIdx3 = (b3 ==  (int32_t)1) ?  (int32_t)0 : i3;
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
aIdx4 = (a4 ==  (int32_t)1) ?  (int32_t)0 : i4;
bIdx4 = (b4 ==  (int32_t)1) ?  (int32_t)0 : i4;
Arr4DIdxRowM(outArr,s1,s2,s3,s4,i1,i2,i3,i4) = SecretAdd(Arr4DIdxRowM(A,a1,a2,a3,a4,aIdx1,aIdx2,aIdx3,aIdx4), Arr4DIdxRowM(B,b1,b2,b3,b4,bIdx1,bIdx2,bIdx3,bIdx4));
}
}
}
}
}

void MatAdd5(int32_t a1, int32_t a2, int32_t a3, int32_t a4, int32_t a5, int32_t b1, int32_t b2, int32_t b3, int32_t b4, int32_t b5, int32_t s1, int32_t s2, int32_t s3, int32_t s4, int32_t s5, uint64_t* A, uint64_t* B, uint64_t* outArr){

int32_t aIdx1 =  (int32_t)0;

int32_t aIdx2 =  (int32_t)0;

int32_t aIdx3 =  (int32_t)0;

int32_t aIdx4 =  (int32_t)0;

int32_t aIdx5 =  (int32_t)0;

int32_t bIdx1 =  (int32_t)0;

int32_t bIdx2 =  (int32_t)0;

int32_t bIdx3 =  (int32_t)0;

int32_t bIdx4 =  (int32_t)0;

int32_t bIdx5 =  (int32_t)0;
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
aIdx1 = (a1 ==  (int32_t)1) ?  (int32_t)0 : i1;
bIdx1 = (b1 ==  (int32_t)1) ?  (int32_t)0 : i1;
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
aIdx2 = (a2 ==  (int32_t)1) ?  (int32_t)0 : i2;
bIdx2 = (b2 ==  (int32_t)1) ?  (int32_t)0 : i2;
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
aIdx3 = (a3 ==  (int32_t)1) ?  (int32_t)0 : i3;
bIdx3 = (b3 ==  (int32_t)1) ?  (int32_t)0 : i3;
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
aIdx4 = (a4 ==  (int32_t)1) ?  (int32_t)0 : i4;
bIdx4 = (b4 ==  (int32_t)1) ?  (int32_t)0 : i4;
for (uint32_t i5 =  (int32_t)0; i5 < s5; i5++){
aIdx5 = (a5 ==  (int32_t)1) ?  (int32_t)0 : i5;
bIdx5 = (b5 ==  (int32_t)1) ?  (int32_t)0 : i5;
Arr5DIdxRowM(outArr,s1,s2,s3,s4,s5,i1,i2,i3,i4,i5) = SecretAdd(Arr5DIdxRowM(A,a1,a2,a3,a4,a5,aIdx1,aIdx2,aIdx3,aIdx4,aIdx5), Arr5DIdxRowM(B,b1,b2,b3,b4,b5,bIdx1,bIdx2,bIdx3,bIdx4,bIdx5));
}
}
}
}
}
}

void CreateTensor1(int32_t s1, int64_t val, int64_t* arr){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
Arr1DIdxRowM(arr,s1,i1) = val;
}
}

void CreateTensor2(int32_t s1, int32_t s2, int64_t val, int64_t* arr){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
Arr2DIdxRowM(arr,s1,s2,i1,i2) = val;
}
}
}

void CreateTensor3(int32_t s1, int32_t s2, int32_t s3, int64_t val, int64_t* arr){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
Arr3DIdxRowM(arr,s1,s2,s3,i1,i2,i3) = val;
}
}
}
}

void CreateTensor4(int32_t s1, int32_t s2, int32_t s3, int32_t s4, int64_t val, int64_t* arr){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
Arr4DIdxRowM(arr,s1,s2,s3,s4,i1,i2,i3,i4) = val;
}
}
}
}
}

void CreateTensor5(int32_t s1, int32_t s2, int32_t s3, int32_t s4, int32_t s5, int64_t val, int64_t* arr){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
for (uint32_t i5 =  (int32_t)0; i5 < s5; i5++){
Arr5DIdxRowM(arr,s1,s2,s3,s4,s5,i1,i2,i3,i4,i5) = val;
}
}
}
}
}
}

void CopyTensor1(int32_t s1, uint64_t* targetArr, uint64_t* fromArr, uint64_t* ignore){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
Arr1DIdxRowM(targetArr,s1,i1) = Arr1DIdxRowM(fromArr,s1,i1);
}
}

void CopyTensor2(int32_t s1, int32_t s2, uint64_t* targetArr, uint64_t* fromArr, uint64_t* ignore){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
Arr2DIdxRowM(targetArr,s1,s2,i1,i2) = Arr2DIdxRowM(fromArr,s1,s2,i1,i2);
}
}
}

void CopyTensor3(int32_t s1, int32_t s2, int32_t s3, uint64_t* targetArr, uint64_t* fromArr, uint64_t* ignore){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
Arr3DIdxRowM(targetArr,s1,s2,s3,i1,i2,i3) = Arr3DIdxRowM(fromArr,s1,s2,s3,i1,i2,i3);
}
}
}
}

void CopyTensor4(int32_t s1, int32_t s2, int32_t s3, int32_t s4, uint64_t* targetArr, uint64_t* fromArr, uint64_t* ignore){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
Arr4DIdxRowM(targetArr,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(fromArr,s1,s2,s3,s4,i1,i2,i3,i4);
}
}
}
}
}

void CreateIdentity11(int32_t s1, uint64_t* fromArr, uint64_t* newArr){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
Arr1DIdxRowM(newArr,s1,i1) = Arr1DIdxRowM(fromArr,s1,i1);
}
}

void CreateIdentity22(int32_t s1, int32_t s2, uint64_t* fromArr, uint64_t* newArr){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
Arr2DIdxRowM(newArr,s1,s2,i1,i2) = Arr2DIdxRowM(fromArr,s1,s2,i1,i2);
}
}
}

void CreateIdentity33(int32_t s1, int32_t s2, int32_t s3, uint64_t* fromArr, uint64_t* newArr){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
Arr3DIdxRowM(newArr,s1,s2,s3,i1,i2,i3) = Arr3DIdxRowM(fromArr,s1,s2,s3,i1,i2,i3);
}
}
}
}

void CreateIdentity44(int32_t s1, int32_t s2, int32_t s3, int32_t s4, uint64_t* fromArr, uint64_t* newArr){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
Arr4DIdxRowM(newArr,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(fromArr,s1,s2,s3,s4,i1,i2,i3,i4);
}
}
}
}
}

void CreateCopy2211(int32_t s1, int32_t s2, int32_t inps1, int32_t inps2, uint64_t* inArr, int32_t perDimSize, int32_t* beginIdx, int32_t* sizeIdx, uint64_t* outArr){
for (uint32_t i =  (int32_t)0; i < s1; i++){
for (uint32_t j =  (int32_t)0; j < s2; j++){
Arr2DIdxRowM(outArr,s1,s2,i,j) = Arr2DIdxRowM(inArr,inps1,inps2,(Arr1DIdxRowM(beginIdx,perDimSize, (int32_t)0) + i),(Arr1DIdxRowM(beginIdx,perDimSize, (int32_t)1) + j));
}
}
}

void CreateCopy5511(int32_t s1, int32_t s2, int32_t s3, int32_t s4, int32_t s5, int32_t inps1, int32_t inps2, int32_t inps3, int32_t inps4, int32_t inps5, uint64_t* inArr, int32_t perDimSize, int32_t* beginIdx, int32_t* sizeIdx, uint64_t* outArr){
for (uint32_t i =  (int32_t)0; i < s1; i++){
for (uint32_t j =  (int32_t)0; j < s2; j++){
for (uint32_t k =  (int32_t)0; k < s3; k++){
for (uint32_t l =  (int32_t)0; l < s4; l++){
for (uint32_t m =  (int32_t)0; m < s5; m++){
Arr5DIdxRowM(outArr,s1,s2,s3,s4,s5,i,j,k,l,m) = Arr5DIdxRowM(inArr,inps1,inps2,inps3,inps4,inps5,(Arr1DIdxRowM(beginIdx,perDimSize, (int32_t)0) + i),(Arr1DIdxRowM(beginIdx,perDimSize, (int32_t)1) + j),(Arr1DIdxRowM(beginIdx,perDimSize, (int32_t)2) + k),(Arr1DIdxRowM(beginIdx,perDimSize, (int32_t)3) + l),(Arr1DIdxRowM(beginIdx,perDimSize, (int32_t)4) + m));
}
}
}
}
}
}

void Concat1T44(int32_t s1, int32_t s2, int32_t s3, int32_t s4, int32_t inp1s1, int32_t inp1s2, int32_t inp1s3, int32_t inp1s4, uint64_t* inp1, int32_t axis, uint64_t* outp){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
}
}
}
}
}

void Concat2T222(int32_t s1, int32_t s2, int32_t inp1s1, int32_t inp1s2, uint64_t* inp1, int32_t inp2s1, int32_t inp2s2, uint64_t* inp2, int32_t axis, uint64_t* outp){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
if ((axis ==  (int32_t)0)) {
if ((i1 < inp1s1)) {
Arr2DIdxRowM(outp,s1,s2,i1,i2) = Arr2DIdxRowM(inp1,inp1s1,inp1s2,i1,i2);
} else {
Arr2DIdxRowM(outp,s1,s2,i1,i2) = Arr2DIdxRowM(inp2,inp2s1,inp2s2,(i1 - inp1s1),i2);
}
} else {
if ((i2 < inp1s2)) {
Arr2DIdxRowM(outp,s1,s2,i1,i2) = Arr2DIdxRowM(inp1,inp1s1,inp1s2,i1,i2);
} else {
Arr2DIdxRowM(outp,s1,s2,i1,i2) = Arr2DIdxRowM(inp2,inp2s1,inp2s2,i1,(i2 - inp1s2));
}
}
}
}
}

void Concat2T444(int32_t s1, int32_t s2, int32_t s3, int32_t s4, int32_t inp1s1, int32_t inp1s2, int32_t inp1s3, int32_t inp1s4, uint64_t* inp1, int32_t inp2s1, int32_t inp2s2, int32_t inp2s3, int32_t inp2s4, uint64_t* inp2, int32_t axis, uint64_t* outp){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
if ((axis ==  (int32_t)0)) {
if ((i1 < inp1s1)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,(i1 - inp1s1),i2,i3,i4);
}
} else {
if ((axis ==  (int32_t)1)) {
if ((i2 < inp1s2)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,(i2 - inp1s2),i3,i4);
}
} else {
if ((axis ==  (int32_t)2)) {
if ((i3 < inp1s3)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,(i3 - inp1s3),i4);
}
} else {
if ((i4 < inp1s4)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,i3,(i4 - inp1s4));
}
}
}
}
}
}
}
}
}

void Concat3T4444(int32_t s1, int32_t s2, int32_t s3, int32_t s4, int32_t inp1s1, int32_t inp1s2, int32_t inp1s3, int32_t inp1s4, uint64_t* inp1, int32_t inp2s1, int32_t inp2s2, int32_t inp2s3, int32_t inp2s4, uint64_t* inp2, int32_t inp3s1, int32_t inp3s2, int32_t inp3s3, int32_t inp3s4, uint64_t* inp3, int32_t axis, uint64_t* outp){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
if ((axis ==  (int32_t)0)) {
if ((i1 < inp1s1)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i1 < (inp1s1 + inp2s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,(i1 - inp1s1),i2,i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,((i1 - inp1s1) - inp2s1),i2,i3,i4);
}
}
} else {
if ((axis ==  (int32_t)1)) {
if ((i2 < inp1s2)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i2 < (inp1s2 + inp2s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,(i2 - inp1s2),i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,((i2 - inp1s2) - inp2s2),i3,i4);
}
}
} else {
if ((axis ==  (int32_t)2)) {
if ((i3 < inp1s3)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i3 < (inp1s3 + inp2s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,(i3 - inp1s3),i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,((i3 - inp1s3) - inp2s3),i4);
}
}
} else {
if ((i4 < inp1s4)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i4 < (inp1s4 + inp2s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,i3,(i4 - inp1s4));
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,i3,((i4 - inp1s4) - inp2s4));
}
}
}
}
}
}
}
}
}
}

void Concat4T44444(int32_t s1, int32_t s2, int32_t s3, int32_t s4, int32_t inp1s1, int32_t inp1s2, int32_t inp1s3, int32_t inp1s4, uint64_t* inp1, int32_t inp2s1, int32_t inp2s2, int32_t inp2s3, int32_t inp2s4, uint64_t* inp2, int32_t inp3s1, int32_t inp3s2, int32_t inp3s3, int32_t inp3s4, uint64_t* inp3, int32_t inp4s1, int32_t inp4s2, int32_t inp4s3, int32_t inp4s4, uint64_t* inp4, int32_t axis, uint64_t* outp){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
if ((axis ==  (int32_t)0)) {
if ((i1 < inp1s1)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i1 < (inp1s1 + inp2s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,(i1 - inp1s1),i2,i3,i4);
} else {
if ((i1 < ((inp1s1 + inp2s1) + inp3s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,((i1 - inp1s1) - inp2s1),i2,i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,(((i1 - inp1s1) - inp2s1) - inp3s1),i2,i3,i4);
}
}
}
} else {
if ((axis ==  (int32_t)1)) {
if ((i2 < inp1s2)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i2 < (inp1s2 + inp2s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,(i2 - inp1s2),i3,i4);
} else {
if ((i2 < ((inp1s2 + inp2s2) + inp3s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,((i2 - inp1s2) - inp2s2),i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,(((i2 - inp1s2) - inp2s2) - inp3s2),i3,i4);
}
}
}
} else {
if ((axis ==  (int32_t)2)) {
if ((i3 < inp1s3)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i3 < (inp1s3 + inp2s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,(i3 - inp1s3),i4);
} else {
if ((i3 < ((inp1s3 + inp2s3) + inp3s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,((i3 - inp1s3) - inp2s3),i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,(((i3 - inp1s3) - inp2s3) - inp3s3),i4);
}
}
}
} else {
if ((i4 < inp1s4)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i4 < (inp1s4 + inp2s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,i3,(i4 - inp1s4));
} else {
if ((i4 < ((inp1s4 + inp2s4) + inp3s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,i3,((i4 - inp1s4) - inp2s4));
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,i3,(((i4 - inp1s4) - inp2s4) - inp3s4));
}
}
}
}
}
}
}
}
}
}
}

void Concat5T444444(int32_t s1, int32_t s2, int32_t s3, int32_t s4, int32_t inp1s1, int32_t inp1s2, int32_t inp1s3, int32_t inp1s4, uint64_t* inp1, int32_t inp2s1, int32_t inp2s2, int32_t inp2s3, int32_t inp2s4, uint64_t* inp2, int32_t inp3s1, int32_t inp3s2, int32_t inp3s3, int32_t inp3s4, uint64_t* inp3, int32_t inp4s1, int32_t inp4s2, int32_t inp4s3, int32_t inp4s4, uint64_t* inp4, int32_t inp5s1, int32_t inp5s2, int32_t inp5s3, int32_t inp5s4, uint64_t* inp5, int32_t axis, uint64_t* outp){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
if ((axis ==  (int32_t)0)) {
if ((i1 < inp1s1)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i1 < (inp1s1 + inp2s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,(i1 - inp1s1),i2,i3,i4);
} else {
if ((i1 < ((inp1s1 + inp2s1) + inp3s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,((i1 - inp1s1) - inp2s1),i2,i3,i4);
} else {
if ((i1 < (((inp1s1 + inp2s1) + inp3s1) + inp4s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,(((i1 - inp1s1) - inp2s1) - inp3s1),i2,i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1),i2,i3,i4);
}
}
}
}
} else {
if ((axis ==  (int32_t)1)) {
if ((i2 < inp1s2)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i2 < (inp1s2 + inp2s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,(i2 - inp1s2),i3,i4);
} else {
if ((i2 < ((inp1s2 + inp2s2) + inp3s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,((i2 - inp1s2) - inp2s2),i3,i4);
} else {
if ((i2 < (((inp1s2 + inp2s2) + inp3s2) + inp4s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,(((i2 - inp1s2) - inp2s2) - inp3s2),i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2),i3,i4);
}
}
}
}
} else {
if ((axis ==  (int32_t)2)) {
if ((i3 < inp1s3)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i3 < (inp1s3 + inp2s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,(i3 - inp1s3),i4);
} else {
if ((i3 < ((inp1s3 + inp2s3) + inp3s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,((i3 - inp1s3) - inp2s3),i4);
} else {
if ((i3 < (((inp1s3 + inp2s3) + inp3s3) + inp4s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,(((i3 - inp1s3) - inp2s3) - inp3s3),i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3),i4);
}
}
}
}
} else {
if ((i4 < inp1s4)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i4 < (inp1s4 + inp2s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,i3,(i4 - inp1s4));
} else {
if ((i4 < ((inp1s4 + inp2s4) + inp3s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,i3,((i4 - inp1s4) - inp2s4));
} else {
if ((i4 < (((inp1s4 + inp2s4) + inp3s4) + inp4s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,i3,(((i4 - inp1s4) - inp2s4) - inp3s4));
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,i3,((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4));
}
}
}
}
}
}
}
}
}
}
}
}

void Concat6T4444444(int32_t s1, int32_t s2, int32_t s3, int32_t s4, int32_t inp1s1, int32_t inp1s2, int32_t inp1s3, int32_t inp1s4, uint64_t* inp1, int32_t inp2s1, int32_t inp2s2, int32_t inp2s3, int32_t inp2s4, uint64_t* inp2, int32_t inp3s1, int32_t inp3s2, int32_t inp3s3, int32_t inp3s4, uint64_t* inp3, int32_t inp4s1, int32_t inp4s2, int32_t inp4s3, int32_t inp4s4, uint64_t* inp4, int32_t inp5s1, int32_t inp5s2, int32_t inp5s3, int32_t inp5s4, uint64_t* inp5, int32_t inp6s1, int32_t inp6s2, int32_t inp6s3, int32_t inp6s4, uint64_t* inp6, int32_t axis, uint64_t* outp){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
if ((axis ==  (int32_t)0)) {
if ((i1 < inp1s1)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i1 < (inp1s1 + inp2s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,(i1 - inp1s1),i2,i3,i4);
} else {
if ((i1 < ((inp1s1 + inp2s1) + inp3s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,((i1 - inp1s1) - inp2s1),i2,i3,i4);
} else {
if ((i1 < (((inp1s1 + inp2s1) + inp3s1) + inp4s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,(((i1 - inp1s1) - inp2s1) - inp3s1),i2,i3,i4);
} else {
if ((i1 < ((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1),i2,i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,(((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1),i2,i3,i4);
}
}
}
}
}
} else {
if ((axis ==  (int32_t)1)) {
if ((i2 < inp1s2)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i2 < (inp1s2 + inp2s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,(i2 - inp1s2),i3,i4);
} else {
if ((i2 < ((inp1s2 + inp2s2) + inp3s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,((i2 - inp1s2) - inp2s2),i3,i4);
} else {
if ((i2 < (((inp1s2 + inp2s2) + inp3s2) + inp4s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,(((i2 - inp1s2) - inp2s2) - inp3s2),i3,i4);
} else {
if ((i2 < ((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2),i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,(((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2),i3,i4);
}
}
}
}
}
} else {
if ((axis ==  (int32_t)2)) {
if ((i3 < inp1s3)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i3 < (inp1s3 + inp2s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,(i3 - inp1s3),i4);
} else {
if ((i3 < ((inp1s3 + inp2s3) + inp3s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,((i3 - inp1s3) - inp2s3),i4);
} else {
if ((i3 < (((inp1s3 + inp2s3) + inp3s3) + inp4s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,(((i3 - inp1s3) - inp2s3) - inp3s3),i4);
} else {
if ((i3 < ((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3),i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,(((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3),i4);
}
}
}
}
}
} else {
if ((i4 < inp1s4)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i4 < (inp1s4 + inp2s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,i3,(i4 - inp1s4));
} else {
if ((i4 < ((inp1s4 + inp2s4) + inp3s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,i3,((i4 - inp1s4) - inp2s4));
} else {
if ((i4 < (((inp1s4 + inp2s4) + inp3s4) + inp4s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,i3,(((i4 - inp1s4) - inp2s4) - inp3s4));
} else {
if ((i4 < ((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,i3,((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4));
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,i3,(((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4));
}
}
}
}
}
}
}
}
}
}
}
}
}

void Concat7T44444444(int32_t s1, int32_t s2, int32_t s3, int32_t s4, int32_t inp1s1, int32_t inp1s2, int32_t inp1s3, int32_t inp1s4, uint64_t* inp1, int32_t inp2s1, int32_t inp2s2, int32_t inp2s3, int32_t inp2s4, uint64_t* inp2, int32_t inp3s1, int32_t inp3s2, int32_t inp3s3, int32_t inp3s4, uint64_t* inp3, int32_t inp4s1, int32_t inp4s2, int32_t inp4s3, int32_t inp4s4, uint64_t* inp4, int32_t inp5s1, int32_t inp5s2, int32_t inp5s3, int32_t inp5s4, uint64_t* inp5, int32_t inp6s1, int32_t inp6s2, int32_t inp6s3, int32_t inp6s4, uint64_t* inp6, int32_t inp7s1, int32_t inp7s2, int32_t inp7s3, int32_t inp7s4, uint64_t* inp7, int32_t axis, uint64_t* outp){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
if ((axis ==  (int32_t)0)) {
if ((i1 < inp1s1)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i1 < (inp1s1 + inp2s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,(i1 - inp1s1),i2,i3,i4);
} else {
if ((i1 < ((inp1s1 + inp2s1) + inp3s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,((i1 - inp1s1) - inp2s1),i2,i3,i4);
} else {
if ((i1 < (((inp1s1 + inp2s1) + inp3s1) + inp4s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,(((i1 - inp1s1) - inp2s1) - inp3s1),i2,i3,i4);
} else {
if ((i1 < ((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1),i2,i3,i4);
} else {
if ((i1 < (((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,(((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1),i2,i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1),i2,i3,i4);
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)1)) {
if ((i2 < inp1s2)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i2 < (inp1s2 + inp2s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,(i2 - inp1s2),i3,i4);
} else {
if ((i2 < ((inp1s2 + inp2s2) + inp3s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,((i2 - inp1s2) - inp2s2),i3,i4);
} else {
if ((i2 < (((inp1s2 + inp2s2) + inp3s2) + inp4s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,(((i2 - inp1s2) - inp2s2) - inp3s2),i3,i4);
} else {
if ((i2 < ((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2),i3,i4);
} else {
if ((i2 < (((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,(((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2),i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2),i3,i4);
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)2)) {
if ((i3 < inp1s3)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i3 < (inp1s3 + inp2s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,(i3 - inp1s3),i4);
} else {
if ((i3 < ((inp1s3 + inp2s3) + inp3s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,((i3 - inp1s3) - inp2s3),i4);
} else {
if ((i3 < (((inp1s3 + inp2s3) + inp3s3) + inp4s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,(((i3 - inp1s3) - inp2s3) - inp3s3),i4);
} else {
if ((i3 < ((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3),i4);
} else {
if ((i3 < (((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,(((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3),i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3),i4);
}
}
}
}
}
}
} else {
if ((i4 < inp1s4)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i4 < (inp1s4 + inp2s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,i3,(i4 - inp1s4));
} else {
if ((i4 < ((inp1s4 + inp2s4) + inp3s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,i3,((i4 - inp1s4) - inp2s4));
} else {
if ((i4 < (((inp1s4 + inp2s4) + inp3s4) + inp4s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,i3,(((i4 - inp1s4) - inp2s4) - inp3s4));
} else {
if ((i4 < ((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,i3,((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4));
} else {
if ((i4 < (((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,i3,(((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4));
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,i3,((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4));
}
}
}
}
}
}
}
}
}
}
}
}
}
}

void Concat8T444444444(int32_t s1, int32_t s2, int32_t s3, int32_t s4, int32_t inp1s1, int32_t inp1s2, int32_t inp1s3, int32_t inp1s4, uint64_t* inp1, int32_t inp2s1, int32_t inp2s2, int32_t inp2s3, int32_t inp2s4, uint64_t* inp2, int32_t inp3s1, int32_t inp3s2, int32_t inp3s3, int32_t inp3s4, uint64_t* inp3, int32_t inp4s1, int32_t inp4s2, int32_t inp4s3, int32_t inp4s4, uint64_t* inp4, int32_t inp5s1, int32_t inp5s2, int32_t inp5s3, int32_t inp5s4, uint64_t* inp5, int32_t inp6s1, int32_t inp6s2, int32_t inp6s3, int32_t inp6s4, uint64_t* inp6, int32_t inp7s1, int32_t inp7s2, int32_t inp7s3, int32_t inp7s4, uint64_t* inp7, int32_t inp8s1, int32_t inp8s2, int32_t inp8s3, int32_t inp8s4, uint64_t* inp8, int32_t axis, uint64_t* outp){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
if ((axis ==  (int32_t)0)) {
if ((i1 < inp1s1)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i1 < (inp1s1 + inp2s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,(i1 - inp1s1),i2,i3,i4);
} else {
if ((i1 < ((inp1s1 + inp2s1) + inp3s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,((i1 - inp1s1) - inp2s1),i2,i3,i4);
} else {
if ((i1 < (((inp1s1 + inp2s1) + inp3s1) + inp4s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,(((i1 - inp1s1) - inp2s1) - inp3s1),i2,i3,i4);
} else {
if ((i1 < ((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1),i2,i3,i4);
} else {
if ((i1 < (((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,(((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1),i2,i3,i4);
} else {
if ((i1 < ((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1),i2,i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,(((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1),i2,i3,i4);
}
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)1)) {
if ((i2 < inp1s2)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i2 < (inp1s2 + inp2s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,(i2 - inp1s2),i3,i4);
} else {
if ((i2 < ((inp1s2 + inp2s2) + inp3s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,((i2 - inp1s2) - inp2s2),i3,i4);
} else {
if ((i2 < (((inp1s2 + inp2s2) + inp3s2) + inp4s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,(((i2 - inp1s2) - inp2s2) - inp3s2),i3,i4);
} else {
if ((i2 < ((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2),i3,i4);
} else {
if ((i2 < (((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,(((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2),i3,i4);
} else {
if ((i2 < ((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2),i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,(((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2),i3,i4);
}
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)2)) {
if ((i3 < inp1s3)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i3 < (inp1s3 + inp2s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,(i3 - inp1s3),i4);
} else {
if ((i3 < ((inp1s3 + inp2s3) + inp3s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,((i3 - inp1s3) - inp2s3),i4);
} else {
if ((i3 < (((inp1s3 + inp2s3) + inp3s3) + inp4s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,(((i3 - inp1s3) - inp2s3) - inp3s3),i4);
} else {
if ((i3 < ((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3),i4);
} else {
if ((i3 < (((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,(((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3),i4);
} else {
if ((i3 < ((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3),i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,i2,(((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3),i4);
}
}
}
}
}
}
}
} else {
if ((i4 < inp1s4)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i4 < (inp1s4 + inp2s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,i3,(i4 - inp1s4));
} else {
if ((i4 < ((inp1s4 + inp2s4) + inp3s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,i3,((i4 - inp1s4) - inp2s4));
} else {
if ((i4 < (((inp1s4 + inp2s4) + inp3s4) + inp4s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,i3,(((i4 - inp1s4) - inp2s4) - inp3s4));
} else {
if ((i4 < ((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,i3,((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4));
} else {
if ((i4 < (((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,i3,(((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4));
} else {
if ((i4 < ((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,i3,((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4));
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,i2,i3,(((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}

void Concat9T4444444444(int32_t s1, int32_t s2, int32_t s3, int32_t s4, int32_t inp1s1, int32_t inp1s2, int32_t inp1s3, int32_t inp1s4, uint64_t* inp1, int32_t inp2s1, int32_t inp2s2, int32_t inp2s3, int32_t inp2s4, uint64_t* inp2, int32_t inp3s1, int32_t inp3s2, int32_t inp3s3, int32_t inp3s4, uint64_t* inp3, int32_t inp4s1, int32_t inp4s2, int32_t inp4s3, int32_t inp4s4, uint64_t* inp4, int32_t inp5s1, int32_t inp5s2, int32_t inp5s3, int32_t inp5s4, uint64_t* inp5, int32_t inp6s1, int32_t inp6s2, int32_t inp6s3, int32_t inp6s4, uint64_t* inp6, int32_t inp7s1, int32_t inp7s2, int32_t inp7s3, int32_t inp7s4, uint64_t* inp7, int32_t inp8s1, int32_t inp8s2, int32_t inp8s3, int32_t inp8s4, uint64_t* inp8, int32_t inp9s1, int32_t inp9s2, int32_t inp9s3, int32_t inp9s4, uint64_t* inp9, int32_t axis, uint64_t* outp){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
if ((axis ==  (int32_t)0)) {
if ((i1 < inp1s1)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i1 < (inp1s1 + inp2s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,(i1 - inp1s1),i2,i3,i4);
} else {
if ((i1 < ((inp1s1 + inp2s1) + inp3s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,((i1 - inp1s1) - inp2s1),i2,i3,i4);
} else {
if ((i1 < (((inp1s1 + inp2s1) + inp3s1) + inp4s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,(((i1 - inp1s1) - inp2s1) - inp3s1),i2,i3,i4);
} else {
if ((i1 < ((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1),i2,i3,i4);
} else {
if ((i1 < (((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,(((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1),i2,i3,i4);
} else {
if ((i1 < ((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1),i2,i3,i4);
} else {
if ((i1 < (((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,(((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1),i2,i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1),i2,i3,i4);
}
}
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)1)) {
if ((i2 < inp1s2)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i2 < (inp1s2 + inp2s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,(i2 - inp1s2),i3,i4);
} else {
if ((i2 < ((inp1s2 + inp2s2) + inp3s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,((i2 - inp1s2) - inp2s2),i3,i4);
} else {
if ((i2 < (((inp1s2 + inp2s2) + inp3s2) + inp4s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,(((i2 - inp1s2) - inp2s2) - inp3s2),i3,i4);
} else {
if ((i2 < ((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2),i3,i4);
} else {
if ((i2 < (((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,(((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2),i3,i4);
} else {
if ((i2 < ((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2),i3,i4);
} else {
if ((i2 < (((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,(((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2),i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2),i3,i4);
}
}
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)2)) {
if ((i3 < inp1s3)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i3 < (inp1s3 + inp2s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,(i3 - inp1s3),i4);
} else {
if ((i3 < ((inp1s3 + inp2s3) + inp3s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,((i3 - inp1s3) - inp2s3),i4);
} else {
if ((i3 < (((inp1s3 + inp2s3) + inp3s3) + inp4s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,(((i3 - inp1s3) - inp2s3) - inp3s3),i4);
} else {
if ((i3 < ((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3),i4);
} else {
if ((i3 < (((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,(((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3),i4);
} else {
if ((i3 < ((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3),i4);
} else {
if ((i3 < (((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,i2,(((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3),i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,i2,((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3),i4);
}
}
}
}
}
}
}
}
} else {
if ((i4 < inp1s4)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i4 < (inp1s4 + inp2s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,i3,(i4 - inp1s4));
} else {
if ((i4 < ((inp1s4 + inp2s4) + inp3s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,i3,((i4 - inp1s4) - inp2s4));
} else {
if ((i4 < (((inp1s4 + inp2s4) + inp3s4) + inp4s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,i3,(((i4 - inp1s4) - inp2s4) - inp3s4));
} else {
if ((i4 < ((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,i3,((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4));
} else {
if ((i4 < (((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,i3,(((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4));
} else {
if ((i4 < ((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,i3,((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4));
} else {
if ((i4 < (((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,i2,i3,(((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4));
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,i2,i3,((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}

void Concat10T44444444444(int32_t s1, int32_t s2, int32_t s3, int32_t s4, int32_t inp1s1, int32_t inp1s2, int32_t inp1s3, int32_t inp1s4, uint64_t* inp1, int32_t inp2s1, int32_t inp2s2, int32_t inp2s3, int32_t inp2s4, uint64_t* inp2, int32_t inp3s1, int32_t inp3s2, int32_t inp3s3, int32_t inp3s4, uint64_t* inp3, int32_t inp4s1, int32_t inp4s2, int32_t inp4s3, int32_t inp4s4, uint64_t* inp4, int32_t inp5s1, int32_t inp5s2, int32_t inp5s3, int32_t inp5s4, uint64_t* inp5, int32_t inp6s1, int32_t inp6s2, int32_t inp6s3, int32_t inp6s4, uint64_t* inp6, int32_t inp7s1, int32_t inp7s2, int32_t inp7s3, int32_t inp7s4, uint64_t* inp7, int32_t inp8s1, int32_t inp8s2, int32_t inp8s3, int32_t inp8s4, uint64_t* inp8, int32_t inp9s1, int32_t inp9s2, int32_t inp9s3, int32_t inp9s4, uint64_t* inp9, int32_t inp10s1, int32_t inp10s2, int32_t inp10s3, int32_t inp10s4, uint64_t* inp10, int32_t axis, uint64_t* outp){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
if ((axis ==  (int32_t)0)) {
if ((i1 < inp1s1)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i1 < (inp1s1 + inp2s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,(i1 - inp1s1),i2,i3,i4);
} else {
if ((i1 < ((inp1s1 + inp2s1) + inp3s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,((i1 - inp1s1) - inp2s1),i2,i3,i4);
} else {
if ((i1 < (((inp1s1 + inp2s1) + inp3s1) + inp4s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,(((i1 - inp1s1) - inp2s1) - inp3s1),i2,i3,i4);
} else {
if ((i1 < ((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1),i2,i3,i4);
} else {
if ((i1 < (((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,(((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1),i2,i3,i4);
} else {
if ((i1 < ((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1),i2,i3,i4);
} else {
if ((i1 < (((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,(((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1),i2,i3,i4);
} else {
if ((i1 < ((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1),i2,i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,(((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1),i2,i3,i4);
}
}
}
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)1)) {
if ((i2 < inp1s2)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i2 < (inp1s2 + inp2s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,(i2 - inp1s2),i3,i4);
} else {
if ((i2 < ((inp1s2 + inp2s2) + inp3s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,((i2 - inp1s2) - inp2s2),i3,i4);
} else {
if ((i2 < (((inp1s2 + inp2s2) + inp3s2) + inp4s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,(((i2 - inp1s2) - inp2s2) - inp3s2),i3,i4);
} else {
if ((i2 < ((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2),i3,i4);
} else {
if ((i2 < (((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,(((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2),i3,i4);
} else {
if ((i2 < ((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2),i3,i4);
} else {
if ((i2 < (((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,(((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2),i3,i4);
} else {
if ((i2 < ((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2),i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,(((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2),i3,i4);
}
}
}
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)2)) {
if ((i3 < inp1s3)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i3 < (inp1s3 + inp2s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,(i3 - inp1s3),i4);
} else {
if ((i3 < ((inp1s3 + inp2s3) + inp3s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,((i3 - inp1s3) - inp2s3),i4);
} else {
if ((i3 < (((inp1s3 + inp2s3) + inp3s3) + inp4s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,(((i3 - inp1s3) - inp2s3) - inp3s3),i4);
} else {
if ((i3 < ((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3),i4);
} else {
if ((i3 < (((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,(((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3),i4);
} else {
if ((i3 < ((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3),i4);
} else {
if ((i3 < (((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,i2,(((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3),i4);
} else {
if ((i3 < ((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,i2,((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3),i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,i2,(((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3),i4);
}
}
}
}
}
}
}
}
}
} else {
if ((i4 < inp1s4)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i4 < (inp1s4 + inp2s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,i3,(i4 - inp1s4));
} else {
if ((i4 < ((inp1s4 + inp2s4) + inp3s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,i3,((i4 - inp1s4) - inp2s4));
} else {
if ((i4 < (((inp1s4 + inp2s4) + inp3s4) + inp4s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,i3,(((i4 - inp1s4) - inp2s4) - inp3s4));
} else {
if ((i4 < ((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,i3,((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4));
} else {
if ((i4 < (((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,i3,(((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4));
} else {
if ((i4 < ((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,i3,((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4));
} else {
if ((i4 < (((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,i2,i3,(((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4));
} else {
if ((i4 < ((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,i2,i3,((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4));
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,i2,i3,(((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}

void Concat11T444444444444(int32_t s1, int32_t s2, int32_t s3, int32_t s4, int32_t inp1s1, int32_t inp1s2, int32_t inp1s3, int32_t inp1s4, uint64_t* inp1, int32_t inp2s1, int32_t inp2s2, int32_t inp2s3, int32_t inp2s4, uint64_t* inp2, int32_t inp3s1, int32_t inp3s2, int32_t inp3s3, int32_t inp3s4, uint64_t* inp3, int32_t inp4s1, int32_t inp4s2, int32_t inp4s3, int32_t inp4s4, uint64_t* inp4, int32_t inp5s1, int32_t inp5s2, int32_t inp5s3, int32_t inp5s4, uint64_t* inp5, int32_t inp6s1, int32_t inp6s2, int32_t inp6s3, int32_t inp6s4, uint64_t* inp6, int32_t inp7s1, int32_t inp7s2, int32_t inp7s3, int32_t inp7s4, uint64_t* inp7, int32_t inp8s1, int32_t inp8s2, int32_t inp8s3, int32_t inp8s4, uint64_t* inp8, int32_t inp9s1, int32_t inp9s2, int32_t inp9s3, int32_t inp9s4, uint64_t* inp9, int32_t inp10s1, int32_t inp10s2, int32_t inp10s3, int32_t inp10s4, uint64_t* inp10, int32_t inp11s1, int32_t inp11s2, int32_t inp11s3, int32_t inp11s4, uint64_t* inp11, int32_t axis, uint64_t* outp){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
if ((axis ==  (int32_t)0)) {
if ((i1 < inp1s1)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i1 < (inp1s1 + inp2s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,(i1 - inp1s1),i2,i3,i4);
} else {
if ((i1 < ((inp1s1 + inp2s1) + inp3s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,((i1 - inp1s1) - inp2s1),i2,i3,i4);
} else {
if ((i1 < (((inp1s1 + inp2s1) + inp3s1) + inp4s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,(((i1 - inp1s1) - inp2s1) - inp3s1),i2,i3,i4);
} else {
if ((i1 < ((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1),i2,i3,i4);
} else {
if ((i1 < (((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,(((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1),i2,i3,i4);
} else {
if ((i1 < ((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1),i2,i3,i4);
} else {
if ((i1 < (((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,(((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1),i2,i3,i4);
} else {
if ((i1 < ((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1),i2,i3,i4);
} else {
if ((i1 < (((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,(((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1),i2,i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1),i2,i3,i4);
}
}
}
}
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)1)) {
if ((i2 < inp1s2)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i2 < (inp1s2 + inp2s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,(i2 - inp1s2),i3,i4);
} else {
if ((i2 < ((inp1s2 + inp2s2) + inp3s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,((i2 - inp1s2) - inp2s2),i3,i4);
} else {
if ((i2 < (((inp1s2 + inp2s2) + inp3s2) + inp4s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,(((i2 - inp1s2) - inp2s2) - inp3s2),i3,i4);
} else {
if ((i2 < ((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2),i3,i4);
} else {
if ((i2 < (((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,(((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2),i3,i4);
} else {
if ((i2 < ((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2),i3,i4);
} else {
if ((i2 < (((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,(((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2),i3,i4);
} else {
if ((i2 < ((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2),i3,i4);
} else {
if ((i2 < (((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,(((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2),i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2),i3,i4);
}
}
}
}
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)2)) {
if ((i3 < inp1s3)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i3 < (inp1s3 + inp2s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,(i3 - inp1s3),i4);
} else {
if ((i3 < ((inp1s3 + inp2s3) + inp3s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,((i3 - inp1s3) - inp2s3),i4);
} else {
if ((i3 < (((inp1s3 + inp2s3) + inp3s3) + inp4s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,(((i3 - inp1s3) - inp2s3) - inp3s3),i4);
} else {
if ((i3 < ((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3),i4);
} else {
if ((i3 < (((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,(((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3),i4);
} else {
if ((i3 < ((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3),i4);
} else {
if ((i3 < (((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,i2,(((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3),i4);
} else {
if ((i3 < ((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,i2,((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3),i4);
} else {
if ((i3 < (((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,i2,(((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3),i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,i2,((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3),i4);
}
}
}
}
}
}
}
}
}
}
} else {
if ((i4 < inp1s4)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i4 < (inp1s4 + inp2s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,i3,(i4 - inp1s4));
} else {
if ((i4 < ((inp1s4 + inp2s4) + inp3s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,i3,((i4 - inp1s4) - inp2s4));
} else {
if ((i4 < (((inp1s4 + inp2s4) + inp3s4) + inp4s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,i3,(((i4 - inp1s4) - inp2s4) - inp3s4));
} else {
if ((i4 < ((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,i3,((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4));
} else {
if ((i4 < (((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,i3,(((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4));
} else {
if ((i4 < ((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,i3,((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4));
} else {
if ((i4 < (((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,i2,i3,(((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4));
} else {
if ((i4 < ((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,i2,i3,((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4));
} else {
if ((i4 < (((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,i2,i3,(((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4));
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,i2,i3,((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}

void Concat12T4444444444444(int32_t s1, int32_t s2, int32_t s3, int32_t s4, int32_t inp1s1, int32_t inp1s2, int32_t inp1s3, int32_t inp1s4, uint64_t* inp1, int32_t inp2s1, int32_t inp2s2, int32_t inp2s3, int32_t inp2s4, uint64_t* inp2, int32_t inp3s1, int32_t inp3s2, int32_t inp3s3, int32_t inp3s4, uint64_t* inp3, int32_t inp4s1, int32_t inp4s2, int32_t inp4s3, int32_t inp4s4, uint64_t* inp4, int32_t inp5s1, int32_t inp5s2, int32_t inp5s3, int32_t inp5s4, uint64_t* inp5, int32_t inp6s1, int32_t inp6s2, int32_t inp6s3, int32_t inp6s4, uint64_t* inp6, int32_t inp7s1, int32_t inp7s2, int32_t inp7s3, int32_t inp7s4, uint64_t* inp7, int32_t inp8s1, int32_t inp8s2, int32_t inp8s3, int32_t inp8s4, uint64_t* inp8, int32_t inp9s1, int32_t inp9s2, int32_t inp9s3, int32_t inp9s4, uint64_t* inp9, int32_t inp10s1, int32_t inp10s2, int32_t inp10s3, int32_t inp10s4, uint64_t* inp10, int32_t inp11s1, int32_t inp11s2, int32_t inp11s3, int32_t inp11s4, uint64_t* inp11, int32_t inp12s1, int32_t inp12s2, int32_t inp12s3, int32_t inp12s4, uint64_t* inp12, int32_t axis, uint64_t* outp){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
if ((axis ==  (int32_t)0)) {
if ((i1 < inp1s1)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i1 < (inp1s1 + inp2s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,(i1 - inp1s1),i2,i3,i4);
} else {
if ((i1 < ((inp1s1 + inp2s1) + inp3s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,((i1 - inp1s1) - inp2s1),i2,i3,i4);
} else {
if ((i1 < (((inp1s1 + inp2s1) + inp3s1) + inp4s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,(((i1 - inp1s1) - inp2s1) - inp3s1),i2,i3,i4);
} else {
if ((i1 < ((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1),i2,i3,i4);
} else {
if ((i1 < (((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,(((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1),i2,i3,i4);
} else {
if ((i1 < ((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1),i2,i3,i4);
} else {
if ((i1 < (((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,(((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1),i2,i3,i4);
} else {
if ((i1 < ((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1),i2,i3,i4);
} else {
if ((i1 < (((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,(((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1),i2,i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,(((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1),i2,i3,i4);
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)1)) {
if ((i2 < inp1s2)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i2 < (inp1s2 + inp2s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,(i2 - inp1s2),i3,i4);
} else {
if ((i2 < ((inp1s2 + inp2s2) + inp3s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,((i2 - inp1s2) - inp2s2),i3,i4);
} else {
if ((i2 < (((inp1s2 + inp2s2) + inp3s2) + inp4s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,(((i2 - inp1s2) - inp2s2) - inp3s2),i3,i4);
} else {
if ((i2 < ((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2),i3,i4);
} else {
if ((i2 < (((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,(((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2),i3,i4);
} else {
if ((i2 < ((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2),i3,i4);
} else {
if ((i2 < (((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,(((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2),i3,i4);
} else {
if ((i2 < ((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2),i3,i4);
} else {
if ((i2 < (((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,(((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2),i3,i4);
} else {
if ((i2 < ((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2),i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,(((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2),i3,i4);
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)2)) {
if ((i3 < inp1s3)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i3 < (inp1s3 + inp2s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,(i3 - inp1s3),i4);
} else {
if ((i3 < ((inp1s3 + inp2s3) + inp3s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,((i3 - inp1s3) - inp2s3),i4);
} else {
if ((i3 < (((inp1s3 + inp2s3) + inp3s3) + inp4s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,(((i3 - inp1s3) - inp2s3) - inp3s3),i4);
} else {
if ((i3 < ((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3),i4);
} else {
if ((i3 < (((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,(((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3),i4);
} else {
if ((i3 < ((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3),i4);
} else {
if ((i3 < (((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,i2,(((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3),i4);
} else {
if ((i3 < ((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,i2,((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3),i4);
} else {
if ((i3 < (((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,i2,(((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3),i4);
} else {
if ((i3 < ((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,i2,((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3),i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,i2,(((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3),i4);
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((i4 < inp1s4)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i4 < (inp1s4 + inp2s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,i3,(i4 - inp1s4));
} else {
if ((i4 < ((inp1s4 + inp2s4) + inp3s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,i3,((i4 - inp1s4) - inp2s4));
} else {
if ((i4 < (((inp1s4 + inp2s4) + inp3s4) + inp4s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,i3,(((i4 - inp1s4) - inp2s4) - inp3s4));
} else {
if ((i4 < ((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,i3,((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4));
} else {
if ((i4 < (((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,i3,(((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4));
} else {
if ((i4 < ((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,i3,((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4));
} else {
if ((i4 < (((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,i2,i3,(((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4));
} else {
if ((i4 < ((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,i2,i3,((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4));
} else {
if ((i4 < (((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,i2,i3,(((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4));
} else {
if ((i4 < ((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,i2,i3,((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4));
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,i2,i3,(((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}

void Concat13T44444444444444(int32_t s1, int32_t s2, int32_t s3, int32_t s4, int32_t inp1s1, int32_t inp1s2, int32_t inp1s3, int32_t inp1s4, uint64_t* inp1, int32_t inp2s1, int32_t inp2s2, int32_t inp2s3, int32_t inp2s4, uint64_t* inp2, int32_t inp3s1, int32_t inp3s2, int32_t inp3s3, int32_t inp3s4, uint64_t* inp3, int32_t inp4s1, int32_t inp4s2, int32_t inp4s3, int32_t inp4s4, uint64_t* inp4, int32_t inp5s1, int32_t inp5s2, int32_t inp5s3, int32_t inp5s4, uint64_t* inp5, int32_t inp6s1, int32_t inp6s2, int32_t inp6s3, int32_t inp6s4, uint64_t* inp6, int32_t inp7s1, int32_t inp7s2, int32_t inp7s3, int32_t inp7s4, uint64_t* inp7, int32_t inp8s1, int32_t inp8s2, int32_t inp8s3, int32_t inp8s4, uint64_t* inp8, int32_t inp9s1, int32_t inp9s2, int32_t inp9s3, int32_t inp9s4, uint64_t* inp9, int32_t inp10s1, int32_t inp10s2, int32_t inp10s3, int32_t inp10s4, uint64_t* inp10, int32_t inp11s1, int32_t inp11s2, int32_t inp11s3, int32_t inp11s4, uint64_t* inp11, int32_t inp12s1, int32_t inp12s2, int32_t inp12s3, int32_t inp12s4, uint64_t* inp12, int32_t inp13s1, int32_t inp13s2, int32_t inp13s3, int32_t inp13s4, uint64_t* inp13, int32_t axis, uint64_t* outp){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
if ((axis ==  (int32_t)0)) {
if ((i1 < inp1s1)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i1 < (inp1s1 + inp2s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,(i1 - inp1s1),i2,i3,i4);
} else {
if ((i1 < ((inp1s1 + inp2s1) + inp3s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,((i1 - inp1s1) - inp2s1),i2,i3,i4);
} else {
if ((i1 < (((inp1s1 + inp2s1) + inp3s1) + inp4s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,(((i1 - inp1s1) - inp2s1) - inp3s1),i2,i3,i4);
} else {
if ((i1 < ((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1),i2,i3,i4);
} else {
if ((i1 < (((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,(((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1),i2,i3,i4);
} else {
if ((i1 < ((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1),i2,i3,i4);
} else {
if ((i1 < (((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,(((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1),i2,i3,i4);
} else {
if ((i1 < ((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1),i2,i3,i4);
} else {
if ((i1 < (((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,(((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,(((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1),i2,i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1),i2,i3,i4);
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)1)) {
if ((i2 < inp1s2)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i2 < (inp1s2 + inp2s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,(i2 - inp1s2),i3,i4);
} else {
if ((i2 < ((inp1s2 + inp2s2) + inp3s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,((i2 - inp1s2) - inp2s2),i3,i4);
} else {
if ((i2 < (((inp1s2 + inp2s2) + inp3s2) + inp4s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,(((i2 - inp1s2) - inp2s2) - inp3s2),i3,i4);
} else {
if ((i2 < ((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2),i3,i4);
} else {
if ((i2 < (((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,(((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2),i3,i4);
} else {
if ((i2 < ((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2),i3,i4);
} else {
if ((i2 < (((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,(((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2),i3,i4);
} else {
if ((i2 < ((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2),i3,i4);
} else {
if ((i2 < (((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,(((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2),i3,i4);
} else {
if ((i2 < ((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2),i3,i4);
} else {
if ((i2 < (((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,(((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2),i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2),i3,i4);
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)2)) {
if ((i3 < inp1s3)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i3 < (inp1s3 + inp2s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,(i3 - inp1s3),i4);
} else {
if ((i3 < ((inp1s3 + inp2s3) + inp3s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,((i3 - inp1s3) - inp2s3),i4);
} else {
if ((i3 < (((inp1s3 + inp2s3) + inp3s3) + inp4s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,(((i3 - inp1s3) - inp2s3) - inp3s3),i4);
} else {
if ((i3 < ((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3),i4);
} else {
if ((i3 < (((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,(((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3),i4);
} else {
if ((i3 < ((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3),i4);
} else {
if ((i3 < (((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,i2,(((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3),i4);
} else {
if ((i3 < ((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,i2,((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3),i4);
} else {
if ((i3 < (((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,i2,(((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3),i4);
} else {
if ((i3 < ((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,i2,((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3),i4);
} else {
if ((i3 < (((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,i2,(((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3),i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,i2,((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3),i4);
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((i4 < inp1s4)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i4 < (inp1s4 + inp2s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,i3,(i4 - inp1s4));
} else {
if ((i4 < ((inp1s4 + inp2s4) + inp3s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,i3,((i4 - inp1s4) - inp2s4));
} else {
if ((i4 < (((inp1s4 + inp2s4) + inp3s4) + inp4s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,i3,(((i4 - inp1s4) - inp2s4) - inp3s4));
} else {
if ((i4 < ((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,i3,((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4));
} else {
if ((i4 < (((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,i3,(((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4));
} else {
if ((i4 < ((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,i3,((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4));
} else {
if ((i4 < (((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,i2,i3,(((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4));
} else {
if ((i4 < ((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,i2,i3,((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4));
} else {
if ((i4 < (((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,i2,i3,(((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4));
} else {
if ((i4 < ((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,i2,i3,((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4));
} else {
if ((i4 < (((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,i2,i3,(((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4));
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,i2,i3,((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}

void Concat14T444444444444444(int32_t s1, int32_t s2, int32_t s3, int32_t s4, int32_t inp1s1, int32_t inp1s2, int32_t inp1s3, int32_t inp1s4, uint64_t* inp1, int32_t inp2s1, int32_t inp2s2, int32_t inp2s3, int32_t inp2s4, uint64_t* inp2, int32_t inp3s1, int32_t inp3s2, int32_t inp3s3, int32_t inp3s4, uint64_t* inp3, int32_t inp4s1, int32_t inp4s2, int32_t inp4s3, int32_t inp4s4, uint64_t* inp4, int32_t inp5s1, int32_t inp5s2, int32_t inp5s3, int32_t inp5s4, uint64_t* inp5, int32_t inp6s1, int32_t inp6s2, int32_t inp6s3, int32_t inp6s4, uint64_t* inp6, int32_t inp7s1, int32_t inp7s2, int32_t inp7s3, int32_t inp7s4, uint64_t* inp7, int32_t inp8s1, int32_t inp8s2, int32_t inp8s3, int32_t inp8s4, uint64_t* inp8, int32_t inp9s1, int32_t inp9s2, int32_t inp9s3, int32_t inp9s4, uint64_t* inp9, int32_t inp10s1, int32_t inp10s2, int32_t inp10s3, int32_t inp10s4, uint64_t* inp10, int32_t inp11s1, int32_t inp11s2, int32_t inp11s3, int32_t inp11s4, uint64_t* inp11, int32_t inp12s1, int32_t inp12s2, int32_t inp12s3, int32_t inp12s4, uint64_t* inp12, int32_t inp13s1, int32_t inp13s2, int32_t inp13s3, int32_t inp13s4, uint64_t* inp13, int32_t inp14s1, int32_t inp14s2, int32_t inp14s3, int32_t inp14s4, uint64_t* inp14, int32_t axis, uint64_t* outp){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
if ((axis ==  (int32_t)0)) {
if ((i1 < inp1s1)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i1 < (inp1s1 + inp2s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,(i1 - inp1s1),i2,i3,i4);
} else {
if ((i1 < ((inp1s1 + inp2s1) + inp3s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,((i1 - inp1s1) - inp2s1),i2,i3,i4);
} else {
if ((i1 < (((inp1s1 + inp2s1) + inp3s1) + inp4s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,(((i1 - inp1s1) - inp2s1) - inp3s1),i2,i3,i4);
} else {
if ((i1 < ((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1),i2,i3,i4);
} else {
if ((i1 < (((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,(((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1),i2,i3,i4);
} else {
if ((i1 < ((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1),i2,i3,i4);
} else {
if ((i1 < (((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,(((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1),i2,i3,i4);
} else {
if ((i1 < ((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1),i2,i3,i4);
} else {
if ((i1 < (((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,(((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,(((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1),i2,i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,(((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1),i2,i3,i4);
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)1)) {
if ((i2 < inp1s2)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i2 < (inp1s2 + inp2s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,(i2 - inp1s2),i3,i4);
} else {
if ((i2 < ((inp1s2 + inp2s2) + inp3s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,((i2 - inp1s2) - inp2s2),i3,i4);
} else {
if ((i2 < (((inp1s2 + inp2s2) + inp3s2) + inp4s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,(((i2 - inp1s2) - inp2s2) - inp3s2),i3,i4);
} else {
if ((i2 < ((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2),i3,i4);
} else {
if ((i2 < (((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,(((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2),i3,i4);
} else {
if ((i2 < ((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2),i3,i4);
} else {
if ((i2 < (((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,(((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2),i3,i4);
} else {
if ((i2 < ((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2),i3,i4);
} else {
if ((i2 < (((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,(((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2),i3,i4);
} else {
if ((i2 < ((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2),i3,i4);
} else {
if ((i2 < (((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,(((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2),i3,i4);
} else {
if ((i2 < ((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2),i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,i1,(((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2),i3,i4);
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)2)) {
if ((i3 < inp1s3)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i3 < (inp1s3 + inp2s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,(i3 - inp1s3),i4);
} else {
if ((i3 < ((inp1s3 + inp2s3) + inp3s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,((i3 - inp1s3) - inp2s3),i4);
} else {
if ((i3 < (((inp1s3 + inp2s3) + inp3s3) + inp4s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,(((i3 - inp1s3) - inp2s3) - inp3s3),i4);
} else {
if ((i3 < ((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3),i4);
} else {
if ((i3 < (((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,(((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3),i4);
} else {
if ((i3 < ((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3),i4);
} else {
if ((i3 < (((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,i2,(((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3),i4);
} else {
if ((i3 < ((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,i2,((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3),i4);
} else {
if ((i3 < (((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,i2,(((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3),i4);
} else {
if ((i3 < ((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,i2,((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3),i4);
} else {
if ((i3 < (((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,i2,(((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3),i4);
} else {
if ((i3 < ((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,i2,((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3),i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,i1,i2,(((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3),i4);
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((i4 < inp1s4)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i4 < (inp1s4 + inp2s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,i3,(i4 - inp1s4));
} else {
if ((i4 < ((inp1s4 + inp2s4) + inp3s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,i3,((i4 - inp1s4) - inp2s4));
} else {
if ((i4 < (((inp1s4 + inp2s4) + inp3s4) + inp4s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,i3,(((i4 - inp1s4) - inp2s4) - inp3s4));
} else {
if ((i4 < ((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,i3,((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4));
} else {
if ((i4 < (((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,i3,(((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4));
} else {
if ((i4 < ((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,i3,((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4));
} else {
if ((i4 < (((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,i2,i3,(((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4));
} else {
if ((i4 < ((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,i2,i3,((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4));
} else {
if ((i4 < (((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,i2,i3,(((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4));
} else {
if ((i4 < ((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,i2,i3,((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4));
} else {
if ((i4 < (((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,i2,i3,(((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4));
} else {
if ((i4 < ((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,i2,i3,((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4));
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,i1,i2,i3,(((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}

void Concat15T4444444444444444(int32_t s1, int32_t s2, int32_t s3, int32_t s4, int32_t inp1s1, int32_t inp1s2, int32_t inp1s3, int32_t inp1s4, uint64_t* inp1, int32_t inp2s1, int32_t inp2s2, int32_t inp2s3, int32_t inp2s4, uint64_t* inp2, int32_t inp3s1, int32_t inp3s2, int32_t inp3s3, int32_t inp3s4, uint64_t* inp3, int32_t inp4s1, int32_t inp4s2, int32_t inp4s3, int32_t inp4s4, uint64_t* inp4, int32_t inp5s1, int32_t inp5s2, int32_t inp5s3, int32_t inp5s4, uint64_t* inp5, int32_t inp6s1, int32_t inp6s2, int32_t inp6s3, int32_t inp6s4, uint64_t* inp6, int32_t inp7s1, int32_t inp7s2, int32_t inp7s3, int32_t inp7s4, uint64_t* inp7, int32_t inp8s1, int32_t inp8s2, int32_t inp8s3, int32_t inp8s4, uint64_t* inp8, int32_t inp9s1, int32_t inp9s2, int32_t inp9s3, int32_t inp9s4, uint64_t* inp9, int32_t inp10s1, int32_t inp10s2, int32_t inp10s3, int32_t inp10s4, uint64_t* inp10, int32_t inp11s1, int32_t inp11s2, int32_t inp11s3, int32_t inp11s4, uint64_t* inp11, int32_t inp12s1, int32_t inp12s2, int32_t inp12s3, int32_t inp12s4, uint64_t* inp12, int32_t inp13s1, int32_t inp13s2, int32_t inp13s3, int32_t inp13s4, uint64_t* inp13, int32_t inp14s1, int32_t inp14s2, int32_t inp14s3, int32_t inp14s4, uint64_t* inp14, int32_t inp15s1, int32_t inp15s2, int32_t inp15s3, int32_t inp15s4, uint64_t* inp15, int32_t axis, uint64_t* outp){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
if ((axis ==  (int32_t)0)) {
if ((i1 < inp1s1)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i1 < (inp1s1 + inp2s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,(i1 - inp1s1),i2,i3,i4);
} else {
if ((i1 < ((inp1s1 + inp2s1) + inp3s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,((i1 - inp1s1) - inp2s1),i2,i3,i4);
} else {
if ((i1 < (((inp1s1 + inp2s1) + inp3s1) + inp4s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,(((i1 - inp1s1) - inp2s1) - inp3s1),i2,i3,i4);
} else {
if ((i1 < ((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1),i2,i3,i4);
} else {
if ((i1 < (((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,(((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1),i2,i3,i4);
} else {
if ((i1 < ((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1),i2,i3,i4);
} else {
if ((i1 < (((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,(((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1),i2,i3,i4);
} else {
if ((i1 < ((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1),i2,i3,i4);
} else {
if ((i1 < (((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,(((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,(((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,(((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1),i2,i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1),i2,i3,i4);
}
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)1)) {
if ((i2 < inp1s2)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i2 < (inp1s2 + inp2s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,(i2 - inp1s2),i3,i4);
} else {
if ((i2 < ((inp1s2 + inp2s2) + inp3s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,((i2 - inp1s2) - inp2s2),i3,i4);
} else {
if ((i2 < (((inp1s2 + inp2s2) + inp3s2) + inp4s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,(((i2 - inp1s2) - inp2s2) - inp3s2),i3,i4);
} else {
if ((i2 < ((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2),i3,i4);
} else {
if ((i2 < (((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,(((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2),i3,i4);
} else {
if ((i2 < ((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2),i3,i4);
} else {
if ((i2 < (((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,(((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2),i3,i4);
} else {
if ((i2 < ((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2),i3,i4);
} else {
if ((i2 < (((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,(((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2),i3,i4);
} else {
if ((i2 < ((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2),i3,i4);
} else {
if ((i2 < (((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,(((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2),i3,i4);
} else {
if ((i2 < ((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2),i3,i4);
} else {
if ((i2 < (((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,i1,(((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2),i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,i1,((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2),i3,i4);
}
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)2)) {
if ((i3 < inp1s3)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i3 < (inp1s3 + inp2s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,(i3 - inp1s3),i4);
} else {
if ((i3 < ((inp1s3 + inp2s3) + inp3s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,((i3 - inp1s3) - inp2s3),i4);
} else {
if ((i3 < (((inp1s3 + inp2s3) + inp3s3) + inp4s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,(((i3 - inp1s3) - inp2s3) - inp3s3),i4);
} else {
if ((i3 < ((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3),i4);
} else {
if ((i3 < (((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,(((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3),i4);
} else {
if ((i3 < ((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3),i4);
} else {
if ((i3 < (((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,i2,(((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3),i4);
} else {
if ((i3 < ((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,i2,((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3),i4);
} else {
if ((i3 < (((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,i2,(((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3),i4);
} else {
if ((i3 < ((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,i2,((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3),i4);
} else {
if ((i3 < (((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,i2,(((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3),i4);
} else {
if ((i3 < ((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,i2,((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3),i4);
} else {
if ((i3 < (((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,i1,i2,(((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3),i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,i1,i2,((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3),i4);
}
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((i4 < inp1s4)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i4 < (inp1s4 + inp2s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,i3,(i4 - inp1s4));
} else {
if ((i4 < ((inp1s4 + inp2s4) + inp3s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,i3,((i4 - inp1s4) - inp2s4));
} else {
if ((i4 < (((inp1s4 + inp2s4) + inp3s4) + inp4s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,i3,(((i4 - inp1s4) - inp2s4) - inp3s4));
} else {
if ((i4 < ((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,i3,((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4));
} else {
if ((i4 < (((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,i3,(((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4));
} else {
if ((i4 < ((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,i3,((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4));
} else {
if ((i4 < (((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,i2,i3,(((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4));
} else {
if ((i4 < ((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,i2,i3,((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4));
} else {
if ((i4 < (((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,i2,i3,(((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4));
} else {
if ((i4 < ((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,i2,i3,((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4));
} else {
if ((i4 < (((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,i2,i3,(((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4));
} else {
if ((i4 < ((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,i2,i3,((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4));
} else {
if ((i4 < (((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,i1,i2,i3,(((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4));
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,i1,i2,i3,((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}

void Concat16T44444444444444444(int32_t s1, int32_t s2, int32_t s3, int32_t s4, int32_t inp1s1, int32_t inp1s2, int32_t inp1s3, int32_t inp1s4, uint64_t* inp1, int32_t inp2s1, int32_t inp2s2, int32_t inp2s3, int32_t inp2s4, uint64_t* inp2, int32_t inp3s1, int32_t inp3s2, int32_t inp3s3, int32_t inp3s4, uint64_t* inp3, int32_t inp4s1, int32_t inp4s2, int32_t inp4s3, int32_t inp4s4, uint64_t* inp4, int32_t inp5s1, int32_t inp5s2, int32_t inp5s3, int32_t inp5s4, uint64_t* inp5, int32_t inp6s1, int32_t inp6s2, int32_t inp6s3, int32_t inp6s4, uint64_t* inp6, int32_t inp7s1, int32_t inp7s2, int32_t inp7s3, int32_t inp7s4, uint64_t* inp7, int32_t inp8s1, int32_t inp8s2, int32_t inp8s3, int32_t inp8s4, uint64_t* inp8, int32_t inp9s1, int32_t inp9s2, int32_t inp9s3, int32_t inp9s4, uint64_t* inp9, int32_t inp10s1, int32_t inp10s2, int32_t inp10s3, int32_t inp10s4, uint64_t* inp10, int32_t inp11s1, int32_t inp11s2, int32_t inp11s3, int32_t inp11s4, uint64_t* inp11, int32_t inp12s1, int32_t inp12s2, int32_t inp12s3, int32_t inp12s4, uint64_t* inp12, int32_t inp13s1, int32_t inp13s2, int32_t inp13s3, int32_t inp13s4, uint64_t* inp13, int32_t inp14s1, int32_t inp14s2, int32_t inp14s3, int32_t inp14s4, uint64_t* inp14, int32_t inp15s1, int32_t inp15s2, int32_t inp15s3, int32_t inp15s4, uint64_t* inp15, int32_t inp16s1, int32_t inp16s2, int32_t inp16s3, int32_t inp16s4, uint64_t* inp16, int32_t axis, uint64_t* outp){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
if ((axis ==  (int32_t)0)) {
if ((i1 < inp1s1)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i1 < (inp1s1 + inp2s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,(i1 - inp1s1),i2,i3,i4);
} else {
if ((i1 < ((inp1s1 + inp2s1) + inp3s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,((i1 - inp1s1) - inp2s1),i2,i3,i4);
} else {
if ((i1 < (((inp1s1 + inp2s1) + inp3s1) + inp4s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,(((i1 - inp1s1) - inp2s1) - inp3s1),i2,i3,i4);
} else {
if ((i1 < ((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1),i2,i3,i4);
} else {
if ((i1 < (((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,(((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1),i2,i3,i4);
} else {
if ((i1 < ((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1),i2,i3,i4);
} else {
if ((i1 < (((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,(((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1),i2,i3,i4);
} else {
if ((i1 < ((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1),i2,i3,i4);
} else {
if ((i1 < (((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,(((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,(((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,(((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1),i2,i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,(((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1),i2,i3,i4);
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)1)) {
if ((i2 < inp1s2)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i2 < (inp1s2 + inp2s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,(i2 - inp1s2),i3,i4);
} else {
if ((i2 < ((inp1s2 + inp2s2) + inp3s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,((i2 - inp1s2) - inp2s2),i3,i4);
} else {
if ((i2 < (((inp1s2 + inp2s2) + inp3s2) + inp4s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,(((i2 - inp1s2) - inp2s2) - inp3s2),i3,i4);
} else {
if ((i2 < ((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2),i3,i4);
} else {
if ((i2 < (((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,(((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2),i3,i4);
} else {
if ((i2 < ((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2),i3,i4);
} else {
if ((i2 < (((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,(((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2),i3,i4);
} else {
if ((i2 < ((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2),i3,i4);
} else {
if ((i2 < (((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,(((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2),i3,i4);
} else {
if ((i2 < ((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2),i3,i4);
} else {
if ((i2 < (((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,(((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2),i3,i4);
} else {
if ((i2 < ((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2),i3,i4);
} else {
if ((i2 < (((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,i1,(((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2),i3,i4);
} else {
if ((i2 < ((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,i1,((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2),i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,i1,(((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2),i3,i4);
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)2)) {
if ((i3 < inp1s3)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i3 < (inp1s3 + inp2s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,(i3 - inp1s3),i4);
} else {
if ((i3 < ((inp1s3 + inp2s3) + inp3s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,((i3 - inp1s3) - inp2s3),i4);
} else {
if ((i3 < (((inp1s3 + inp2s3) + inp3s3) + inp4s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,(((i3 - inp1s3) - inp2s3) - inp3s3),i4);
} else {
if ((i3 < ((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3),i4);
} else {
if ((i3 < (((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,(((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3),i4);
} else {
if ((i3 < ((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3),i4);
} else {
if ((i3 < (((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,i2,(((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3),i4);
} else {
if ((i3 < ((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,i2,((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3),i4);
} else {
if ((i3 < (((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,i2,(((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3),i4);
} else {
if ((i3 < ((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,i2,((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3),i4);
} else {
if ((i3 < (((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,i2,(((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3),i4);
} else {
if ((i3 < ((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,i2,((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3),i4);
} else {
if ((i3 < (((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,i1,i2,(((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3),i4);
} else {
if ((i3 < ((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,i1,i2,((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3),i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,i1,i2,(((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3),i4);
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((i4 < inp1s4)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i4 < (inp1s4 + inp2s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,i3,(i4 - inp1s4));
} else {
if ((i4 < ((inp1s4 + inp2s4) + inp3s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,i3,((i4 - inp1s4) - inp2s4));
} else {
if ((i4 < (((inp1s4 + inp2s4) + inp3s4) + inp4s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,i3,(((i4 - inp1s4) - inp2s4) - inp3s4));
} else {
if ((i4 < ((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,i3,((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4));
} else {
if ((i4 < (((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,i3,(((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4));
} else {
if ((i4 < ((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,i3,((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4));
} else {
if ((i4 < (((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,i2,i3,(((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4));
} else {
if ((i4 < ((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,i2,i3,((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4));
} else {
if ((i4 < (((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,i2,i3,(((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4));
} else {
if ((i4 < ((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,i2,i3,((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4));
} else {
if ((i4 < (((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,i2,i3,(((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4));
} else {
if ((i4 < ((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,i2,i3,((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4));
} else {
if ((i4 < (((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,i1,i2,i3,(((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4));
} else {
if ((i4 < ((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,i1,i2,i3,((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4));
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,i1,i2,i3,(((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}

void Concat17T444444444444444444(int32_t s1, int32_t s2, int32_t s3, int32_t s4, int32_t inp1s1, int32_t inp1s2, int32_t inp1s3, int32_t inp1s4, uint64_t* inp1, int32_t inp2s1, int32_t inp2s2, int32_t inp2s3, int32_t inp2s4, uint64_t* inp2, int32_t inp3s1, int32_t inp3s2, int32_t inp3s3, int32_t inp3s4, uint64_t* inp3, int32_t inp4s1, int32_t inp4s2, int32_t inp4s3, int32_t inp4s4, uint64_t* inp4, int32_t inp5s1, int32_t inp5s2, int32_t inp5s3, int32_t inp5s4, uint64_t* inp5, int32_t inp6s1, int32_t inp6s2, int32_t inp6s3, int32_t inp6s4, uint64_t* inp6, int32_t inp7s1, int32_t inp7s2, int32_t inp7s3, int32_t inp7s4, uint64_t* inp7, int32_t inp8s1, int32_t inp8s2, int32_t inp8s3, int32_t inp8s4, uint64_t* inp8, int32_t inp9s1, int32_t inp9s2, int32_t inp9s3, int32_t inp9s4, uint64_t* inp9, int32_t inp10s1, int32_t inp10s2, int32_t inp10s3, int32_t inp10s4, uint64_t* inp10, int32_t inp11s1, int32_t inp11s2, int32_t inp11s3, int32_t inp11s4, uint64_t* inp11, int32_t inp12s1, int32_t inp12s2, int32_t inp12s3, int32_t inp12s4, uint64_t* inp12, int32_t inp13s1, int32_t inp13s2, int32_t inp13s3, int32_t inp13s4, uint64_t* inp13, int32_t inp14s1, int32_t inp14s2, int32_t inp14s3, int32_t inp14s4, uint64_t* inp14, int32_t inp15s1, int32_t inp15s2, int32_t inp15s3, int32_t inp15s4, uint64_t* inp15, int32_t inp16s1, int32_t inp16s2, int32_t inp16s3, int32_t inp16s4, uint64_t* inp16, int32_t inp17s1, int32_t inp17s2, int32_t inp17s3, int32_t inp17s4, uint64_t* inp17, int32_t axis, uint64_t* outp){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
if ((axis ==  (int32_t)0)) {
if ((i1 < inp1s1)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i1 < (inp1s1 + inp2s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,(i1 - inp1s1),i2,i3,i4);
} else {
if ((i1 < ((inp1s1 + inp2s1) + inp3s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,((i1 - inp1s1) - inp2s1),i2,i3,i4);
} else {
if ((i1 < (((inp1s1 + inp2s1) + inp3s1) + inp4s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,(((i1 - inp1s1) - inp2s1) - inp3s1),i2,i3,i4);
} else {
if ((i1 < ((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1),i2,i3,i4);
} else {
if ((i1 < (((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,(((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1),i2,i3,i4);
} else {
if ((i1 < ((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1),i2,i3,i4);
} else {
if ((i1 < (((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,(((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1),i2,i3,i4);
} else {
if ((i1 < ((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1),i2,i3,i4);
} else {
if ((i1 < (((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,(((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,(((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,(((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,(((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1),i2,i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp17,inp17s1,inp17s2,inp17s3,inp17s4,((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1),i2,i3,i4);
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)1)) {
if ((i2 < inp1s2)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i2 < (inp1s2 + inp2s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,(i2 - inp1s2),i3,i4);
} else {
if ((i2 < ((inp1s2 + inp2s2) + inp3s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,((i2 - inp1s2) - inp2s2),i3,i4);
} else {
if ((i2 < (((inp1s2 + inp2s2) + inp3s2) + inp4s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,(((i2 - inp1s2) - inp2s2) - inp3s2),i3,i4);
} else {
if ((i2 < ((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2),i3,i4);
} else {
if ((i2 < (((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,(((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2),i3,i4);
} else {
if ((i2 < ((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2),i3,i4);
} else {
if ((i2 < (((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,(((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2),i3,i4);
} else {
if ((i2 < ((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2),i3,i4);
} else {
if ((i2 < (((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,(((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2),i3,i4);
} else {
if ((i2 < ((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2),i3,i4);
} else {
if ((i2 < (((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,(((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2),i3,i4);
} else {
if ((i2 < ((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2),i3,i4);
} else {
if ((i2 < (((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,i1,(((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2),i3,i4);
} else {
if ((i2 < ((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,i1,((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2),i3,i4);
} else {
if ((i2 < (((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,i1,(((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2),i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp17,inp17s1,inp17s2,inp17s3,inp17s4,i1,((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2),i3,i4);
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)2)) {
if ((i3 < inp1s3)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i3 < (inp1s3 + inp2s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,(i3 - inp1s3),i4);
} else {
if ((i3 < ((inp1s3 + inp2s3) + inp3s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,((i3 - inp1s3) - inp2s3),i4);
} else {
if ((i3 < (((inp1s3 + inp2s3) + inp3s3) + inp4s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,(((i3 - inp1s3) - inp2s3) - inp3s3),i4);
} else {
if ((i3 < ((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3),i4);
} else {
if ((i3 < (((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,(((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3),i4);
} else {
if ((i3 < ((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3),i4);
} else {
if ((i3 < (((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,i2,(((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3),i4);
} else {
if ((i3 < ((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,i2,((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3),i4);
} else {
if ((i3 < (((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,i2,(((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3),i4);
} else {
if ((i3 < ((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,i2,((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3),i4);
} else {
if ((i3 < (((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,i2,(((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3),i4);
} else {
if ((i3 < ((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,i2,((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3),i4);
} else {
if ((i3 < (((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,i1,i2,(((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3),i4);
} else {
if ((i3 < ((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,i1,i2,((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3),i4);
} else {
if ((i3 < (((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,i1,i2,(((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3),i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp17,inp17s1,inp17s2,inp17s3,inp17s4,i1,i2,((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3),i4);
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((i4 < inp1s4)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i4 < (inp1s4 + inp2s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,i3,(i4 - inp1s4));
} else {
if ((i4 < ((inp1s4 + inp2s4) + inp3s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,i3,((i4 - inp1s4) - inp2s4));
} else {
if ((i4 < (((inp1s4 + inp2s4) + inp3s4) + inp4s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,i3,(((i4 - inp1s4) - inp2s4) - inp3s4));
} else {
if ((i4 < ((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,i3,((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4));
} else {
if ((i4 < (((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,i3,(((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4));
} else {
if ((i4 < ((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,i3,((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4));
} else {
if ((i4 < (((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,i2,i3,(((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4));
} else {
if ((i4 < ((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,i2,i3,((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4));
} else {
if ((i4 < (((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,i2,i3,(((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4));
} else {
if ((i4 < ((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,i2,i3,((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4));
} else {
if ((i4 < (((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,i2,i3,(((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4));
} else {
if ((i4 < ((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,i2,i3,((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4));
} else {
if ((i4 < (((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,i1,i2,i3,(((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4));
} else {
if ((i4 < ((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,i1,i2,i3,((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4));
} else {
if ((i4 < (((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,i1,i2,i3,(((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4));
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp17,inp17s1,inp17s2,inp17s3,inp17s4,i1,i2,i3,((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}

void Concat18T4444444444444444444(int32_t s1, int32_t s2, int32_t s3, int32_t s4, int32_t inp1s1, int32_t inp1s2, int32_t inp1s3, int32_t inp1s4, uint64_t* inp1, int32_t inp2s1, int32_t inp2s2, int32_t inp2s3, int32_t inp2s4, uint64_t* inp2, int32_t inp3s1, int32_t inp3s2, int32_t inp3s3, int32_t inp3s4, uint64_t* inp3, int32_t inp4s1, int32_t inp4s2, int32_t inp4s3, int32_t inp4s4, uint64_t* inp4, int32_t inp5s1, int32_t inp5s2, int32_t inp5s3, int32_t inp5s4, uint64_t* inp5, int32_t inp6s1, int32_t inp6s2, int32_t inp6s3, int32_t inp6s4, uint64_t* inp6, int32_t inp7s1, int32_t inp7s2, int32_t inp7s3, int32_t inp7s4, uint64_t* inp7, int32_t inp8s1, int32_t inp8s2, int32_t inp8s3, int32_t inp8s4, uint64_t* inp8, int32_t inp9s1, int32_t inp9s2, int32_t inp9s3, int32_t inp9s4, uint64_t* inp9, int32_t inp10s1, int32_t inp10s2, int32_t inp10s3, int32_t inp10s4, uint64_t* inp10, int32_t inp11s1, int32_t inp11s2, int32_t inp11s3, int32_t inp11s4, uint64_t* inp11, int32_t inp12s1, int32_t inp12s2, int32_t inp12s3, int32_t inp12s4, uint64_t* inp12, int32_t inp13s1, int32_t inp13s2, int32_t inp13s3, int32_t inp13s4, uint64_t* inp13, int32_t inp14s1, int32_t inp14s2, int32_t inp14s3, int32_t inp14s4, uint64_t* inp14, int32_t inp15s1, int32_t inp15s2, int32_t inp15s3, int32_t inp15s4, uint64_t* inp15, int32_t inp16s1, int32_t inp16s2, int32_t inp16s3, int32_t inp16s4, uint64_t* inp16, int32_t inp17s1, int32_t inp17s2, int32_t inp17s3, int32_t inp17s4, uint64_t* inp17, int32_t inp18s1, int32_t inp18s2, int32_t inp18s3, int32_t inp18s4, uint64_t* inp18, int32_t axis, uint64_t* outp){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
if ((axis ==  (int32_t)0)) {
if ((i1 < inp1s1)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i1 < (inp1s1 + inp2s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,(i1 - inp1s1),i2,i3,i4);
} else {
if ((i1 < ((inp1s1 + inp2s1) + inp3s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,((i1 - inp1s1) - inp2s1),i2,i3,i4);
} else {
if ((i1 < (((inp1s1 + inp2s1) + inp3s1) + inp4s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,(((i1 - inp1s1) - inp2s1) - inp3s1),i2,i3,i4);
} else {
if ((i1 < ((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1),i2,i3,i4);
} else {
if ((i1 < (((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,(((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1),i2,i3,i4);
} else {
if ((i1 < ((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1),i2,i3,i4);
} else {
if ((i1 < (((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,(((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1),i2,i3,i4);
} else {
if ((i1 < ((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1),i2,i3,i4);
} else {
if ((i1 < (((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,(((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,(((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,(((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,(((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1) + inp17s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp17,inp17s1,inp17s2,inp17s3,inp17s4,((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1),i2,i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp18,inp18s1,inp18s2,inp18s3,inp18s4,(((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1) - inp17s1),i2,i3,i4);
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)1)) {
if ((i2 < inp1s2)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i2 < (inp1s2 + inp2s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,(i2 - inp1s2),i3,i4);
} else {
if ((i2 < ((inp1s2 + inp2s2) + inp3s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,((i2 - inp1s2) - inp2s2),i3,i4);
} else {
if ((i2 < (((inp1s2 + inp2s2) + inp3s2) + inp4s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,(((i2 - inp1s2) - inp2s2) - inp3s2),i3,i4);
} else {
if ((i2 < ((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2),i3,i4);
} else {
if ((i2 < (((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,(((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2),i3,i4);
} else {
if ((i2 < ((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2),i3,i4);
} else {
if ((i2 < (((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,(((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2),i3,i4);
} else {
if ((i2 < ((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2),i3,i4);
} else {
if ((i2 < (((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,(((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2),i3,i4);
} else {
if ((i2 < ((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2),i3,i4);
} else {
if ((i2 < (((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,(((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2),i3,i4);
} else {
if ((i2 < ((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2),i3,i4);
} else {
if ((i2 < (((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,i1,(((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2),i3,i4);
} else {
if ((i2 < ((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,i1,((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2),i3,i4);
} else {
if ((i2 < (((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,i1,(((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2),i3,i4);
} else {
if ((i2 < ((((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2) + inp17s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp17,inp17s1,inp17s2,inp17s3,inp17s4,i1,((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2),i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp18,inp18s1,inp18s2,inp18s3,inp18s4,i1,(((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2) - inp17s2),i3,i4);
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)2)) {
if ((i3 < inp1s3)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i3 < (inp1s3 + inp2s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,(i3 - inp1s3),i4);
} else {
if ((i3 < ((inp1s3 + inp2s3) + inp3s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,((i3 - inp1s3) - inp2s3),i4);
} else {
if ((i3 < (((inp1s3 + inp2s3) + inp3s3) + inp4s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,(((i3 - inp1s3) - inp2s3) - inp3s3),i4);
} else {
if ((i3 < ((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3),i4);
} else {
if ((i3 < (((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,(((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3),i4);
} else {
if ((i3 < ((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3),i4);
} else {
if ((i3 < (((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,i2,(((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3),i4);
} else {
if ((i3 < ((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,i2,((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3),i4);
} else {
if ((i3 < (((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,i2,(((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3),i4);
} else {
if ((i3 < ((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,i2,((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3),i4);
} else {
if ((i3 < (((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,i2,(((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3),i4);
} else {
if ((i3 < ((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,i2,((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3),i4);
} else {
if ((i3 < (((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,i1,i2,(((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3),i4);
} else {
if ((i3 < ((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,i1,i2,((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3),i4);
} else {
if ((i3 < (((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,i1,i2,(((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3),i4);
} else {
if ((i3 < ((((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3) + inp17s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp17,inp17s1,inp17s2,inp17s3,inp17s4,i1,i2,((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3),i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp18,inp18s1,inp18s2,inp18s3,inp18s4,i1,i2,(((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3) - inp17s3),i4);
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((i4 < inp1s4)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i4 < (inp1s4 + inp2s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,i3,(i4 - inp1s4));
} else {
if ((i4 < ((inp1s4 + inp2s4) + inp3s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,i3,((i4 - inp1s4) - inp2s4));
} else {
if ((i4 < (((inp1s4 + inp2s4) + inp3s4) + inp4s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,i3,(((i4 - inp1s4) - inp2s4) - inp3s4));
} else {
if ((i4 < ((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,i3,((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4));
} else {
if ((i4 < (((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,i3,(((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4));
} else {
if ((i4 < ((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,i3,((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4));
} else {
if ((i4 < (((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,i2,i3,(((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4));
} else {
if ((i4 < ((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,i2,i3,((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4));
} else {
if ((i4 < (((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,i2,i3,(((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4));
} else {
if ((i4 < ((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,i2,i3,((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4));
} else {
if ((i4 < (((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,i2,i3,(((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4));
} else {
if ((i4 < ((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,i2,i3,((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4));
} else {
if ((i4 < (((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,i1,i2,i3,(((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4));
} else {
if ((i4 < ((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,i1,i2,i3,((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4));
} else {
if ((i4 < (((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,i1,i2,i3,(((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4));
} else {
if ((i4 < ((((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4) + inp17s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp17,inp17s1,inp17s2,inp17s3,inp17s4,i1,i2,i3,((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4));
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp18,inp18s1,inp18s2,inp18s3,inp18s4,i1,i2,i3,(((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4) - inp17s4));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}

void Concat19T44444444444444444444(int32_t s1, int32_t s2, int32_t s3, int32_t s4, int32_t inp1s1, int32_t inp1s2, int32_t inp1s3, int32_t inp1s4, uint64_t* inp1, int32_t inp2s1, int32_t inp2s2, int32_t inp2s3, int32_t inp2s4, uint64_t* inp2, int32_t inp3s1, int32_t inp3s2, int32_t inp3s3, int32_t inp3s4, uint64_t* inp3, int32_t inp4s1, int32_t inp4s2, int32_t inp4s3, int32_t inp4s4, uint64_t* inp4, int32_t inp5s1, int32_t inp5s2, int32_t inp5s3, int32_t inp5s4, uint64_t* inp5, int32_t inp6s1, int32_t inp6s2, int32_t inp6s3, int32_t inp6s4, uint64_t* inp6, int32_t inp7s1, int32_t inp7s2, int32_t inp7s3, int32_t inp7s4, uint64_t* inp7, int32_t inp8s1, int32_t inp8s2, int32_t inp8s3, int32_t inp8s4, uint64_t* inp8, int32_t inp9s1, int32_t inp9s2, int32_t inp9s3, int32_t inp9s4, uint64_t* inp9, int32_t inp10s1, int32_t inp10s2, int32_t inp10s3, int32_t inp10s4, uint64_t* inp10, int32_t inp11s1, int32_t inp11s2, int32_t inp11s3, int32_t inp11s4, uint64_t* inp11, int32_t inp12s1, int32_t inp12s2, int32_t inp12s3, int32_t inp12s4, uint64_t* inp12, int32_t inp13s1, int32_t inp13s2, int32_t inp13s3, int32_t inp13s4, uint64_t* inp13, int32_t inp14s1, int32_t inp14s2, int32_t inp14s3, int32_t inp14s4, uint64_t* inp14, int32_t inp15s1, int32_t inp15s2, int32_t inp15s3, int32_t inp15s4, uint64_t* inp15, int32_t inp16s1, int32_t inp16s2, int32_t inp16s3, int32_t inp16s4, uint64_t* inp16, int32_t inp17s1, int32_t inp17s2, int32_t inp17s3, int32_t inp17s4, uint64_t* inp17, int32_t inp18s1, int32_t inp18s2, int32_t inp18s3, int32_t inp18s4, uint64_t* inp18, int32_t inp19s1, int32_t inp19s2, int32_t inp19s3, int32_t inp19s4, uint64_t* inp19, int32_t axis, uint64_t* outp){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
if ((axis ==  (int32_t)0)) {
if ((i1 < inp1s1)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i1 < (inp1s1 + inp2s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,(i1 - inp1s1),i2,i3,i4);
} else {
if ((i1 < ((inp1s1 + inp2s1) + inp3s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,((i1 - inp1s1) - inp2s1),i2,i3,i4);
} else {
if ((i1 < (((inp1s1 + inp2s1) + inp3s1) + inp4s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,(((i1 - inp1s1) - inp2s1) - inp3s1),i2,i3,i4);
} else {
if ((i1 < ((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1),i2,i3,i4);
} else {
if ((i1 < (((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,(((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1),i2,i3,i4);
} else {
if ((i1 < ((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1),i2,i3,i4);
} else {
if ((i1 < (((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,(((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1),i2,i3,i4);
} else {
if ((i1 < ((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1),i2,i3,i4);
} else {
if ((i1 < (((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,(((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,(((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,(((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,(((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1) + inp17s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp17,inp17s1,inp17s2,inp17s3,inp17s4,((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1) + inp17s1) + inp18s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp18,inp18s1,inp18s2,inp18s3,inp18s4,(((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1) - inp17s1),i2,i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp19,inp19s1,inp19s2,inp19s3,inp19s4,((((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1) - inp17s1) - inp18s1),i2,i3,i4);
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)1)) {
if ((i2 < inp1s2)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i2 < (inp1s2 + inp2s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,(i2 - inp1s2),i3,i4);
} else {
if ((i2 < ((inp1s2 + inp2s2) + inp3s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,((i2 - inp1s2) - inp2s2),i3,i4);
} else {
if ((i2 < (((inp1s2 + inp2s2) + inp3s2) + inp4s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,(((i2 - inp1s2) - inp2s2) - inp3s2),i3,i4);
} else {
if ((i2 < ((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2),i3,i4);
} else {
if ((i2 < (((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,(((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2),i3,i4);
} else {
if ((i2 < ((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2),i3,i4);
} else {
if ((i2 < (((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,(((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2),i3,i4);
} else {
if ((i2 < ((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2),i3,i4);
} else {
if ((i2 < (((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,(((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2),i3,i4);
} else {
if ((i2 < ((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2),i3,i4);
} else {
if ((i2 < (((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,(((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2),i3,i4);
} else {
if ((i2 < ((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2),i3,i4);
} else {
if ((i2 < (((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,i1,(((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2),i3,i4);
} else {
if ((i2 < ((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,i1,((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2),i3,i4);
} else {
if ((i2 < (((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,i1,(((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2),i3,i4);
} else {
if ((i2 < ((((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2) + inp17s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp17,inp17s1,inp17s2,inp17s3,inp17s4,i1,((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2),i3,i4);
} else {
if ((i2 < (((((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2) + inp17s2) + inp18s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp18,inp18s1,inp18s2,inp18s3,inp18s4,i1,(((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2) - inp17s2),i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp19,inp19s1,inp19s2,inp19s3,inp19s4,i1,((((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2) - inp17s2) - inp18s2),i3,i4);
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)2)) {
if ((i3 < inp1s3)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i3 < (inp1s3 + inp2s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,(i3 - inp1s3),i4);
} else {
if ((i3 < ((inp1s3 + inp2s3) + inp3s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,((i3 - inp1s3) - inp2s3),i4);
} else {
if ((i3 < (((inp1s3 + inp2s3) + inp3s3) + inp4s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,(((i3 - inp1s3) - inp2s3) - inp3s3),i4);
} else {
if ((i3 < ((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3),i4);
} else {
if ((i3 < (((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,(((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3),i4);
} else {
if ((i3 < ((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3),i4);
} else {
if ((i3 < (((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,i2,(((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3),i4);
} else {
if ((i3 < ((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,i2,((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3),i4);
} else {
if ((i3 < (((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,i2,(((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3),i4);
} else {
if ((i3 < ((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,i2,((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3),i4);
} else {
if ((i3 < (((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,i2,(((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3),i4);
} else {
if ((i3 < ((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,i2,((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3),i4);
} else {
if ((i3 < (((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,i1,i2,(((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3),i4);
} else {
if ((i3 < ((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,i1,i2,((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3),i4);
} else {
if ((i3 < (((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,i1,i2,(((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3),i4);
} else {
if ((i3 < ((((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3) + inp17s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp17,inp17s1,inp17s2,inp17s3,inp17s4,i1,i2,((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3),i4);
} else {
if ((i3 < (((((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3) + inp17s3) + inp18s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp18,inp18s1,inp18s2,inp18s3,inp18s4,i1,i2,(((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3) - inp17s3),i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp19,inp19s1,inp19s2,inp19s3,inp19s4,i1,i2,((((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3) - inp17s3) - inp18s3),i4);
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((i4 < inp1s4)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i4 < (inp1s4 + inp2s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,i3,(i4 - inp1s4));
} else {
if ((i4 < ((inp1s4 + inp2s4) + inp3s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,i3,((i4 - inp1s4) - inp2s4));
} else {
if ((i4 < (((inp1s4 + inp2s4) + inp3s4) + inp4s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,i3,(((i4 - inp1s4) - inp2s4) - inp3s4));
} else {
if ((i4 < ((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,i3,((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4));
} else {
if ((i4 < (((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,i3,(((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4));
} else {
if ((i4 < ((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,i3,((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4));
} else {
if ((i4 < (((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,i2,i3,(((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4));
} else {
if ((i4 < ((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,i2,i3,((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4));
} else {
if ((i4 < (((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,i2,i3,(((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4));
} else {
if ((i4 < ((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,i2,i3,((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4));
} else {
if ((i4 < (((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,i2,i3,(((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4));
} else {
if ((i4 < ((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,i2,i3,((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4));
} else {
if ((i4 < (((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,i1,i2,i3,(((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4));
} else {
if ((i4 < ((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,i1,i2,i3,((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4));
} else {
if ((i4 < (((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,i1,i2,i3,(((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4));
} else {
if ((i4 < ((((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4) + inp17s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp17,inp17s1,inp17s2,inp17s3,inp17s4,i1,i2,i3,((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4));
} else {
if ((i4 < (((((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4) + inp17s4) + inp18s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp18,inp18s1,inp18s2,inp18s3,inp18s4,i1,i2,i3,(((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4) - inp17s4));
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp19,inp19s1,inp19s2,inp19s3,inp19s4,i1,i2,i3,((((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4) - inp17s4) - inp18s4));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}

void Concat20T444444444444444444444(int32_t s1, int32_t s2, int32_t s3, int32_t s4, int32_t inp1s1, int32_t inp1s2, int32_t inp1s3, int32_t inp1s4, uint64_t* inp1, int32_t inp2s1, int32_t inp2s2, int32_t inp2s3, int32_t inp2s4, uint64_t* inp2, int32_t inp3s1, int32_t inp3s2, int32_t inp3s3, int32_t inp3s4, uint64_t* inp3, int32_t inp4s1, int32_t inp4s2, int32_t inp4s3, int32_t inp4s4, uint64_t* inp4, int32_t inp5s1, int32_t inp5s2, int32_t inp5s3, int32_t inp5s4, uint64_t* inp5, int32_t inp6s1, int32_t inp6s2, int32_t inp6s3, int32_t inp6s4, uint64_t* inp6, int32_t inp7s1, int32_t inp7s2, int32_t inp7s3, int32_t inp7s4, uint64_t* inp7, int32_t inp8s1, int32_t inp8s2, int32_t inp8s3, int32_t inp8s4, uint64_t* inp8, int32_t inp9s1, int32_t inp9s2, int32_t inp9s3, int32_t inp9s4, uint64_t* inp9, int32_t inp10s1, int32_t inp10s2, int32_t inp10s3, int32_t inp10s4, uint64_t* inp10, int32_t inp11s1, int32_t inp11s2, int32_t inp11s3, int32_t inp11s4, uint64_t* inp11, int32_t inp12s1, int32_t inp12s2, int32_t inp12s3, int32_t inp12s4, uint64_t* inp12, int32_t inp13s1, int32_t inp13s2, int32_t inp13s3, int32_t inp13s4, uint64_t* inp13, int32_t inp14s1, int32_t inp14s2, int32_t inp14s3, int32_t inp14s4, uint64_t* inp14, int32_t inp15s1, int32_t inp15s2, int32_t inp15s3, int32_t inp15s4, uint64_t* inp15, int32_t inp16s1, int32_t inp16s2, int32_t inp16s3, int32_t inp16s4, uint64_t* inp16, int32_t inp17s1, int32_t inp17s2, int32_t inp17s3, int32_t inp17s4, uint64_t* inp17, int32_t inp18s1, int32_t inp18s2, int32_t inp18s3, int32_t inp18s4, uint64_t* inp18, int32_t inp19s1, int32_t inp19s2, int32_t inp19s3, int32_t inp19s4, uint64_t* inp19, int32_t inp20s1, int32_t inp20s2, int32_t inp20s3, int32_t inp20s4, uint64_t* inp20, int32_t axis, uint64_t* outp){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
if ((axis ==  (int32_t)0)) {
if ((i1 < inp1s1)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i1 < (inp1s1 + inp2s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,(i1 - inp1s1),i2,i3,i4);
} else {
if ((i1 < ((inp1s1 + inp2s1) + inp3s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,((i1 - inp1s1) - inp2s1),i2,i3,i4);
} else {
if ((i1 < (((inp1s1 + inp2s1) + inp3s1) + inp4s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,(((i1 - inp1s1) - inp2s1) - inp3s1),i2,i3,i4);
} else {
if ((i1 < ((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1),i2,i3,i4);
} else {
if ((i1 < (((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,(((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1),i2,i3,i4);
} else {
if ((i1 < ((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1),i2,i3,i4);
} else {
if ((i1 < (((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,(((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1),i2,i3,i4);
} else {
if ((i1 < ((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1),i2,i3,i4);
} else {
if ((i1 < (((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,(((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,(((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,(((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,(((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1) + inp17s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp17,inp17s1,inp17s2,inp17s3,inp17s4,((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1) + inp17s1) + inp18s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp18,inp18s1,inp18s2,inp18s3,inp18s4,(((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1) - inp17s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1) + inp17s1) + inp18s1) + inp19s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp19,inp19s1,inp19s2,inp19s3,inp19s4,((((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1) - inp17s1) - inp18s1),i2,i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp20,inp20s1,inp20s2,inp20s3,inp20s4,(((((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1) - inp17s1) - inp18s1) - inp19s1),i2,i3,i4);
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)1)) {
if ((i2 < inp1s2)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i2 < (inp1s2 + inp2s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,(i2 - inp1s2),i3,i4);
} else {
if ((i2 < ((inp1s2 + inp2s2) + inp3s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,((i2 - inp1s2) - inp2s2),i3,i4);
} else {
if ((i2 < (((inp1s2 + inp2s2) + inp3s2) + inp4s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,(((i2 - inp1s2) - inp2s2) - inp3s2),i3,i4);
} else {
if ((i2 < ((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2),i3,i4);
} else {
if ((i2 < (((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,(((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2),i3,i4);
} else {
if ((i2 < ((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2),i3,i4);
} else {
if ((i2 < (((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,(((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2),i3,i4);
} else {
if ((i2 < ((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2),i3,i4);
} else {
if ((i2 < (((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,(((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2),i3,i4);
} else {
if ((i2 < ((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2),i3,i4);
} else {
if ((i2 < (((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,(((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2),i3,i4);
} else {
if ((i2 < ((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2),i3,i4);
} else {
if ((i2 < (((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,i1,(((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2),i3,i4);
} else {
if ((i2 < ((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,i1,((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2),i3,i4);
} else {
if ((i2 < (((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,i1,(((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2),i3,i4);
} else {
if ((i2 < ((((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2) + inp17s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp17,inp17s1,inp17s2,inp17s3,inp17s4,i1,((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2),i3,i4);
} else {
if ((i2 < (((((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2) + inp17s2) + inp18s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp18,inp18s1,inp18s2,inp18s3,inp18s4,i1,(((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2) - inp17s2),i3,i4);
} else {
if ((i2 < ((((((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2) + inp17s2) + inp18s2) + inp19s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp19,inp19s1,inp19s2,inp19s3,inp19s4,i1,((((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2) - inp17s2) - inp18s2),i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp20,inp20s1,inp20s2,inp20s3,inp20s4,i1,(((((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2) - inp17s2) - inp18s2) - inp19s2),i3,i4);
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)2)) {
if ((i3 < inp1s3)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i3 < (inp1s3 + inp2s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,(i3 - inp1s3),i4);
} else {
if ((i3 < ((inp1s3 + inp2s3) + inp3s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,((i3 - inp1s3) - inp2s3),i4);
} else {
if ((i3 < (((inp1s3 + inp2s3) + inp3s3) + inp4s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,(((i3 - inp1s3) - inp2s3) - inp3s3),i4);
} else {
if ((i3 < ((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3),i4);
} else {
if ((i3 < (((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,(((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3),i4);
} else {
if ((i3 < ((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3),i4);
} else {
if ((i3 < (((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,i2,(((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3),i4);
} else {
if ((i3 < ((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,i2,((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3),i4);
} else {
if ((i3 < (((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,i2,(((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3),i4);
} else {
if ((i3 < ((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,i2,((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3),i4);
} else {
if ((i3 < (((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,i2,(((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3),i4);
} else {
if ((i3 < ((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,i2,((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3),i4);
} else {
if ((i3 < (((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,i1,i2,(((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3),i4);
} else {
if ((i3 < ((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,i1,i2,((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3),i4);
} else {
if ((i3 < (((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,i1,i2,(((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3),i4);
} else {
if ((i3 < ((((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3) + inp17s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp17,inp17s1,inp17s2,inp17s3,inp17s4,i1,i2,((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3),i4);
} else {
if ((i3 < (((((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3) + inp17s3) + inp18s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp18,inp18s1,inp18s2,inp18s3,inp18s4,i1,i2,(((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3) - inp17s3),i4);
} else {
if ((i3 < ((((((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3) + inp17s3) + inp18s3) + inp19s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp19,inp19s1,inp19s2,inp19s3,inp19s4,i1,i2,((((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3) - inp17s3) - inp18s3),i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp20,inp20s1,inp20s2,inp20s3,inp20s4,i1,i2,(((((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3) - inp17s3) - inp18s3) - inp19s3),i4);
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((i4 < inp1s4)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i4 < (inp1s4 + inp2s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,i3,(i4 - inp1s4));
} else {
if ((i4 < ((inp1s4 + inp2s4) + inp3s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,i3,((i4 - inp1s4) - inp2s4));
} else {
if ((i4 < (((inp1s4 + inp2s4) + inp3s4) + inp4s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,i3,(((i4 - inp1s4) - inp2s4) - inp3s4));
} else {
if ((i4 < ((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,i3,((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4));
} else {
if ((i4 < (((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,i3,(((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4));
} else {
if ((i4 < ((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,i3,((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4));
} else {
if ((i4 < (((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,i2,i3,(((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4));
} else {
if ((i4 < ((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,i2,i3,((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4));
} else {
if ((i4 < (((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,i2,i3,(((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4));
} else {
if ((i4 < ((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,i2,i3,((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4));
} else {
if ((i4 < (((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,i2,i3,(((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4));
} else {
if ((i4 < ((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,i2,i3,((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4));
} else {
if ((i4 < (((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,i1,i2,i3,(((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4));
} else {
if ((i4 < ((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,i1,i2,i3,((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4));
} else {
if ((i4 < (((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,i1,i2,i3,(((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4));
} else {
if ((i4 < ((((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4) + inp17s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp17,inp17s1,inp17s2,inp17s3,inp17s4,i1,i2,i3,((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4));
} else {
if ((i4 < (((((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4) + inp17s4) + inp18s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp18,inp18s1,inp18s2,inp18s3,inp18s4,i1,i2,i3,(((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4) - inp17s4));
} else {
if ((i4 < ((((((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4) + inp17s4) + inp18s4) + inp19s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp19,inp19s1,inp19s2,inp19s3,inp19s4,i1,i2,i3,((((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4) - inp17s4) - inp18s4));
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp20,inp20s1,inp20s2,inp20s3,inp20s4,i1,i2,i3,(((((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4) - inp17s4) - inp18s4) - inp19s4));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}

void Concat21T4444444444444444444444(int32_t s1, int32_t s2, int32_t s3, int32_t s4, int32_t inp1s1, int32_t inp1s2, int32_t inp1s3, int32_t inp1s4, uint64_t* inp1, int32_t inp2s1, int32_t inp2s2, int32_t inp2s3, int32_t inp2s4, uint64_t* inp2, int32_t inp3s1, int32_t inp3s2, int32_t inp3s3, int32_t inp3s4, uint64_t* inp3, int32_t inp4s1, int32_t inp4s2, int32_t inp4s3, int32_t inp4s4, uint64_t* inp4, int32_t inp5s1, int32_t inp5s2, int32_t inp5s3, int32_t inp5s4, uint64_t* inp5, int32_t inp6s1, int32_t inp6s2, int32_t inp6s3, int32_t inp6s4, uint64_t* inp6, int32_t inp7s1, int32_t inp7s2, int32_t inp7s3, int32_t inp7s4, uint64_t* inp7, int32_t inp8s1, int32_t inp8s2, int32_t inp8s3, int32_t inp8s4, uint64_t* inp8, int32_t inp9s1, int32_t inp9s2, int32_t inp9s3, int32_t inp9s4, uint64_t* inp9, int32_t inp10s1, int32_t inp10s2, int32_t inp10s3, int32_t inp10s4, uint64_t* inp10, int32_t inp11s1, int32_t inp11s2, int32_t inp11s3, int32_t inp11s4, uint64_t* inp11, int32_t inp12s1, int32_t inp12s2, int32_t inp12s3, int32_t inp12s4, uint64_t* inp12, int32_t inp13s1, int32_t inp13s2, int32_t inp13s3, int32_t inp13s4, uint64_t* inp13, int32_t inp14s1, int32_t inp14s2, int32_t inp14s3, int32_t inp14s4, uint64_t* inp14, int32_t inp15s1, int32_t inp15s2, int32_t inp15s3, int32_t inp15s4, uint64_t* inp15, int32_t inp16s1, int32_t inp16s2, int32_t inp16s3, int32_t inp16s4, uint64_t* inp16, int32_t inp17s1, int32_t inp17s2, int32_t inp17s3, int32_t inp17s4, uint64_t* inp17, int32_t inp18s1, int32_t inp18s2, int32_t inp18s3, int32_t inp18s4, uint64_t* inp18, int32_t inp19s1, int32_t inp19s2, int32_t inp19s3, int32_t inp19s4, uint64_t* inp19, int32_t inp20s1, int32_t inp20s2, int32_t inp20s3, int32_t inp20s4, uint64_t* inp20, int32_t inp21s1, int32_t inp21s2, int32_t inp21s3, int32_t inp21s4, uint64_t* inp21, int32_t axis, uint64_t* outp){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
if ((axis ==  (int32_t)0)) {
if ((i1 < inp1s1)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i1 < (inp1s1 + inp2s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,(i1 - inp1s1),i2,i3,i4);
} else {
if ((i1 < ((inp1s1 + inp2s1) + inp3s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,((i1 - inp1s1) - inp2s1),i2,i3,i4);
} else {
if ((i1 < (((inp1s1 + inp2s1) + inp3s1) + inp4s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,(((i1 - inp1s1) - inp2s1) - inp3s1),i2,i3,i4);
} else {
if ((i1 < ((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1),i2,i3,i4);
} else {
if ((i1 < (((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,(((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1),i2,i3,i4);
} else {
if ((i1 < ((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1),i2,i3,i4);
} else {
if ((i1 < (((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,(((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1),i2,i3,i4);
} else {
if ((i1 < ((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1),i2,i3,i4);
} else {
if ((i1 < (((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,(((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,(((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,(((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,(((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1) + inp17s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp17,inp17s1,inp17s2,inp17s3,inp17s4,((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1) + inp17s1) + inp18s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp18,inp18s1,inp18s2,inp18s3,inp18s4,(((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1) - inp17s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1) + inp17s1) + inp18s1) + inp19s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp19,inp19s1,inp19s2,inp19s3,inp19s4,((((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1) - inp17s1) - inp18s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1) + inp17s1) + inp18s1) + inp19s1) + inp20s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp20,inp20s1,inp20s2,inp20s3,inp20s4,(((((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1) - inp17s1) - inp18s1) - inp19s1),i2,i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp21,inp21s1,inp21s2,inp21s3,inp21s4,((((((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1) - inp17s1) - inp18s1) - inp19s1) - inp20s1),i2,i3,i4);
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)1)) {
if ((i2 < inp1s2)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i2 < (inp1s2 + inp2s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,(i2 - inp1s2),i3,i4);
} else {
if ((i2 < ((inp1s2 + inp2s2) + inp3s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,((i2 - inp1s2) - inp2s2),i3,i4);
} else {
if ((i2 < (((inp1s2 + inp2s2) + inp3s2) + inp4s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,(((i2 - inp1s2) - inp2s2) - inp3s2),i3,i4);
} else {
if ((i2 < ((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2),i3,i4);
} else {
if ((i2 < (((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,(((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2),i3,i4);
} else {
if ((i2 < ((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2),i3,i4);
} else {
if ((i2 < (((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,(((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2),i3,i4);
} else {
if ((i2 < ((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2),i3,i4);
} else {
if ((i2 < (((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,(((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2),i3,i4);
} else {
if ((i2 < ((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2),i3,i4);
} else {
if ((i2 < (((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,(((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2),i3,i4);
} else {
if ((i2 < ((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2),i3,i4);
} else {
if ((i2 < (((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,i1,(((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2),i3,i4);
} else {
if ((i2 < ((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,i1,((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2),i3,i4);
} else {
if ((i2 < (((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,i1,(((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2),i3,i4);
} else {
if ((i2 < ((((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2) + inp17s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp17,inp17s1,inp17s2,inp17s3,inp17s4,i1,((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2),i3,i4);
} else {
if ((i2 < (((((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2) + inp17s2) + inp18s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp18,inp18s1,inp18s2,inp18s3,inp18s4,i1,(((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2) - inp17s2),i3,i4);
} else {
if ((i2 < ((((((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2) + inp17s2) + inp18s2) + inp19s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp19,inp19s1,inp19s2,inp19s3,inp19s4,i1,((((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2) - inp17s2) - inp18s2),i3,i4);
} else {
if ((i2 < (((((((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2) + inp17s2) + inp18s2) + inp19s2) + inp20s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp20,inp20s1,inp20s2,inp20s3,inp20s4,i1,(((((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2) - inp17s2) - inp18s2) - inp19s2),i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp21,inp21s1,inp21s2,inp21s3,inp21s4,i1,((((((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2) - inp17s2) - inp18s2) - inp19s2) - inp20s2),i3,i4);
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)2)) {
if ((i3 < inp1s3)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i3 < (inp1s3 + inp2s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,(i3 - inp1s3),i4);
} else {
if ((i3 < ((inp1s3 + inp2s3) + inp3s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,((i3 - inp1s3) - inp2s3),i4);
} else {
if ((i3 < (((inp1s3 + inp2s3) + inp3s3) + inp4s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,(((i3 - inp1s3) - inp2s3) - inp3s3),i4);
} else {
if ((i3 < ((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3),i4);
} else {
if ((i3 < (((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,(((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3),i4);
} else {
if ((i3 < ((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3),i4);
} else {
if ((i3 < (((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,i2,(((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3),i4);
} else {
if ((i3 < ((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,i2,((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3),i4);
} else {
if ((i3 < (((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,i2,(((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3),i4);
} else {
if ((i3 < ((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,i2,((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3),i4);
} else {
if ((i3 < (((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,i2,(((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3),i4);
} else {
if ((i3 < ((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,i2,((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3),i4);
} else {
if ((i3 < (((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,i1,i2,(((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3),i4);
} else {
if ((i3 < ((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,i1,i2,((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3),i4);
} else {
if ((i3 < (((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,i1,i2,(((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3),i4);
} else {
if ((i3 < ((((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3) + inp17s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp17,inp17s1,inp17s2,inp17s3,inp17s4,i1,i2,((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3),i4);
} else {
if ((i3 < (((((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3) + inp17s3) + inp18s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp18,inp18s1,inp18s2,inp18s3,inp18s4,i1,i2,(((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3) - inp17s3),i4);
} else {
if ((i3 < ((((((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3) + inp17s3) + inp18s3) + inp19s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp19,inp19s1,inp19s2,inp19s3,inp19s4,i1,i2,((((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3) - inp17s3) - inp18s3),i4);
} else {
if ((i3 < (((((((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3) + inp17s3) + inp18s3) + inp19s3) + inp20s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp20,inp20s1,inp20s2,inp20s3,inp20s4,i1,i2,(((((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3) - inp17s3) - inp18s3) - inp19s3),i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp21,inp21s1,inp21s2,inp21s3,inp21s4,i1,i2,((((((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3) - inp17s3) - inp18s3) - inp19s3) - inp20s3),i4);
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((i4 < inp1s4)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i4 < (inp1s4 + inp2s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,i3,(i4 - inp1s4));
} else {
if ((i4 < ((inp1s4 + inp2s4) + inp3s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,i3,((i4 - inp1s4) - inp2s4));
} else {
if ((i4 < (((inp1s4 + inp2s4) + inp3s4) + inp4s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,i3,(((i4 - inp1s4) - inp2s4) - inp3s4));
} else {
if ((i4 < ((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,i3,((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4));
} else {
if ((i4 < (((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,i3,(((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4));
} else {
if ((i4 < ((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,i3,((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4));
} else {
if ((i4 < (((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,i2,i3,(((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4));
} else {
if ((i4 < ((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,i2,i3,((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4));
} else {
if ((i4 < (((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,i2,i3,(((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4));
} else {
if ((i4 < ((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,i2,i3,((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4));
} else {
if ((i4 < (((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,i2,i3,(((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4));
} else {
if ((i4 < ((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,i2,i3,((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4));
} else {
if ((i4 < (((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,i1,i2,i3,(((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4));
} else {
if ((i4 < ((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,i1,i2,i3,((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4));
} else {
if ((i4 < (((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,i1,i2,i3,(((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4));
} else {
if ((i4 < ((((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4) + inp17s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp17,inp17s1,inp17s2,inp17s3,inp17s4,i1,i2,i3,((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4));
} else {
if ((i4 < (((((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4) + inp17s4) + inp18s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp18,inp18s1,inp18s2,inp18s3,inp18s4,i1,i2,i3,(((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4) - inp17s4));
} else {
if ((i4 < ((((((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4) + inp17s4) + inp18s4) + inp19s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp19,inp19s1,inp19s2,inp19s3,inp19s4,i1,i2,i3,((((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4) - inp17s4) - inp18s4));
} else {
if ((i4 < (((((((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4) + inp17s4) + inp18s4) + inp19s4) + inp20s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp20,inp20s1,inp20s2,inp20s3,inp20s4,i1,i2,i3,(((((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4) - inp17s4) - inp18s4) - inp19s4));
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp21,inp21s1,inp21s2,inp21s3,inp21s4,i1,i2,i3,((((((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4) - inp17s4) - inp18s4) - inp19s4) - inp20s4));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}

void Concat22T44444444444444444444444(int32_t s1, int32_t s2, int32_t s3, int32_t s4, int32_t inp1s1, int32_t inp1s2, int32_t inp1s3, int32_t inp1s4, uint64_t* inp1, int32_t inp2s1, int32_t inp2s2, int32_t inp2s3, int32_t inp2s4, uint64_t* inp2, int32_t inp3s1, int32_t inp3s2, int32_t inp3s3, int32_t inp3s4, uint64_t* inp3, int32_t inp4s1, int32_t inp4s2, int32_t inp4s3, int32_t inp4s4, uint64_t* inp4, int32_t inp5s1, int32_t inp5s2, int32_t inp5s3, int32_t inp5s4, uint64_t* inp5, int32_t inp6s1, int32_t inp6s2, int32_t inp6s3, int32_t inp6s4, uint64_t* inp6, int32_t inp7s1, int32_t inp7s2, int32_t inp7s3, int32_t inp7s4, uint64_t* inp7, int32_t inp8s1, int32_t inp8s2, int32_t inp8s3, int32_t inp8s4, uint64_t* inp8, int32_t inp9s1, int32_t inp9s2, int32_t inp9s3, int32_t inp9s4, uint64_t* inp9, int32_t inp10s1, int32_t inp10s2, int32_t inp10s3, int32_t inp10s4, uint64_t* inp10, int32_t inp11s1, int32_t inp11s2, int32_t inp11s3, int32_t inp11s4, uint64_t* inp11, int32_t inp12s1, int32_t inp12s2, int32_t inp12s3, int32_t inp12s4, uint64_t* inp12, int32_t inp13s1, int32_t inp13s2, int32_t inp13s3, int32_t inp13s4, uint64_t* inp13, int32_t inp14s1, int32_t inp14s2, int32_t inp14s3, int32_t inp14s4, uint64_t* inp14, int32_t inp15s1, int32_t inp15s2, int32_t inp15s3, int32_t inp15s4, uint64_t* inp15, int32_t inp16s1, int32_t inp16s2, int32_t inp16s3, int32_t inp16s4, uint64_t* inp16, int32_t inp17s1, int32_t inp17s2, int32_t inp17s3, int32_t inp17s4, uint64_t* inp17, int32_t inp18s1, int32_t inp18s2, int32_t inp18s3, int32_t inp18s4, uint64_t* inp18, int32_t inp19s1, int32_t inp19s2, int32_t inp19s3, int32_t inp19s4, uint64_t* inp19, int32_t inp20s1, int32_t inp20s2, int32_t inp20s3, int32_t inp20s4, uint64_t* inp20, int32_t inp21s1, int32_t inp21s2, int32_t inp21s3, int32_t inp21s4, uint64_t* inp21, int32_t inp22s1, int32_t inp22s2, int32_t inp22s3, int32_t inp22s4, uint64_t* inp22, int32_t axis, uint64_t* outp){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
if ((axis ==  (int32_t)0)) {
if ((i1 < inp1s1)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i1 < (inp1s1 + inp2s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,(i1 - inp1s1),i2,i3,i4);
} else {
if ((i1 < ((inp1s1 + inp2s1) + inp3s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,((i1 - inp1s1) - inp2s1),i2,i3,i4);
} else {
if ((i1 < (((inp1s1 + inp2s1) + inp3s1) + inp4s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,(((i1 - inp1s1) - inp2s1) - inp3s1),i2,i3,i4);
} else {
if ((i1 < ((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1),i2,i3,i4);
} else {
if ((i1 < (((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,(((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1),i2,i3,i4);
} else {
if ((i1 < ((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1),i2,i3,i4);
} else {
if ((i1 < (((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,(((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1),i2,i3,i4);
} else {
if ((i1 < ((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1),i2,i3,i4);
} else {
if ((i1 < (((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,(((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,(((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,(((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,(((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1) + inp17s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp17,inp17s1,inp17s2,inp17s3,inp17s4,((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1) + inp17s1) + inp18s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp18,inp18s1,inp18s2,inp18s3,inp18s4,(((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1) - inp17s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1) + inp17s1) + inp18s1) + inp19s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp19,inp19s1,inp19s2,inp19s3,inp19s4,((((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1) - inp17s1) - inp18s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1) + inp17s1) + inp18s1) + inp19s1) + inp20s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp20,inp20s1,inp20s2,inp20s3,inp20s4,(((((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1) - inp17s1) - inp18s1) - inp19s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1) + inp17s1) + inp18s1) + inp19s1) + inp20s1) + inp21s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp21,inp21s1,inp21s2,inp21s3,inp21s4,((((((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1) - inp17s1) - inp18s1) - inp19s1) - inp20s1),i2,i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp22,inp22s1,inp22s2,inp22s3,inp22s4,(((((((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1) - inp17s1) - inp18s1) - inp19s1) - inp20s1) - inp21s1),i2,i3,i4);
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)1)) {
if ((i2 < inp1s2)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i2 < (inp1s2 + inp2s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,(i2 - inp1s2),i3,i4);
} else {
if ((i2 < ((inp1s2 + inp2s2) + inp3s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,((i2 - inp1s2) - inp2s2),i3,i4);
} else {
if ((i2 < (((inp1s2 + inp2s2) + inp3s2) + inp4s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,(((i2 - inp1s2) - inp2s2) - inp3s2),i3,i4);
} else {
if ((i2 < ((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2),i3,i4);
} else {
if ((i2 < (((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,(((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2),i3,i4);
} else {
if ((i2 < ((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2),i3,i4);
} else {
if ((i2 < (((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,(((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2),i3,i4);
} else {
if ((i2 < ((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2),i3,i4);
} else {
if ((i2 < (((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,(((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2),i3,i4);
} else {
if ((i2 < ((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2),i3,i4);
} else {
if ((i2 < (((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,(((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2),i3,i4);
} else {
if ((i2 < ((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2),i3,i4);
} else {
if ((i2 < (((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,i1,(((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2),i3,i4);
} else {
if ((i2 < ((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,i1,((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2),i3,i4);
} else {
if ((i2 < (((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,i1,(((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2),i3,i4);
} else {
if ((i2 < ((((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2) + inp17s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp17,inp17s1,inp17s2,inp17s3,inp17s4,i1,((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2),i3,i4);
} else {
if ((i2 < (((((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2) + inp17s2) + inp18s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp18,inp18s1,inp18s2,inp18s3,inp18s4,i1,(((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2) - inp17s2),i3,i4);
} else {
if ((i2 < ((((((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2) + inp17s2) + inp18s2) + inp19s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp19,inp19s1,inp19s2,inp19s3,inp19s4,i1,((((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2) - inp17s2) - inp18s2),i3,i4);
} else {
if ((i2 < (((((((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2) + inp17s2) + inp18s2) + inp19s2) + inp20s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp20,inp20s1,inp20s2,inp20s3,inp20s4,i1,(((((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2) - inp17s2) - inp18s2) - inp19s2),i3,i4);
} else {
if ((i2 < ((((((((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2) + inp17s2) + inp18s2) + inp19s2) + inp20s2) + inp21s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp21,inp21s1,inp21s2,inp21s3,inp21s4,i1,((((((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2) - inp17s2) - inp18s2) - inp19s2) - inp20s2),i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp22,inp22s1,inp22s2,inp22s3,inp22s4,i1,(((((((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2) - inp17s2) - inp18s2) - inp19s2) - inp20s2) - inp21s2),i3,i4);
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)2)) {
if ((i3 < inp1s3)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i3 < (inp1s3 + inp2s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,(i3 - inp1s3),i4);
} else {
if ((i3 < ((inp1s3 + inp2s3) + inp3s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,((i3 - inp1s3) - inp2s3),i4);
} else {
if ((i3 < (((inp1s3 + inp2s3) + inp3s3) + inp4s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,(((i3 - inp1s3) - inp2s3) - inp3s3),i4);
} else {
if ((i3 < ((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3),i4);
} else {
if ((i3 < (((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,(((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3),i4);
} else {
if ((i3 < ((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3),i4);
} else {
if ((i3 < (((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,i2,(((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3),i4);
} else {
if ((i3 < ((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,i2,((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3),i4);
} else {
if ((i3 < (((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,i2,(((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3),i4);
} else {
if ((i3 < ((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,i2,((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3),i4);
} else {
if ((i3 < (((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,i2,(((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3),i4);
} else {
if ((i3 < ((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,i2,((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3),i4);
} else {
if ((i3 < (((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,i1,i2,(((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3),i4);
} else {
if ((i3 < ((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,i1,i2,((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3),i4);
} else {
if ((i3 < (((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,i1,i2,(((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3),i4);
} else {
if ((i3 < ((((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3) + inp17s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp17,inp17s1,inp17s2,inp17s3,inp17s4,i1,i2,((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3),i4);
} else {
if ((i3 < (((((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3) + inp17s3) + inp18s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp18,inp18s1,inp18s2,inp18s3,inp18s4,i1,i2,(((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3) - inp17s3),i4);
} else {
if ((i3 < ((((((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3) + inp17s3) + inp18s3) + inp19s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp19,inp19s1,inp19s2,inp19s3,inp19s4,i1,i2,((((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3) - inp17s3) - inp18s3),i4);
} else {
if ((i3 < (((((((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3) + inp17s3) + inp18s3) + inp19s3) + inp20s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp20,inp20s1,inp20s2,inp20s3,inp20s4,i1,i2,(((((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3) - inp17s3) - inp18s3) - inp19s3),i4);
} else {
if ((i3 < ((((((((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3) + inp17s3) + inp18s3) + inp19s3) + inp20s3) + inp21s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp21,inp21s1,inp21s2,inp21s3,inp21s4,i1,i2,((((((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3) - inp17s3) - inp18s3) - inp19s3) - inp20s3),i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp22,inp22s1,inp22s2,inp22s3,inp22s4,i1,i2,(((((((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3) - inp17s3) - inp18s3) - inp19s3) - inp20s3) - inp21s3),i4);
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((i4 < inp1s4)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i4 < (inp1s4 + inp2s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,i3,(i4 - inp1s4));
} else {
if ((i4 < ((inp1s4 + inp2s4) + inp3s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,i3,((i4 - inp1s4) - inp2s4));
} else {
if ((i4 < (((inp1s4 + inp2s4) + inp3s4) + inp4s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,i3,(((i4 - inp1s4) - inp2s4) - inp3s4));
} else {
if ((i4 < ((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,i3,((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4));
} else {
if ((i4 < (((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,i3,(((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4));
} else {
if ((i4 < ((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,i3,((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4));
} else {
if ((i4 < (((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,i2,i3,(((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4));
} else {
if ((i4 < ((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,i2,i3,((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4));
} else {
if ((i4 < (((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,i2,i3,(((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4));
} else {
if ((i4 < ((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,i2,i3,((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4));
} else {
if ((i4 < (((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,i2,i3,(((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4));
} else {
if ((i4 < ((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,i2,i3,((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4));
} else {
if ((i4 < (((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,i1,i2,i3,(((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4));
} else {
if ((i4 < ((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,i1,i2,i3,((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4));
} else {
if ((i4 < (((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,i1,i2,i3,(((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4));
} else {
if ((i4 < ((((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4) + inp17s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp17,inp17s1,inp17s2,inp17s3,inp17s4,i1,i2,i3,((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4));
} else {
if ((i4 < (((((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4) + inp17s4) + inp18s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp18,inp18s1,inp18s2,inp18s3,inp18s4,i1,i2,i3,(((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4) - inp17s4));
} else {
if ((i4 < ((((((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4) + inp17s4) + inp18s4) + inp19s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp19,inp19s1,inp19s2,inp19s3,inp19s4,i1,i2,i3,((((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4) - inp17s4) - inp18s4));
} else {
if ((i4 < (((((((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4) + inp17s4) + inp18s4) + inp19s4) + inp20s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp20,inp20s1,inp20s2,inp20s3,inp20s4,i1,i2,i3,(((((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4) - inp17s4) - inp18s4) - inp19s4));
} else {
if ((i4 < ((((((((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4) + inp17s4) + inp18s4) + inp19s4) + inp20s4) + inp21s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp21,inp21s1,inp21s2,inp21s3,inp21s4,i1,i2,i3,((((((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4) - inp17s4) - inp18s4) - inp19s4) - inp20s4));
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp22,inp22s1,inp22s2,inp22s3,inp22s4,i1,i2,i3,(((((((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4) - inp17s4) - inp18s4) - inp19s4) - inp20s4) - inp21s4));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}

void Concat23T444444444444444444444444(int32_t s1, int32_t s2, int32_t s3, int32_t s4, int32_t inp1s1, int32_t inp1s2, int32_t inp1s3, int32_t inp1s4, uint64_t* inp1, int32_t inp2s1, int32_t inp2s2, int32_t inp2s3, int32_t inp2s4, uint64_t* inp2, int32_t inp3s1, int32_t inp3s2, int32_t inp3s3, int32_t inp3s4, uint64_t* inp3, int32_t inp4s1, int32_t inp4s2, int32_t inp4s3, int32_t inp4s4, uint64_t* inp4, int32_t inp5s1, int32_t inp5s2, int32_t inp5s3, int32_t inp5s4, uint64_t* inp5, int32_t inp6s1, int32_t inp6s2, int32_t inp6s3, int32_t inp6s4, uint64_t* inp6, int32_t inp7s1, int32_t inp7s2, int32_t inp7s3, int32_t inp7s4, uint64_t* inp7, int32_t inp8s1, int32_t inp8s2, int32_t inp8s3, int32_t inp8s4, uint64_t* inp8, int32_t inp9s1, int32_t inp9s2, int32_t inp9s3, int32_t inp9s4, uint64_t* inp9, int32_t inp10s1, int32_t inp10s2, int32_t inp10s3, int32_t inp10s4, uint64_t* inp10, int32_t inp11s1, int32_t inp11s2, int32_t inp11s3, int32_t inp11s4, uint64_t* inp11, int32_t inp12s1, int32_t inp12s2, int32_t inp12s3, int32_t inp12s4, uint64_t* inp12, int32_t inp13s1, int32_t inp13s2, int32_t inp13s3, int32_t inp13s4, uint64_t* inp13, int32_t inp14s1, int32_t inp14s2, int32_t inp14s3, int32_t inp14s4, uint64_t* inp14, int32_t inp15s1, int32_t inp15s2, int32_t inp15s3, int32_t inp15s4, uint64_t* inp15, int32_t inp16s1, int32_t inp16s2, int32_t inp16s3, int32_t inp16s4, uint64_t* inp16, int32_t inp17s1, int32_t inp17s2, int32_t inp17s3, int32_t inp17s4, uint64_t* inp17, int32_t inp18s1, int32_t inp18s2, int32_t inp18s3, int32_t inp18s4, uint64_t* inp18, int32_t inp19s1, int32_t inp19s2, int32_t inp19s3, int32_t inp19s4, uint64_t* inp19, int32_t inp20s1, int32_t inp20s2, int32_t inp20s3, int32_t inp20s4, uint64_t* inp20, int32_t inp21s1, int32_t inp21s2, int32_t inp21s3, int32_t inp21s4, uint64_t* inp21, int32_t inp22s1, int32_t inp22s2, int32_t inp22s3, int32_t inp22s4, uint64_t* inp22, int32_t inp23s1, int32_t inp23s2, int32_t inp23s3, int32_t inp23s4, uint64_t* inp23, int32_t axis, uint64_t* outp){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
if ((axis ==  (int32_t)0)) {
if ((i1 < inp1s1)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i1 < (inp1s1 + inp2s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,(i1 - inp1s1),i2,i3,i4);
} else {
if ((i1 < ((inp1s1 + inp2s1) + inp3s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,((i1 - inp1s1) - inp2s1),i2,i3,i4);
} else {
if ((i1 < (((inp1s1 + inp2s1) + inp3s1) + inp4s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,(((i1 - inp1s1) - inp2s1) - inp3s1),i2,i3,i4);
} else {
if ((i1 < ((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1),i2,i3,i4);
} else {
if ((i1 < (((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,(((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1),i2,i3,i4);
} else {
if ((i1 < ((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1),i2,i3,i4);
} else {
if ((i1 < (((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,(((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1),i2,i3,i4);
} else {
if ((i1 < ((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1),i2,i3,i4);
} else {
if ((i1 < (((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,(((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,(((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,(((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,(((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1) + inp17s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp17,inp17s1,inp17s2,inp17s3,inp17s4,((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1) + inp17s1) + inp18s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp18,inp18s1,inp18s2,inp18s3,inp18s4,(((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1) - inp17s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1) + inp17s1) + inp18s1) + inp19s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp19,inp19s1,inp19s2,inp19s3,inp19s4,((((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1) - inp17s1) - inp18s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1) + inp17s1) + inp18s1) + inp19s1) + inp20s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp20,inp20s1,inp20s2,inp20s3,inp20s4,(((((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1) - inp17s1) - inp18s1) - inp19s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1) + inp17s1) + inp18s1) + inp19s1) + inp20s1) + inp21s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp21,inp21s1,inp21s2,inp21s3,inp21s4,((((((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1) - inp17s1) - inp18s1) - inp19s1) - inp20s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1) + inp17s1) + inp18s1) + inp19s1) + inp20s1) + inp21s1) + inp22s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp22,inp22s1,inp22s2,inp22s3,inp22s4,(((((((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1) - inp17s1) - inp18s1) - inp19s1) - inp20s1) - inp21s1),i2,i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp23,inp23s1,inp23s2,inp23s3,inp23s4,((((((((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1) - inp17s1) - inp18s1) - inp19s1) - inp20s1) - inp21s1) - inp22s1),i2,i3,i4);
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)1)) {
if ((i2 < inp1s2)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i2 < (inp1s2 + inp2s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,(i2 - inp1s2),i3,i4);
} else {
if ((i2 < ((inp1s2 + inp2s2) + inp3s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,((i2 - inp1s2) - inp2s2),i3,i4);
} else {
if ((i2 < (((inp1s2 + inp2s2) + inp3s2) + inp4s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,(((i2 - inp1s2) - inp2s2) - inp3s2),i3,i4);
} else {
if ((i2 < ((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2),i3,i4);
} else {
if ((i2 < (((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,(((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2),i3,i4);
} else {
if ((i2 < ((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2),i3,i4);
} else {
if ((i2 < (((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,(((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2),i3,i4);
} else {
if ((i2 < ((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2),i3,i4);
} else {
if ((i2 < (((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,(((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2),i3,i4);
} else {
if ((i2 < ((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2),i3,i4);
} else {
if ((i2 < (((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,(((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2),i3,i4);
} else {
if ((i2 < ((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2),i3,i4);
} else {
if ((i2 < (((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,i1,(((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2),i3,i4);
} else {
if ((i2 < ((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,i1,((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2),i3,i4);
} else {
if ((i2 < (((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,i1,(((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2),i3,i4);
} else {
if ((i2 < ((((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2) + inp17s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp17,inp17s1,inp17s2,inp17s3,inp17s4,i1,((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2),i3,i4);
} else {
if ((i2 < (((((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2) + inp17s2) + inp18s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp18,inp18s1,inp18s2,inp18s3,inp18s4,i1,(((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2) - inp17s2),i3,i4);
} else {
if ((i2 < ((((((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2) + inp17s2) + inp18s2) + inp19s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp19,inp19s1,inp19s2,inp19s3,inp19s4,i1,((((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2) - inp17s2) - inp18s2),i3,i4);
} else {
if ((i2 < (((((((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2) + inp17s2) + inp18s2) + inp19s2) + inp20s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp20,inp20s1,inp20s2,inp20s3,inp20s4,i1,(((((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2) - inp17s2) - inp18s2) - inp19s2),i3,i4);
} else {
if ((i2 < ((((((((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2) + inp17s2) + inp18s2) + inp19s2) + inp20s2) + inp21s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp21,inp21s1,inp21s2,inp21s3,inp21s4,i1,((((((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2) - inp17s2) - inp18s2) - inp19s2) - inp20s2),i3,i4);
} else {
if ((i2 < (((((((((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2) + inp17s2) + inp18s2) + inp19s2) + inp20s2) + inp21s2) + inp22s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp22,inp22s1,inp22s2,inp22s3,inp22s4,i1,(((((((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2) - inp17s2) - inp18s2) - inp19s2) - inp20s2) - inp21s2),i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp23,inp23s1,inp23s2,inp23s3,inp23s4,i1,((((((((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2) - inp17s2) - inp18s2) - inp19s2) - inp20s2) - inp21s2) - inp22s2),i3,i4);
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)2)) {
if ((i3 < inp1s3)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i3 < (inp1s3 + inp2s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,(i3 - inp1s3),i4);
} else {
if ((i3 < ((inp1s3 + inp2s3) + inp3s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,((i3 - inp1s3) - inp2s3),i4);
} else {
if ((i3 < (((inp1s3 + inp2s3) + inp3s3) + inp4s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,(((i3 - inp1s3) - inp2s3) - inp3s3),i4);
} else {
if ((i3 < ((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3),i4);
} else {
if ((i3 < (((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,(((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3),i4);
} else {
if ((i3 < ((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3),i4);
} else {
if ((i3 < (((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,i2,(((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3),i4);
} else {
if ((i3 < ((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,i2,((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3),i4);
} else {
if ((i3 < (((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,i2,(((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3),i4);
} else {
if ((i3 < ((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,i2,((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3),i4);
} else {
if ((i3 < (((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,i2,(((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3),i4);
} else {
if ((i3 < ((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,i2,((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3),i4);
} else {
if ((i3 < (((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,i1,i2,(((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3),i4);
} else {
if ((i3 < ((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,i1,i2,((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3),i4);
} else {
if ((i3 < (((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,i1,i2,(((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3),i4);
} else {
if ((i3 < ((((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3) + inp17s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp17,inp17s1,inp17s2,inp17s3,inp17s4,i1,i2,((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3),i4);
} else {
if ((i3 < (((((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3) + inp17s3) + inp18s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp18,inp18s1,inp18s2,inp18s3,inp18s4,i1,i2,(((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3) - inp17s3),i4);
} else {
if ((i3 < ((((((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3) + inp17s3) + inp18s3) + inp19s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp19,inp19s1,inp19s2,inp19s3,inp19s4,i1,i2,((((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3) - inp17s3) - inp18s3),i4);
} else {
if ((i3 < (((((((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3) + inp17s3) + inp18s3) + inp19s3) + inp20s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp20,inp20s1,inp20s2,inp20s3,inp20s4,i1,i2,(((((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3) - inp17s3) - inp18s3) - inp19s3),i4);
} else {
if ((i3 < ((((((((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3) + inp17s3) + inp18s3) + inp19s3) + inp20s3) + inp21s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp21,inp21s1,inp21s2,inp21s3,inp21s4,i1,i2,((((((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3) - inp17s3) - inp18s3) - inp19s3) - inp20s3),i4);
} else {
if ((i3 < (((((((((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3) + inp17s3) + inp18s3) + inp19s3) + inp20s3) + inp21s3) + inp22s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp22,inp22s1,inp22s2,inp22s3,inp22s4,i1,i2,(((((((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3) - inp17s3) - inp18s3) - inp19s3) - inp20s3) - inp21s3),i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp23,inp23s1,inp23s2,inp23s3,inp23s4,i1,i2,((((((((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3) - inp17s3) - inp18s3) - inp19s3) - inp20s3) - inp21s3) - inp22s3),i4);
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((i4 < inp1s4)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i4 < (inp1s4 + inp2s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,i3,(i4 - inp1s4));
} else {
if ((i4 < ((inp1s4 + inp2s4) + inp3s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,i3,((i4 - inp1s4) - inp2s4));
} else {
if ((i4 < (((inp1s4 + inp2s4) + inp3s4) + inp4s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,i3,(((i4 - inp1s4) - inp2s4) - inp3s4));
} else {
if ((i4 < ((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,i3,((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4));
} else {
if ((i4 < (((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,i3,(((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4));
} else {
if ((i4 < ((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,i3,((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4));
} else {
if ((i4 < (((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,i2,i3,(((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4));
} else {
if ((i4 < ((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,i2,i3,((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4));
} else {
if ((i4 < (((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,i2,i3,(((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4));
} else {
if ((i4 < ((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,i2,i3,((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4));
} else {
if ((i4 < (((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,i2,i3,(((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4));
} else {
if ((i4 < ((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,i2,i3,((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4));
} else {
if ((i4 < (((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,i1,i2,i3,(((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4));
} else {
if ((i4 < ((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,i1,i2,i3,((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4));
} else {
if ((i4 < (((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,i1,i2,i3,(((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4));
} else {
if ((i4 < ((((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4) + inp17s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp17,inp17s1,inp17s2,inp17s3,inp17s4,i1,i2,i3,((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4));
} else {
if ((i4 < (((((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4) + inp17s4) + inp18s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp18,inp18s1,inp18s2,inp18s3,inp18s4,i1,i2,i3,(((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4) - inp17s4));
} else {
if ((i4 < ((((((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4) + inp17s4) + inp18s4) + inp19s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp19,inp19s1,inp19s2,inp19s3,inp19s4,i1,i2,i3,((((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4) - inp17s4) - inp18s4));
} else {
if ((i4 < (((((((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4) + inp17s4) + inp18s4) + inp19s4) + inp20s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp20,inp20s1,inp20s2,inp20s3,inp20s4,i1,i2,i3,(((((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4) - inp17s4) - inp18s4) - inp19s4));
} else {
if ((i4 < ((((((((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4) + inp17s4) + inp18s4) + inp19s4) + inp20s4) + inp21s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp21,inp21s1,inp21s2,inp21s3,inp21s4,i1,i2,i3,((((((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4) - inp17s4) - inp18s4) - inp19s4) - inp20s4));
} else {
if ((i4 < (((((((((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4) + inp17s4) + inp18s4) + inp19s4) + inp20s4) + inp21s4) + inp22s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp22,inp22s1,inp22s2,inp22s3,inp22s4,i1,i2,i3,(((((((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4) - inp17s4) - inp18s4) - inp19s4) - inp20s4) - inp21s4));
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp23,inp23s1,inp23s2,inp23s3,inp23s4,i1,i2,i3,((((((((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4) - inp17s4) - inp18s4) - inp19s4) - inp20s4) - inp21s4) - inp22s4));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}

void Concat24T4444444444444444444444444(int32_t s1, int32_t s2, int32_t s3, int32_t s4, int32_t inp1s1, int32_t inp1s2, int32_t inp1s3, int32_t inp1s4, uint64_t* inp1, int32_t inp2s1, int32_t inp2s2, int32_t inp2s3, int32_t inp2s4, uint64_t* inp2, int32_t inp3s1, int32_t inp3s2, int32_t inp3s3, int32_t inp3s4, uint64_t* inp3, int32_t inp4s1, int32_t inp4s2, int32_t inp4s3, int32_t inp4s4, uint64_t* inp4, int32_t inp5s1, int32_t inp5s2, int32_t inp5s3, int32_t inp5s4, uint64_t* inp5, int32_t inp6s1, int32_t inp6s2, int32_t inp6s3, int32_t inp6s4, uint64_t* inp6, int32_t inp7s1, int32_t inp7s2, int32_t inp7s3, int32_t inp7s4, uint64_t* inp7, int32_t inp8s1, int32_t inp8s2, int32_t inp8s3, int32_t inp8s4, uint64_t* inp8, int32_t inp9s1, int32_t inp9s2, int32_t inp9s3, int32_t inp9s4, uint64_t* inp9, int32_t inp10s1, int32_t inp10s2, int32_t inp10s3, int32_t inp10s4, uint64_t* inp10, int32_t inp11s1, int32_t inp11s2, int32_t inp11s3, int32_t inp11s4, uint64_t* inp11, int32_t inp12s1, int32_t inp12s2, int32_t inp12s3, int32_t inp12s4, uint64_t* inp12, int32_t inp13s1, int32_t inp13s2, int32_t inp13s3, int32_t inp13s4, uint64_t* inp13, int32_t inp14s1, int32_t inp14s2, int32_t inp14s3, int32_t inp14s4, uint64_t* inp14, int32_t inp15s1, int32_t inp15s2, int32_t inp15s3, int32_t inp15s4, uint64_t* inp15, int32_t inp16s1, int32_t inp16s2, int32_t inp16s3, int32_t inp16s4, uint64_t* inp16, int32_t inp17s1, int32_t inp17s2, int32_t inp17s3, int32_t inp17s4, uint64_t* inp17, int32_t inp18s1, int32_t inp18s2, int32_t inp18s3, int32_t inp18s4, uint64_t* inp18, int32_t inp19s1, int32_t inp19s2, int32_t inp19s3, int32_t inp19s4, uint64_t* inp19, int32_t inp20s1, int32_t inp20s2, int32_t inp20s3, int32_t inp20s4, uint64_t* inp20, int32_t inp21s1, int32_t inp21s2, int32_t inp21s3, int32_t inp21s4, uint64_t* inp21, int32_t inp22s1, int32_t inp22s2, int32_t inp22s3, int32_t inp22s4, uint64_t* inp22, int32_t inp23s1, int32_t inp23s2, int32_t inp23s3, int32_t inp23s4, uint64_t* inp23, int32_t inp24s1, int32_t inp24s2, int32_t inp24s3, int32_t inp24s4, uint64_t* inp24, int32_t axis, uint64_t* outp){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
if ((axis ==  (int32_t)0)) {
if ((i1 < inp1s1)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i1 < (inp1s1 + inp2s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,(i1 - inp1s1),i2,i3,i4);
} else {
if ((i1 < ((inp1s1 + inp2s1) + inp3s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,((i1 - inp1s1) - inp2s1),i2,i3,i4);
} else {
if ((i1 < (((inp1s1 + inp2s1) + inp3s1) + inp4s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,(((i1 - inp1s1) - inp2s1) - inp3s1),i2,i3,i4);
} else {
if ((i1 < ((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1),i2,i3,i4);
} else {
if ((i1 < (((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,(((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1),i2,i3,i4);
} else {
if ((i1 < ((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1),i2,i3,i4);
} else {
if ((i1 < (((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,(((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1),i2,i3,i4);
} else {
if ((i1 < ((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1),i2,i3,i4);
} else {
if ((i1 < (((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,(((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,(((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,(((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,(((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1) + inp17s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp17,inp17s1,inp17s2,inp17s3,inp17s4,((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1) + inp17s1) + inp18s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp18,inp18s1,inp18s2,inp18s3,inp18s4,(((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1) - inp17s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1) + inp17s1) + inp18s1) + inp19s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp19,inp19s1,inp19s2,inp19s3,inp19s4,((((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1) - inp17s1) - inp18s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1) + inp17s1) + inp18s1) + inp19s1) + inp20s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp20,inp20s1,inp20s2,inp20s3,inp20s4,(((((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1) - inp17s1) - inp18s1) - inp19s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1) + inp17s1) + inp18s1) + inp19s1) + inp20s1) + inp21s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp21,inp21s1,inp21s2,inp21s3,inp21s4,((((((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1) - inp17s1) - inp18s1) - inp19s1) - inp20s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1) + inp17s1) + inp18s1) + inp19s1) + inp20s1) + inp21s1) + inp22s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp22,inp22s1,inp22s2,inp22s3,inp22s4,(((((((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1) - inp17s1) - inp18s1) - inp19s1) - inp20s1) - inp21s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1) + inp17s1) + inp18s1) + inp19s1) + inp20s1) + inp21s1) + inp22s1) + inp23s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp23,inp23s1,inp23s2,inp23s3,inp23s4,((((((((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1) - inp17s1) - inp18s1) - inp19s1) - inp20s1) - inp21s1) - inp22s1),i2,i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp24,inp24s1,inp24s2,inp24s3,inp24s4,(((((((((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1) - inp17s1) - inp18s1) - inp19s1) - inp20s1) - inp21s1) - inp22s1) - inp23s1),i2,i3,i4);
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)1)) {
if ((i2 < inp1s2)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i2 < (inp1s2 + inp2s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,(i2 - inp1s2),i3,i4);
} else {
if ((i2 < ((inp1s2 + inp2s2) + inp3s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,((i2 - inp1s2) - inp2s2),i3,i4);
} else {
if ((i2 < (((inp1s2 + inp2s2) + inp3s2) + inp4s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,(((i2 - inp1s2) - inp2s2) - inp3s2),i3,i4);
} else {
if ((i2 < ((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2),i3,i4);
} else {
if ((i2 < (((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,(((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2),i3,i4);
} else {
if ((i2 < ((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2),i3,i4);
} else {
if ((i2 < (((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,(((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2),i3,i4);
} else {
if ((i2 < ((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2),i3,i4);
} else {
if ((i2 < (((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,(((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2),i3,i4);
} else {
if ((i2 < ((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2),i3,i4);
} else {
if ((i2 < (((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,(((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2),i3,i4);
} else {
if ((i2 < ((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2),i3,i4);
} else {
if ((i2 < (((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,i1,(((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2),i3,i4);
} else {
if ((i2 < ((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,i1,((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2),i3,i4);
} else {
if ((i2 < (((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,i1,(((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2),i3,i4);
} else {
if ((i2 < ((((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2) + inp17s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp17,inp17s1,inp17s2,inp17s3,inp17s4,i1,((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2),i3,i4);
} else {
if ((i2 < (((((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2) + inp17s2) + inp18s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp18,inp18s1,inp18s2,inp18s3,inp18s4,i1,(((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2) - inp17s2),i3,i4);
} else {
if ((i2 < ((((((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2) + inp17s2) + inp18s2) + inp19s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp19,inp19s1,inp19s2,inp19s3,inp19s4,i1,((((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2) - inp17s2) - inp18s2),i3,i4);
} else {
if ((i2 < (((((((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2) + inp17s2) + inp18s2) + inp19s2) + inp20s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp20,inp20s1,inp20s2,inp20s3,inp20s4,i1,(((((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2) - inp17s2) - inp18s2) - inp19s2),i3,i4);
} else {
if ((i2 < ((((((((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2) + inp17s2) + inp18s2) + inp19s2) + inp20s2) + inp21s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp21,inp21s1,inp21s2,inp21s3,inp21s4,i1,((((((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2) - inp17s2) - inp18s2) - inp19s2) - inp20s2),i3,i4);
} else {
if ((i2 < (((((((((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2) + inp17s2) + inp18s2) + inp19s2) + inp20s2) + inp21s2) + inp22s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp22,inp22s1,inp22s2,inp22s3,inp22s4,i1,(((((((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2) - inp17s2) - inp18s2) - inp19s2) - inp20s2) - inp21s2),i3,i4);
} else {
if ((i2 < ((((((((((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2) + inp17s2) + inp18s2) + inp19s2) + inp20s2) + inp21s2) + inp22s2) + inp23s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp23,inp23s1,inp23s2,inp23s3,inp23s4,i1,((((((((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2) - inp17s2) - inp18s2) - inp19s2) - inp20s2) - inp21s2) - inp22s2),i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp24,inp24s1,inp24s2,inp24s3,inp24s4,i1,(((((((((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2) - inp17s2) - inp18s2) - inp19s2) - inp20s2) - inp21s2) - inp22s2) - inp23s2),i3,i4);
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)2)) {
if ((i3 < inp1s3)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i3 < (inp1s3 + inp2s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,(i3 - inp1s3),i4);
} else {
if ((i3 < ((inp1s3 + inp2s3) + inp3s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,((i3 - inp1s3) - inp2s3),i4);
} else {
if ((i3 < (((inp1s3 + inp2s3) + inp3s3) + inp4s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,(((i3 - inp1s3) - inp2s3) - inp3s3),i4);
} else {
if ((i3 < ((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3),i4);
} else {
if ((i3 < (((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,(((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3),i4);
} else {
if ((i3 < ((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3),i4);
} else {
if ((i3 < (((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,i2,(((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3),i4);
} else {
if ((i3 < ((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,i2,((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3),i4);
} else {
if ((i3 < (((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,i2,(((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3),i4);
} else {
if ((i3 < ((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,i2,((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3),i4);
} else {
if ((i3 < (((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,i2,(((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3),i4);
} else {
if ((i3 < ((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,i2,((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3),i4);
} else {
if ((i3 < (((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,i1,i2,(((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3),i4);
} else {
if ((i3 < ((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,i1,i2,((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3),i4);
} else {
if ((i3 < (((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,i1,i2,(((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3),i4);
} else {
if ((i3 < ((((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3) + inp17s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp17,inp17s1,inp17s2,inp17s3,inp17s4,i1,i2,((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3),i4);
} else {
if ((i3 < (((((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3) + inp17s3) + inp18s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp18,inp18s1,inp18s2,inp18s3,inp18s4,i1,i2,(((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3) - inp17s3),i4);
} else {
if ((i3 < ((((((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3) + inp17s3) + inp18s3) + inp19s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp19,inp19s1,inp19s2,inp19s3,inp19s4,i1,i2,((((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3) - inp17s3) - inp18s3),i4);
} else {
if ((i3 < (((((((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3) + inp17s3) + inp18s3) + inp19s3) + inp20s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp20,inp20s1,inp20s2,inp20s3,inp20s4,i1,i2,(((((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3) - inp17s3) - inp18s3) - inp19s3),i4);
} else {
if ((i3 < ((((((((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3) + inp17s3) + inp18s3) + inp19s3) + inp20s3) + inp21s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp21,inp21s1,inp21s2,inp21s3,inp21s4,i1,i2,((((((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3) - inp17s3) - inp18s3) - inp19s3) - inp20s3),i4);
} else {
if ((i3 < (((((((((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3) + inp17s3) + inp18s3) + inp19s3) + inp20s3) + inp21s3) + inp22s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp22,inp22s1,inp22s2,inp22s3,inp22s4,i1,i2,(((((((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3) - inp17s3) - inp18s3) - inp19s3) - inp20s3) - inp21s3),i4);
} else {
if ((i3 < ((((((((((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3) + inp17s3) + inp18s3) + inp19s3) + inp20s3) + inp21s3) + inp22s3) + inp23s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp23,inp23s1,inp23s2,inp23s3,inp23s4,i1,i2,((((((((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3) - inp17s3) - inp18s3) - inp19s3) - inp20s3) - inp21s3) - inp22s3),i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp24,inp24s1,inp24s2,inp24s3,inp24s4,i1,i2,(((((((((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3) - inp17s3) - inp18s3) - inp19s3) - inp20s3) - inp21s3) - inp22s3) - inp23s3),i4);
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((i4 < inp1s4)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i4 < (inp1s4 + inp2s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,i3,(i4 - inp1s4));
} else {
if ((i4 < ((inp1s4 + inp2s4) + inp3s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,i3,((i4 - inp1s4) - inp2s4));
} else {
if ((i4 < (((inp1s4 + inp2s4) + inp3s4) + inp4s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,i3,(((i4 - inp1s4) - inp2s4) - inp3s4));
} else {
if ((i4 < ((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,i3,((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4));
} else {
if ((i4 < (((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,i3,(((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4));
} else {
if ((i4 < ((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,i3,((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4));
} else {
if ((i4 < (((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,i2,i3,(((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4));
} else {
if ((i4 < ((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,i2,i3,((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4));
} else {
if ((i4 < (((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,i2,i3,(((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4));
} else {
if ((i4 < ((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,i2,i3,((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4));
} else {
if ((i4 < (((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,i2,i3,(((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4));
} else {
if ((i4 < ((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,i2,i3,((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4));
} else {
if ((i4 < (((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,i1,i2,i3,(((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4));
} else {
if ((i4 < ((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,i1,i2,i3,((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4));
} else {
if ((i4 < (((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,i1,i2,i3,(((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4));
} else {
if ((i4 < ((((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4) + inp17s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp17,inp17s1,inp17s2,inp17s3,inp17s4,i1,i2,i3,((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4));
} else {
if ((i4 < (((((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4) + inp17s4) + inp18s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp18,inp18s1,inp18s2,inp18s3,inp18s4,i1,i2,i3,(((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4) - inp17s4));
} else {
if ((i4 < ((((((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4) + inp17s4) + inp18s4) + inp19s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp19,inp19s1,inp19s2,inp19s3,inp19s4,i1,i2,i3,((((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4) - inp17s4) - inp18s4));
} else {
if ((i4 < (((((((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4) + inp17s4) + inp18s4) + inp19s4) + inp20s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp20,inp20s1,inp20s2,inp20s3,inp20s4,i1,i2,i3,(((((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4) - inp17s4) - inp18s4) - inp19s4));
} else {
if ((i4 < ((((((((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4) + inp17s4) + inp18s4) + inp19s4) + inp20s4) + inp21s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp21,inp21s1,inp21s2,inp21s3,inp21s4,i1,i2,i3,((((((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4) - inp17s4) - inp18s4) - inp19s4) - inp20s4));
} else {
if ((i4 < (((((((((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4) + inp17s4) + inp18s4) + inp19s4) + inp20s4) + inp21s4) + inp22s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp22,inp22s1,inp22s2,inp22s3,inp22s4,i1,i2,i3,(((((((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4) - inp17s4) - inp18s4) - inp19s4) - inp20s4) - inp21s4));
} else {
if ((i4 < ((((((((((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4) + inp17s4) + inp18s4) + inp19s4) + inp20s4) + inp21s4) + inp22s4) + inp23s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp23,inp23s1,inp23s2,inp23s3,inp23s4,i1,i2,i3,((((((((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4) - inp17s4) - inp18s4) - inp19s4) - inp20s4) - inp21s4) - inp22s4));
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp24,inp24s1,inp24s2,inp24s3,inp24s4,i1,i2,i3,(((((((((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4) - inp17s4) - inp18s4) - inp19s4) - inp20s4) - inp21s4) - inp22s4) - inp23s4));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}

void Concat25T44444444444444444444444444(int32_t s1, int32_t s2, int32_t s3, int32_t s4, int32_t inp1s1, int32_t inp1s2, int32_t inp1s3, int32_t inp1s4, uint64_t* inp1, int32_t inp2s1, int32_t inp2s2, int32_t inp2s3, int32_t inp2s4, uint64_t* inp2, int32_t inp3s1, int32_t inp3s2, int32_t inp3s3, int32_t inp3s4, uint64_t* inp3, int32_t inp4s1, int32_t inp4s2, int32_t inp4s3, int32_t inp4s4, uint64_t* inp4, int32_t inp5s1, int32_t inp5s2, int32_t inp5s3, int32_t inp5s4, uint64_t* inp5, int32_t inp6s1, int32_t inp6s2, int32_t inp6s3, int32_t inp6s4, uint64_t* inp6, int32_t inp7s1, int32_t inp7s2, int32_t inp7s3, int32_t inp7s4, uint64_t* inp7, int32_t inp8s1, int32_t inp8s2, int32_t inp8s3, int32_t inp8s4, uint64_t* inp8, int32_t inp9s1, int32_t inp9s2, int32_t inp9s3, int32_t inp9s4, uint64_t* inp9, int32_t inp10s1, int32_t inp10s2, int32_t inp10s3, int32_t inp10s4, uint64_t* inp10, int32_t inp11s1, int32_t inp11s2, int32_t inp11s3, int32_t inp11s4, uint64_t* inp11, int32_t inp12s1, int32_t inp12s2, int32_t inp12s3, int32_t inp12s4, uint64_t* inp12, int32_t inp13s1, int32_t inp13s2, int32_t inp13s3, int32_t inp13s4, uint64_t* inp13, int32_t inp14s1, int32_t inp14s2, int32_t inp14s3, int32_t inp14s4, uint64_t* inp14, int32_t inp15s1, int32_t inp15s2, int32_t inp15s3, int32_t inp15s4, uint64_t* inp15, int32_t inp16s1, int32_t inp16s2, int32_t inp16s3, int32_t inp16s4, uint64_t* inp16, int32_t inp17s1, int32_t inp17s2, int32_t inp17s3, int32_t inp17s4, uint64_t* inp17, int32_t inp18s1, int32_t inp18s2, int32_t inp18s3, int32_t inp18s4, uint64_t* inp18, int32_t inp19s1, int32_t inp19s2, int32_t inp19s3, int32_t inp19s4, uint64_t* inp19, int32_t inp20s1, int32_t inp20s2, int32_t inp20s3, int32_t inp20s4, uint64_t* inp20, int32_t inp21s1, int32_t inp21s2, int32_t inp21s3, int32_t inp21s4, uint64_t* inp21, int32_t inp22s1, int32_t inp22s2, int32_t inp22s3, int32_t inp22s4, uint64_t* inp22, int32_t inp23s1, int32_t inp23s2, int32_t inp23s3, int32_t inp23s4, uint64_t* inp23, int32_t inp24s1, int32_t inp24s2, int32_t inp24s3, int32_t inp24s4, uint64_t* inp24, int32_t inp25s1, int32_t inp25s2, int32_t inp25s3, int32_t inp25s4, uint64_t* inp25, int32_t axis, uint64_t* outp){
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
if ((axis ==  (int32_t)0)) {
if ((i1 < inp1s1)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i1 < (inp1s1 + inp2s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,(i1 - inp1s1),i2,i3,i4);
} else {
if ((i1 < ((inp1s1 + inp2s1) + inp3s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,((i1 - inp1s1) - inp2s1),i2,i3,i4);
} else {
if ((i1 < (((inp1s1 + inp2s1) + inp3s1) + inp4s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,(((i1 - inp1s1) - inp2s1) - inp3s1),i2,i3,i4);
} else {
if ((i1 < ((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1),i2,i3,i4);
} else {
if ((i1 < (((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,(((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1),i2,i3,i4);
} else {
if ((i1 < ((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1),i2,i3,i4);
} else {
if ((i1 < (((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,(((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1),i2,i3,i4);
} else {
if ((i1 < ((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1),i2,i3,i4);
} else {
if ((i1 < (((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,(((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,(((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,(((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,(((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1) + inp17s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp17,inp17s1,inp17s2,inp17s3,inp17s4,((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1) + inp17s1) + inp18s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp18,inp18s1,inp18s2,inp18s3,inp18s4,(((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1) - inp17s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1) + inp17s1) + inp18s1) + inp19s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp19,inp19s1,inp19s2,inp19s3,inp19s4,((((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1) - inp17s1) - inp18s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1) + inp17s1) + inp18s1) + inp19s1) + inp20s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp20,inp20s1,inp20s2,inp20s3,inp20s4,(((((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1) - inp17s1) - inp18s1) - inp19s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1) + inp17s1) + inp18s1) + inp19s1) + inp20s1) + inp21s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp21,inp21s1,inp21s2,inp21s3,inp21s4,((((((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1) - inp17s1) - inp18s1) - inp19s1) - inp20s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1) + inp17s1) + inp18s1) + inp19s1) + inp20s1) + inp21s1) + inp22s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp22,inp22s1,inp22s2,inp22s3,inp22s4,(((((((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1) - inp17s1) - inp18s1) - inp19s1) - inp20s1) - inp21s1),i2,i3,i4);
} else {
if ((i1 < ((((((((((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1) + inp17s1) + inp18s1) + inp19s1) + inp20s1) + inp21s1) + inp22s1) + inp23s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp23,inp23s1,inp23s2,inp23s3,inp23s4,((((((((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1) - inp17s1) - inp18s1) - inp19s1) - inp20s1) - inp21s1) - inp22s1),i2,i3,i4);
} else {
if ((i1 < (((((((((((((((((((((((inp1s1 + inp2s1) + inp3s1) + inp4s1) + inp5s1) + inp6s1) + inp7s1) + inp8s1) + inp9s1) + inp10s1) + inp11s1) + inp12s1) + inp13s1) + inp14s1) + inp15s1) + inp16s1) + inp17s1) + inp18s1) + inp19s1) + inp20s1) + inp21s1) + inp22s1) + inp23s1) + inp24s1))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp24,inp24s1,inp24s2,inp24s3,inp24s4,(((((((((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1) - inp17s1) - inp18s1) - inp19s1) - inp20s1) - inp21s1) - inp22s1) - inp23s1),i2,i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp25,inp25s1,inp25s2,inp25s3,inp25s4,((((((((((((((((((((((((i1 - inp1s1) - inp2s1) - inp3s1) - inp4s1) - inp5s1) - inp6s1) - inp7s1) - inp8s1) - inp9s1) - inp10s1) - inp11s1) - inp12s1) - inp13s1) - inp14s1) - inp15s1) - inp16s1) - inp17s1) - inp18s1) - inp19s1) - inp20s1) - inp21s1) - inp22s1) - inp23s1) - inp24s1),i2,i3,i4);
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)1)) {
if ((i2 < inp1s2)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i2 < (inp1s2 + inp2s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,(i2 - inp1s2),i3,i4);
} else {
if ((i2 < ((inp1s2 + inp2s2) + inp3s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,((i2 - inp1s2) - inp2s2),i3,i4);
} else {
if ((i2 < (((inp1s2 + inp2s2) + inp3s2) + inp4s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,(((i2 - inp1s2) - inp2s2) - inp3s2),i3,i4);
} else {
if ((i2 < ((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2),i3,i4);
} else {
if ((i2 < (((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,(((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2),i3,i4);
} else {
if ((i2 < ((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2),i3,i4);
} else {
if ((i2 < (((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,(((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2),i3,i4);
} else {
if ((i2 < ((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2),i3,i4);
} else {
if ((i2 < (((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,(((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2),i3,i4);
} else {
if ((i2 < ((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2),i3,i4);
} else {
if ((i2 < (((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,(((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2),i3,i4);
} else {
if ((i2 < ((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2),i3,i4);
} else {
if ((i2 < (((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,i1,(((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2),i3,i4);
} else {
if ((i2 < ((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,i1,((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2),i3,i4);
} else {
if ((i2 < (((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,i1,(((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2),i3,i4);
} else {
if ((i2 < ((((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2) + inp17s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp17,inp17s1,inp17s2,inp17s3,inp17s4,i1,((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2),i3,i4);
} else {
if ((i2 < (((((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2) + inp17s2) + inp18s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp18,inp18s1,inp18s2,inp18s3,inp18s4,i1,(((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2) - inp17s2),i3,i4);
} else {
if ((i2 < ((((((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2) + inp17s2) + inp18s2) + inp19s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp19,inp19s1,inp19s2,inp19s3,inp19s4,i1,((((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2) - inp17s2) - inp18s2),i3,i4);
} else {
if ((i2 < (((((((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2) + inp17s2) + inp18s2) + inp19s2) + inp20s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp20,inp20s1,inp20s2,inp20s3,inp20s4,i1,(((((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2) - inp17s2) - inp18s2) - inp19s2),i3,i4);
} else {
if ((i2 < ((((((((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2) + inp17s2) + inp18s2) + inp19s2) + inp20s2) + inp21s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp21,inp21s1,inp21s2,inp21s3,inp21s4,i1,((((((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2) - inp17s2) - inp18s2) - inp19s2) - inp20s2),i3,i4);
} else {
if ((i2 < (((((((((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2) + inp17s2) + inp18s2) + inp19s2) + inp20s2) + inp21s2) + inp22s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp22,inp22s1,inp22s2,inp22s3,inp22s4,i1,(((((((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2) - inp17s2) - inp18s2) - inp19s2) - inp20s2) - inp21s2),i3,i4);
} else {
if ((i2 < ((((((((((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2) + inp17s2) + inp18s2) + inp19s2) + inp20s2) + inp21s2) + inp22s2) + inp23s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp23,inp23s1,inp23s2,inp23s3,inp23s4,i1,((((((((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2) - inp17s2) - inp18s2) - inp19s2) - inp20s2) - inp21s2) - inp22s2),i3,i4);
} else {
if ((i2 < (((((((((((((((((((((((inp1s2 + inp2s2) + inp3s2) + inp4s2) + inp5s2) + inp6s2) + inp7s2) + inp8s2) + inp9s2) + inp10s2) + inp11s2) + inp12s2) + inp13s2) + inp14s2) + inp15s2) + inp16s2) + inp17s2) + inp18s2) + inp19s2) + inp20s2) + inp21s2) + inp22s2) + inp23s2) + inp24s2))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp24,inp24s1,inp24s2,inp24s3,inp24s4,i1,(((((((((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2) - inp17s2) - inp18s2) - inp19s2) - inp20s2) - inp21s2) - inp22s2) - inp23s2),i3,i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp25,inp25s1,inp25s2,inp25s3,inp25s4,i1,((((((((((((((((((((((((i2 - inp1s2) - inp2s2) - inp3s2) - inp4s2) - inp5s2) - inp6s2) - inp7s2) - inp8s2) - inp9s2) - inp10s2) - inp11s2) - inp12s2) - inp13s2) - inp14s2) - inp15s2) - inp16s2) - inp17s2) - inp18s2) - inp19s2) - inp20s2) - inp21s2) - inp22s2) - inp23s2) - inp24s2),i3,i4);
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((axis ==  (int32_t)2)) {
if ((i3 < inp1s3)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i3 < (inp1s3 + inp2s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,(i3 - inp1s3),i4);
} else {
if ((i3 < ((inp1s3 + inp2s3) + inp3s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,((i3 - inp1s3) - inp2s3),i4);
} else {
if ((i3 < (((inp1s3 + inp2s3) + inp3s3) + inp4s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,(((i3 - inp1s3) - inp2s3) - inp3s3),i4);
} else {
if ((i3 < ((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3),i4);
} else {
if ((i3 < (((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,(((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3),i4);
} else {
if ((i3 < ((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3),i4);
} else {
if ((i3 < (((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,i2,(((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3),i4);
} else {
if ((i3 < ((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,i2,((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3),i4);
} else {
if ((i3 < (((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,i2,(((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3),i4);
} else {
if ((i3 < ((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,i2,((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3),i4);
} else {
if ((i3 < (((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,i2,(((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3),i4);
} else {
if ((i3 < ((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,i2,((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3),i4);
} else {
if ((i3 < (((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,i1,i2,(((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3),i4);
} else {
if ((i3 < ((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,i1,i2,((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3),i4);
} else {
if ((i3 < (((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,i1,i2,(((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3),i4);
} else {
if ((i3 < ((((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3) + inp17s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp17,inp17s1,inp17s2,inp17s3,inp17s4,i1,i2,((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3),i4);
} else {
if ((i3 < (((((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3) + inp17s3) + inp18s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp18,inp18s1,inp18s2,inp18s3,inp18s4,i1,i2,(((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3) - inp17s3),i4);
} else {
if ((i3 < ((((((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3) + inp17s3) + inp18s3) + inp19s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp19,inp19s1,inp19s2,inp19s3,inp19s4,i1,i2,((((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3) - inp17s3) - inp18s3),i4);
} else {
if ((i3 < (((((((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3) + inp17s3) + inp18s3) + inp19s3) + inp20s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp20,inp20s1,inp20s2,inp20s3,inp20s4,i1,i2,(((((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3) - inp17s3) - inp18s3) - inp19s3),i4);
} else {
if ((i3 < ((((((((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3) + inp17s3) + inp18s3) + inp19s3) + inp20s3) + inp21s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp21,inp21s1,inp21s2,inp21s3,inp21s4,i1,i2,((((((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3) - inp17s3) - inp18s3) - inp19s3) - inp20s3),i4);
} else {
if ((i3 < (((((((((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3) + inp17s3) + inp18s3) + inp19s3) + inp20s3) + inp21s3) + inp22s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp22,inp22s1,inp22s2,inp22s3,inp22s4,i1,i2,(((((((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3) - inp17s3) - inp18s3) - inp19s3) - inp20s3) - inp21s3),i4);
} else {
if ((i3 < ((((((((((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3) + inp17s3) + inp18s3) + inp19s3) + inp20s3) + inp21s3) + inp22s3) + inp23s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp23,inp23s1,inp23s2,inp23s3,inp23s4,i1,i2,((((((((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3) - inp17s3) - inp18s3) - inp19s3) - inp20s3) - inp21s3) - inp22s3),i4);
} else {
if ((i3 < (((((((((((((((((((((((inp1s3 + inp2s3) + inp3s3) + inp4s3) + inp5s3) + inp6s3) + inp7s3) + inp8s3) + inp9s3) + inp10s3) + inp11s3) + inp12s3) + inp13s3) + inp14s3) + inp15s3) + inp16s3) + inp17s3) + inp18s3) + inp19s3) + inp20s3) + inp21s3) + inp22s3) + inp23s3) + inp24s3))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp24,inp24s1,inp24s2,inp24s3,inp24s4,i1,i2,(((((((((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3) - inp17s3) - inp18s3) - inp19s3) - inp20s3) - inp21s3) - inp22s3) - inp23s3),i4);
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp25,inp25s1,inp25s2,inp25s3,inp25s4,i1,i2,((((((((((((((((((((((((i3 - inp1s3) - inp2s3) - inp3s3) - inp4s3) - inp5s3) - inp6s3) - inp7s3) - inp8s3) - inp9s3) - inp10s3) - inp11s3) - inp12s3) - inp13s3) - inp14s3) - inp15s3) - inp16s3) - inp17s3) - inp18s3) - inp19s3) - inp20s3) - inp21s3) - inp22s3) - inp23s3) - inp24s3),i4);
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
} else {
if ((i4 < inp1s4)) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp1,inp1s1,inp1s2,inp1s3,inp1s4,i1,i2,i3,i4);
} else {
if ((i4 < (inp1s4 + inp2s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp2,inp2s1,inp2s2,inp2s3,inp2s4,i1,i2,i3,(i4 - inp1s4));
} else {
if ((i4 < ((inp1s4 + inp2s4) + inp3s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp3,inp3s1,inp3s2,inp3s3,inp3s4,i1,i2,i3,((i4 - inp1s4) - inp2s4));
} else {
if ((i4 < (((inp1s4 + inp2s4) + inp3s4) + inp4s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp4,inp4s1,inp4s2,inp4s3,inp4s4,i1,i2,i3,(((i4 - inp1s4) - inp2s4) - inp3s4));
} else {
if ((i4 < ((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp5,inp5s1,inp5s2,inp5s3,inp5s4,i1,i2,i3,((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4));
} else {
if ((i4 < (((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp6,inp6s1,inp6s2,inp6s3,inp6s4,i1,i2,i3,(((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4));
} else {
if ((i4 < ((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp7,inp7s1,inp7s2,inp7s3,inp7s4,i1,i2,i3,((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4));
} else {
if ((i4 < (((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp8,inp8s1,inp8s2,inp8s3,inp8s4,i1,i2,i3,(((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4));
} else {
if ((i4 < ((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp9,inp9s1,inp9s2,inp9s3,inp9s4,i1,i2,i3,((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4));
} else {
if ((i4 < (((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp10,inp10s1,inp10s2,inp10s3,inp10s4,i1,i2,i3,(((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4));
} else {
if ((i4 < ((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp11,inp11s1,inp11s2,inp11s3,inp11s4,i1,i2,i3,((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4));
} else {
if ((i4 < (((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp12,inp12s1,inp12s2,inp12s3,inp12s4,i1,i2,i3,(((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4));
} else {
if ((i4 < ((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp13,inp13s1,inp13s2,inp13s3,inp13s4,i1,i2,i3,((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4));
} else {
if ((i4 < (((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp14,inp14s1,inp14s2,inp14s3,inp14s4,i1,i2,i3,(((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4));
} else {
if ((i4 < ((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp15,inp15s1,inp15s2,inp15s3,inp15s4,i1,i2,i3,((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4));
} else {
if ((i4 < (((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp16,inp16s1,inp16s2,inp16s3,inp16s4,i1,i2,i3,(((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4));
} else {
if ((i4 < ((((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4) + inp17s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp17,inp17s1,inp17s2,inp17s3,inp17s4,i1,i2,i3,((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4));
} else {
if ((i4 < (((((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4) + inp17s4) + inp18s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp18,inp18s1,inp18s2,inp18s3,inp18s4,i1,i2,i3,(((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4) - inp17s4));
} else {
if ((i4 < ((((((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4) + inp17s4) + inp18s4) + inp19s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp19,inp19s1,inp19s2,inp19s3,inp19s4,i1,i2,i3,((((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4) - inp17s4) - inp18s4));
} else {
if ((i4 < (((((((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4) + inp17s4) + inp18s4) + inp19s4) + inp20s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp20,inp20s1,inp20s2,inp20s3,inp20s4,i1,i2,i3,(((((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4) - inp17s4) - inp18s4) - inp19s4));
} else {
if ((i4 < ((((((((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4) + inp17s4) + inp18s4) + inp19s4) + inp20s4) + inp21s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp21,inp21s1,inp21s2,inp21s3,inp21s4,i1,i2,i3,((((((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4) - inp17s4) - inp18s4) - inp19s4) - inp20s4));
} else {
if ((i4 < (((((((((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4) + inp17s4) + inp18s4) + inp19s4) + inp20s4) + inp21s4) + inp22s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp22,inp22s1,inp22s2,inp22s3,inp22s4,i1,i2,i3,(((((((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4) - inp17s4) - inp18s4) - inp19s4) - inp20s4) - inp21s4));
} else {
if ((i4 < ((((((((((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4) + inp17s4) + inp18s4) + inp19s4) + inp20s4) + inp21s4) + inp22s4) + inp23s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp23,inp23s1,inp23s2,inp23s3,inp23s4,i1,i2,i3,((((((((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4) - inp17s4) - inp18s4) - inp19s4) - inp20s4) - inp21s4) - inp22s4));
} else {
if ((i4 < (((((((((((((((((((((((inp1s4 + inp2s4) + inp3s4) + inp4s4) + inp5s4) + inp6s4) + inp7s4) + inp8s4) + inp9s4) + inp10s4) + inp11s4) + inp12s4) + inp13s4) + inp14s4) + inp15s4) + inp16s4) + inp17s4) + inp18s4) + inp19s4) + inp20s4) + inp21s4) + inp22s4) + inp23s4) + inp24s4))) {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp24,inp24s1,inp24s2,inp24s3,inp24s4,i1,i2,i3,(((((((((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4) - inp17s4) - inp18s4) - inp19s4) - inp20s4) - inp21s4) - inp22s4) - inp23s4));
} else {
Arr4DIdxRowM(outp,s1,s2,s3,s4,i1,i2,i3,i4) = Arr4DIdxRowM(inp25,inp25s1,inp25s2,inp25s3,inp25s4,i1,i2,i3,((((((((((((((((((((((((i4 - inp1s4) - inp2s4) - inp3s4) - inp4s4) - inp5s4) - inp6s4) - inp7s4) - inp8s4) - inp9s4) - inp10s4) - inp11s4) - inp12s4) - inp13s4) - inp14s4) - inp15s4) - inp16s4) - inp17s4) - inp18s4) - inp19s4) - inp20s4) - inp21s4) - inp22s4) - inp23s4) - inp24s4));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}

void Split44(int32_t O1, int32_t O2, int32_t O3, int32_t O4, int32_t I1, int32_t I2, int32_t I3, int32_t I4, uint64_t* inp, int32_t axis, int32_t curCount, int32_t total, uint64_t* out){
for (uint32_t o1 =  (int32_t)0; o1 < O1; o1++){
for (uint32_t o2 =  (int32_t)0; o2 < O2; o2++){
for (uint32_t o3 =  (int32_t)0; o3 < O3; o3++){
for (uint32_t o4 =  (int32_t)0; o4 < O4; o4++){

int32_t i1 = o1;

int32_t i2 = o2;

int32_t i3 = o3;

int32_t i4 = o4;
if ((axis ==  (int32_t)0)) {
i1 = (((I1 / total) * curCount) + o1);
}
if ((axis ==  (int32_t)1)) {
i2 = (((I2 / total) * curCount) + o2);
}
if ((axis ==  (int32_t)2)) {
i3 = (((I3 / total) * curCount) + o3);
}
if ((axis ==  (int32_t)3)) {
i4 = (((I4 / total) * curCount) + o4);
}
Arr4DIdxRowM(out,O1,O2,O3,O4,o1,o2,o3,o4) = Arr4DIdxRowM(inp,I1,I2,I3,I4,i1,i2,i3,i4);
}
}
}
}
}

void Conv2DReshapeFilter(int32_t FH, int32_t FW, int32_t CI, int32_t CO, uint64_t* inputArr, uint64_t* outputArr){
for (uint32_t co =  (int32_t)0; co < CO; co++){
for (uint32_t fh =  (int32_t)0; fh < FH; fh++){
for (uint32_t fw =  (int32_t)0; fw < FW; fw++){
for (uint32_t ci =  (int32_t)0; ci < CI; ci++){

int32_t linIdx = ((((fh * FW) * CI) + (fw * CI)) + ci);
Arr2DIdxRowM(outputArr,CO,((FH * FW) * CI),co,linIdx) = Arr4DIdxRowM(inputArr,FH,FW,CI,CO,fh,fw,ci,co);
}
}
}
}
}

void Conv2DReshapeMatMulOP(int32_t N, int32_t finalH, int32_t finalW, int32_t CO, uint64_t* inputArr, uint64_t* outputArr){
for (uint32_t co =  (int32_t)0; co < CO; co++){
for (uint32_t n =  (int32_t)0; n < N; n++){
for (uint32_t h =  (int32_t)0; h < finalH; h++){
for (uint32_t w =  (int32_t)0; w < finalW; w++){
Arr4DIdxRowM(outputArr,N,finalH,finalW,CO,n,h,w,co) = Arr2DIdxRowM(inputArr,CO,((N * finalH) * finalW),co,((((n * finalH) * finalW) + (h * finalW)) + w));
}
}
}
}
}

void Conv2DReshapeInput(int32_t N, int32_t H, int32_t W, int32_t CI, int32_t FH, int32_t FW, int32_t zPadHLeft, int32_t zPadHRight, int32_t zPadWLeft, int32_t zPadWRight, int32_t strideH, int32_t strideW, int32_t RRows, int32_t RCols, uint64_t* inputArr, uint64_t* outputArr){

int32_t linIdxFilterMult =  (int32_t)0;
for (uint32_t n =  (int32_t)0; n < N; n++){

int32_t leftTopCornerH = ( (int32_t)0 - zPadHLeft);

int32_t extremeRightBottomCornerH = ((H -  (int32_t)1) + zPadHRight);
while ((((leftTopCornerH + FH) -  (int32_t)1) <= extremeRightBottomCornerH)) {

int32_t leftTopCornerW = ( (int32_t)0 - zPadWLeft);

int32_t extremeRightBottomCornerW = ((W -  (int32_t)1) + zPadWRight);
while ((((leftTopCornerW + FW) -  (int32_t)1) <= extremeRightBottomCornerW)) {
for (uint32_t fh =  (int32_t)0; fh < FH; fh++){
for (uint32_t fw =  (int32_t)0; fw < FW; fw++){

int32_t curPosH = (leftTopCornerH + fh);

int32_t curPosW = (leftTopCornerW + fw);

uint64_t val = funcSSCons( (int64_t)0);
for (uint32_t ci =  (int32_t)0; ci < CI; ci++){
if ((((curPosH <  (int32_t)0) || (curPosH >= H)) || ((curPosW <  (int32_t)0) || (curPosW >= W)))) {
val = funcSSCons( (int64_t)0);
} else {
val = Arr4DIdxRowM(inputArr,N,H,W,CI,n,curPosH,curPosW,ci);
}
Arr2DIdxRowM(outputArr,RRows,RCols,((((fh * FW) * CI) + (fw * CI)) + ci),linIdxFilterMult) = val;
}
}
}
linIdxFilterMult = (linIdxFilterMult +  (int32_t)1);
leftTopCornerW = (leftTopCornerW + strideW);
}

leftTopCornerH = (leftTopCornerH + strideH);
}

}
}

void Conv2D(int32_t N, int32_t H, int32_t W, int32_t CI, int32_t FH, int32_t FW, int32_t CO, int32_t zPadHLeft, int32_t zPadHRight, int32_t zPadWLeft, int32_t zPadWRight, int32_t strideH, int32_t strideW, uint64_t* inputArr, uint64_t* filterArr, uint64_t* outArr){

int32_t reshapedFilterRows = CO;

int32_t reshapedFilterCols = ((FH * FW) * CI);

int32_t reshapedIPRows = ((FH * FW) * CI);

int32_t newH = ((((H + (zPadHLeft + zPadHRight)) - FH) / strideH) +  (int32_t)1);

int32_t newW = ((((W + (zPadWLeft + zPadWRight)) - FW) / strideW) +  (int32_t)1);

int32_t reshapedIPCols = ((N * newH) * newW);

uint64_t* filterReshaped = make_array<uint64_t>(reshapedFilterRows, reshapedFilterCols);

uint64_t* inputReshaped = make_array<uint64_t>(reshapedIPRows, reshapedIPCols);

uint64_t* matmulOP = make_array<uint64_t>(reshapedFilterRows, reshapedIPCols);
Conv2DReshapeFilter(FH, FW, CI, CO, filterArr, filterReshaped);
Conv2DReshapeInput(N, H, W, CI, FH, FW, zPadHLeft, zPadHRight, zPadWLeft, zPadWRight, strideH, strideW, reshapedIPRows, reshapedIPCols, inputArr, inputReshaped);
MatMul2D(reshapedFilterRows, reshapedFilterCols, reshapedIPCols, filterReshaped, inputReshaped, matmulOP, 1);
Conv2DReshapeMatMulOP(N, newH, newW, CO, matmulOP, outArr);
ClearMemSecret2(reshapedFilterRows, reshapedFilterCols, filterReshaped);
ClearMemSecret2(reshapedIPRows, reshapedIPCols, inputReshaped);
ClearMemSecret2(reshapedFilterRows, reshapedIPCols, matmulOP);
}

void Conv2DLoopInner(int32_t N, int32_t H, int32_t W, int32_t CI, int32_t FH, int32_t FW, int32_t CO, int32_t zPadHLeft, int32_t zPadHRight, int32_t zPadWLeft, int32_t zPadWRight, int32_t strideH, int32_t strideW, int32_t outH, int32_t outW, int32_t G, uint64_t* inputArr, uint64_t* filterArr, uint64_t* outArr){

int32_t GIS = (CI / G);

int32_t GOS = (CO / G);
for (uint32_t n =  (int32_t)0; n < N; n++){
for (uint32_t cog =  (int32_t)0; cog < GOS; cog++){
for (uint32_t cig =  (int32_t)0; cig < GIS; cig++){
for (uint32_t g =  (int32_t)0; g < G; g++){
for (uint32_t h =  (int32_t)0; h < outH; h++){
for (uint32_t w =  (int32_t)0; w < outW; w++){

uint64_t val = funcSSCons( (int64_t)0);

int32_t ci = ((GIS * g) + cig);

int32_t co = ((GOS * g) + cog);

int32_t curPosH = ((strideH * h) - zPadHLeft);
for (uint32_t fh =  (int32_t)0; fh < FH; fh++){

int32_t curPosW = ((strideW * w) - zPadWLeft);
for (uint32_t fw =  (int32_t)0; fw < FW; fw++){
if (((((curPosH >=  (int32_t)0) && (curPosW >=  (int32_t)0)) && (curPosH < H)) && (curPosW < W))) {
val = SecretAdd(val, SecretMult(Arr4DIdxRowM(inputArr,N,H,W,CI,n,curPosH,curPosW,ci), Arr4DIdxRowM(filterArr,FH,FW,(CI / G),CO,fh,fw,(ci / G),co)));
}
curPosW = (curPosW +  (int32_t)1);
}
curPosH = (curPosH +  (int32_t)1);
}
Arr4DIdxRowM(outArr,N,outH,outW,CO,n,h,w,co) = SecretAdd(Arr4DIdxRowM(outArr,N,outH,outW,CO,n,h,w,co), val);
}
}
}
}
}
}
}

void Conv2DLoop(int32_t N, int32_t H, int32_t W, int32_t CI, int32_t FH, int32_t FW, int32_t CO, int32_t zPadHLeft, int32_t zPadHRight, int32_t zPadWLeft, int32_t zPadWRight, int32_t strideH, int32_t strideW, int32_t G, uint64_t* inputArr, uint64_t* filterArr, uint64_t* outArr){

int32_t outH = ((((H - FH) + (zPadHLeft + zPadHRight)) / strideH) +  (int32_t)1);

int32_t outW = ((((W - FW) + (zPadWLeft + zPadWRight)) / strideW) +  (int32_t)1);
Conv2DLoopInner(N, H, W, CI, FH, FW, CO, zPadHLeft, zPadHRight, zPadWLeft, zPadWRight, strideH, strideW, outH, outW, G, inputArr, filterArr, outArr);
}

void Conv2DReshapeFilterGroup(int32_t FH, int32_t FW, int32_t CI, int32_t CO, int32_t g, int32_t G, uint64_t* inputArr, uint64_t* outputArr){

int32_t CIG = (CI / G);

int32_t COG = (CO / G);

int32_t startCO = (g * COG);
for (uint32_t co =  (int32_t)0; co < COG; co++){
for (uint32_t fh =  (int32_t)0; fh < FH; fh++){
for (uint32_t fw =  (int32_t)0; fw < FW; fw++){
for (uint32_t ci =  (int32_t)0; ci < CIG; ci++){

int32_t linIdx = ((((fh * FW) * CIG) + (fw * CIG)) + ci);
Arr2DIdxRowM(outputArr,(CO / G),((FH * FW) * (CI / G)),co,linIdx) = Arr4DIdxRowM(inputArr,FH,FW,(CI / G),CO,fh,fw,ci,(co + startCO));
}
}
}
}
}

void Conv2DReshapeMatMulOPGroup(int32_t N, int32_t finalH, int32_t finalW, int32_t CO, int32_t g, int32_t G, uint64_t* inputArr, uint64_t* outputArr){

int32_t COG = (CO / G);

int32_t startCO = (g * COG);
for (uint32_t co =  (int32_t)0; co < COG; co++){
for (uint32_t n =  (int32_t)0; n < N; n++){
for (uint32_t h =  (int32_t)0; h < finalH; h++){
for (uint32_t w =  (int32_t)0; w < finalW; w++){
Arr4DIdxRowM(outputArr,N,finalH,finalW,CO,n,h,w,(co + startCO)) = Arr2DIdxRowM(inputArr,(CO / G),((N * finalH) * finalW),co,((((n * finalH) * finalW) + (h * finalW)) + w));
}
}
}
}
}

void Conv2DReshapeInputGroup(int32_t N, int32_t H, int32_t W, int32_t CI, int32_t FH, int32_t FW, int32_t zPadHLeft, int32_t zPadHRight, int32_t zPadWLeft, int32_t zPadWRight, int32_t strideH, int32_t strideW, int32_t g, int32_t G, int32_t RRows, int32_t RCols, uint64_t* inputArr, uint64_t* outputArr){

int32_t linIdxFilterMult =  (int32_t)0;

int32_t CIG = (CI / G);
for (uint32_t n =  (int32_t)0; n < N; n++){

int32_t leftTopCornerH = ( (int32_t)0 - zPadHLeft);

int32_t extremeRightBottomCornerH = ((H -  (int32_t)1) + zPadHRight);
while ((((leftTopCornerH + FH) -  (int32_t)1) <= extremeRightBottomCornerH)) {

int32_t leftTopCornerW = ( (int32_t)0 - zPadWLeft);

int32_t extremeRightBottomCornerW = ((W -  (int32_t)1) + zPadWRight);
while ((((leftTopCornerW + FW) -  (int32_t)1) <= extremeRightBottomCornerW)) {
for (uint32_t fh =  (int32_t)0; fh < FH; fh++){
for (uint32_t fw =  (int32_t)0; fw < FW; fw++){

int32_t curPosH = (leftTopCornerH + fh);

int32_t curPosW = (leftTopCornerW + fw);

uint64_t val = funcSSCons( (int64_t)0);

int32_t startCI = (g * CIG);
for (uint32_t ci =  (int32_t)0; ci < CIG; ci++){
if ((((curPosH <  (int32_t)0) || (curPosH >= H)) || ((curPosW <  (int32_t)0) || (curPosW >= W)))) {
val = funcSSCons( (int64_t)0);
} else {
val = Arr4DIdxRowM(inputArr,N,H,W,CI,n,curPosH,curPosW,(ci + startCI));
}
Arr2DIdxRowM(outputArr,RRows,RCols,((((fh * FW) * CIG) + (fw * CIG)) + ci),linIdxFilterMult) = val;
}
}
}
linIdxFilterMult = (linIdxFilterMult +  (int32_t)1);
leftTopCornerW = (leftTopCornerW + strideW);
}

leftTopCornerH = (leftTopCornerH + strideH);
}

}
}

void Conv2DGroup(int32_t N, int32_t H, int32_t W, int32_t CI, int32_t FH, int32_t FW, int32_t CO, int32_t zPadHLeft, int32_t zPadHRight, int32_t zPadWLeft, int32_t zPadWRight, int32_t strideH, int32_t strideW, int32_t G, uint64_t* inputArr, uint64_t* filterArr, uint64_t* outArr){

int32_t CIG = (CI / G);

int32_t reshapedFilterRows = (CO / G);

int32_t reshapedFilterCols = ((FH * FW) * CIG);

int32_t reshapedIPRows = ((FH * FW) * CIG);

int32_t outH = ((((H + (zPadHLeft + zPadHRight)) - FH) / strideH) +  (int32_t)1);

int32_t outW = ((((W + (zPadWLeft + zPadWRight)) - FW) / strideW) +  (int32_t)1);

int32_t reshapedIPCols = ((N * outH) * outW);
for (uint32_t g =  (int32_t)0; g < G; g++){

uint64_t* inputReshaped = make_array<uint64_t>(reshapedIPRows, reshapedIPCols);

uint64_t* matmulOP = make_array<uint64_t>(reshapedFilterRows, reshapedIPCols);

uint64_t* filterReshaped = make_array<uint64_t>(reshapedFilterRows, reshapedFilterCols);
Conv2DReshapeFilterGroup(FH, FW, CI, CO, g, G, filterArr, filterReshaped);
Conv2DReshapeInputGroup(N, H, W, CI, FH, FW, zPadHLeft, zPadHRight, zPadWLeft, zPadWRight, strideH, strideW, g, G, reshapedIPRows, reshapedIPCols, inputArr, inputReshaped);
MatMul2D(reshapedFilterRows, reshapedFilterCols, reshapedIPCols, filterReshaped, inputReshaped, matmulOP, 1);
Conv2DReshapeMatMulOPGroup(N, outH, outW, CO, g, G, matmulOP, outArr);
ClearMemSecret2(reshapedFilterRows, reshapedFilterCols, filterReshaped);
ClearMemSecret2(reshapedIPRows, reshapedIPCols, inputReshaped);
ClearMemSecret2(reshapedFilterRows, reshapedIPCols, matmulOP);
}
}

void Conv3DReshapeFilter(int32_t FD, int32_t FH, int32_t FW, int32_t CI, int32_t CO, uint64_t* inputArr, uint64_t* outputArr){
for (uint32_t co =  (int32_t)0; co < CO; co++){
for (uint32_t fd =  (int32_t)0; fd < FD; fd++){
for (uint32_t fh =  (int32_t)0; fh < FH; fh++){
for (uint32_t fw =  (int32_t)0; fw < FW; fw++){
for (uint32_t ci =  (int32_t)0; ci < CI; ci++){

int32_t linIdx = ((((((fd * FH) * FW) * CI) + ((fh * FW) * CI)) + (fw * CI)) + ci);
Arr2DIdxRowM(outputArr,CO,(((FD * FH) * FW) * CI),co,linIdx) = Arr5DIdxRowM(inputArr,FD,FH,FW,CI,CO,fd,fh,fw,ci,co);
}
}
}
}
}
}

void Conv3DReshapeMatMulOP(int32_t N, int32_t finalD, int32_t finalH, int32_t finalW, int32_t CO, uint64_t* inputArr, uint64_t* outputArr){
for (uint32_t co =  (int32_t)0; co < CO; co++){
for (uint32_t n =  (int32_t)0; n < N; n++){
for (uint32_t d =  (int32_t)0; d < finalD; d++){
for (uint32_t h =  (int32_t)0; h < finalH; h++){
for (uint32_t w =  (int32_t)0; w < finalW; w++){
Arr5DIdxRowM(outputArr,N,finalD,finalH,finalW,CO,n,d,h,w,co) = Arr2DIdxRowM(inputArr,CO,(((N * finalD) * finalH) * finalW),co,((((((n * finalD) * finalH) * finalW) + ((d * finalH) * finalW)) + (h * finalW)) + w));
}
}
}
}
}
}

void Conv3DReshapeInput(int32_t N, int32_t D, int32_t H, int32_t W, int32_t CI, int32_t FD, int32_t FH, int32_t FW, int32_t zPadDLeft, int32_t zPadDRight, int32_t zPadHLeft, int32_t zPadHRight, int32_t zPadWLeft, int32_t zPadWRight, int32_t strideD, int32_t strideH, int32_t strideW, int32_t RRows, int32_t RCols, uint64_t* inputArr, uint64_t* outputArr){

int32_t linIdxFilterMult =  (int32_t)0;
for (uint32_t n =  (int32_t)0; n < N; n++){

int32_t leftTopCornerD = ( (int32_t)0 - zPadDLeft);

int32_t extremeRightBottomCornerD = ((D -  (int32_t)1) + zPadDRight);
while ((((leftTopCornerD + FD) -  (int32_t)1) <= extremeRightBottomCornerD)) {

int32_t leftTopCornerH = ( (int32_t)0 - zPadHLeft);

int32_t extremeRightBottomCornerH = ((H -  (int32_t)1) + zPadHRight);
while ((((leftTopCornerH + FH) -  (int32_t)1) <= extremeRightBottomCornerH)) {

int32_t leftTopCornerW = ( (int32_t)0 - zPadWLeft);

int32_t extremeRightBottomCornerW = ((W -  (int32_t)1) + zPadWRight);
while ((((leftTopCornerW + FW) -  (int32_t)1) <= extremeRightBottomCornerW)) {
for (uint32_t fd =  (int32_t)0; fd < FD; fd++){
for (uint32_t fh =  (int32_t)0; fh < FH; fh++){
for (uint32_t fw =  (int32_t)0; fw < FW; fw++){

int32_t curPosD = (leftTopCornerD + fd);

int32_t curPosH = (leftTopCornerH + fh);

int32_t curPosW = (leftTopCornerW + fw);

uint64_t val = funcSSCons( (int64_t)0);
for (uint32_t ci =  (int32_t)0; ci < CI; ci++){
if (((((curPosD <  (int32_t)0) || (curPosD >= D)) || ((curPosH <  (int32_t)0) || (curPosH >= H))) || ((curPosW <  (int32_t)0) || (curPosW >= W)))) {
val = funcSSCons( (int64_t)0);
} else {
val = Arr5DIdxRowM(inputArr,N,D,H,W,CI,n,curPosD,curPosH,curPosW,ci);
}
Arr2DIdxRowM(outputArr,RRows,RCols,((((((fd * FH) * FW) * CI) + ((fh * FW) * CI)) + (fw * CI)) + ci),linIdxFilterMult) = val;
}
}
}
}
linIdxFilterMult = (linIdxFilterMult +  (int32_t)1);
leftTopCornerW = (leftTopCornerW + strideW);
}

leftTopCornerH = (leftTopCornerH + strideH);
}

leftTopCornerD = (leftTopCornerD + strideD);
}

}
}

void Conv3D(int32_t N, int32_t D, int32_t H, int32_t W, int32_t CI, int32_t FD, int32_t FH, int32_t FW, int32_t CO, int32_t zPadDLeft, int32_t zPadDRight, int32_t zPadHLeft, int32_t zPadHRight, int32_t zPadWLeft, int32_t zPadWRight, int32_t strideD, int32_t strideH, int32_t strideW, uint64_t* inputArr, uint64_t* filterArr, uint64_t* outArr){

int32_t reshapedFilterRows = CO;

int32_t reshapedFilterCols = (((FD * FH) * FW) * CI);

int32_t reshapedIPRows = (((FD * FH) * FW) * CI);

int32_t newD = ((((D + (zPadDLeft + zPadDRight)) - FD) / strideD) +  (int32_t)1);

int32_t newH = ((((H + (zPadHLeft + zPadHRight)) - FH) / strideH) +  (int32_t)1);

int32_t newW = ((((W + (zPadWLeft + zPadWRight)) - FW) / strideW) +  (int32_t)1);

int32_t reshapedIPCols = (((N * newD) * newH) * newW);

uint64_t* filterReshaped = make_array<uint64_t>(reshapedFilterRows, reshapedFilterCols);

uint64_t* inputReshaped = make_array<uint64_t>(reshapedIPRows, reshapedIPCols);

uint64_t* matmulOP = make_array<uint64_t>(reshapedFilterRows, reshapedIPCols);
Conv3DReshapeFilter(FD, FH, FW, CI, CO, filterArr, filterReshaped);
Conv3DReshapeInput(N, D, H, W, CI, FD, FH, FW, zPadDLeft, zPadDRight, zPadHLeft, zPadHRight, zPadWLeft, zPadWRight, strideD, strideH, strideW, reshapedIPRows, reshapedIPCols, inputArr, inputReshaped);
MatMul2D(reshapedFilterRows, reshapedFilterCols, reshapedIPCols, filterReshaped, inputReshaped, matmulOP, 1);
Conv3DReshapeMatMulOP(N, newD, newH, newW, CO, matmulOP, outArr);
ClearMemSecret2(reshapedFilterRows, reshapedFilterCols, filterReshaped);
ClearMemSecret2(reshapedIPRows, reshapedIPCols, inputReshaped);
ClearMemSecret2(reshapedFilterRows, reshapedIPCols, matmulOP);
}

void Conv3DLoopInner(int32_t N, int32_t D, int32_t H, int32_t W, int32_t CI, int32_t FD, int32_t FH, int32_t FW, int32_t CO, int32_t zPadDLeft, int32_t zPadDRight, int32_t zPadHLeft, int32_t zPadHRight, int32_t zPadWLeft, int32_t zPadWRight, int32_t strideD, int32_t strideH, int32_t strideW, int32_t outD, int32_t outH, int32_t outW, uint64_t* inputArr, uint64_t* filterArr, uint64_t* outArr){
for (uint32_t n =  (int32_t)0; n < N; n++){
for (uint32_t co =  (int32_t)0; co < CO; co++){
for (uint32_t d =  (int32_t)0; d < outD; d++){
for (uint32_t h =  (int32_t)0; h < outH; h++){
for (uint32_t w =  (int32_t)0; w < outW; w++){
for (uint32_t ci =  (int32_t)0; ci < CI; ci++){

uint64_t val = funcSSCons( (int64_t)0);
for (uint32_t fd = (d * strideD); fd < ((d * strideD) + FD); fd++){
for (uint32_t fh = (h * strideH); fh < ((h * strideH) + FH); fh++){
for (uint32_t fw = (w * strideW); fw < ((w * strideW) + FW); fw++){

int32_t curPosD = (fd - zPadDLeft);

int32_t curPosH = (fh - zPadHLeft);

int32_t curPosW = (fw - zPadWLeft);
if (((((((curPosD >=  (int32_t)0) && (curPosH >=  (int32_t)0)) && (curPosW >=  (int32_t)0)) && (curPosD < D)) && (curPosH < H)) && (curPosW < W))) {

int32_t curFilterPosD = (fd - (d * strideD));

int32_t curFilterPosH = (fh - (h * strideH));

int32_t curFilterPosW = (fw - (w * strideW));
val = SecretAdd(val, SecretMult(Arr5DIdxRowM(inputArr,N,D,H,W,CI,n,curPosD,curPosH,curPosW,ci), Arr5DIdxRowM(filterArr,FD,FH,FW,CI,CO,curFilterPosD,curFilterPosH,curFilterPosW,ci,co)));
}
}
}
}
Arr5DIdxRowM(outArr,N,outD,outH,outW,CO,n,d,h,w,co) = SecretAdd(Arr5DIdxRowM(outArr,N,outD,outH,outW,CO,n,d,h,w,co), val);
}
}
}
}
}
}
}

void Conv3DLoop(int32_t N, int32_t D, int32_t H, int32_t W, int32_t CI, int32_t FD, int32_t FH, int32_t FW, int32_t CO, int32_t zPadDLeft, int32_t zPadDRight, int32_t zPadHLeft, int32_t zPadHRight, int32_t zPadWLeft, int32_t zPadWRight, int32_t strideD, int32_t strideH, int32_t strideW, uint64_t* inputArr, uint64_t* filterArr, uint64_t* outArr){

int32_t outD = ((((D - FD) + (zPadDLeft + zPadDRight)) / strideD) +  (int32_t)1);

int32_t outH = ((((H - FH) + (zPadHLeft + zPadHRight)) / strideH) +  (int32_t)1);

int32_t outW = ((((W - FW) + (zPadWLeft + zPadWRight)) / strideW) +  (int32_t)1);
Conv3DLoopInner(N, D, H, W, CI, FD, FH, FW, CO, zPadDLeft, zPadDRight, zPadHLeft, zPadHRight, zPadWLeft, zPadWRight, strideD, strideH, strideW, outD, outH, outW, inputArr, filterArr, outArr);
}

void ConvTranspose2DReshapeMatMulOP(int32_t N, int32_t finalH, int32_t finalW, int32_t CO, uint64_t* inputArr, uint64_t* outputArr){
for (uint32_t co =  (int32_t)0; co < CO; co++){
for (uint32_t n =  (int32_t)0; n < N; n++){
for (uint32_t h =  (int32_t)0; h < finalH; h++){
for (uint32_t w =  (int32_t)0; w < finalW; w++){
Arr4DIdxRowM(outputArr,N,finalH,finalW,CO,n,h,w,co) = Arr2DIdxRowM(inputArr,CO,((N * finalH) * finalW),co,((((n * finalH) * finalW) + (h * finalW)) + w));
}
}
}
}
}

void ConvTranspose2DReshapeFilter(int32_t FH, int32_t FW, int32_t CO, int32_t CI, uint64_t* inputArr, uint64_t* outputArr){
for (uint32_t co =  (int32_t)0; co < CO; co++){
for (uint32_t fh =  (int32_t)0; fh < FH; fh++){
for (uint32_t fw =  (int32_t)0; fw < FW; fw++){
for (uint32_t ci =  (int32_t)0; ci < CI; ci++){

int32_t linIdx = ((((fh * FW) * CI) + (fw * CI)) + ci);
Arr2DIdxRowM(outputArr,CO,((FH * FW) * CI),co,linIdx) = Arr4DIdxRowM(inputArr,FH,FW,CO,CI,((FH -  (int32_t)1) - fh),((FW -  (int32_t)1) - fw),co,ci);
}
}
}
}
}

void ConvTranspose2DReshapeInput(int32_t N, int32_t HPrime, int32_t WPrime, int32_t CI, int32_t FH, int32_t FW, int32_t zPadTrHLeft, int32_t zPadTrHRight, int32_t zPadTrWLeft, int32_t zPadTrWRight, int32_t strideH, int32_t strideW, int32_t RRows, int32_t RCols, uint64_t* inputArr, uint64_t* outputArr){

int32_t linIdxFilterMult =  (int32_t)0;
for (uint32_t n =  (int32_t)0; n < N; n++){

int32_t leftTopCornerH = ( (int32_t)0 - zPadTrHLeft);

int32_t HPrimeTilde = (HPrime + ((HPrime -  (int32_t)1) * (strideH -  (int32_t)1)));

int32_t extremeRightBottomCornerH = ((HPrimeTilde -  (int32_t)1) + zPadTrHRight);
while ((((leftTopCornerH + FH) -  (int32_t)1) <= extremeRightBottomCornerH)) {

int32_t leftTopCornerW = ( (int32_t)0 - zPadTrWLeft);

int32_t WPrimeTilde = (WPrime + ((WPrime -  (int32_t)1) * (strideW -  (int32_t)1)));

int32_t extremeRightBottomCornerW = ((WPrimeTilde -  (int32_t)1) + zPadTrWRight);
while ((((leftTopCornerW + FW) -  (int32_t)1) <= extremeRightBottomCornerW)) {
for (uint32_t fh =  (int32_t)0; fh < FH; fh++){
for (uint32_t fw =  (int32_t)0; fw < FW; fw++){

int32_t curPosH = (leftTopCornerH + fh);

int32_t curPosW = (leftTopCornerW + fw);

uint64_t val = funcSSCons( (int64_t)0);
for (uint32_t ci =  (int32_t)0; ci < CI; ci++){
if ((((curPosH <  (int32_t)0) || (curPosH >= HPrimeTilde)) || ((curPosW <  (int32_t)0) || (curPosW >= WPrimeTilde)))) {
val = funcSSCons( (int64_t)0);
} else {
if ((((curPosH % strideH) ==  (int32_t)0) && ((curPosW % strideW) ==  (int32_t)0))) {

int32_t idxInputH = (curPosH / strideH);

int32_t idxInputW = (curPosW / strideW);
val = Arr4DIdxRowM(inputArr,N,HPrime,WPrime,CI,n,idxInputH,idxInputW,ci);
} else {
val = funcSSCons( (int64_t)0);
}
}
Arr2DIdxRowM(outputArr,RRows,RCols,((((fh * FW) * CI) + (fw * CI)) + ci),linIdxFilterMult) = val;
}
}
}
linIdxFilterMult = (linIdxFilterMult +  (int32_t)1);
leftTopCornerW = (leftTopCornerW +  (int32_t)1);
}

leftTopCornerH = (leftTopCornerH +  (int32_t)1);
}

}
}

void ConvTranspose2D(int32_t N, int32_t HPrime, int32_t WPrime, int32_t CI, int32_t FH, int32_t FW, int32_t CO, int32_t H, int32_t W, int32_t zPadTrHLeft, int32_t zPadTrHRight, int32_t zPadTrWLeft, int32_t zPadTrWRight, int32_t strideH, int32_t strideW, uint64_t* inputArr, uint64_t* filterArr, uint64_t* outArr){

int32_t reshapedFilterRows = CO;

int32_t reshapedFilterCols = ((FH * FW) * CI);

int32_t reshapedIPRows = ((FH * FW) * CI);

int32_t reshapedIPCols = ((N * H) * W);

uint64_t* filterReshaped = make_array<uint64_t>(reshapedFilterRows, reshapedFilterCols);

uint64_t* inputReshaped = make_array<uint64_t>(reshapedIPRows, reshapedIPCols);

uint64_t* matmulOP = make_array<uint64_t>(reshapedFilterRows, reshapedIPCols);
ConvTranspose2DReshapeFilter(FH, FW, CO, CI, filterArr, filterReshaped);
ConvTranspose2DReshapeInput(N, HPrime, WPrime, CI, FH, FW, zPadTrHLeft, zPadTrHRight, zPadTrWLeft, zPadTrWRight, strideH, strideW, reshapedIPRows, reshapedIPCols, inputArr, inputReshaped);
MatMul2D(reshapedFilterRows, reshapedFilterCols, reshapedIPCols, filterReshaped, inputReshaped, matmulOP, 1);
ConvTranspose2DReshapeMatMulOP(N, H, W, CO, matmulOP, outArr);
ClearMemSecret2(reshapedFilterRows, reshapedFilterCols, filterReshaped);
ClearMemSecret2(reshapedIPRows, reshapedIPCols, inputReshaped);
ClearMemSecret2(reshapedFilterRows, reshapedIPCols, matmulOP);
}

void ConvTranspose3DReshapeFilter(int32_t FD, int32_t FH, int32_t FW, int32_t CO, int32_t CI, uint64_t* inputArr, uint64_t* outputArr){
for (uint32_t co =  (int32_t)0; co < CO; co++){
for (uint32_t fd =  (int32_t)0; fd < FD; fd++){
for (uint32_t fh =  (int32_t)0; fh < FH; fh++){
for (uint32_t fw =  (int32_t)0; fw < FW; fw++){
for (uint32_t ci =  (int32_t)0; ci < CI; ci++){

int32_t linIdx = ((((((fd * FH) * FW) * CI) + ((fh * FW) * CI)) + (fw * CI)) + ci);
Arr2DIdxRowM(outputArr,CO,(((FD * FH) * FW) * CI),co,linIdx) = Arr5DIdxRowM(inputArr,FD,FH,FW,CO,CI,((FD -  (int32_t)1) - fd),((FH -  (int32_t)1) - fh),((FW -  (int32_t)1) - fw),co,ci);
}
}
}
}
}
}

void ConvTranspose3DReshapeInput(int32_t N, int32_t DPrime, int32_t HPrime, int32_t WPrime, int32_t CI, int32_t FD, int32_t FH, int32_t FW, int32_t zPadTrDLeft, int32_t zPadTrDRight, int32_t zPadTrHLeft, int32_t zPadTrHRight, int32_t zPadTrWLeft, int32_t zPadTrWRight, int32_t strideD, int32_t strideH, int32_t strideW, int32_t RRows, int32_t RCols, uint64_t* inputArr, uint64_t* outputArr){

int32_t linIdxFilterMult =  (int32_t)0;
for (uint32_t n =  (int32_t)0; n < N; n++){

int32_t leftTopCornerD = ( (int32_t)0 - zPadTrDLeft);

int32_t DPrimeTilde = (DPrime + ((DPrime -  (int32_t)1) * (strideD -  (int32_t)1)));

int32_t extremeRightBottomCornerD = ((DPrimeTilde -  (int32_t)1) + zPadTrDRight);
while ((((leftTopCornerD + FD) -  (int32_t)1) <= extremeRightBottomCornerD)) {

int32_t leftTopCornerH = ( (int32_t)0 - zPadTrHLeft);

int32_t HPrimeTilde = (HPrime + ((HPrime -  (int32_t)1) * (strideH -  (int32_t)1)));

int32_t extremeRightBottomCornerH = ((HPrimeTilde -  (int32_t)1) + zPadTrHRight);
while ((((leftTopCornerH + FH) -  (int32_t)1) <= extremeRightBottomCornerH)) {

int32_t leftTopCornerW = ( (int32_t)0 - zPadTrWLeft);

int32_t WPrimeTilde = (WPrime + ((WPrime -  (int32_t)1) * (strideW -  (int32_t)1)));

int32_t extremeRightBottomCornerW = ((WPrimeTilde -  (int32_t)1) + zPadTrWRight);
while ((((leftTopCornerW + FW) -  (int32_t)1) <= extremeRightBottomCornerW)) {
for (uint32_t fd =  (int32_t)0; fd < FD; fd++){
for (uint32_t fh =  (int32_t)0; fh < FH; fh++){
for (uint32_t fw =  (int32_t)0; fw < FW; fw++){

int32_t curPosD = (leftTopCornerD + fd);

int32_t curPosH = (leftTopCornerH + fh);

int32_t curPosW = (leftTopCornerW + fw);

uint64_t val = funcSSCons( (int64_t)0);
for (uint32_t ci =  (int32_t)0; ci < CI; ci++){
if (((((curPosD <  (int32_t)0) || (curPosD >= DPrimeTilde)) || ((curPosH <  (int32_t)0) || (curPosH >= HPrimeTilde))) || ((curPosW <  (int32_t)0) || (curPosW >= WPrimeTilde)))) {
val = funcSSCons( (int64_t)0);
} else {
if (((((curPosD % strideD) ==  (int32_t)0) && ((curPosH % strideH) ==  (int32_t)0)) && ((curPosW % strideW) ==  (int32_t)0))) {

int32_t idxInputD = (curPosD / strideD);

int32_t idxInputH = (curPosH / strideH);

int32_t idxInputW = (curPosW / strideW);
val = Arr5DIdxRowM(inputArr,N,DPrime,HPrime,WPrime,CI,n,idxInputD,idxInputH,idxInputW,ci);
} else {
val = funcSSCons( (int64_t)0);
}
}
Arr2DIdxRowM(outputArr,RRows,RCols,((((((fd * FH) * FW) * CI) + ((fh * FW) * CI)) + (fw * CI)) + ci),linIdxFilterMult) = val;
}
}
}
}
linIdxFilterMult = (linIdxFilterMult +  (int32_t)1);
leftTopCornerW = (leftTopCornerW +  (int32_t)1);
}

leftTopCornerH = (leftTopCornerH +  (int32_t)1);
}

leftTopCornerD = (leftTopCornerD +  (int32_t)1);
}

}
}

void ConvTranspose3D(int32_t N, int32_t DPrime, int32_t HPrime, int32_t WPrime, int32_t CI, int32_t FD, int32_t FH, int32_t FW, int32_t CO, int32_t D, int32_t H, int32_t W, int32_t zPadTrDLeft, int32_t zPadTrDRight, int32_t zPadTrHLeft, int32_t zPadTrHRight, int32_t zPadTrWLeft, int32_t zPadTrWRight, int32_t strideD, int32_t strideH, int32_t strideW, uint64_t* inputArr, uint64_t* filterArr, uint64_t* outArr){

int32_t reshapedFilterRows = CO;

int32_t reshapedFilterCols = (((FD * FH) * FW) * CI);

int32_t reshapedIPRows = (((FD * FH) * FW) * CI);

int32_t reshapedIPCols = (((N * D) * H) * W);

uint64_t* filterReshaped = make_array<uint64_t>(reshapedFilterRows, reshapedFilterCols);

uint64_t* inputReshaped = make_array<uint64_t>(reshapedIPRows, reshapedIPCols);

uint64_t* matmulOP = make_array<uint64_t>(reshapedFilterRows, reshapedIPCols);
ConvTranspose3DReshapeFilter(FD, FH, FW, CO, CI, filterArr, filterReshaped);
ConvTranspose3DReshapeInput(N, DPrime, HPrime, WPrime, CI, FD, FH, FW, zPadTrDLeft, zPadTrDRight, zPadTrHLeft, zPadTrHRight, zPadTrWLeft, zPadTrWRight, strideD, strideH, strideW, reshapedIPRows, reshapedIPCols, inputArr, inputReshaped);
MatMul2D(reshapedFilterRows, reshapedFilterCols, reshapedIPCols, filterReshaped, inputReshaped, matmulOP, 1);
Conv3DReshapeMatMulOP(N, D, H, W, CO, matmulOP, outArr);
ClearMemSecret2(reshapedFilterRows, reshapedFilterCols, filterReshaped);
ClearMemSecret2(reshapedIPRows, reshapedIPCols, inputReshaped);
ClearMemSecret2(reshapedFilterRows, reshapedIPCols, matmulOP);
}

void ConvTranspose3DLoopInner(int32_t N, int32_t D, int32_t H, int32_t W, int32_t CI, int32_t FD, int32_t FH, int32_t FW, int32_t CO, int32_t zPadDLeft, int32_t zPadDRight, int32_t zPadHLeft, int32_t zPadHRight, int32_t zPadWLeft, int32_t zPadWRight, int32_t strideD, int32_t strideH, int32_t strideW, int32_t outD, int32_t outH, int32_t outW, uint64_t* inputArr, uint64_t* filterArr, uint64_t* outArr){
for (uint32_t n =  (int32_t)0; n < N; n++){
for (uint32_t co =  (int32_t)0; co < CO; co++){
for (uint32_t d =  (int32_t)0; d < outD; d++){
for (uint32_t h =  (int32_t)0; h < outH; h++){
for (uint32_t w =  (int32_t)0; w < outW; w++){
for (uint32_t ci =  (int32_t)0; ci < CI; ci++){

uint64_t val = funcSSCons( (int64_t)0);
for (uint32_t fd = d; fd < (d + FD); fd++){
for (uint32_t fh = h; fh < (h + FH); fh++){
for (uint32_t fw = w; fw < (w + FW); fw++){

int32_t curPosD = ((fd - zPadDLeft) / strideD);

int32_t curPosH = ((fh - zPadHLeft) / strideH);

int32_t curPosW = ((fw - zPadWLeft) / strideW);
if ((((((((((curPosD >=  (int32_t)0) && (curPosH >=  (int32_t)0)) && (curPosW >=  (int32_t)0)) && (curPosD < D)) && (curPosH < H)) && (curPosW < W)) && (((fd - zPadDLeft) % strideD) ==  (int32_t)0)) && (((fh - zPadHLeft) % strideH) ==  (int32_t)0)) && (((fw - zPadWLeft) % strideW) ==  (int32_t)0))) {

int32_t curFilterPosD = (((FD + d) - fd) -  (int32_t)1);

int32_t curFilterPosH = (((FH + h) - fh) -  (int32_t)1);

int32_t curFilterPosW = (((FW + w) - fw) -  (int32_t)1);
val = SecretAdd(val, SecretMult(Arr5DIdxRowM(inputArr,N,D,H,W,CI,n,curPosD,curPosH,curPosW,ci), Arr5DIdxRowM(filterArr,FD,FH,FW,CO,CI,curFilterPosD,curFilterPosH,curFilterPosW,co,ci)));
}
}
}
}
Arr5DIdxRowM(outArr,N,outD,outH,outW,CO,n,d,h,w,co) = SecretAdd(Arr5DIdxRowM(outArr,N,outD,outH,outW,CO,n,d,h,w,co), val);
}
}
}
}
}
}
}

void ConvTranspose3DLoop(int32_t N, int32_t DPrime, int32_t HPrime, int32_t WPrime, int32_t CI, int32_t FD, int32_t FH, int32_t FW, int32_t CO, int32_t D, int32_t H, int32_t W, int32_t zPadTrDLeft, int32_t zPadTrDRight, int32_t zPadTrHLeft, int32_t zPadTrHRight, int32_t zPadTrWLeft, int32_t zPadTrWRight, int32_t strideD, int32_t strideH, int32_t strideW, uint64_t* inputArr, uint64_t* filterArr, uint64_t* outArr){
ConvTranspose3DLoopInner(N, DPrime, HPrime, WPrime, CI, FD, FH, FW, CO, zPadTrDLeft, zPadTrDRight, zPadTrHLeft, zPadTrHRight, zPadTrWLeft, zPadTrWRight, strideD, strideH, strideW, D, H, W, inputArr, filterArr, outArr);
}

void Transpose2(int32_t s1, int32_t s2, uint64_t* inArr, uint64_t* outArr){
for (uint32_t i =  (int32_t)0; i < s1; i++){
for (uint32_t j =  (int32_t)0; j < s2; j++){
Arr2DIdxRowM(outArr,s1,s2,i,j) = Arr2DIdxRowM(inArr,s2,s1,j,i);
}
}
}

void Pad442(int32_t s1, int32_t s2, int32_t s3, int32_t s4, int32_t inps1, int32_t inps2, int32_t inps3, int32_t inps4, uint64_t* inpArr, int32_t pads1, int32_t pads2, int32_t* paddings, uint64_t* outArr){

int32_t lbounds1 = Arr2DIdxRowM(paddings,pads1,pads2, (int32_t)0, (int32_t)0);

int32_t rbounds1excl = (s1 - Arr2DIdxRowM(paddings,pads1,pads2, (int32_t)0, (int32_t)1));

int32_t lbounds2 = Arr2DIdxRowM(paddings,pads1,pads2, (int32_t)1, (int32_t)0);

int32_t rbounds2excl = (s2 - Arr2DIdxRowM(paddings,pads1,pads2, (int32_t)1, (int32_t)1));

int32_t lbounds3 = Arr2DIdxRowM(paddings,pads1,pads2, (int32_t)2, (int32_t)0);

int32_t rbounds3excl = (s3 - Arr2DIdxRowM(paddings,pads1,pads2, (int32_t)2, (int32_t)1));

int32_t lbounds4 = Arr2DIdxRowM(paddings,pads1,pads2, (int32_t)3, (int32_t)0);

int32_t rbounds4excl = (s4 - Arr2DIdxRowM(paddings,pads1,pads2, (int32_t)3, (int32_t)1));
for (uint32_t i =  (int32_t)0; i < s1; i++){
for (uint32_t j =  (int32_t)0; j < s2; j++){
for (uint32_t k =  (int32_t)0; k < s3; k++){
for (uint32_t l =  (int32_t)0; l < s4; l++){
if (((((((((i >= lbounds1) && (i < rbounds1excl)) && (j >= lbounds2)) && (j < rbounds2excl)) && (k >= lbounds3)) && (k < rbounds3excl)) && (l >= lbounds4)) && (l < rbounds4excl))) {
Arr4DIdxRowM(outArr,s1,s2,s3,s4,i,j,k,l) = Arr4DIdxRowM(inpArr,inps1,inps2,inps3,inps4,(i - Arr2DIdxRowM(paddings,pads1,pads2, (int32_t)0, (int32_t)0)),(j - Arr2DIdxRowM(paddings,pads1,pads2, (int32_t)1, (int32_t)0)),(k - Arr2DIdxRowM(paddings,pads1,pads2, (int32_t)2, (int32_t)0)),(l - Arr2DIdxRowM(paddings,pads1,pads2, (int32_t)3, (int32_t)0)));
} else {
Arr4DIdxRowM(outArr,s1,s2,s3,s4,i,j,k,l) = funcSSCons( (int64_t)0);
}
}
}
}
}
}

void Pad552(int32_t s1, int32_t s2, int32_t s3, int32_t s4, int32_t s5, int32_t inps1, int32_t inps2, int32_t inps3, int32_t inps4, int32_t inps5, uint64_t* inpArr, int32_t pads1, int32_t pads2, int32_t* paddings, uint64_t* outArr){

int32_t lbounds1 = Arr2DIdxRowM(paddings,pads1,pads2, (int32_t)0, (int32_t)0);

int32_t rbounds1excl = (s1 - Arr2DIdxRowM(paddings,pads1,pads2, (int32_t)0, (int32_t)1));

int32_t lbounds2 = Arr2DIdxRowM(paddings,pads1,pads2, (int32_t)1, (int32_t)0);

int32_t rbounds2excl = (s2 - Arr2DIdxRowM(paddings,pads1,pads2, (int32_t)1, (int32_t)1));

int32_t lbounds3 = Arr2DIdxRowM(paddings,pads1,pads2, (int32_t)2, (int32_t)0);

int32_t rbounds3excl = (s3 - Arr2DIdxRowM(paddings,pads1,pads2, (int32_t)2, (int32_t)1));

int32_t lbounds4 = Arr2DIdxRowM(paddings,pads1,pads2, (int32_t)3, (int32_t)0);

int32_t rbounds4excl = (s4 - Arr2DIdxRowM(paddings,pads1,pads2, (int32_t)3, (int32_t)1));

int32_t lbounds5 = Arr2DIdxRowM(paddings,pads1,pads2, (int32_t)4, (int32_t)0);

int32_t rbounds5excl = (s5 - Arr2DIdxRowM(paddings,pads1,pads2, (int32_t)4, (int32_t)1));
for (uint32_t i =  (int32_t)0; i < s1; i++){
for (uint32_t j =  (int32_t)0; j < s2; j++){
for (uint32_t k =  (int32_t)0; k < s3; k++){
for (uint32_t l =  (int32_t)0; l < s4; l++){
for (uint32_t m =  (int32_t)0; m < s5; m++){
if (((((((((((i >= lbounds1) && (i < rbounds1excl)) && (j >= lbounds2)) && (j < rbounds2excl)) && (k >= lbounds3)) && (k < rbounds3excl)) && (l >= lbounds4)) && (l < rbounds4excl)) && (m >= lbounds5)) && (m < rbounds5excl))) {
Arr5DIdxRowM(outArr,s1,s2,s3,s4,s5,i,j,k,l,m) = Arr5DIdxRowM(inpArr,inps1,inps2,inps3,inps4,inps5,(i - Arr2DIdxRowM(paddings,pads1,pads2, (int32_t)0, (int32_t)0)),(j - Arr2DIdxRowM(paddings,pads1,pads2, (int32_t)1, (int32_t)0)),(k - Arr2DIdxRowM(paddings,pads1,pads2, (int32_t)2, (int32_t)0)),(l - Arr2DIdxRowM(paddings,pads1,pads2, (int32_t)3, (int32_t)0)),(m - Arr2DIdxRowM(paddings,pads1,pads2, (int32_t)4, (int32_t)0)));
} else {
Arr5DIdxRowM(outArr,s1,s2,s3,s4,s5,i,j,k,l,m) = funcSSCons( (int64_t)0);
}
}
}
}
}
}
}

void PadONNX441(int32_t o1, int32_t o2, int32_t o3, int32_t o4, int32_t i1, int32_t i2, int32_t i3, int32_t i4, uint64_t* inpArr, int32_t pads, int32_t* paddings, uint64_t* outArr){

int32_t lbounds1 = Arr1DIdxRowM(paddings,pads, (int32_t)0);

int32_t rbounds1excl = (o1 - Arr1DIdxRowM(paddings,pads, (int32_t)4));

int32_t lbounds2 = Arr1DIdxRowM(paddings,pads, (int32_t)1);

int32_t rbounds2excl = (o2 - Arr1DIdxRowM(paddings,pads, (int32_t)5));

int32_t lbounds3 = Arr1DIdxRowM(paddings,pads, (int32_t)2);

int32_t rbounds3excl = (o3 - Arr1DIdxRowM(paddings,pads, (int32_t)6));

int32_t lbounds4 = Arr1DIdxRowM(paddings,pads, (int32_t)3);

int32_t rbounds4excl = (o4 - Arr1DIdxRowM(paddings,pads, (int32_t)7));
for (uint32_t i =  (int32_t)0; i < o1; i++){
for (uint32_t j =  (int32_t)0; j < o2; j++){
for (uint32_t k =  (int32_t)0; k < o3; k++){
for (uint32_t l =  (int32_t)0; l < o4; l++){
if (((((((((i >= lbounds1) && (i < rbounds1excl)) && (j >= lbounds2)) && (j < rbounds2excl)) && (k >= lbounds3)) && (k < rbounds3excl)) && (l >= lbounds4)) && (l < rbounds4excl))) {
Arr4DIdxRowM(outArr,o1,o2,o3,o4,i,j,k,l) = Arr4DIdxRowM(inpArr,i1,i2,i3,i4,(i - Arr1DIdxRowM(paddings,pads, (int32_t)0)),(j - Arr1DIdxRowM(paddings,pads, (int32_t)1)),(k - Arr1DIdxRowM(paddings,pads, (int32_t)2)),(l - Arr1DIdxRowM(paddings,pads, (int32_t)3)));
} else {
Arr4DIdxRowM(outArr,o1,o2,o3,o4,i,j,k,l) = funcSSCons( (int64_t)0);
}
}
}
}
}
}

void Squeeze24(int32_t s1, int32_t s2, int32_t dim1, int32_t dim2, int32_t ins1, int32_t ins2, int32_t ins3, int32_t ins4, uint64_t* inArr, uint64_t* outArr){
for (uint32_t i =  (int32_t)0; i < ins1; i++){
for (uint32_t j =  (int32_t)0; j < ins2; j++){
for (uint32_t k =  (int32_t)0; k < ins3; k++){
for (uint32_t l =  (int32_t)0; l < ins4; l++){

int32_t linIdx = ((((((i * ins2) * ins3) * ins4) + ((j * ins3) * ins4)) + (k * ins4)) + l);

int32_t outIdx1 = (linIdx / s2);

int32_t outIdx2 = (linIdx % s2);
Arr2DIdxRowM(outArr,s1,s2,outIdx1,outIdx2) = Arr4DIdxRowM(inArr,ins1,ins2,ins3,ins4,i,j,k,l);
}
}
}
}
}

void Squeeze34(int32_t s1, int32_t s2, int32_t s3, int32_t dim, int32_t ins1, int32_t ins2, int32_t ins3, int32_t ins4, uint64_t* inArr, uint64_t* outArr){
for (uint32_t i =  (int32_t)0; i < ins1; i++){
for (uint32_t j =  (int32_t)0; j < ins2; j++){
for (uint32_t k =  (int32_t)0; k < ins3; k++){
for (uint32_t l =  (int32_t)0; l < ins4; l++){

int32_t linIdx = ((((((i * ins2) * ins3) * ins4) + ((j * ins3) * ins4)) + (k * ins4)) + l);

int32_t outIdx1 = (linIdx / (s2 * s3));

int32_t outIdx2 = ((linIdx - ((outIdx1 * s2) * s3)) / s3);

int32_t outIdx3 = ((linIdx - ((outIdx1 * s2) * s3)) - (outIdx2 * s3));
Arr3DIdxRowM(outArr,s1,s2,s3,outIdx1,outIdx2,outIdx3) = Arr4DIdxRowM(inArr,ins1,ins2,ins3,ins4,i,j,k,l);
}
}
}
}
}

void Squeeze23(int32_t s1, int32_t s2, int32_t dim, int32_t ins1, int32_t ins2, int32_t ins3, uint64_t* inArr, uint64_t* outArr){
for (uint32_t i =  (int32_t)0; i < ins1; i++){
for (uint32_t j =  (int32_t)0; j < ins2; j++){
for (uint32_t k =  (int32_t)0; k < ins3; k++){

int32_t linIdx = ((((i * ins2) * ins3) + (j * ins3)) + k);

int32_t outIdx1 = (linIdx / s2);

int32_t outIdx2 = (linIdx % s2);
Arr2DIdxRowM(outArr,s1,s2,outIdx1,outIdx2) = Arr3DIdxRowM(inArr,ins1,ins2,ins3,i,j,k);
}
}
}
}

void FusedBatchNorm4411(int32_t s1, int32_t s2, int32_t s3, int32_t s4, uint64_t* inArr, uint64_t* multArr, uint64_t* biasArr, int32_t multExprScaleDownSf, int32_t biasExprScaleUpSf, uint64_t* outputArr){

int32_t inpSize = (((s1 * s2) * s3) * s4);

uint64_t* inArrReshaped = make_array<uint64_t>(inpSize);

uint64_t* multArrReshaped = make_array<uint64_t>(inpSize);

uint64_t* multExprAns = make_array<uint64_t>(inpSize);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){

int32_t linIdx = ((((((i1 * s2) * s3) * s4) + ((i2 * s3) * s4)) + (i3 * s4)) + i4);
Arr1DIdxRowM(inArrReshaped,inpSize,linIdx) = Arr4DIdxRowM(inArr,s1,s2,s3,s4,i1,i2,i3,i4);
Arr1DIdxRowM(multArrReshaped,inpSize,linIdx) = Arr1DIdxRowM(multArr,s4,i4);
}
}
}
}
ElemWiseActModelVectorMult(inpSize, inArrReshaped, multArrReshaped, multExprAns);
if ((multExprScaleDownSf >  (int32_t)0)) {
ScaleDown(inpSize, multExprAns, multExprScaleDownSf);
}

uint64_t* biasArrScaledUp = make_array<uint64_t>(s4);
for (uint32_t ii =  (int32_t)0; ii < s4; ii++){
Arr1DIdxRowM(biasArrScaledUp,s4,ii) = Arr1DIdxRowM(biasArr,s4,ii);
}
if ((biasExprScaleUpSf >  (int32_t)0)) {
ScaleUp(s4, biasArrScaledUp, biasExprScaleUpSf);
}
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){

int32_t linIdx = ((((((i1 * s2) * s3) * s4) + ((i2 * s3) * s4)) + (i3 * s4)) + i4);
Arr4DIdxRowM(outputArr,s1,s2,s3,s4,i1,i2,i3,i4) = SecretAdd(Arr1DIdxRowM(multExprAns,inpSize,linIdx), Arr1DIdxRowM(biasArrScaledUp,s4,i4));
}
}
}
}
ClearMemSecret1(inpSize, inArrReshaped);
ClearMemSecret1(inpSize, multArrReshaped);
ClearMemSecret1(inpSize, multExprAns);
ClearMemSecret1(s4, biasArrScaledUp);
}

void FusedBatchNorm5511(int32_t s1, int32_t s2, int32_t s3, int32_t s4, int32_t s5, uint64_t* inArr, uint64_t* multArr, uint64_t* biasArr, int32_t multExprScaleDownSf, int32_t biasExprScaleUpSf, uint64_t* outputArr){

int32_t inpSize = ((((s1 * s2) * s3) * s4) * s5);

uint64_t* inArrReshaped = make_array<uint64_t>(inpSize);

uint64_t* multArrReshaped = make_array<uint64_t>(inpSize);

uint64_t* multExprAns = make_array<uint64_t>(inpSize);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
for (uint32_t i5 =  (int32_t)0; i5 < s5; i5++){

int32_t linIdx = ((((((((i1 * s2) * s3) * s4) * s5) + (((i2 * s3) * s4) * s5)) + ((i3 * s4) * s5)) + (i4 * s5)) + i5);
Arr1DIdxRowM(inArrReshaped,inpSize,linIdx) = Arr5DIdxRowM(inArr,s1,s2,s3,s4,s5,i1,i2,i3,i4,i5);
Arr1DIdxRowM(multArrReshaped,inpSize,linIdx) = Arr1DIdxRowM(multArr,s5,i5);
}
}
}
}
}
ElemWiseActModelVectorMult(inpSize, inArrReshaped, multArrReshaped, multExprAns);
if ((multExprScaleDownSf >  (int32_t)0)) {
ScaleDown(inpSize, multExprAns, multExprScaleDownSf);
}

uint64_t* biasArrScaledUp = make_array<uint64_t>(s5);
for (uint32_t ii =  (int32_t)0; ii < s5; ii++){
Arr1DIdxRowM(biasArrScaledUp,s5,ii) = Arr1DIdxRowM(biasArr,s5,ii);
}
if ((biasExprScaleUpSf >  (int32_t)0)) {
ScaleUp(s5, biasArrScaledUp, biasExprScaleUpSf);
}
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
for (uint32_t i5 =  (int32_t)0; i5 < s5; i5++){

int32_t linIdx = ((((((((i1 * s2) * s3) * s4) * s5) + (((i2 * s3) * s4) * s5)) + ((i3 * s4) * s5)) + (i4 * s5)) + i5);
Arr5DIdxRowM(outputArr,s1,s2,s3,s4,s5,i1,i2,i3,i4,i5) = SecretAdd(Arr1DIdxRowM(multExprAns,inpSize,linIdx), Arr1DIdxRowM(biasArrScaledUp,s5,i5));
}
}
}
}
}
ClearMemSecret1(inpSize, inArrReshaped);
ClearMemSecret1(inpSize, multArrReshaped);
ClearMemSecret1(inpSize, multExprAns);
ClearMemSecret1(s5, biasArrScaledUp);
}

void ElemWiseMul2(int32_t s1, int32_t s2, uint64_t* arr1, uint64_t* arr2, uint64_t* outArr){

int32_t inpSize = (s1 * s2);

uint64_t* arr1Reshaped = make_array<uint64_t>(inpSize);

uint64_t* arr2Reshaped = make_array<uint64_t>(inpSize);

uint64_t* outArrReshaped = make_array<uint64_t>(inpSize);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){

int32_t linIdx = ((i1 * s2) + i2);
Arr1DIdxRowM(arr1Reshaped,inpSize,linIdx) = Arr2DIdxRowM(arr1,s1,s2,i1,i2);
Arr1DIdxRowM(arr2Reshaped,inpSize,linIdx) = Arr2DIdxRowM(arr2,s1,s2,i1,i2);
}
}
ElemWiseSecretSharedVectorMult(inpSize, arr1Reshaped, arr2Reshaped, outArrReshaped);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){

int32_t linIdx = ((i1 * s2) + i2);
Arr2DIdxRowM(outArr,s1,s2,i1,i2) = Arr1DIdxRowM(outArrReshaped,inpSize,linIdx);
}
}
ClearMemSecret1(inpSize, arr1Reshaped);
ClearMemSecret1(inpSize, arr2Reshaped);
ClearMemSecret1(inpSize, outArrReshaped);
}

void ElemWiseMul4(int32_t s1, int32_t s2, int32_t s3, int32_t s4, uint64_t* arr1, uint64_t* arr2, uint64_t* outArr){

int32_t inpSize = (((s1 * s2) * s3) * s4);

uint64_t* arr1Reshaped = make_array<uint64_t>(inpSize);

uint64_t* arr2Reshaped = make_array<uint64_t>(inpSize);

uint64_t* outArrReshaped = make_array<uint64_t>(inpSize);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){

int32_t linIdx = ((((((i1 * s2) * s3) * s4) + ((i2 * s3) * s4)) + (i3 * s4)) + i4);
Arr1DIdxRowM(arr1Reshaped,inpSize,linIdx) = Arr4DIdxRowM(arr1,s1,s2,s3,s4,i1,i2,i3,i4);
Arr1DIdxRowM(arr2Reshaped,inpSize,linIdx) = Arr4DIdxRowM(arr2,s1,s2,s3,s4,i1,i2,i3,i4);
}
}
}
}
ElemWiseSecretSharedVectorMult(inpSize, arr1Reshaped, arr2Reshaped, outArrReshaped);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){

int32_t linIdx = ((((((i1 * s2) * s3) * s4) + ((i2 * s3) * s4)) + (i3 * s4)) + i4);
Arr4DIdxRowM(outArr,s1,s2,s3,s4,i1,i2,i3,i4) = Arr1DIdxRowM(outArrReshaped,inpSize,linIdx);
}
}
}
}
ClearMemSecret1(inpSize, arr1Reshaped);
ClearMemSecret1(inpSize, arr2Reshaped);
ClearMemSecret1(inpSize, outArrReshaped);
}

void ElemWiseMul5(int32_t s1, int32_t s2, int32_t s3, int32_t s4, int32_t s5, uint64_t* arr1, uint64_t* arr2, uint64_t* outArr){

int32_t inpSize = ((((s1 * s2) * s3) * s4) * s5);

uint64_t* arr1Reshaped = make_array<uint64_t>(inpSize);

uint64_t* arr2Reshaped = make_array<uint64_t>(inpSize);

uint64_t* outArrReshaped = make_array<uint64_t>(inpSize);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
for (uint32_t i5 =  (int32_t)0; i5 < s5; i5++){

int32_t linIdx = ((((((((i1 * s2) * s3) * s4) * s5) + (((i2 * s3) * s4) * s5)) + ((i3 * s4) * s5)) + (i4 * s5)) + i5);
Arr1DIdxRowM(arr1Reshaped,inpSize,linIdx) = Arr5DIdxRowM(arr1,s1,s2,s3,s4,s5,i1,i2,i3,i4,i5);
Arr1DIdxRowM(arr2Reshaped,inpSize,linIdx) = Arr5DIdxRowM(arr2,s1,s2,s3,s4,s5,i1,i2,i3,i4,i5);
}
}
}
}
}
ElemWiseSecretSharedVectorMult(inpSize, arr1Reshaped, arr2Reshaped, outArrReshaped);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
for (uint32_t i5 =  (int32_t)0; i5 < s5; i5++){

int32_t linIdx = ((((((((i1 * s2) * s3) * s4) * s5) + (((i2 * s3) * s4) * s5)) + ((i3 * s4) * s5)) + (i4 * s5)) + i5);
Arr5DIdxRowM(outArr,s1,s2,s3,s4,s5,i1,i2,i3,i4,i5) = Arr1DIdxRowM(outArrReshaped,inpSize,linIdx);
}
}
}
}
}
ClearMemSecret1(inpSize, arr1Reshaped);
ClearMemSecret1(inpSize, arr2Reshaped);
ClearMemSecret1(inpSize, outArrReshaped);
}

void ReduceMean24(int32_t outS1, int32_t outS2, int32_t inS1, int32_t inS2, int32_t inS3, int32_t inS4, uint64_t* inputArr, int32_t* axes, uint64_t* outputArr){

int32_t divisor = (inS2 * inS3);

int32_t outputSize = (outS1 * outS2);

uint64_t* sumArr = make_array<uint64_t>(outputSize);

uint64_t* outputArrReshaped = make_array<uint64_t>(outputSize);
for (uint32_t i1 =  (int32_t)0; i1 < outS1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < outS2; i2++){

uint64_t summ = funcSSCons( (int64_t)0);
for (uint32_t i =  (int32_t)0; i < inS2; i++){
for (uint32_t j =  (int32_t)0; j < inS3; j++){
summ = SecretAdd(summ, Arr4DIdxRowM(inputArr,inS1,inS2,inS3,inS4,i1,i,j,i2));
}
}
Arr1DIdxRowM(sumArr,outputSize,((i1 * outS2) + i2)) = summ;
}
}
ElemWiseVectorPublicDiv(outputSize, sumArr, divisor, outputArrReshaped);
for (uint32_t i1 =  (int32_t)0; i1 < outS1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < outS2; i2++){
Arr2DIdxRowM(outputArr,outS1,outS2,i1,i2) = Arr1DIdxRowM(outputArrReshaped,outputSize,((i1 * outS2) + i2));
}
}
ClearMemSecret1(outputSize, sumArr);
ClearMemSecret1(outputSize, outputArrReshaped);
}

void ReduceMeanONNX24(int32_t outS1, int32_t outS2, int32_t inS1, int32_t inS2, int32_t inS3, int32_t inS4, uint64_t* inputArr, int32_t axis1, int32_t axis2, uint64_t* outputArr){

int32_t divisor = (inS3 * inS4);

int32_t outputSize = (outS1 * outS2);

uint64_t* sumArr = make_array<uint64_t>(outputSize);

uint64_t* outputArrReshaped = make_array<uint64_t>(outputSize);
for (uint32_t i1 =  (int32_t)0; i1 < outS1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < outS2; i2++){

uint64_t summ = funcSSCons( (int64_t)0);
for (uint32_t i =  (int32_t)0; i < inS3; i++){
for (uint32_t j =  (int32_t)0; j < inS4; j++){
summ = SecretAdd(summ, Arr4DIdxRowM(inputArr,inS1,inS2,inS3,inS4,i1,i2,i,j));
}
}
Arr1DIdxRowM(sumArr,outputSize,((i1 * outS2) + i2)) = summ;
}
}
ElemWiseVectorPublicDiv(outputSize, sumArr, divisor, outputArrReshaped);
for (uint32_t i1 =  (int32_t)0; i1 < outS1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < outS2; i2++){
Arr2DIdxRowM(outputArr,outS1,outS2,i1,i2) = Arr1DIdxRowM(outputArrReshaped,outputSize,((i1 * outS2) + i2));
}
}
ClearMemSecret1(outputSize, sumArr);
ClearMemSecret1(outputSize, outputArrReshaped);
}

void ArgMax1(int32_t outArrS1, int32_t inArrS1, int32_t inArrS2, uint64_t* inArr, int32_t dim, uint64_t* outArr){
ArgMax(inArrS1, inArrS2, inArr, outArr);
}

void ArgMax3(int32_t outs1, int32_t outs2, int32_t outs3, int32_t ins1, int32_t ins2, int32_t ins3, int32_t ins4, uint64_t* inArr, int32_t dim, uint64_t* outArr){

int32_t size = ((ins1 * ins2) * ins3);

uint64_t* reshapedInArr = make_array<uint64_t>(size, ins4);

uint64_t* reshapedOutArr = make_array<uint64_t>(size);
for (uint32_t i1 =  (int32_t)0; i1 < ins1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < ins2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < ins3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < ins4; i4++){

int32_t linIdx = ((((i1 * ins2) * ins3) + (i2 * ins3)) + i3);
Arr2DIdxRowM(reshapedInArr,size,ins4,linIdx,i4) = Arr4DIdxRowM(inArr,ins1,ins2,ins3,ins4,i1,i2,i3,i4);
}
}
}
}
ArgMax(size, ins4, reshapedInArr, reshapedOutArr);
for (uint32_t i1 =  (int32_t)0; i1 < ins1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < ins2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < ins3; i3++){

int32_t linIdx = ((((i1 * ins2) * ins3) + (i2 * ins3)) + i3);
Arr3DIdxRowM(outArr,outs1,outs2,outs3,i1,i2,i3) = Arr1DIdxRowM(reshapedOutArr,size,linIdx);
}
}
}
ClearMemSecret2(size, ins4, reshapedInArr);
ClearMemSecret1(size, reshapedOutArr);
}

void Relu1(int32_t s1, uint64_t* inArr, uint64_t* outArr, int32_t sf, uint32_t doTruncation){
Relu(s1, inArr, outArr, sf, doTruncation);
}

void Relu2(int32_t s1, int32_t s2, uint64_t* inArr, uint64_t* outArr, int32_t sf, uint32_t doTruncation){

int32_t size = (s1 * s2);

uint64_t* reshapedInArr = make_array<uint64_t>(size);

uint64_t* reshapedOutArr = make_array<uint64_t>(size);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){

int32_t linIdx = ((i1 * s2) + i2);
Arr1DIdxRowM(reshapedInArr,size,linIdx) = Arr2DIdxRowM(inArr,s1,s2,i1,i2);
}
}
Relu(size, reshapedInArr, reshapedOutArr, sf, doTruncation);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){

int32_t linIdx = ((i1 * s2) + i2);
Arr2DIdxRowM(outArr,s1,s2,i1,i2) = Arr1DIdxRowM(reshapedOutArr,size,linIdx);
}
}
ClearMemSecret1(size, reshapedInArr);
ClearMemSecret1(size, reshapedOutArr);
}

void Relu4(int32_t s1, int32_t s2, int32_t s3, int32_t s4, uint64_t* inArr, uint64_t* outArr, int32_t sf, uint32_t doTruncation){

int32_t size = (((s1 * s2) * s3) * s4);

uint64_t* reshapedInArr = make_array<uint64_t>(size);

uint64_t* reshapedOutArr = make_array<uint64_t>(size);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){

int32_t linIdx = ((((((i1 * s2) * s3) * s4) + ((i2 * s3) * s4)) + (i3 * s4)) + i4);
Arr1DIdxRowM(reshapedInArr,size,linIdx) = Arr4DIdxRowM(inArr,s1,s2,s3,s4,i1,i2,i3,i4);
}
}
}
}
Relu(size, reshapedInArr, reshapedOutArr, sf, doTruncation);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){

int32_t linIdx = ((((((i1 * s2) * s3) * s4) + ((i2 * s3) * s4)) + (i3 * s4)) + i4);
Arr4DIdxRowM(outArr,s1,s2,s3,s4,i1,i2,i3,i4) = Arr1DIdxRowM(reshapedOutArr,size,linIdx);
}
}
}
}
ClearMemSecret1(size, reshapedInArr);
ClearMemSecret1(size, reshapedOutArr);
}

void Relu5(int32_t s1, int32_t s2, int32_t s3, int32_t s4, int32_t s5, uint64_t* inArr, uint64_t* outArr, int32_t sf, uint32_t doTruncation){

int32_t size = ((((s1 * s2) * s3) * s4) * s5);

uint64_t* reshapedInArr = make_array<uint64_t>(size);

uint64_t* reshapedOutArr = make_array<uint64_t>(size);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
for (uint32_t i5 =  (int32_t)0; i5 < s5; i5++){

int32_t linIdx = ((((((((i1 * s2) * s3) * s4) * s5) + (((i2 * s3) * s4) * s5)) + ((i3 * s4) * s5)) + (i4 * s5)) + i5);
Arr1DIdxRowM(reshapedInArr,size,linIdx) = Arr5DIdxRowM(inArr,s1,s2,s3,s4,s5,i1,i2,i3,i4,i5);
}
}
}
}
}
Relu(size, reshapedInArr, reshapedOutArr, sf, doTruncation);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
for (uint32_t i5 =  (int32_t)0; i5 < s5; i5++){

int32_t linIdx = ((((((((i1 * s2) * s3) * s4) * s5) + (((i2 * s3) * s4) * s5)) + ((i3 * s4) * s5)) + (i4 * s5)) + i5);
Arr5DIdxRowM(outArr,s1,s2,s3,s4,s5,i1,i2,i3,i4,i5) = Arr1DIdxRowM(reshapedOutArr,size,linIdx);
}
}
}
}
}
ClearMemSecret1(size, reshapedInArr);
ClearMemSecret1(size, reshapedOutArr);
}

void HardSigmoid1(int32_t s1, uint64_t* inArr, uint64_t* outArr, int32_t sf, uint32_t doTruncation){
HardSigmoid(s1, inArr, outArr, sf, doTruncation);
}

void HardSigmoid2(int32_t s1, int32_t s2, uint64_t* inArr, uint64_t* outArr, int32_t sf, uint32_t doTruncation){

int32_t size = (s1 * s2);

uint64_t* reshapedInArr = make_array<uint64_t>(size);

uint64_t* reshapedOutArr = make_array<uint64_t>(size);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){

int32_t linIdx = ((i1 * s2) + i2);
Arr1DIdxRowM(reshapedInArr,size,linIdx) = Arr2DIdxRowM(inArr,s1,s2,i1,i2);
}
}
HardSigmoid(size, reshapedInArr, reshapedOutArr, sf, doTruncation);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){

int32_t linIdx = ((i1 * s2) + i2);
Arr2DIdxRowM(outArr,s1,s2,i1,i2) = Arr1DIdxRowM(reshapedOutArr,size,linIdx);
}
}
ClearMemSecret1(size, reshapedInArr);
ClearMemSecret1(size, reshapedOutArr);
}

void HardSigmoid3(int32_t s1, int32_t s2, int32_t s3, uint64_t* inArr, uint64_t* outArr, int32_t sf, uint32_t doTruncation){

int32_t size = ((s1 * s2) * s3);

uint64_t* reshapedInArr = make_array<uint64_t>(size);

uint64_t* reshapedOutArr = make_array<uint64_t>(size);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){

int32_t linIdx = ((((i1 * s2) * s3) + (i2 * s3)) + i3);
Arr1DIdxRowM(reshapedInArr,size,linIdx) = Arr3DIdxRowM(inArr,s1,s2,s3,i1,i2,i3);
}
}
}
HardSigmoid(size, reshapedInArr, reshapedOutArr, sf, doTruncation);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){

int32_t linIdx = ((((i1 * s2) * s3) + (i2 * s3)) + i3);
Arr3DIdxRowM(outArr,s1,s2,s3,i1,i2,i3) = Arr1DIdxRowM(reshapedOutArr,size,linIdx);
}
}
}
ClearMemSecret1(size, reshapedInArr);
ClearMemSecret1(size, reshapedOutArr);
}

void HardSigmoid4(int32_t s1, int32_t s2, int32_t s3, int32_t s4, uint64_t* inArr, uint64_t* outArr, int32_t sf, uint32_t doTruncation){

int32_t size = (((s1 * s2) * s3) * s4);

uint64_t* reshapedInArr = make_array<uint64_t>(size);

uint64_t* reshapedOutArr = make_array<uint64_t>(size);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){

int32_t linIdx = ((((((i1 * s2) * s3) * s4) + ((i2 * s3) * s4)) + (i3 * s4)) + i4);
Arr1DIdxRowM(reshapedInArr,size,linIdx) = Arr4DIdxRowM(inArr,s1,s2,s3,s4,i1,i2,i3,i4);
}
}
}
}
HardSigmoid(size, reshapedInArr, reshapedOutArr, sf, doTruncation);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){

int32_t linIdx = ((((((i1 * s2) * s3) * s4) + ((i2 * s3) * s4)) + (i3 * s4)) + i4);
Arr4DIdxRowM(outArr,s1,s2,s3,s4,i1,i2,i3,i4) = Arr1DIdxRowM(reshapedOutArr,size,linIdx);
}
}
}
}
ClearMemSecret1(size, reshapedInArr);
ClearMemSecret1(size, reshapedOutArr);
}

void Floor2(int32_t s1, int32_t s2, uint64_t* inArr, uint64_t* outArr, int32_t sf){

int32_t size = (s1 * s2);

uint64_t* reshapedInArr = make_array<uint64_t>(size);

uint64_t* reshapedOutArr = make_array<uint64_t>(size);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){

int32_t linIdx = ((i1 * s2) + i2);
Arr1DIdxRowM(reshapedInArr,size,linIdx) = Arr2DIdxRowM(inArr,s1,s2,i1,i2);
}
}
Floor(size, reshapedInArr, reshapedOutArr, sf);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){

int32_t linIdx = ((i1 * s2) + i2);
Arr2DIdxRowM(outArr,s1,s2,i1,i2) = Arr1DIdxRowM(reshapedOutArr,size,linIdx);
}
}
ClearMemSecret1(size, reshapedInArr);
ClearMemSecret1(size, reshapedOutArr);
}

void ScaleUp1(int32_t s1, uint64_t* arr, int32_t sf){
ScaleUp(s1, arr, sf);
}

void ScaleUp2(int32_t s1, int32_t s2, uint64_t* arr, int32_t sf){

int32_t size = (s1 * s2);

uint64_t* reshapedArr = make_array<uint64_t>(size);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){

int32_t linIdx = ((i1 * s2) + i2);
Arr1DIdxRowM(reshapedArr,size,linIdx) = Arr2DIdxRowM(arr,s1,s2,i1,i2);
}
}
ScaleUp(size, reshapedArr, sf);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){

int32_t linIdx = ((i1 * s2) + i2);
Arr2DIdxRowM(arr,s1,s2,i1,i2) = Arr1DIdxRowM(reshapedArr,size,linIdx);
}
}
ClearMemSecret1(size, reshapedArr);
}

void ScaleUp3(int32_t s1, int32_t s2, int32_t s3, uint64_t* arr, int32_t sf){

int32_t size = ((s1 * s2) * s3);

uint64_t* reshapedArr = make_array<uint64_t>(size);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){

int32_t linIdx = ((((i1 * s2) * s3) + (i2 * s3)) + i3);
Arr1DIdxRowM(reshapedArr,size,linIdx) = Arr3DIdxRowM(arr,s1,s2,s3,i1,i2,i3);
}
}
}
ScaleUp(size, reshapedArr, sf);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){

int32_t linIdx = ((((i1 * s2) * s3) + (i2 * s3)) + i3);
Arr3DIdxRowM(arr,s1,s2,s3,i1,i2,i3) = Arr1DIdxRowM(reshapedArr,size,linIdx);
}
}
}
ClearMemSecret1(size, reshapedArr);
}

void ScaleUp4(int32_t s1, int32_t s2, int32_t s3, int32_t s4, uint64_t* arr, int32_t sf){

int32_t size = (((s1 * s2) * s3) * s4);

uint64_t* reshapedArr = make_array<uint64_t>(size);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){

int32_t linIdx = ((((((i1 * s2) * s3) * s4) + ((i2 * s3) * s4)) + (i3 * s4)) + i4);
Arr1DIdxRowM(reshapedArr,size,linIdx) = Arr4DIdxRowM(arr,s1,s2,s3,s4,i1,i2,i3,i4);
}
}
}
}
ScaleUp(size, reshapedArr, sf);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){

int32_t linIdx = ((((((i1 * s2) * s3) * s4) + ((i2 * s3) * s4)) + (i3 * s4)) + i4);
Arr4DIdxRowM(arr,s1,s2,s3,s4,i1,i2,i3,i4) = Arr1DIdxRowM(reshapedArr,size,linIdx);
}
}
}
}
ClearMemSecret1(size, reshapedArr);
}

void ScaleUp5(int32_t s1, int32_t s2, int32_t s3, int32_t s4, int32_t s5, uint64_t* arr, int32_t sf){

int32_t size = ((((s1 * s2) * s3) * s4) * s5);

uint64_t* reshapedArr = make_array<uint64_t>(size);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
for (uint32_t i5 =  (int32_t)0; i5 < s5; i5++){

int32_t linIdx = ((((((((i1 * s2) * s3) * s4) * s5) + (((i2 * s3) * s4) * s5)) + ((i3 * s4) * s5)) + (i4 * s5)) + i5);
Arr1DIdxRowM(reshapedArr,size,linIdx) = Arr5DIdxRowM(arr,s1,s2,s3,s4,s5,i1,i2,i3,i4,i5);
}
}
}
}
}
ScaleUp(size, reshapedArr, sf);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
for (uint32_t i5 =  (int32_t)0; i5 < s5; i5++){

int32_t linIdx = ((((((((i1 * s2) * s3) * s4) * s5) + (((i2 * s3) * s4) * s5)) + ((i3 * s4) * s5)) + (i4 * s5)) + i5);
Arr5DIdxRowM(arr,s1,s2,s3,s4,s5,i1,i2,i3,i4,i5) = Arr1DIdxRowM(reshapedArr,size,linIdx);
}
}
}
}
}
ClearMemSecret1(size, reshapedArr);
}

void ScaleDown1(int32_t s1, uint64_t* arr, int32_t sf){
ScaleDown(s1, arr, sf);
}

void ScaleDown2(int32_t s1, int32_t s2, uint64_t* arr, int32_t sf){

int32_t size = (s1 * s2);

uint64_t* reshapedArr = make_array<uint64_t>(size);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){

int32_t linIdx = ((i1 * s2) + i2);
Arr1DIdxRowM(reshapedArr,size,linIdx) = Arr2DIdxRowM(arr,s1,s2,i1,i2);
}
}
ScaleDown(size, reshapedArr, sf);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){

int32_t linIdx = ((i1 * s2) + i2);
Arr2DIdxRowM(arr,s1,s2,i1,i2) = Arr1DIdxRowM(reshapedArr,size,linIdx);
}
}
ClearMemSecret1(size, reshapedArr);
}

void ScaleDown3(int32_t s1, int32_t s2, int32_t s3, uint64_t* arr, int32_t sf){

int32_t size = ((s1 * s2) * s3);

uint64_t* reshapedArr = make_array<uint64_t>(size);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){

int32_t linIdx = ((((i1 * s2) * s3) + (i2 * s3)) + i3);
Arr1DIdxRowM(reshapedArr,size,linIdx) = Arr3DIdxRowM(arr,s1,s2,s3,i1,i2,i3);
}
}
}
ScaleDown(size, reshapedArr, sf);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){

int32_t linIdx = ((((i1 * s2) * s3) + (i2 * s3)) + i3);
Arr3DIdxRowM(arr,s1,s2,s3,i1,i2,i3) = Arr1DIdxRowM(reshapedArr,size,linIdx);
}
}
}
ClearMemSecret1(size, reshapedArr);
}

void ScaleDown4(int32_t s1, int32_t s2, int32_t s3, int32_t s4, uint64_t* arr, int32_t sf){

int32_t size = (((s1 * s2) * s3) * s4);

uint64_t* reshapedArr = make_array<uint64_t>(size);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){

int32_t linIdx = ((((((i1 * s2) * s3) * s4) + ((i2 * s3) * s4)) + (i3 * s4)) + i4);
Arr1DIdxRowM(reshapedArr,size,linIdx) = Arr4DIdxRowM(arr,s1,s2,s3,s4,i1,i2,i3,i4);
}
}
}
}
ScaleDown(size, reshapedArr, sf);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){

int32_t linIdx = ((((((i1 * s2) * s3) * s4) + ((i2 * s3) * s4)) + (i3 * s4)) + i4);
Arr4DIdxRowM(arr,s1,s2,s3,s4,i1,i2,i3,i4) = Arr1DIdxRowM(reshapedArr,size,linIdx);
}
}
}
}
ClearMemSecret1(size, reshapedArr);
}

void ScaleDown5(int32_t s1, int32_t s2, int32_t s3, int32_t s4, int32_t s5, uint64_t* arr, int32_t sf){

int32_t size = ((((s1 * s2) * s3) * s4) * s5);

uint64_t* reshapedArr = make_array<uint64_t>(size);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
for (uint32_t i5 =  (int32_t)0; i5 < s5; i5++){

int32_t linIdx = ((((((((i1 * s2) * s3) * s4) * s5) + (((i2 * s3) * s4) * s5)) + ((i3 * s4) * s5)) + (i4 * s5)) + i5);
Arr1DIdxRowM(reshapedArr,size,linIdx) = Arr5DIdxRowM(arr,s1,s2,s3,s4,s5,i1,i2,i3,i4,i5);
}
}
}
}
}
ScaleDown(size, reshapedArr, sf);
for (uint32_t i1 =  (int32_t)0; i1 < s1; i1++){
for (uint32_t i2 =  (int32_t)0; i2 < s2; i2++){
for (uint32_t i3 =  (int32_t)0; i3 < s3; i3++){
for (uint32_t i4 =  (int32_t)0; i4 < s4; i4++){
for (uint32_t i5 =  (int32_t)0; i5 < s5; i5++){

int32_t linIdx = ((((((((i1 * s2) * s3) * s4) * s5) + (((i2 * s3) * s4) * s5)) + ((i3 * s4) * s5)) + (i4 * s5)) + i5);
Arr5DIdxRowM(arr,s1,s2,s3,s4,s5,i1,i2,i3,i4,i5) = Arr1DIdxRowM(reshapedArr,size,linIdx);
}
}
}
}
}
ClearMemSecret1(size, reshapedArr);
}

void Tanh1(int32_t s1, uint64_t* inp, uint64_t* out, int32_t sA, int32_t sB, int32_t bwA, int32_t bwB, int32_t LUTBITS){
TanhImpl(LUTBITS, s1, sA, sB, bwA, bwB, inp, out);
}

void Tanh2(int32_t s1, int32_t s2, uint64_t* inp, uint64_t* out, int32_t sA, int32_t sB, int32_t bwA, int32_t bwB, int32_t LUTBITS){

int32_t size = (s1 * s2);

uint64_t* inpCopy = make_array<uint64_t>(size);

uint64_t* outCopy = make_array<uint64_t>(size);
for (uint32_t i =  (int32_t)0; i < s1; i++){
for (uint32_t j =  (int32_t)0; j < s2; j++){
Arr1DIdxRowM(inpCopy,size,((i * s1) + j)) = Arr2DIdxRowM(inp,s1,s2,i,j);
}
}
TanhImpl(LUTBITS, size, sA, sB, bwA, bwB, inpCopy, outCopy);
for (uint32_t i =  (int32_t)0; i < s1; i++){
for (uint32_t j =  (int32_t)0; j < s2; j++){
Arr2DIdxRowM(out,s1,s2,i,j) = Arr1DIdxRowM(outCopy,size,((i * s2) + j));
}
}
}

void Tanh3(int32_t s1, int32_t s2, int32_t s3, uint64_t* inp, uint64_t* out, int32_t sA, int32_t sB, int32_t bwA, int32_t bwB, int32_t LUTBITS){

int32_t size = ((s1 * s2) * s3);

uint64_t* inpCopy = make_array<uint64_t>(size);

uint64_t* outCopy = make_array<uint64_t>(size);
for (uint32_t i =  (int32_t)0; i < s1; i++){
for (uint32_t j =  (int32_t)0; j < s2; j++){
for (uint32_t k =  (int32_t)0; k < s3; k++){
Arr1DIdxRowM(inpCopy,size,((((i * s2) * s3) + (j * s3)) + k)) = Arr3DIdxRowM(inp,s1,s2,s3,i,j,k);
}
}
}
TanhImpl(LUTBITS, size, sA, sB, bwA, bwB, inpCopy, outCopy);
for (uint32_t i =  (int32_t)0; i < s1; i++){
for (uint32_t j =  (int32_t)0; j < s2; j++){
for (uint32_t k =  (int32_t)0; k < s3; k++){
Arr3DIdxRowM(out,s1,s2,s3,i,j,k) = Arr1DIdxRowM(outCopy,size,((((i * s2) * s3) + (j * s3)) + k));
}
}
}
}

void Tanh4(int32_t s1, int32_t s2, int32_t s3, int32_t s4, uint64_t* inp, uint64_t* out, int32_t sA, int32_t sB, int32_t bwA, int32_t bwB, int32_t LUTBITS){

int32_t size = (((s1 * s2) * s3) * s4);

uint64_t* inpCopy = make_array<uint64_t>(size);

uint64_t* outCopy = make_array<uint64_t>(size);
for (uint32_t i =  (int32_t)0; i < s1; i++){
for (uint32_t j =  (int32_t)0; j < s2; j++){
for (uint32_t k =  (int32_t)0; k < s3; k++){
for (uint32_t l =  (int32_t)0; l < s4; l++){
Arr1DIdxRowM(inpCopy,size,((((((i * s2) * s3) * s4) + ((j * s3) * s4)) + (k * s4)) + l)) = Arr4DIdxRowM(inp,s1,s2,s3,s4,i,j,k,l);
}
}
}
}
TanhImpl(LUTBITS, size, sA, sB, bwA, bwB, inpCopy, outCopy);
for (uint32_t i =  (int32_t)0; i < s1; i++){
for (uint32_t j =  (int32_t)0; j < s2; j++){
for (uint32_t k =  (int32_t)0; k < s3; k++){
for (uint32_t l =  (int32_t)0; l < s4; l++){
Arr4DIdxRowM(out,s1,s2,s3,s4,i,j,k,l) = Arr1DIdxRowM(inpCopy,size,((((((i * s2) * s3) * s4) + ((j * s3) * s4)) + (k * s4)) + l));
}
}
}
}
}

void Sigmoid1(int32_t s1, uint64_t* inp, uint64_t* out, int32_t sA, int32_t sB, int32_t bwA, int32_t bwB, int32_t LUTBITS){
SigmoidImpl(LUTBITS, s1, sA, sB, bwA, bwB, inp, out);
}

void Sigmoid2(int32_t s1, int32_t s2, uint64_t* inp, uint64_t* out, int32_t sA, int32_t sB, int32_t bwA, int32_t bwB, int32_t LUTBITS){

int32_t size = (s1 * s2);

uint64_t* inpCopy = make_array<uint64_t>(size);

uint64_t* outCopy = make_array<uint64_t>(size);
for (uint32_t i =  (int32_t)0; i < s1; i++){
for (uint32_t j =  (int32_t)0; j < s2; j++){
Arr1DIdxRowM(inpCopy,size,((i * s1) + j)) = Arr2DIdxRowM(inp,s1,s2,i,j);
}
}
SigmoidImpl(LUTBITS, size, sA, sB, bwA, bwB, inpCopy, outCopy);
for (uint32_t i =  (int32_t)0; i < s1; i++){
for (uint32_t j =  (int32_t)0; j < s2; j++){
Arr2DIdxRowM(out,s1,s2,i,j) = Arr1DIdxRowM(outCopy,size,((i * s2) + j));
}
}
}

void Sigmoid3(int32_t s1, int32_t s2, int32_t s3, uint64_t* inp, uint64_t* out, int32_t sA, int32_t sB, int32_t bwA, int32_t bwB, int32_t LUTBITS){

int32_t size = ((s1 * s2) * s3);

uint64_t* inpCopy = make_array<uint64_t>(size);

uint64_t* outCopy = make_array<uint64_t>(size);
for (uint32_t i =  (int32_t)0; i < s1; i++){
for (uint32_t j =  (int32_t)0; j < s2; j++){
for (uint32_t k =  (int32_t)0; k < s3; k++){
Arr1DIdxRowM(inpCopy,size,((((i * s2) * s3) + (j * s3)) + k)) = Arr3DIdxRowM(inp,s1,s2,s3,i,j,k);
}
}
}
SigmoidImpl(LUTBITS, size, sA, sB, bwA, bwB, inpCopy, outCopy);
for (uint32_t i =  (int32_t)0; i < s1; i++){
for (uint32_t j =  (int32_t)0; j < s2; j++){
for (uint32_t k =  (int32_t)0; k < s3; k++){
Arr3DIdxRowM(out,s1,s2,s3,i,j,k) = Arr1DIdxRowM(outCopy,size,((((i * s2) * s3) + (j * s3)) + k));
}
}
}
}

void Sigmoid4(int32_t s1, int32_t s2, int32_t s3, int32_t s4, uint64_t* inp, uint64_t* out, int32_t sA, int32_t sB, int32_t bwA, int32_t bwB, int32_t LUTBITS){

int32_t size = (((s1 * s2) * s3) * s4);

uint64_t* inpCopy = make_array<uint64_t>(size);

uint64_t* outCopy = make_array<uint64_t>(size);
for (uint32_t i =  (int32_t)0; i < s1; i++){
for (uint32_t j =  (int32_t)0; j < s2; j++){
for (uint32_t k =  (int32_t)0; k < s3; k++){
for (uint32_t l =  (int32_t)0; l < s4; l++){
Arr1DIdxRowM(inpCopy,size,((((((i * s2) * s3) * s4) + ((j * s3) * s4)) + (k * s4)) + l)) = Arr4DIdxRowM(inp,s1,s2,s3,s4,i,j,k,l);
}
}
}
}
SigmoidImpl(LUTBITS, size, sA, sB, bwA, bwB, inpCopy, outCopy);
for (uint32_t i =  (int32_t)0; i < s1; i++){
for (uint32_t j =  (int32_t)0; j < s2; j++){
for (uint32_t k =  (int32_t)0; k < s3; k++){
for (uint32_t l =  (int32_t)0; l < s4; l++){
Arr4DIdxRowM(out,s1,s2,s3,s4,i,j,k,l) = Arr1DIdxRowM(inpCopy,size,((((((i * s2) * s3) * s4) + ((j * s3) * s4)) + (k * s4)) + l));
}
}
}
}
}

void Sqrt1(int32_t s1, uint64_t* inp, uint64_t* out, int32_t sA, int32_t sB, int32_t bwA, int32_t bwB, uint32_t inverse, int32_t LUTBITS){
SqrtImpl(LUTBITS, s1, sA, sB, bwA, bwB, inverse, inp, out);
}

void Sqrt2(int32_t s1, int32_t s2, uint64_t* inp, uint64_t* out, int32_t sA, int32_t sB, int32_t bwA, int32_t bwB, uint32_t inverse, int32_t LUTBITS){

int32_t size = (s1 * s2);

uint64_t* inpCopy = make_array<uint64_t>(size);

uint64_t* outCopy = make_array<uint64_t>(size);
for (uint32_t i =  (int32_t)0; i < s1; i++){
for (uint32_t j =  (int32_t)0; j < s2; j++){
Arr1DIdxRowM(inpCopy,size,((i * s1) + j)) = Arr2DIdxRowM(inp,s1,s2,i,j);
}
}
SqrtImpl(LUTBITS, size, sA, sB, bwA, bwB, inverse, inpCopy, outCopy);
for (uint32_t i =  (int32_t)0; i < s1; i++){
for (uint32_t j =  (int32_t)0; j < s2; j++){
Arr2DIdxRowM(out,s1,s2,i,j) = Arr1DIdxRowM(outCopy,size,((i * s2) + j));
}
}
}

void Sqrt3(int32_t s1, int32_t s2, int32_t s3, uint64_t* inp, uint64_t* out, int32_t sA, int32_t sB, int32_t bwA, int32_t bwB, uint32_t inverse, int32_t LUTBITS){

int32_t size = ((s1 * s2) * s3);

uint64_t* inpCopy = make_array<uint64_t>(size);

uint64_t* outCopy = make_array<uint64_t>(size);
for (uint32_t i =  (int32_t)0; i < s1; i++){
for (uint32_t j =  (int32_t)0; j < s2; j++){
for (uint32_t k =  (int32_t)0; k < s3; k++){
Arr1DIdxRowM(inpCopy,size,((((i * s2) * s3) + (j * s3)) + k)) = Arr3DIdxRowM(inp,s1,s2,s3,i,j,k);
}
}
}
SqrtImpl(LUTBITS, size, sA, sB, bwA, bwB, inverse, inpCopy, outCopy);
for (uint32_t i =  (int32_t)0; i < s1; i++){
for (uint32_t j =  (int32_t)0; j < s2; j++){
for (uint32_t k =  (int32_t)0; k < s3; k++){
Arr3DIdxRowM(out,s1,s2,s3,i,j,k) = Arr1DIdxRowM(outCopy,size,((((i * s2) * s3) + (j * s3)) + k));
}
}
}
}

void Sqrt4(int32_t s1, int32_t s2, int32_t s3, int32_t s4, uint64_t* inp, uint64_t* out, int32_t sA, int32_t sB, int32_t bwA, int32_t bwB, uint32_t inverse, int32_t LUTBITS){

int32_t size = (((s1 * s2) * s3) * s4);

uint64_t* inpCopy = make_array<uint64_t>(size);

uint64_t* outCopy = make_array<uint64_t>(size);
for (uint32_t i =  (int32_t)0; i < s1; i++){
for (uint32_t j =  (int32_t)0; j < s2; j++){
for (uint32_t k =  (int32_t)0; k < s3; k++){
for (uint32_t l =  (int32_t)0; l < s4; l++){
Arr1DIdxRowM(inpCopy,size,((((((i * s2) * s3) * s4) + ((j * s3) * s4)) + (k * s4)) + l)) = Arr4DIdxRowM(inp,s1,s2,s3,s4,i,j,k,l);
}
}
}
}
SqrtImpl(LUTBITS, size, sA, sB, bwA, bwB, inverse, inpCopy, outCopy);
for (uint32_t i =  (int32_t)0; i < s1; i++){
for (uint32_t j =  (int32_t)0; j < s2; j++){
for (uint32_t k =  (int32_t)0; k < s3; k++){
for (uint32_t l =  (int32_t)0; l < s4; l++){
Arr4DIdxRowM(out,s1,s2,s3,s4,i,j,k,l) = Arr1DIdxRowM(inpCopy,size,((((((i * s2) * s3) * s4) + ((j * s3) * s4)) + (k * s4)) + l));
}
}
}
}
}


int main(int argc, char** argv)
{
ArgMapping amap;
amap.arg("r", party, "Role of party: ALICE/SERVER = 1; BOB/CLIENT = 2");
amap.arg("port", port, "Port Number");
amap.arg("ip", address, "IP Address of server (ALICE)");
amap.arg("nt", num_threads, "Number of Threads");
amap.arg("ell", bitlength, "Uniform Bitwidth");
amap.parse(argc, argv);

assert(party==SERVER || party==CLIENT);



uint64_t* tmp0 = make_array<uint64_t>( (int32_t)1,  (int32_t)3,  (int32_t)224,  (int32_t)224);
/* Variable to read the clear value corresponding to the input variable tmp0 at (9027,1-9027,46) */
uint64_t __tmp_in_tmp0;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)1; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)3; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)224; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)224; i3++){
if ((party == CLIENT)) {
cin >> __tmp_in_tmp0;
}
Arr4DIdxRowM(tmp0, (int32_t)1, (int32_t)3, (int32_t)224, (int32_t)224,i0,i1,i2,i3) = (party == CLIENT) ? __tmp_in_tmp0 : 0;
}
}
}
}

uint64_t* tmp1 = make_array<uint64_t>( (int32_t)16,  (int32_t)3,  (int32_t)3,  (int32_t)3);
/* Variable to read the clear value corresponding to the input variable tmp1 at (9030,1-9030,43) */
uint64_t __tmp_in_tmp1;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)16; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)3; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)3; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)3; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp1;
}
Arr4DIdxRowM(tmp1, (int32_t)16, (int32_t)3, (int32_t)3, (int32_t)3,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp1 : 0;
}
}
}
}

uint64_t* tmp2 = make_array<uint64_t>( (int32_t)16);
/* Variable to read the clear value corresponding to the input variable tmp2 at (9033,1-9033,34) */
uint64_t __tmp_in_tmp2;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)16; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp2;
}
Arr1DIdxRowM(tmp2, (int32_t)16,i0) = (party == SERVER) ? __tmp_in_tmp2 : 0;
}

uint64_t* tmp3 = make_array<uint64_t>( (int32_t)16);
/* Variable to read the clear value corresponding to the input variable tmp3 at (9036,1-9036,34) */
uint64_t __tmp_in_tmp3;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)16; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp3;
}
Arr1DIdxRowM(tmp3, (int32_t)16,i0) = (party == SERVER) ? __tmp_in_tmp3 : 0;
}

uint64_t* tmp4 = make_array<uint64_t>( (int32_t)16,  (int32_t)16,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp4 at (9039,1-9039,44) */
uint64_t __tmp_in_tmp4;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)16; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)16; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp4;
}
Arr4DIdxRowM(tmp4, (int32_t)16, (int32_t)16, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp4 : 0;
}
}
}
}

uint64_t* tmp5 = make_array<uint64_t>( (int32_t)16,  (int32_t)1,  (int32_t)3,  (int32_t)3);
/* Variable to read the clear value corresponding to the input variable tmp5 at (9042,1-9042,43) */
uint64_t __tmp_in_tmp5;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)16; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)1; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)3; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)3; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp5;
}
Arr4DIdxRowM(tmp5, (int32_t)16, (int32_t)1, (int32_t)3, (int32_t)3,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp5 : 0;
}
}
}
}

uint64_t* tmp6 = make_array<uint64_t>( (int32_t)16,  (int32_t)16,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp6 at (9045,1-9045,44) */
uint64_t __tmp_in_tmp6;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)16; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)16; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp6;
}
Arr4DIdxRowM(tmp6, (int32_t)16, (int32_t)16, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp6 : 0;
}
}
}
}

uint64_t* tmp7 = make_array<uint64_t>( (int32_t)64,  (int32_t)16,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp7 at (9048,1-9048,44) */
uint64_t __tmp_in_tmp7;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)64; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)16; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp7;
}
Arr4DIdxRowM(tmp7, (int32_t)64, (int32_t)16, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp7 : 0;
}
}
}
}

uint64_t* tmp8 = make_array<uint64_t>( (int32_t)64);
/* Variable to read the clear value corresponding to the input variable tmp8 at (9051,1-9051,34) */
uint64_t __tmp_in_tmp8;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)64; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp8;
}
Arr1DIdxRowM(tmp8, (int32_t)64,i0) = (party == SERVER) ? __tmp_in_tmp8 : 0;
}

uint64_t* tmp9 = make_array<uint64_t>( (int32_t)64);
/* Variable to read the clear value corresponding to the input variable tmp9 at (9054,1-9054,34) */
uint64_t __tmp_in_tmp9;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)64; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp9;
}
Arr1DIdxRowM(tmp9, (int32_t)64,i0) = (party == SERVER) ? __tmp_in_tmp9 : 0;
}

uint64_t* tmp10 = make_array<uint64_t>( (int32_t)64,  (int32_t)1,  (int32_t)3,  (int32_t)3);
/* Variable to read the clear value corresponding to the input variable tmp10 at (9057,1-9057,44) */
uint64_t __tmp_in_tmp10;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)64; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)1; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)3; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)3; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp10;
}
Arr4DIdxRowM(tmp10, (int32_t)64, (int32_t)1, (int32_t)3, (int32_t)3,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp10 : 0;
}
}
}
}

uint64_t* tmp11 = make_array<uint64_t>( (int32_t)24,  (int32_t)64,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp11 at (9060,1-9060,45) */
uint64_t __tmp_in_tmp11;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)24; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)64; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp11;
}
Arr4DIdxRowM(tmp11, (int32_t)24, (int32_t)64, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp11 : 0;
}
}
}
}

uint64_t* tmp12 = make_array<uint64_t>( (int32_t)24);
/* Variable to read the clear value corresponding to the input variable tmp12 at (9063,1-9063,35) */
uint64_t __tmp_in_tmp12;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)24; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp12;
}
Arr1DIdxRowM(tmp12, (int32_t)24,i0) = (party == SERVER) ? __tmp_in_tmp12 : 0;
}

uint64_t* tmp13 = make_array<uint64_t>( (int32_t)24);
/* Variable to read the clear value corresponding to the input variable tmp13 at (9066,1-9066,35) */
uint64_t __tmp_in_tmp13;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)24; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp13;
}
Arr1DIdxRowM(tmp13, (int32_t)24,i0) = (party == SERVER) ? __tmp_in_tmp13 : 0;
}

uint64_t* tmp14 = make_array<uint64_t>( (int32_t)16,  (int32_t)1,  (int32_t)3,  (int32_t)3);
/* Variable to read the clear value corresponding to the input variable tmp14 at (9069,1-9069,44) */
uint64_t __tmp_in_tmp14;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)16; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)1; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)3; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)3; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp14;
}
Arr4DIdxRowM(tmp14, (int32_t)16, (int32_t)1, (int32_t)3, (int32_t)3,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp14 : 0;
}
}
}
}

uint64_t* tmp15 = make_array<uint64_t>( (int32_t)24,  (int32_t)16,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp15 at (9072,1-9072,45) */
uint64_t __tmp_in_tmp15;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)24; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)16; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp15;
}
Arr4DIdxRowM(tmp15, (int32_t)24, (int32_t)16, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp15 : 0;
}
}
}
}

uint64_t* tmp16 = make_array<uint64_t>( (int32_t)72,  (int32_t)24,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp16 at (9075,1-9075,45) */
uint64_t __tmp_in_tmp16;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)72; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)24; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp16;
}
Arr4DIdxRowM(tmp16, (int32_t)72, (int32_t)24, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp16 : 0;
}
}
}
}

uint64_t* tmp17 = make_array<uint64_t>( (int32_t)72);
/* Variable to read the clear value corresponding to the input variable tmp17 at (9078,1-9078,35) */
uint64_t __tmp_in_tmp17;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)72; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp17;
}
Arr1DIdxRowM(tmp17, (int32_t)72,i0) = (party == SERVER) ? __tmp_in_tmp17 : 0;
}

uint64_t* tmp18 = make_array<uint64_t>( (int32_t)72);
/* Variable to read the clear value corresponding to the input variable tmp18 at (9081,1-9081,35) */
uint64_t __tmp_in_tmp18;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)72; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp18;
}
Arr1DIdxRowM(tmp18, (int32_t)72,i0) = (party == SERVER) ? __tmp_in_tmp18 : 0;
}

uint64_t* tmp19 = make_array<uint64_t>( (int32_t)72,  (int32_t)1,  (int32_t)3,  (int32_t)3);
/* Variable to read the clear value corresponding to the input variable tmp19 at (9084,1-9084,44) */
uint64_t __tmp_in_tmp19;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)72; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)1; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)3; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)3; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp19;
}
Arr4DIdxRowM(tmp19, (int32_t)72, (int32_t)1, (int32_t)3, (int32_t)3,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp19 : 0;
}
}
}
}

uint64_t* tmp20 = make_array<uint64_t>( (int32_t)24,  (int32_t)72,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp20 at (9087,1-9087,45) */
uint64_t __tmp_in_tmp20;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)24; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)72; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp20;
}
Arr4DIdxRowM(tmp20, (int32_t)24, (int32_t)72, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp20 : 0;
}
}
}
}

uint64_t* tmp21 = make_array<uint64_t>( (int32_t)72,  (int32_t)24,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp21 at (9090,1-9090,45) */
uint64_t __tmp_in_tmp21;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)72; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)24; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp21;
}
Arr4DIdxRowM(tmp21, (int32_t)72, (int32_t)24, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp21 : 0;
}
}
}
}

uint64_t* tmp22 = make_array<uint64_t>( (int32_t)72,  (int32_t)1,  (int32_t)5,  (int32_t)5);
/* Variable to read the clear value corresponding to the input variable tmp22 at (9093,1-9093,44) */
uint64_t __tmp_in_tmp22;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)72; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)1; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)5; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)5; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp22;
}
Arr4DIdxRowM(tmp22, (int32_t)72, (int32_t)1, (int32_t)5, (int32_t)5,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp22 : 0;
}
}
}
}

uint64_t* tmp23 = make_array<uint64_t>( (int32_t)18,  (int32_t)72,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp23 at (9096,1-9096,45) */
uint64_t __tmp_in_tmp23;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)18; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)72; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp23;
}
Arr4DIdxRowM(tmp23, (int32_t)18, (int32_t)72, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp23 : 0;
}
}
}
}

uint64_t* tmp24 = make_array<uint64_t>( (int32_t)18);
/* Variable to read the clear value corresponding to the input variable tmp24 at (9099,1-9099,35) */
uint64_t __tmp_in_tmp24;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)18; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp24;
}
Arr1DIdxRowM(tmp24, (int32_t)18,i0) = (party == SERVER) ? __tmp_in_tmp24 : 0;
}

uint64_t* tmp25 = make_array<uint64_t>( (int32_t)18);
/* Variable to read the clear value corresponding to the input variable tmp25 at (9102,1-9102,35) */
uint64_t __tmp_in_tmp25;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)18; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp25;
}
Arr1DIdxRowM(tmp25, (int32_t)18,i0) = (party == SERVER) ? __tmp_in_tmp25 : 0;
}

uint64_t* tmp26 = make_array<uint64_t>( (int32_t)72,  (int32_t)18,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp26 at (9105,1-9105,45) */
uint64_t __tmp_in_tmp26;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)72; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)18; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp26;
}
Arr4DIdxRowM(tmp26, (int32_t)72, (int32_t)18, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp26 : 0;
}
}
}
}

uint64_t* tmp27 = make_array<uint64_t>( (int32_t)40,  (int32_t)72,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp27 at (9108,1-9108,45) */
uint64_t __tmp_in_tmp27;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)40; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)72; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp27;
}
Arr4DIdxRowM(tmp27, (int32_t)40, (int32_t)72, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp27 : 0;
}
}
}
}

uint64_t* tmp28 = make_array<uint64_t>( (int32_t)40);
/* Variable to read the clear value corresponding to the input variable tmp28 at (9111,1-9111,35) */
uint64_t __tmp_in_tmp28;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)40; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp28;
}
Arr1DIdxRowM(tmp28, (int32_t)40,i0) = (party == SERVER) ? __tmp_in_tmp28 : 0;
}

uint64_t* tmp29 = make_array<uint64_t>( (int32_t)40);
/* Variable to read the clear value corresponding to the input variable tmp29 at (9114,1-9114,35) */
uint64_t __tmp_in_tmp29;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)40; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp29;
}
Arr1DIdxRowM(tmp29, (int32_t)40,i0) = (party == SERVER) ? __tmp_in_tmp29 : 0;
}

uint64_t* tmp30 = make_array<uint64_t>( (int32_t)24,  (int32_t)1,  (int32_t)3,  (int32_t)3);
/* Variable to read the clear value corresponding to the input variable tmp30 at (9117,1-9117,44) */
uint64_t __tmp_in_tmp30;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)24; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)1; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)3; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)3; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp30;
}
Arr4DIdxRowM(tmp30, (int32_t)24, (int32_t)1, (int32_t)3, (int32_t)3,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp30 : 0;
}
}
}
}

uint64_t* tmp31 = make_array<uint64_t>( (int32_t)40,  (int32_t)24,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp31 at (9120,1-9120,45) */
uint64_t __tmp_in_tmp31;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)40; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)24; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp31;
}
Arr4DIdxRowM(tmp31, (int32_t)40, (int32_t)24, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp31 : 0;
}
}
}
}

uint64_t* tmp32 = make_array<uint64_t>( (int32_t)120,  (int32_t)40,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp32 at (9123,1-9123,46) */
uint64_t __tmp_in_tmp32;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)120; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)40; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp32;
}
Arr4DIdxRowM(tmp32, (int32_t)120, (int32_t)40, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp32 : 0;
}
}
}
}

uint64_t* tmp33 = make_array<uint64_t>( (int32_t)120);
/* Variable to read the clear value corresponding to the input variable tmp33 at (9126,1-9126,36) */
uint64_t __tmp_in_tmp33;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)120; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp33;
}
Arr1DIdxRowM(tmp33, (int32_t)120,i0) = (party == SERVER) ? __tmp_in_tmp33 : 0;
}

uint64_t* tmp34 = make_array<uint64_t>( (int32_t)120);
/* Variable to read the clear value corresponding to the input variable tmp34 at (9129,1-9129,36) */
uint64_t __tmp_in_tmp34;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)120; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp34;
}
Arr1DIdxRowM(tmp34, (int32_t)120,i0) = (party == SERVER) ? __tmp_in_tmp34 : 0;
}

uint64_t* tmp35 = make_array<uint64_t>( (int32_t)120,  (int32_t)1,  (int32_t)5,  (int32_t)5);
/* Variable to read the clear value corresponding to the input variable tmp35 at (9132,1-9132,45) */
uint64_t __tmp_in_tmp35;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)120; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)1; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)5; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)5; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp35;
}
Arr4DIdxRowM(tmp35, (int32_t)120, (int32_t)1, (int32_t)5, (int32_t)5,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp35 : 0;
}
}
}
}

uint64_t* tmp36 = make_array<uint64_t>( (int32_t)30,  (int32_t)120,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp36 at (9135,1-9135,46) */
uint64_t __tmp_in_tmp36;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)30; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)120; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp36;
}
Arr4DIdxRowM(tmp36, (int32_t)30, (int32_t)120, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp36 : 0;
}
}
}
}

uint64_t* tmp37 = make_array<uint64_t>( (int32_t)30);
/* Variable to read the clear value corresponding to the input variable tmp37 at (9138,1-9138,35) */
uint64_t __tmp_in_tmp37;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)30; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp37;
}
Arr1DIdxRowM(tmp37, (int32_t)30,i0) = (party == SERVER) ? __tmp_in_tmp37 : 0;
}

uint64_t* tmp38 = make_array<uint64_t>( (int32_t)30);
/* Variable to read the clear value corresponding to the input variable tmp38 at (9141,1-9141,35) */
uint64_t __tmp_in_tmp38;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)30; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp38;
}
Arr1DIdxRowM(tmp38, (int32_t)30,i0) = (party == SERVER) ? __tmp_in_tmp38 : 0;
}

uint64_t* tmp39 = make_array<uint64_t>( (int32_t)120,  (int32_t)30,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp39 at (9144,1-9144,46) */
uint64_t __tmp_in_tmp39;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)120; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)30; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp39;
}
Arr4DIdxRowM(tmp39, (int32_t)120, (int32_t)30, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp39 : 0;
}
}
}
}

uint64_t* tmp40 = make_array<uint64_t>( (int32_t)40,  (int32_t)120,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp40 at (9147,1-9147,46) */
uint64_t __tmp_in_tmp40;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)40; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)120; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp40;
}
Arr4DIdxRowM(tmp40, (int32_t)40, (int32_t)120, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp40 : 0;
}
}
}
}

uint64_t* tmp41 = make_array<uint64_t>( (int32_t)120,  (int32_t)40,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp41 at (9150,1-9150,46) */
uint64_t __tmp_in_tmp41;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)120; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)40; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp41;
}
Arr4DIdxRowM(tmp41, (int32_t)120, (int32_t)40, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp41 : 0;
}
}
}
}

uint64_t* tmp42 = make_array<uint64_t>( (int32_t)120,  (int32_t)1,  (int32_t)5,  (int32_t)5);
/* Variable to read the clear value corresponding to the input variable tmp42 at (9153,1-9153,45) */
uint64_t __tmp_in_tmp42;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)120; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)1; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)5; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)5; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp42;
}
Arr4DIdxRowM(tmp42, (int32_t)120, (int32_t)1, (int32_t)5, (int32_t)5,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp42 : 0;
}
}
}
}

uint64_t* tmp43 = make_array<uint64_t>( (int32_t)30,  (int32_t)120,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp43 at (9156,1-9156,46) */
uint64_t __tmp_in_tmp43;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)30; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)120; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp43;
}
Arr4DIdxRowM(tmp43, (int32_t)30, (int32_t)120, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp43 : 0;
}
}
}
}

uint64_t* tmp44 = make_array<uint64_t>( (int32_t)120,  (int32_t)30,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp44 at (9159,1-9159,46) */
uint64_t __tmp_in_tmp44;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)120; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)30; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp44;
}
Arr4DIdxRowM(tmp44, (int32_t)120, (int32_t)30, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp44 : 0;
}
}
}
}

uint64_t* tmp45 = make_array<uint64_t>( (int32_t)40,  (int32_t)120,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp45 at (9162,1-9162,46) */
uint64_t __tmp_in_tmp45;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)40; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)120; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp45;
}
Arr4DIdxRowM(tmp45, (int32_t)40, (int32_t)120, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp45 : 0;
}
}
}
}

uint64_t* tmp46 = make_array<uint64_t>( (int32_t)240,  (int32_t)40,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp46 at (9165,1-9165,46) */
uint64_t __tmp_in_tmp46;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)240; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)40; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp46;
}
Arr4DIdxRowM(tmp46, (int32_t)240, (int32_t)40, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp46 : 0;
}
}
}
}

uint64_t* tmp47 = make_array<uint64_t>( (int32_t)240);
/* Variable to read the clear value corresponding to the input variable tmp47 at (9168,1-9168,36) */
uint64_t __tmp_in_tmp47;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)240; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp47;
}
Arr1DIdxRowM(tmp47, (int32_t)240,i0) = (party == SERVER) ? __tmp_in_tmp47 : 0;
}

uint64_t* tmp48 = make_array<uint64_t>( (int32_t)240);
/* Variable to read the clear value corresponding to the input variable tmp48 at (9171,1-9171,36) */
uint64_t __tmp_in_tmp48;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)240; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp48;
}
Arr1DIdxRowM(tmp48, (int32_t)240,i0) = (party == SERVER) ? __tmp_in_tmp48 : 0;
}

uint64_t* tmp49 = make_array<uint64_t>( (int32_t)240,  (int32_t)1,  (int32_t)3,  (int32_t)3);
/* Variable to read the clear value corresponding to the input variable tmp49 at (9174,1-9174,45) */
uint64_t __tmp_in_tmp49;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)240; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)1; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)3; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)3; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp49;
}
Arr4DIdxRowM(tmp49, (int32_t)240, (int32_t)1, (int32_t)3, (int32_t)3,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp49 : 0;
}
}
}
}

uint64_t* tmp50 = make_array<uint64_t>( (int32_t)80,  (int32_t)240,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp50 at (9177,1-9177,46) */
uint64_t __tmp_in_tmp50;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)80; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)240; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp50;
}
Arr4DIdxRowM(tmp50, (int32_t)80, (int32_t)240, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp50 : 0;
}
}
}
}

uint64_t* tmp51 = make_array<uint64_t>( (int32_t)80);
/* Variable to read the clear value corresponding to the input variable tmp51 at (9180,1-9180,35) */
uint64_t __tmp_in_tmp51;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)80; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp51;
}
Arr1DIdxRowM(tmp51, (int32_t)80,i0) = (party == SERVER) ? __tmp_in_tmp51 : 0;
}

uint64_t* tmp52 = make_array<uint64_t>( (int32_t)80);
/* Variable to read the clear value corresponding to the input variable tmp52 at (9183,1-9183,35) */
uint64_t __tmp_in_tmp52;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)80; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp52;
}
Arr1DIdxRowM(tmp52, (int32_t)80,i0) = (party == SERVER) ? __tmp_in_tmp52 : 0;
}

uint64_t* tmp53 = make_array<uint64_t>( (int32_t)40,  (int32_t)1,  (int32_t)3,  (int32_t)3);
/* Variable to read the clear value corresponding to the input variable tmp53 at (9186,1-9186,44) */
uint64_t __tmp_in_tmp53;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)40; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)1; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)3; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)3; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp53;
}
Arr4DIdxRowM(tmp53, (int32_t)40, (int32_t)1, (int32_t)3, (int32_t)3,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp53 : 0;
}
}
}
}

uint64_t* tmp54 = make_array<uint64_t>( (int32_t)80,  (int32_t)40,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp54 at (9189,1-9189,45) */
uint64_t __tmp_in_tmp54;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)80; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)40; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp54;
}
Arr4DIdxRowM(tmp54, (int32_t)80, (int32_t)40, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp54 : 0;
}
}
}
}

uint64_t* tmp55 = make_array<uint64_t>( (int32_t)200,  (int32_t)80,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp55 at (9192,1-9192,46) */
uint64_t __tmp_in_tmp55;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)200; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)80; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp55;
}
Arr4DIdxRowM(tmp55, (int32_t)200, (int32_t)80, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp55 : 0;
}
}
}
}

uint64_t* tmp56 = make_array<uint64_t>( (int32_t)200);
/* Variable to read the clear value corresponding to the input variable tmp56 at (9195,1-9195,36) */
uint64_t __tmp_in_tmp56;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)200; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp56;
}
Arr1DIdxRowM(tmp56, (int32_t)200,i0) = (party == SERVER) ? __tmp_in_tmp56 : 0;
}

uint64_t* tmp57 = make_array<uint64_t>( (int32_t)200);
/* Variable to read the clear value corresponding to the input variable tmp57 at (9198,1-9198,36) */
uint64_t __tmp_in_tmp57;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)200; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp57;
}
Arr1DIdxRowM(tmp57, (int32_t)200,i0) = (party == SERVER) ? __tmp_in_tmp57 : 0;
}

uint64_t* tmp58 = make_array<uint64_t>( (int32_t)200,  (int32_t)1,  (int32_t)3,  (int32_t)3);
/* Variable to read the clear value corresponding to the input variable tmp58 at (9201,1-9201,45) */
uint64_t __tmp_in_tmp58;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)200; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)1; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)3; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)3; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp58;
}
Arr4DIdxRowM(tmp58, (int32_t)200, (int32_t)1, (int32_t)3, (int32_t)3,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp58 : 0;
}
}
}
}

uint64_t* tmp59 = make_array<uint64_t>( (int32_t)80,  (int32_t)200,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp59 at (9204,1-9204,46) */
uint64_t __tmp_in_tmp59;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)80; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)200; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp59;
}
Arr4DIdxRowM(tmp59, (int32_t)80, (int32_t)200, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp59 : 0;
}
}
}
}

uint64_t* tmp60 = make_array<uint64_t>( (int32_t)184,  (int32_t)80,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp60 at (9207,1-9207,46) */
uint64_t __tmp_in_tmp60;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)184; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)80; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp60;
}
Arr4DIdxRowM(tmp60, (int32_t)184, (int32_t)80, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp60 : 0;
}
}
}
}

uint64_t* tmp61 = make_array<uint64_t>( (int32_t)184);
/* Variable to read the clear value corresponding to the input variable tmp61 at (9210,1-9210,36) */
uint64_t __tmp_in_tmp61;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)184; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp61;
}
Arr1DIdxRowM(tmp61, (int32_t)184,i0) = (party == SERVER) ? __tmp_in_tmp61 : 0;
}

uint64_t* tmp62 = make_array<uint64_t>( (int32_t)184);
/* Variable to read the clear value corresponding to the input variable tmp62 at (9213,1-9213,36) */
uint64_t __tmp_in_tmp62;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)184; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp62;
}
Arr1DIdxRowM(tmp62, (int32_t)184,i0) = (party == SERVER) ? __tmp_in_tmp62 : 0;
}

uint64_t* tmp63 = make_array<uint64_t>( (int32_t)184,  (int32_t)1,  (int32_t)3,  (int32_t)3);
/* Variable to read the clear value corresponding to the input variable tmp63 at (9216,1-9216,45) */
uint64_t __tmp_in_tmp63;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)184; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)1; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)3; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)3; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp63;
}
Arr4DIdxRowM(tmp63, (int32_t)184, (int32_t)1, (int32_t)3, (int32_t)3,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp63 : 0;
}
}
}
}

uint64_t* tmp64 = make_array<uint64_t>( (int32_t)80,  (int32_t)184,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp64 at (9219,1-9219,46) */
uint64_t __tmp_in_tmp64;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)80; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)184; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp64;
}
Arr4DIdxRowM(tmp64, (int32_t)80, (int32_t)184, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp64 : 0;
}
}
}
}

uint64_t* tmp65 = make_array<uint64_t>( (int32_t)184,  (int32_t)80,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp65 at (9222,1-9222,46) */
uint64_t __tmp_in_tmp65;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)184; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)80; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp65;
}
Arr4DIdxRowM(tmp65, (int32_t)184, (int32_t)80, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp65 : 0;
}
}
}
}

uint64_t* tmp66 = make_array<uint64_t>( (int32_t)184,  (int32_t)1,  (int32_t)3,  (int32_t)3);
/* Variable to read the clear value corresponding to the input variable tmp66 at (9225,1-9225,45) */
uint64_t __tmp_in_tmp66;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)184; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)1; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)3; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)3; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp66;
}
Arr4DIdxRowM(tmp66, (int32_t)184, (int32_t)1, (int32_t)3, (int32_t)3,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp66 : 0;
}
}
}
}

uint64_t* tmp67 = make_array<uint64_t>( (int32_t)80,  (int32_t)184,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp67 at (9228,1-9228,46) */
uint64_t __tmp_in_tmp67;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)80; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)184; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp67;
}
Arr4DIdxRowM(tmp67, (int32_t)80, (int32_t)184, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp67 : 0;
}
}
}
}

uint64_t* tmp68 = make_array<uint64_t>( (int32_t)480,  (int32_t)80,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp68 at (9231,1-9231,46) */
uint64_t __tmp_in_tmp68;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)480; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)80; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp68;
}
Arr4DIdxRowM(tmp68, (int32_t)480, (int32_t)80, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp68 : 0;
}
}
}
}

uint64_t* tmp69 = make_array<uint64_t>( (int32_t)480);
/* Variable to read the clear value corresponding to the input variable tmp69 at (9234,1-9234,36) */
uint64_t __tmp_in_tmp69;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)480; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp69;
}
Arr1DIdxRowM(tmp69, (int32_t)480,i0) = (party == SERVER) ? __tmp_in_tmp69 : 0;
}

uint64_t* tmp70 = make_array<uint64_t>( (int32_t)480);
/* Variable to read the clear value corresponding to the input variable tmp70 at (9237,1-9237,36) */
uint64_t __tmp_in_tmp70;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)480; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp70;
}
Arr1DIdxRowM(tmp70, (int32_t)480,i0) = (party == SERVER) ? __tmp_in_tmp70 : 0;
}

uint64_t* tmp71 = make_array<uint64_t>( (int32_t)480,  (int32_t)1,  (int32_t)3,  (int32_t)3);
/* Variable to read the clear value corresponding to the input variable tmp71 at (9240,1-9240,45) */
uint64_t __tmp_in_tmp71;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)480; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)1; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)3; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)3; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp71;
}
Arr4DIdxRowM(tmp71, (int32_t)480, (int32_t)1, (int32_t)3, (int32_t)3,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp71 : 0;
}
}
}
}

uint64_t* tmp72 = make_array<uint64_t>( (int32_t)120,  (int32_t)480,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp72 at (9243,1-9243,47) */
uint64_t __tmp_in_tmp72;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)120; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)480; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp72;
}
Arr4DIdxRowM(tmp72, (int32_t)120, (int32_t)480, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp72 : 0;
}
}
}
}

uint64_t* tmp73 = make_array<uint64_t>( (int32_t)480,  (int32_t)120,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp73 at (9246,1-9246,47) */
uint64_t __tmp_in_tmp73;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)480; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)120; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp73;
}
Arr4DIdxRowM(tmp73, (int32_t)480, (int32_t)120, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp73 : 0;
}
}
}
}

uint64_t* tmp74 = make_array<uint64_t>( (int32_t)112,  (int32_t)480,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp74 at (9249,1-9249,47) */
uint64_t __tmp_in_tmp74;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)112; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)480; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp74;
}
Arr4DIdxRowM(tmp74, (int32_t)112, (int32_t)480, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp74 : 0;
}
}
}
}

uint64_t* tmp75 = make_array<uint64_t>( (int32_t)112);
/* Variable to read the clear value corresponding to the input variable tmp75 at (9252,1-9252,36) */
uint64_t __tmp_in_tmp75;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)112; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp75;
}
Arr1DIdxRowM(tmp75, (int32_t)112,i0) = (party == SERVER) ? __tmp_in_tmp75 : 0;
}

uint64_t* tmp76 = make_array<uint64_t>( (int32_t)112);
/* Variable to read the clear value corresponding to the input variable tmp76 at (9255,1-9255,36) */
uint64_t __tmp_in_tmp76;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)112; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp76;
}
Arr1DIdxRowM(tmp76, (int32_t)112,i0) = (party == SERVER) ? __tmp_in_tmp76 : 0;
}

uint64_t* tmp77 = make_array<uint64_t>( (int32_t)112,  (int32_t)80,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp77 at (9258,1-9258,46) */
uint64_t __tmp_in_tmp77;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)112; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)80; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp77;
}
Arr4DIdxRowM(tmp77, (int32_t)112, (int32_t)80, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp77 : 0;
}
}
}
}

uint64_t* tmp78 = make_array<uint64_t>( (int32_t)672,  (int32_t)112,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp78 at (9261,1-9261,47) */
uint64_t __tmp_in_tmp78;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)672; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)112; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp78;
}
Arr4DIdxRowM(tmp78, (int32_t)672, (int32_t)112, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp78 : 0;
}
}
}
}

uint64_t* tmp79 = make_array<uint64_t>( (int32_t)672);
/* Variable to read the clear value corresponding to the input variable tmp79 at (9264,1-9264,36) */
uint64_t __tmp_in_tmp79;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)672; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp79;
}
Arr1DIdxRowM(tmp79, (int32_t)672,i0) = (party == SERVER) ? __tmp_in_tmp79 : 0;
}

uint64_t* tmp80 = make_array<uint64_t>( (int32_t)672);
/* Variable to read the clear value corresponding to the input variable tmp80 at (9267,1-9267,36) */
uint64_t __tmp_in_tmp80;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)672; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp80;
}
Arr1DIdxRowM(tmp80, (int32_t)672,i0) = (party == SERVER) ? __tmp_in_tmp80 : 0;
}

uint64_t* tmp81 = make_array<uint64_t>( (int32_t)672,  (int32_t)1,  (int32_t)3,  (int32_t)3);
/* Variable to read the clear value corresponding to the input variable tmp81 at (9270,1-9270,45) */
uint64_t __tmp_in_tmp81;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)672; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)1; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)3; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)3; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp81;
}
Arr4DIdxRowM(tmp81, (int32_t)672, (int32_t)1, (int32_t)3, (int32_t)3,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp81 : 0;
}
}
}
}

uint64_t* tmp82 = make_array<uint64_t>( (int32_t)168,  (int32_t)672,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp82 at (9273,1-9273,47) */
uint64_t __tmp_in_tmp82;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)168; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)672; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp82;
}
Arr4DIdxRowM(tmp82, (int32_t)168, (int32_t)672, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp82 : 0;
}
}
}
}

uint64_t* tmp83 = make_array<uint64_t>( (int32_t)168);
/* Variable to read the clear value corresponding to the input variable tmp83 at (9276,1-9276,36) */
uint64_t __tmp_in_tmp83;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)168; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp83;
}
Arr1DIdxRowM(tmp83, (int32_t)168,i0) = (party == SERVER) ? __tmp_in_tmp83 : 0;
}

uint64_t* tmp84 = make_array<uint64_t>( (int32_t)168);
/* Variable to read the clear value corresponding to the input variable tmp84 at (9279,1-9279,36) */
uint64_t __tmp_in_tmp84;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)168; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp84;
}
Arr1DIdxRowM(tmp84, (int32_t)168,i0) = (party == SERVER) ? __tmp_in_tmp84 : 0;
}

uint64_t* tmp85 = make_array<uint64_t>( (int32_t)672,  (int32_t)168,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp85 at (9282,1-9282,47) */
uint64_t __tmp_in_tmp85;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)672; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)168; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp85;
}
Arr4DIdxRowM(tmp85, (int32_t)672, (int32_t)168, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp85 : 0;
}
}
}
}

uint64_t* tmp86 = make_array<uint64_t>( (int32_t)112,  (int32_t)672,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp86 at (9285,1-9285,47) */
uint64_t __tmp_in_tmp86;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)112; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)672; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp86;
}
Arr4DIdxRowM(tmp86, (int32_t)112, (int32_t)672, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp86 : 0;
}
}
}
}

uint64_t* tmp87 = make_array<uint64_t>( (int32_t)672,  (int32_t)112,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp87 at (9288,1-9288,47) */
uint64_t __tmp_in_tmp87;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)672; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)112; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp87;
}
Arr4DIdxRowM(tmp87, (int32_t)672, (int32_t)112, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp87 : 0;
}
}
}
}

uint64_t* tmp88 = make_array<uint64_t>( (int32_t)672,  (int32_t)1,  (int32_t)5,  (int32_t)5);
/* Variable to read the clear value corresponding to the input variable tmp88 at (9291,1-9291,45) */
uint64_t __tmp_in_tmp88;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)672; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)1; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)5; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)5; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp88;
}
Arr4DIdxRowM(tmp88, (int32_t)672, (int32_t)1, (int32_t)5, (int32_t)5,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp88 : 0;
}
}
}
}

uint64_t* tmp89 = make_array<uint64_t>( (int32_t)168,  (int32_t)672,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp89 at (9294,1-9294,47) */
uint64_t __tmp_in_tmp89;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)168; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)672; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp89;
}
Arr4DIdxRowM(tmp89, (int32_t)168, (int32_t)672, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp89 : 0;
}
}
}
}

uint64_t* tmp90 = make_array<uint64_t>( (int32_t)672,  (int32_t)168,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp90 at (9297,1-9297,47) */
uint64_t __tmp_in_tmp90;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)672; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)168; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp90;
}
Arr4DIdxRowM(tmp90, (int32_t)672, (int32_t)168, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp90 : 0;
}
}
}
}

uint64_t* tmp91 = make_array<uint64_t>( (int32_t)160,  (int32_t)672,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp91 at (9300,1-9300,47) */
uint64_t __tmp_in_tmp91;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)160; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)672; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp91;
}
Arr4DIdxRowM(tmp91, (int32_t)160, (int32_t)672, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp91 : 0;
}
}
}
}

uint64_t* tmp92 = make_array<uint64_t>( (int32_t)160);
/* Variable to read the clear value corresponding to the input variable tmp92 at (9303,1-9303,36) */
uint64_t __tmp_in_tmp92;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)160; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp92;
}
Arr1DIdxRowM(tmp92, (int32_t)160,i0) = (party == SERVER) ? __tmp_in_tmp92 : 0;
}

uint64_t* tmp93 = make_array<uint64_t>( (int32_t)160);
/* Variable to read the clear value corresponding to the input variable tmp93 at (9306,1-9306,36) */
uint64_t __tmp_in_tmp93;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)160; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp93;
}
Arr1DIdxRowM(tmp93, (int32_t)160,i0) = (party == SERVER) ? __tmp_in_tmp93 : 0;
}

uint64_t* tmp94 = make_array<uint64_t>( (int32_t)112,  (int32_t)1,  (int32_t)3,  (int32_t)3);
/* Variable to read the clear value corresponding to the input variable tmp94 at (9309,1-9309,45) */
uint64_t __tmp_in_tmp94;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)112; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)1; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)3; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)3; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp94;
}
Arr4DIdxRowM(tmp94, (int32_t)112, (int32_t)1, (int32_t)3, (int32_t)3,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp94 : 0;
}
}
}
}

uint64_t* tmp95 = make_array<uint64_t>( (int32_t)160,  (int32_t)112,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp95 at (9312,1-9312,47) */
uint64_t __tmp_in_tmp95;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)160; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)112; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp95;
}
Arr4DIdxRowM(tmp95, (int32_t)160, (int32_t)112, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp95 : 0;
}
}
}
}

uint64_t* tmp96 = make_array<uint64_t>( (int32_t)672,  (int32_t)160,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp96 at (9315,1-9315,47) */
uint64_t __tmp_in_tmp96;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)672; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)160; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp96;
}
Arr4DIdxRowM(tmp96, (int32_t)672, (int32_t)160, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp96 : 0;
}
}
}
}

uint64_t* tmp97 = make_array<uint64_t>( (int32_t)672,  (int32_t)1,  (int32_t)5,  (int32_t)5);
/* Variable to read the clear value corresponding to the input variable tmp97 at (9318,1-9318,45) */
uint64_t __tmp_in_tmp97;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)672; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)1; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)5; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)5; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp97;
}
Arr4DIdxRowM(tmp97, (int32_t)672, (int32_t)1, (int32_t)5, (int32_t)5,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp97 : 0;
}
}
}
}

uint64_t* tmp98 = make_array<uint64_t>( (int32_t)168,  (int32_t)672,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp98 at (9321,1-9321,47) */
uint64_t __tmp_in_tmp98;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)168; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)672; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp98;
}
Arr4DIdxRowM(tmp98, (int32_t)168, (int32_t)672, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp98 : 0;
}
}
}
}

uint64_t* tmp99 = make_array<uint64_t>( (int32_t)672,  (int32_t)168,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp99 at (9324,1-9324,47) */
uint64_t __tmp_in_tmp99;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)672; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)168; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp99;
}
Arr4DIdxRowM(tmp99, (int32_t)672, (int32_t)168, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp99 : 0;
}
}
}
}

uint64_t* tmp100 = make_array<uint64_t>( (int32_t)160,  (int32_t)672,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp100 at (9327,1-9327,48) */
uint64_t __tmp_in_tmp100;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)160; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)672; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp100;
}
Arr4DIdxRowM(tmp100, (int32_t)160, (int32_t)672, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp100 : 0;
}
}
}
}

uint64_t* tmp101 = make_array<uint64_t>( (int32_t)960,  (int32_t)160,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp101 at (9330,1-9330,48) */
uint64_t __tmp_in_tmp101;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)960; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)160; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp101;
}
Arr4DIdxRowM(tmp101, (int32_t)960, (int32_t)160, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp101 : 0;
}
}
}
}

uint64_t* tmp102 = make_array<uint64_t>( (int32_t)960);
/* Variable to read the clear value corresponding to the input variable tmp102 at (9333,1-9333,37) */
uint64_t __tmp_in_tmp102;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)960; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp102;
}
Arr1DIdxRowM(tmp102, (int32_t)960,i0) = (party == SERVER) ? __tmp_in_tmp102 : 0;
}

uint64_t* tmp103 = make_array<uint64_t>( (int32_t)960);
/* Variable to read the clear value corresponding to the input variable tmp103 at (9336,1-9336,37) */
uint64_t __tmp_in_tmp103;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)960; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp103;
}
Arr1DIdxRowM(tmp103, (int32_t)960,i0) = (party == SERVER) ? __tmp_in_tmp103 : 0;
}

uint64_t* tmp104 = make_array<uint64_t>( (int32_t)960,  (int32_t)1,  (int32_t)5,  (int32_t)5);
/* Variable to read the clear value corresponding to the input variable tmp104 at (9339,1-9339,46) */
uint64_t __tmp_in_tmp104;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)960; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)1; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)5; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)5; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp104;
}
Arr4DIdxRowM(tmp104, (int32_t)960, (int32_t)1, (int32_t)5, (int32_t)5,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp104 : 0;
}
}
}
}

uint64_t* tmp105 = make_array<uint64_t>( (int32_t)240,  (int32_t)960,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp105 at (9342,1-9342,48) */
uint64_t __tmp_in_tmp105;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)240; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)960; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp105;
}
Arr4DIdxRowM(tmp105, (int32_t)240, (int32_t)960, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp105 : 0;
}
}
}
}

uint64_t* tmp106 = make_array<uint64_t>( (int32_t)960,  (int32_t)240,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp106 at (9345,1-9345,48) */
uint64_t __tmp_in_tmp106;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)960; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)240; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp106;
}
Arr4DIdxRowM(tmp106, (int32_t)960, (int32_t)240, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp106 : 0;
}
}
}
}

uint64_t* tmp107 = make_array<uint64_t>( (int32_t)160,  (int32_t)960,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp107 at (9348,1-9348,48) */
uint64_t __tmp_in_tmp107;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)160; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)960; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp107;
}
Arr4DIdxRowM(tmp107, (int32_t)160, (int32_t)960, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp107 : 0;
}
}
}
}

uint64_t* tmp108 = make_array<uint64_t>( (int32_t)960,  (int32_t)160,  (int32_t)1,  (int32_t)1);
/* Variable to read the clear value corresponding to the input variable tmp108 at (9351,1-9351,48) */
uint64_t __tmp_in_tmp108;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)960; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)160; i1++){
for (uint32_t i2 =  (uint32_t)0; i2 <  (int32_t)1; i2++){
for (uint32_t i3 =  (uint32_t)0; i3 <  (int32_t)1; i3++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp108;
}
Arr4DIdxRowM(tmp108, (int32_t)960, (int32_t)160, (int32_t)1, (int32_t)1,i0,i1,i2,i3) = (party == SERVER) ? __tmp_in_tmp108 : 0;
}
}
}
}

uint64_t* tmp109 = make_array<uint64_t>( (int32_t)1000,  (int32_t)1280);
/* Variable to read the clear value corresponding to the input variable tmp109 at (9354,1-9354,44) */
uint64_t __tmp_in_tmp109;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)1000; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)1280; i1++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp109;
}
Arr2DIdxRowM(tmp109, (int32_t)1000, (int32_t)1280,i0,i1) = (party == SERVER) ? __tmp_in_tmp109 : 0;
}
}

uint64_t* tmp110 = make_array<uint64_t>( (int32_t)1000);
/* Variable to read the clear value corresponding to the input variable tmp110 at (9357,1-9357,38) */
uint64_t __tmp_in_tmp110;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)1000; i0++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp110;
}
Arr1DIdxRowM(tmp110, (int32_t)1000,i0) = (party == SERVER) ? __tmp_in_tmp110 : 0;
}

uint64_t* tmp111 = make_array<uint64_t>( (int32_t)960,  (int32_t)1280);
/* Variable to read the clear value corresponding to the input variable tmp111 at (9360,1-9360,43) */
uint64_t __tmp_in_tmp111;
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)960; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)1280; i1++){
if ((party == SERVER)) {
cin >> __tmp_in_tmp111;
}
Arr2DIdxRowM(tmp111, (int32_t)960, (int32_t)1280,i0,i1) = (party == SERVER) ? __tmp_in_tmp111 : 0;
}
}
StartComputation();

uint64_t* tmp112 = make_array<uint64_t>( (int32_t)1,  (int32_t)224,  (int32_t)224,  (int32_t)3);

int64_t i7;

int64_t i6;

int64_t i5;

int64_t i4;

int64_t i3;

int64_t i2;

int64_t i1;

int64_t i0;
i0 =  (int64_t)0;
i1 =  (int64_t)0;
i2 =  (int64_t)0;
i3 =  (int64_t)0;
for (uint32_t i4 =  (int32_t)0; i4 <  (int32_t)1; i4++){
for (uint32_t i7 =  (int32_t)0; i7 <  (int32_t)3; i7++){
for (uint32_t i5 =  (int32_t)0; i5 <  (int32_t)224; i5++){
for (uint32_t i6 =  (int32_t)0; i6 <  (int32_t)224; i6++){
Arr4DIdxRowM(tmp112, (int32_t)1, (int32_t)224, (int32_t)224, (int32_t)3,i4,i5,i6,i7) = Arr4DIdxRowM(tmp0, (int32_t)1, (int32_t)3, (int32_t)224, (int32_t)224,i0,i1,i2,i3);
i3 = (i3 +  (int64_t)1);
if ((i3 ==  (int64_t)224)) {
i3 =  (int64_t)0;
i2 = (i2 +  (int64_t)1);
if ((i2 ==  (int64_t)224)) {
i2 =  (int64_t)0;
i1 = (i1 +  (int64_t)1);
if ((i1 ==  (int64_t)3)) {
i1 =  (int64_t)0;
i0 = (i0 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)3,  (int32_t)224,  (int32_t)224, tmp0);

uint64_t* tmp114 = make_array<uint64_t>( (int32_t)3,  (int32_t)3,  (int32_t)3,  (int32_t)16);

int64_t i15;

int64_t i14;

int64_t i13;

int64_t i12;

int64_t i11;

int64_t i10;

int64_t i9;

int64_t i8;
i8 =  (int64_t)0;
i9 =  (int64_t)0;
i10 =  (int64_t)0;
i11 =  (int64_t)0;
for (uint32_t i15 =  (int32_t)0; i15 <  (int32_t)16; i15++){
for (uint32_t i14 =  (int32_t)0; i14 <  (int32_t)3; i14++){
for (uint32_t i12 =  (int32_t)0; i12 <  (int32_t)3; i12++){
for (uint32_t i13 =  (int32_t)0; i13 <  (int32_t)3; i13++){
Arr4DIdxRowM(tmp114, (int32_t)3, (int32_t)3, (int32_t)3, (int32_t)16,i12,i13,i14,i15) = Arr4DIdxRowM(tmp1, (int32_t)16, (int32_t)3, (int32_t)3, (int32_t)3,i8,i9,i10,i11);
i11 = (i11 +  (int64_t)1);
if ((i11 ==  (int64_t)3)) {
i11 =  (int64_t)0;
i10 = (i10 +  (int64_t)1);
if ((i10 ==  (int64_t)3)) {
i10 =  (int64_t)0;
i9 = (i9 +  (int64_t)1);
if ((i9 ==  (int64_t)3)) {
i9 =  (int64_t)0;
i8 = (i8 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)16,  (int32_t)3,  (int32_t)3,  (int32_t)3, tmp1);

uint64_t* tmp116 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)224,  (int32_t)224,  (int32_t)3,  (int32_t)3,  (int32_t)3,  (int32_t)16,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)2,  (int32_t)2,  (int32_t)1, tmp112, tmp114, tmp116);
ClearMemSecret4( (int32_t)1,  (int32_t)224,  (int32_t)224,  (int32_t)3, tmp112);
ClearMemSecret4( (int32_t)3,  (int32_t)3,  (int32_t)3,  (int32_t)16, tmp114);

uint64_t* tmp119 = make_array<uint64_t>( (int32_t)1,  (int32_t)16,  (int32_t)112,  (int32_t)112);

int64_t i23;

int64_t i22;

int64_t i21;

int64_t i20;

int64_t i19;

int64_t i18;

int64_t i17;

int64_t i16;
i16 =  (int64_t)0;
i17 =  (int64_t)0;
i18 =  (int64_t)0;
i19 =  (int64_t)0;
for (uint32_t i20 =  (int32_t)0; i20 <  (int32_t)1; i20++){
for (uint32_t i22 =  (int32_t)0; i22 <  (int32_t)112; i22++){
for (uint32_t i23 =  (int32_t)0; i23 <  (int32_t)112; i23++){
for (uint32_t i21 =  (int32_t)0; i21 <  (int32_t)16; i21++){
Arr4DIdxRowM(tmp119, (int32_t)1, (int32_t)16, (int32_t)112, (int32_t)112,i20,i21,i22,i23) = Arr4DIdxRowM(tmp116, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i16,i17,i18,i19);
i19 = (i19 +  (int64_t)1);
if ((i19 ==  (int64_t)16)) {
i19 =  (int64_t)0;
i18 = (i18 +  (int64_t)1);
if ((i18 ==  (int64_t)112)) {
i18 =  (int64_t)0;
i17 = (i17 +  (int64_t)1);
if ((i17 ==  (int64_t)112)) {
i17 =  (int64_t)0;
i16 = (i16 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp116);

uint64_t* tmp121 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16);

int64_t i31;

int64_t i30;

int64_t i29;

int64_t i28;

int64_t i27;

int64_t i26;

int64_t i25;

int64_t i24;
i24 =  (int64_t)0;
i25 =  (int64_t)0;
i26 =  (int64_t)0;
i27 =  (int64_t)0;
for (uint32_t i28 =  (int32_t)0; i28 <  (int32_t)1; i28++){
for (uint32_t i31 =  (int32_t)0; i31 <  (int32_t)16; i31++){
for (uint32_t i29 =  (int32_t)0; i29 <  (int32_t)112; i29++){
for (uint32_t i30 =  (int32_t)0; i30 <  (int32_t)112; i30++){
Arr4DIdxRowM(tmp121, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i28,i29,i30,i31) = Arr4DIdxRowM(tmp119, (int32_t)1, (int32_t)16, (int32_t)112, (int32_t)112,i24,i25,i26,i27);
i27 = (i27 +  (int64_t)1);
if ((i27 ==  (int64_t)112)) {
i27 =  (int64_t)0;
i26 = (i26 +  (int64_t)1);
if ((i26 ==  (int64_t)112)) {
i26 =  (int64_t)0;
i25 = (i25 +  (int64_t)1);
if ((i25 ==  (int64_t)16)) {
i25 =  (int64_t)0;
i24 = (i24 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)16,  (int32_t)112,  (int32_t)112, tmp119);

uint64_t* tmp123 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16);
ScaleDown4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp121,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp121, tmp2, tmp3,  (int32_t)0,  (int32_t)23, tmp123);
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp121);

uint64_t* tmp125 = make_array<uint64_t>( (int32_t)1,  (int32_t)16,  (int32_t)112,  (int32_t)112);

int64_t i39;

int64_t i38;

int64_t i37;

int64_t i36;

int64_t i35;

int64_t i34;

int64_t i33;

int64_t i32;
i32 =  (int64_t)0;
i33 =  (int64_t)0;
i34 =  (int64_t)0;
i35 =  (int64_t)0;
for (uint32_t i36 =  (int32_t)0; i36 <  (int32_t)1; i36++){
for (uint32_t i38 =  (int32_t)0; i38 <  (int32_t)112; i38++){
for (uint32_t i39 =  (int32_t)0; i39 <  (int32_t)112; i39++){
for (uint32_t i37 =  (int32_t)0; i37 <  (int32_t)16; i37++){
Arr4DIdxRowM(tmp125, (int32_t)1, (int32_t)16, (int32_t)112, (int32_t)112,i36,i37,i38,i39) = Arr4DIdxRowM(tmp123, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i32,i33,i34,i35);
i35 = (i35 +  (int64_t)1);
if ((i35 ==  (int64_t)16)) {
i35 =  (int64_t)0;
i34 = (i34 +  (int64_t)1);
if ((i34 ==  (int64_t)112)) {
i34 =  (int64_t)0;
i33 = (i33 +  (int64_t)1);
if ((i33 ==  (int64_t)112)) {
i33 =  (int64_t)0;
i32 = (i32 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp123);

uint64_t* tmp127 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16);

int64_t i47;

int64_t i46;

int64_t i45;

int64_t i44;

int64_t i43;

int64_t i42;

int64_t i41;

int64_t i40;
i40 =  (int64_t)0;
i41 =  (int64_t)0;
i42 =  (int64_t)0;
i43 =  (int64_t)0;
for (uint32_t i44 =  (int32_t)0; i44 <  (int32_t)1; i44++){
for (uint32_t i47 =  (int32_t)0; i47 <  (int32_t)16; i47++){
for (uint32_t i45 =  (int32_t)0; i45 <  (int32_t)112; i45++){
for (uint32_t i46 =  (int32_t)0; i46 <  (int32_t)112; i46++){
Arr4DIdxRowM(tmp127, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i44,i45,i46,i47) = Arr4DIdxRowM(tmp125, (int32_t)1, (int32_t)16, (int32_t)112, (int32_t)112,i40,i41,i42,i43);
i43 = (i43 +  (int64_t)1);
if ((i43 ==  (int64_t)112)) {
i43 =  (int64_t)0;
i42 = (i42 +  (int64_t)1);
if ((i42 ==  (int64_t)112)) {
i42 =  (int64_t)0;
i41 = (i41 +  (int64_t)1);
if ((i41 ==  (int64_t)16)) {
i41 =  (int64_t)0;
i40 = (i40 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp128 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16);
HardSigmoid4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp127, tmp128,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp127);

uint64_t* tmp130 = make_array<uint64_t>( (int32_t)1,  (int32_t)16,  (int32_t)112,  (int32_t)112);

int64_t i55;

int64_t i54;

int64_t i53;

int64_t i52;

int64_t i51;

int64_t i50;

int64_t i49;

int64_t i48;
i48 =  (int64_t)0;
i49 =  (int64_t)0;
i50 =  (int64_t)0;
i51 =  (int64_t)0;
for (uint32_t i52 =  (int32_t)0; i52 <  (int32_t)1; i52++){
for (uint32_t i54 =  (int32_t)0; i54 <  (int32_t)112; i54++){
for (uint32_t i55 =  (int32_t)0; i55 <  (int32_t)112; i55++){
for (uint32_t i53 =  (int32_t)0; i53 <  (int32_t)16; i53++){
Arr4DIdxRowM(tmp130, (int32_t)1, (int32_t)16, (int32_t)112, (int32_t)112,i52,i53,i54,i55) = Arr4DIdxRowM(tmp128, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i48,i49,i50,i51);
i51 = (i51 +  (int64_t)1);
if ((i51 ==  (int64_t)16)) {
i51 =  (int64_t)0;
i50 = (i50 +  (int64_t)1);
if ((i50 ==  (int64_t)112)) {
i50 =  (int64_t)0;
i49 = (i49 +  (int64_t)1);
if ((i49 ==  (int64_t)112)) {
i49 =  (int64_t)0;
i48 = (i48 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp128);

uint64_t* tmp132 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16);

int64_t i63;

int64_t i62;

int64_t i61;

int64_t i60;

int64_t i59;

int64_t i58;

int64_t i57;

int64_t i56;
i56 =  (int64_t)0;
i57 =  (int64_t)0;
i58 =  (int64_t)0;
i59 =  (int64_t)0;
for (uint32_t i60 =  (int32_t)0; i60 <  (int32_t)1; i60++){
for (uint32_t i63 =  (int32_t)0; i63 <  (int32_t)16; i63++){
for (uint32_t i61 =  (int32_t)0; i61 <  (int32_t)112; i61++){
for (uint32_t i62 =  (int32_t)0; i62 <  (int32_t)112; i62++){
Arr4DIdxRowM(tmp132, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i60,i61,i62,i63) = Arr4DIdxRowM(tmp125, (int32_t)1, (int32_t)16, (int32_t)112, (int32_t)112,i56,i57,i58,i59);
i59 = (i59 +  (int64_t)1);
if ((i59 ==  (int64_t)112)) {
i59 =  (int64_t)0;
i58 = (i58 +  (int64_t)1);
if ((i58 ==  (int64_t)112)) {
i58 =  (int64_t)0;
i57 = (i57 +  (int64_t)1);
if ((i57 ==  (int64_t)16)) {
i57 =  (int64_t)0;
i56 = (i56 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)16,  (int32_t)112,  (int32_t)112, tmp125);

uint64_t* tmp134 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16);

int64_t i71;

int64_t i70;

int64_t i69;

int64_t i68;

int64_t i67;

int64_t i66;

int64_t i65;

int64_t i64;
i64 =  (int64_t)0;
i65 =  (int64_t)0;
i66 =  (int64_t)0;
i67 =  (int64_t)0;
for (uint32_t i68 =  (int32_t)0; i68 <  (int32_t)1; i68++){
for (uint32_t i71 =  (int32_t)0; i71 <  (int32_t)16; i71++){
for (uint32_t i69 =  (int32_t)0; i69 <  (int32_t)112; i69++){
for (uint32_t i70 =  (int32_t)0; i70 <  (int32_t)112; i70++){
Arr4DIdxRowM(tmp134, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i68,i69,i70,i71) = Arr4DIdxRowM(tmp130, (int32_t)1, (int32_t)16, (int32_t)112, (int32_t)112,i64,i65,i66,i67);
i67 = (i67 +  (int64_t)1);
if ((i67 ==  (int64_t)112)) {
i67 =  (int64_t)0;
i66 = (i66 +  (int64_t)1);
if ((i66 ==  (int64_t)112)) {
i66 =  (int64_t)0;
i65 = (i65 +  (int64_t)1);
if ((i65 ==  (int64_t)16)) {
i65 =  (int64_t)0;
i64 = (i64 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)16,  (int32_t)112,  (int32_t)112, tmp130);
ScaleDown4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp132,  (int32_t)23);

uint64_t* tmp136 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16);

uint64_t* tmp137 = make_array<uint64_t>( (int32_t)200704);

uint64_t* tmp138 = make_array<uint64_t>( (int32_t)200704);

uint64_t* tmp139 = make_array<uint64_t>( (int32_t)200704);

int32_t tmp140;
for (uint32_t i72 =  (int32_t)0; i72 <  (int32_t)1; i72++){
for (uint32_t i73 =  (int32_t)0; i73 <  (int32_t)112; i73++){
for (uint32_t i74 =  (int32_t)0; i74 <  (int32_t)112; i74++){
for (uint32_t i75 =  (int32_t)0; i75 <  (int32_t)16; i75++){
tmp140 = (((( (int32_t)0 + (i72 *  (int32_t)200704)) + (i73 *  (int32_t)1792)) + (i74 *  (int32_t)16)) + (i75 *  (int32_t)1));
Arr1DIdxRowM(tmp137, (int32_t)200704,tmp140) = Arr4DIdxRowM(tmp132, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i72,i73,i74,i75);
Arr1DIdxRowM(tmp138, (int32_t)200704,tmp140) = Arr4DIdxRowM(tmp134, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i72,i73,i74,i75);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)200704, tmp137, tmp138, tmp139);
ClearMemSecret1( (int32_t)200704, tmp137);
ClearMemSecret1( (int32_t)200704, tmp138);
for (uint32_t i72 =  (int32_t)0; i72 <  (int32_t)1; i72++){
for (uint32_t i73 =  (int32_t)0; i73 <  (int32_t)112; i73++){
for (uint32_t i74 =  (int32_t)0; i74 <  (int32_t)112; i74++){
for (uint32_t i75 =  (int32_t)0; i75 <  (int32_t)16; i75++){
tmp140 = (((( (int32_t)0 + (i72 *  (int32_t)200704)) + (i73 *  (int32_t)1792)) + (i74 *  (int32_t)16)) + (i75 *  (int32_t)1));
Arr4DIdxRowM(tmp136, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i72,i73,i74,i75) = Arr1DIdxRowM(tmp139, (int32_t)200704,tmp140);
}
}
}
}
ClearMemSecret1( (int32_t)200704, tmp139);
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp134);
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp132);

uint64_t* tmp143 = make_array<uint64_t>( (int32_t)1,  (int32_t)16,  (int32_t)112,  (int32_t)112);

int64_t i83;

int64_t i82;

int64_t i81;

int64_t i80;

int64_t i79;

int64_t i78;

int64_t i77;

int64_t i76;
i76 =  (int64_t)0;
i77 =  (int64_t)0;
i78 =  (int64_t)0;
i79 =  (int64_t)0;
for (uint32_t i80 =  (int32_t)0; i80 <  (int32_t)1; i80++){
for (uint32_t i82 =  (int32_t)0; i82 <  (int32_t)112; i82++){
for (uint32_t i83 =  (int32_t)0; i83 <  (int32_t)112; i83++){
for (uint32_t i81 =  (int32_t)0; i81 <  (int32_t)16; i81++){
Arr4DIdxRowM(tmp143, (int32_t)1, (int32_t)16, (int32_t)112, (int32_t)112,i80,i81,i82,i83) = Arr4DIdxRowM(tmp136, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i76,i77,i78,i79);
i79 = (i79 +  (int64_t)1);
if ((i79 ==  (int64_t)16)) {
i79 =  (int64_t)0;
i78 = (i78 +  (int64_t)1);
if ((i78 ==  (int64_t)112)) {
i78 =  (int64_t)0;
i77 = (i77 +  (int64_t)1);
if ((i77 ==  (int64_t)112)) {
i77 =  (int64_t)0;
i76 = (i76 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp136);

uint64_t* tmp145 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16);

int64_t i91;

int64_t i90;

int64_t i89;

int64_t i88;

int64_t i87;

int64_t i86;

int64_t i85;

int64_t i84;
i84 =  (int64_t)0;
i85 =  (int64_t)0;
i86 =  (int64_t)0;
i87 =  (int64_t)0;
for (uint32_t i88 =  (int32_t)0; i88 <  (int32_t)1; i88++){
for (uint32_t i91 =  (int32_t)0; i91 <  (int32_t)16; i91++){
for (uint32_t i89 =  (int32_t)0; i89 <  (int32_t)112; i89++){
for (uint32_t i90 =  (int32_t)0; i90 <  (int32_t)112; i90++){
Arr4DIdxRowM(tmp145, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i88,i89,i90,i91) = Arr4DIdxRowM(tmp143, (int32_t)1, (int32_t)16, (int32_t)112, (int32_t)112,i84,i85,i86,i87);
i87 = (i87 +  (int64_t)1);
if ((i87 ==  (int64_t)112)) {
i87 =  (int64_t)0;
i86 = (i86 +  (int64_t)1);
if ((i86 ==  (int64_t)112)) {
i86 =  (int64_t)0;
i85 = (i85 +  (int64_t)1);
if ((i85 ==  (int64_t)16)) {
i85 =  (int64_t)0;
i84 = (i84 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp146 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)16,  (int32_t)16);

int64_t i99;

int64_t i98;

int64_t i97;

int64_t i96;

int64_t i95;

int64_t i94;

int64_t i93;

int64_t i92;
i92 =  (int64_t)0;
i93 =  (int64_t)0;
i94 =  (int64_t)0;
i95 =  (int64_t)0;
for (uint32_t i99 =  (int32_t)0; i99 <  (int32_t)16; i99++){
for (uint32_t i98 =  (int32_t)0; i98 <  (int32_t)16; i98++){
for (uint32_t i96 =  (int32_t)0; i96 <  (int32_t)1; i96++){
for (uint32_t i97 =  (int32_t)0; i97 <  (int32_t)1; i97++){
Arr4DIdxRowM(tmp146, (int32_t)1, (int32_t)1, (int32_t)16, (int32_t)16,i96,i97,i98,i99) = Arr4DIdxRowM(tmp4, (int32_t)16, (int32_t)16, (int32_t)1, (int32_t)1,i92,i93,i94,i95);
i95 = (i95 +  (int64_t)1);
if ((i95 ==  (int64_t)1)) {
i95 =  (int64_t)0;
i94 = (i94 +  (int64_t)1);
if ((i94 ==  (int64_t)1)) {
i94 =  (int64_t)0;
i93 = (i93 +  (int64_t)1);
if ((i93 ==  (int64_t)16)) {
i93 =  (int64_t)0;
i92 = (i92 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)16,  (int32_t)16,  (int32_t)1,  (int32_t)1, tmp4);

uint64_t* tmp148 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16);
ScaleDown4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp145,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16,  (int32_t)1,  (int32_t)1,  (int32_t)16,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp145, tmp146, tmp148);
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp145);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)16,  (int32_t)16, tmp146);

uint64_t* tmp151 = make_array<uint64_t>( (int32_t)1,  (int32_t)16,  (int32_t)112,  (int32_t)112);

int64_t i107;

int64_t i106;

int64_t i105;

int64_t i104;

int64_t i103;

int64_t i102;

int64_t i101;

int64_t i100;
i100 =  (int64_t)0;
i101 =  (int64_t)0;
i102 =  (int64_t)0;
i103 =  (int64_t)0;
for (uint32_t i104 =  (int32_t)0; i104 <  (int32_t)1; i104++){
for (uint32_t i106 =  (int32_t)0; i106 <  (int32_t)112; i106++){
for (uint32_t i107 =  (int32_t)0; i107 <  (int32_t)112; i107++){
for (uint32_t i105 =  (int32_t)0; i105 <  (int32_t)16; i105++){
Arr4DIdxRowM(tmp151, (int32_t)1, (int32_t)16, (int32_t)112, (int32_t)112,i104,i105,i106,i107) = Arr4DIdxRowM(tmp148, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i100,i101,i102,i103);
i103 = (i103 +  (int64_t)1);
if ((i103 ==  (int64_t)16)) {
i103 =  (int64_t)0;
i102 = (i102 +  (int64_t)1);
if ((i102 ==  (int64_t)112)) {
i102 =  (int64_t)0;
i101 = (i101 +  (int64_t)1);
if ((i101 ==  (int64_t)112)) {
i101 =  (int64_t)0;
i100 = (i100 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp148);

uint64_t* tmp153 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16);

int64_t i115;

int64_t i114;

int64_t i113;

int64_t i112;

int64_t i111;

int64_t i110;

int64_t i109;

int64_t i108;
i108 =  (int64_t)0;
i109 =  (int64_t)0;
i110 =  (int64_t)0;
i111 =  (int64_t)0;
for (uint32_t i112 =  (int32_t)0; i112 <  (int32_t)1; i112++){
for (uint32_t i115 =  (int32_t)0; i115 <  (int32_t)16; i115++){
for (uint32_t i113 =  (int32_t)0; i113 <  (int32_t)112; i113++){
for (uint32_t i114 =  (int32_t)0; i114 <  (int32_t)112; i114++){
Arr4DIdxRowM(tmp153, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i112,i113,i114,i115) = Arr4DIdxRowM(tmp151, (int32_t)1, (int32_t)16, (int32_t)112, (int32_t)112,i108,i109,i110,i111);
i111 = (i111 +  (int64_t)1);
if ((i111 ==  (int64_t)112)) {
i111 =  (int64_t)0;
i110 = (i110 +  (int64_t)1);
if ((i110 ==  (int64_t)112)) {
i110 =  (int64_t)0;
i109 = (i109 +  (int64_t)1);
if ((i109 ==  (int64_t)16)) {
i109 =  (int64_t)0;
i108 = (i108 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)16,  (int32_t)112,  (int32_t)112, tmp151);

uint64_t* tmp155 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16);
ScaleDown4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp153,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp153, tmp2, tmp3,  (int32_t)0,  (int32_t)0, tmp155);
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp153);

uint64_t* tmp157 = make_array<uint64_t>( (int32_t)1,  (int32_t)16,  (int32_t)112,  (int32_t)112);

int64_t i123;

int64_t i122;

int64_t i121;

int64_t i120;

int64_t i119;

int64_t i118;

int64_t i117;

int64_t i116;
i116 =  (int64_t)0;
i117 =  (int64_t)0;
i118 =  (int64_t)0;
i119 =  (int64_t)0;
for (uint32_t i120 =  (int32_t)0; i120 <  (int32_t)1; i120++){
for (uint32_t i122 =  (int32_t)0; i122 <  (int32_t)112; i122++){
for (uint32_t i123 =  (int32_t)0; i123 <  (int32_t)112; i123++){
for (uint32_t i121 =  (int32_t)0; i121 <  (int32_t)16; i121++){
Arr4DIdxRowM(tmp157, (int32_t)1, (int32_t)16, (int32_t)112, (int32_t)112,i120,i121,i122,i123) = Arr4DIdxRowM(tmp155, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i116,i117,i118,i119);
i119 = (i119 +  (int64_t)1);
if ((i119 ==  (int64_t)16)) {
i119 =  (int64_t)0;
i118 = (i118 +  (int64_t)1);
if ((i118 ==  (int64_t)112)) {
i118 =  (int64_t)0;
i117 = (i117 +  (int64_t)1);
if ((i117 ==  (int64_t)112)) {
i117 =  (int64_t)0;
i116 = (i116 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp155);

uint64_t* tmp159 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16);

int64_t i131;

int64_t i130;

int64_t i129;

int64_t i128;

int64_t i127;

int64_t i126;

int64_t i125;

int64_t i124;
i124 =  (int64_t)0;
i125 =  (int64_t)0;
i126 =  (int64_t)0;
i127 =  (int64_t)0;
for (uint32_t i128 =  (int32_t)0; i128 <  (int32_t)1; i128++){
for (uint32_t i131 =  (int32_t)0; i131 <  (int32_t)16; i131++){
for (uint32_t i129 =  (int32_t)0; i129 <  (int32_t)112; i129++){
for (uint32_t i130 =  (int32_t)0; i130 <  (int32_t)112; i130++){
Arr4DIdxRowM(tmp159, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i128,i129,i130,i131) = Arr4DIdxRowM(tmp157, (int32_t)1, (int32_t)16, (int32_t)112, (int32_t)112,i124,i125,i126,i127);
i127 = (i127 +  (int64_t)1);
if ((i127 ==  (int64_t)112)) {
i127 =  (int64_t)0;
i126 = (i126 +  (int64_t)1);
if ((i126 ==  (int64_t)112)) {
i126 =  (int64_t)0;
i125 = (i125 +  (int64_t)1);
if ((i125 ==  (int64_t)16)) {
i125 =  (int64_t)0;
i124 = (i124 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)16,  (int32_t)112,  (int32_t)112, tmp157);

uint64_t* tmp161 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16);
Relu4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp159, tmp161,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp159);

uint64_t* tmp163 = make_array<uint64_t>( (int32_t)1,  (int32_t)16,  (int32_t)112,  (int32_t)112);

int64_t i139;

int64_t i138;

int64_t i137;

int64_t i136;

int64_t i135;

int64_t i134;

int64_t i133;

int64_t i132;
i132 =  (int64_t)0;
i133 =  (int64_t)0;
i134 =  (int64_t)0;
i135 =  (int64_t)0;
for (uint32_t i136 =  (int32_t)0; i136 <  (int32_t)1; i136++){
for (uint32_t i138 =  (int32_t)0; i138 <  (int32_t)112; i138++){
for (uint32_t i139 =  (int32_t)0; i139 <  (int32_t)112; i139++){
for (uint32_t i137 =  (int32_t)0; i137 <  (int32_t)16; i137++){
Arr4DIdxRowM(tmp163, (int32_t)1, (int32_t)16, (int32_t)112, (int32_t)112,i136,i137,i138,i139) = Arr4DIdxRowM(tmp161, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i132,i133,i134,i135);
i135 = (i135 +  (int64_t)1);
if ((i135 ==  (int64_t)16)) {
i135 =  (int64_t)0;
i134 = (i134 +  (int64_t)1);
if ((i134 ==  (int64_t)112)) {
i134 =  (int64_t)0;
i133 = (i133 +  (int64_t)1);
if ((i133 ==  (int64_t)112)) {
i133 =  (int64_t)0;
i132 = (i132 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp161);

uint64_t* tmp165 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16);

int64_t i147;

int64_t i146;

int64_t i145;

int64_t i144;

int64_t i143;

int64_t i142;

int64_t i141;

int64_t i140;
i140 =  (int64_t)0;
i141 =  (int64_t)0;
i142 =  (int64_t)0;
i143 =  (int64_t)0;
for (uint32_t i144 =  (int32_t)0; i144 <  (int32_t)1; i144++){
for (uint32_t i147 =  (int32_t)0; i147 <  (int32_t)16; i147++){
for (uint32_t i145 =  (int32_t)0; i145 <  (int32_t)112; i145++){
for (uint32_t i146 =  (int32_t)0; i146 <  (int32_t)112; i146++){
Arr4DIdxRowM(tmp165, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i144,i145,i146,i147) = Arr4DIdxRowM(tmp163, (int32_t)1, (int32_t)16, (int32_t)112, (int32_t)112,i140,i141,i142,i143);
i143 = (i143 +  (int64_t)1);
if ((i143 ==  (int64_t)112)) {
i143 =  (int64_t)0;
i142 = (i142 +  (int64_t)1);
if ((i142 ==  (int64_t)112)) {
i142 =  (int64_t)0;
i141 = (i141 +  (int64_t)1);
if ((i141 ==  (int64_t)16)) {
i141 =  (int64_t)0;
i140 = (i140 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)16,  (int32_t)112,  (int32_t)112, tmp163);

uint64_t* tmp167 = make_array<uint64_t>( (int32_t)3,  (int32_t)3,  (int32_t)1,  (int32_t)16);

int64_t i155;

int64_t i154;

int64_t i153;

int64_t i152;

int64_t i151;

int64_t i150;

int64_t i149;

int64_t i148;
i148 =  (int64_t)0;
i149 =  (int64_t)0;
i150 =  (int64_t)0;
i151 =  (int64_t)0;
for (uint32_t i155 =  (int32_t)0; i155 <  (int32_t)16; i155++){
for (uint32_t i154 =  (int32_t)0; i154 <  (int32_t)1; i154++){
for (uint32_t i152 =  (int32_t)0; i152 <  (int32_t)3; i152++){
for (uint32_t i153 =  (int32_t)0; i153 <  (int32_t)3; i153++){
Arr4DIdxRowM(tmp167, (int32_t)3, (int32_t)3, (int32_t)1, (int32_t)16,i152,i153,i154,i155) = Arr4DIdxRowM(tmp5, (int32_t)16, (int32_t)1, (int32_t)3, (int32_t)3,i148,i149,i150,i151);
i151 = (i151 +  (int64_t)1);
if ((i151 ==  (int64_t)3)) {
i151 =  (int64_t)0;
i150 = (i150 +  (int64_t)1);
if ((i150 ==  (int64_t)3)) {
i150 =  (int64_t)0;
i149 = (i149 +  (int64_t)1);
if ((i149 ==  (int64_t)1)) {
i149 =  (int64_t)0;
i148 = (i148 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)16,  (int32_t)1,  (int32_t)3,  (int32_t)3, tmp5);

uint64_t* tmp169 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16,  (int32_t)3,  (int32_t)3,  (int32_t)16,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)16, tmp165, tmp167, tmp169);
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp165);
ClearMemSecret4( (int32_t)3,  (int32_t)3,  (int32_t)1,  (int32_t)16, tmp167);

uint64_t* tmp172 = make_array<uint64_t>( (int32_t)1,  (int32_t)16,  (int32_t)112,  (int32_t)112);

int64_t i163;

int64_t i162;

int64_t i161;

int64_t i160;

int64_t i159;

int64_t i158;

int64_t i157;

int64_t i156;
i156 =  (int64_t)0;
i157 =  (int64_t)0;
i158 =  (int64_t)0;
i159 =  (int64_t)0;
for (uint32_t i160 =  (int32_t)0; i160 <  (int32_t)1; i160++){
for (uint32_t i162 =  (int32_t)0; i162 <  (int32_t)112; i162++){
for (uint32_t i163 =  (int32_t)0; i163 <  (int32_t)112; i163++){
for (uint32_t i161 =  (int32_t)0; i161 <  (int32_t)16; i161++){
Arr4DIdxRowM(tmp172, (int32_t)1, (int32_t)16, (int32_t)112, (int32_t)112,i160,i161,i162,i163) = Arr4DIdxRowM(tmp169, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i156,i157,i158,i159);
i159 = (i159 +  (int64_t)1);
if ((i159 ==  (int64_t)16)) {
i159 =  (int64_t)0;
i158 = (i158 +  (int64_t)1);
if ((i158 ==  (int64_t)112)) {
i158 =  (int64_t)0;
i157 = (i157 +  (int64_t)1);
if ((i157 ==  (int64_t)112)) {
i157 =  (int64_t)0;
i156 = (i156 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp169);

uint64_t* tmp174 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16);

int64_t i171;

int64_t i170;

int64_t i169;

int64_t i168;

int64_t i167;

int64_t i166;

int64_t i165;

int64_t i164;
i164 =  (int64_t)0;
i165 =  (int64_t)0;
i166 =  (int64_t)0;
i167 =  (int64_t)0;
for (uint32_t i168 =  (int32_t)0; i168 <  (int32_t)1; i168++){
for (uint32_t i171 =  (int32_t)0; i171 <  (int32_t)16; i171++){
for (uint32_t i169 =  (int32_t)0; i169 <  (int32_t)112; i169++){
for (uint32_t i170 =  (int32_t)0; i170 <  (int32_t)112; i170++){
Arr4DIdxRowM(tmp174, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i168,i169,i170,i171) = Arr4DIdxRowM(tmp172, (int32_t)1, (int32_t)16, (int32_t)112, (int32_t)112,i164,i165,i166,i167);
i167 = (i167 +  (int64_t)1);
if ((i167 ==  (int64_t)112)) {
i167 =  (int64_t)0;
i166 = (i166 +  (int64_t)1);
if ((i166 ==  (int64_t)112)) {
i166 =  (int64_t)0;
i165 = (i165 +  (int64_t)1);
if ((i165 ==  (int64_t)16)) {
i165 =  (int64_t)0;
i164 = (i164 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)16,  (int32_t)112,  (int32_t)112, tmp172);

uint64_t* tmp176 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16);
ScaleDown4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp174,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp174, tmp2, tmp3,  (int32_t)0,  (int32_t)0, tmp176);
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp174);

uint64_t* tmp178 = make_array<uint64_t>( (int32_t)1,  (int32_t)16,  (int32_t)112,  (int32_t)112);

int64_t i179;

int64_t i178;

int64_t i177;

int64_t i176;

int64_t i175;

int64_t i174;

int64_t i173;

int64_t i172;
i172 =  (int64_t)0;
i173 =  (int64_t)0;
i174 =  (int64_t)0;
i175 =  (int64_t)0;
for (uint32_t i176 =  (int32_t)0; i176 <  (int32_t)1; i176++){
for (uint32_t i178 =  (int32_t)0; i178 <  (int32_t)112; i178++){
for (uint32_t i179 =  (int32_t)0; i179 <  (int32_t)112; i179++){
for (uint32_t i177 =  (int32_t)0; i177 <  (int32_t)16; i177++){
Arr4DIdxRowM(tmp178, (int32_t)1, (int32_t)16, (int32_t)112, (int32_t)112,i176,i177,i178,i179) = Arr4DIdxRowM(tmp176, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i172,i173,i174,i175);
i175 = (i175 +  (int64_t)1);
if ((i175 ==  (int64_t)16)) {
i175 =  (int64_t)0;
i174 = (i174 +  (int64_t)1);
if ((i174 ==  (int64_t)112)) {
i174 =  (int64_t)0;
i173 = (i173 +  (int64_t)1);
if ((i173 ==  (int64_t)112)) {
i173 =  (int64_t)0;
i172 = (i172 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp176);

uint64_t* tmp180 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16);

int64_t i187;

int64_t i186;

int64_t i185;

int64_t i184;

int64_t i183;

int64_t i182;

int64_t i181;

int64_t i180;
i180 =  (int64_t)0;
i181 =  (int64_t)0;
i182 =  (int64_t)0;
i183 =  (int64_t)0;
for (uint32_t i184 =  (int32_t)0; i184 <  (int32_t)1; i184++){
for (uint32_t i187 =  (int32_t)0; i187 <  (int32_t)16; i187++){
for (uint32_t i185 =  (int32_t)0; i185 <  (int32_t)112; i185++){
for (uint32_t i186 =  (int32_t)0; i186 <  (int32_t)112; i186++){
Arr4DIdxRowM(tmp180, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i184,i185,i186,i187) = Arr4DIdxRowM(tmp178, (int32_t)1, (int32_t)16, (int32_t)112, (int32_t)112,i180,i181,i182,i183);
i183 = (i183 +  (int64_t)1);
if ((i183 ==  (int64_t)112)) {
i183 =  (int64_t)0;
i182 = (i182 +  (int64_t)1);
if ((i182 ==  (int64_t)112)) {
i182 =  (int64_t)0;
i181 = (i181 +  (int64_t)1);
if ((i181 ==  (int64_t)16)) {
i181 =  (int64_t)0;
i180 = (i180 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)16,  (int32_t)112,  (int32_t)112, tmp178);

uint64_t* tmp182 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16);
Relu4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp180, tmp182,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp180);

uint64_t* tmp184 = make_array<uint64_t>( (int32_t)1,  (int32_t)16,  (int32_t)112,  (int32_t)112);

int64_t i195;

int64_t i194;

int64_t i193;

int64_t i192;

int64_t i191;

int64_t i190;

int64_t i189;

int64_t i188;
i188 =  (int64_t)0;
i189 =  (int64_t)0;
i190 =  (int64_t)0;
i191 =  (int64_t)0;
for (uint32_t i192 =  (int32_t)0; i192 <  (int32_t)1; i192++){
for (uint32_t i194 =  (int32_t)0; i194 <  (int32_t)112; i194++){
for (uint32_t i195 =  (int32_t)0; i195 <  (int32_t)112; i195++){
for (uint32_t i193 =  (int32_t)0; i193 <  (int32_t)16; i193++){
Arr4DIdxRowM(tmp184, (int32_t)1, (int32_t)16, (int32_t)112, (int32_t)112,i192,i193,i194,i195) = Arr4DIdxRowM(tmp182, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i188,i189,i190,i191);
i191 = (i191 +  (int64_t)1);
if ((i191 ==  (int64_t)16)) {
i191 =  (int64_t)0;
i190 = (i190 +  (int64_t)1);
if ((i190 ==  (int64_t)112)) {
i190 =  (int64_t)0;
i189 = (i189 +  (int64_t)1);
if ((i189 ==  (int64_t)112)) {
i189 =  (int64_t)0;
i188 = (i188 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp182);

uint64_t* tmp186 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16);

int64_t i203;

int64_t i202;

int64_t i201;

int64_t i200;

int64_t i199;

int64_t i198;

int64_t i197;

int64_t i196;
i196 =  (int64_t)0;
i197 =  (int64_t)0;
i198 =  (int64_t)0;
i199 =  (int64_t)0;
for (uint32_t i200 =  (int32_t)0; i200 <  (int32_t)1; i200++){
for (uint32_t i203 =  (int32_t)0; i203 <  (int32_t)16; i203++){
for (uint32_t i201 =  (int32_t)0; i201 <  (int32_t)112; i201++){
for (uint32_t i202 =  (int32_t)0; i202 <  (int32_t)112; i202++){
Arr4DIdxRowM(tmp186, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i200,i201,i202,i203) = Arr4DIdxRowM(tmp184, (int32_t)1, (int32_t)16, (int32_t)112, (int32_t)112,i196,i197,i198,i199);
i199 = (i199 +  (int64_t)1);
if ((i199 ==  (int64_t)112)) {
i199 =  (int64_t)0;
i198 = (i198 +  (int64_t)1);
if ((i198 ==  (int64_t)112)) {
i198 =  (int64_t)0;
i197 = (i197 +  (int64_t)1);
if ((i197 ==  (int64_t)16)) {
i197 =  (int64_t)0;
i196 = (i196 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)16,  (int32_t)112,  (int32_t)112, tmp184);

uint64_t* tmp188 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)16,  (int32_t)16);

int64_t i211;

int64_t i210;

int64_t i209;

int64_t i208;

int64_t i207;

int64_t i206;

int64_t i205;

int64_t i204;
i204 =  (int64_t)0;
i205 =  (int64_t)0;
i206 =  (int64_t)0;
i207 =  (int64_t)0;
for (uint32_t i211 =  (int32_t)0; i211 <  (int32_t)16; i211++){
for (uint32_t i210 =  (int32_t)0; i210 <  (int32_t)16; i210++){
for (uint32_t i208 =  (int32_t)0; i208 <  (int32_t)1; i208++){
for (uint32_t i209 =  (int32_t)0; i209 <  (int32_t)1; i209++){
Arr4DIdxRowM(tmp188, (int32_t)1, (int32_t)1, (int32_t)16, (int32_t)16,i208,i209,i210,i211) = Arr4DIdxRowM(tmp6, (int32_t)16, (int32_t)16, (int32_t)1, (int32_t)1,i204,i205,i206,i207);
i207 = (i207 +  (int64_t)1);
if ((i207 ==  (int64_t)1)) {
i207 =  (int64_t)0;
i206 = (i206 +  (int64_t)1);
if ((i206 ==  (int64_t)1)) {
i206 =  (int64_t)0;
i205 = (i205 +  (int64_t)1);
if ((i205 ==  (int64_t)16)) {
i205 =  (int64_t)0;
i204 = (i204 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)16,  (int32_t)16,  (int32_t)1,  (int32_t)1, tmp6);

uint64_t* tmp190 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16,  (int32_t)1,  (int32_t)1,  (int32_t)16,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp186, tmp188, tmp190);
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp186);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)16,  (int32_t)16, tmp188);

uint64_t* tmp193 = make_array<uint64_t>( (int32_t)1,  (int32_t)16,  (int32_t)112,  (int32_t)112);

int64_t i219;

int64_t i218;

int64_t i217;

int64_t i216;

int64_t i215;

int64_t i214;

int64_t i213;

int64_t i212;
i212 =  (int64_t)0;
i213 =  (int64_t)0;
i214 =  (int64_t)0;
i215 =  (int64_t)0;
for (uint32_t i216 =  (int32_t)0; i216 <  (int32_t)1; i216++){
for (uint32_t i218 =  (int32_t)0; i218 <  (int32_t)112; i218++){
for (uint32_t i219 =  (int32_t)0; i219 <  (int32_t)112; i219++){
for (uint32_t i217 =  (int32_t)0; i217 <  (int32_t)16; i217++){
Arr4DIdxRowM(tmp193, (int32_t)1, (int32_t)16, (int32_t)112, (int32_t)112,i216,i217,i218,i219) = Arr4DIdxRowM(tmp190, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i212,i213,i214,i215);
i215 = (i215 +  (int64_t)1);
if ((i215 ==  (int64_t)16)) {
i215 =  (int64_t)0;
i214 = (i214 +  (int64_t)1);
if ((i214 ==  (int64_t)112)) {
i214 =  (int64_t)0;
i213 = (i213 +  (int64_t)1);
if ((i213 ==  (int64_t)112)) {
i213 =  (int64_t)0;
i212 = (i212 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp190);

uint64_t* tmp195 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16);

int64_t i227;

int64_t i226;

int64_t i225;

int64_t i224;

int64_t i223;

int64_t i222;

int64_t i221;

int64_t i220;
i220 =  (int64_t)0;
i221 =  (int64_t)0;
i222 =  (int64_t)0;
i223 =  (int64_t)0;
for (uint32_t i224 =  (int32_t)0; i224 <  (int32_t)1; i224++){
for (uint32_t i227 =  (int32_t)0; i227 <  (int32_t)16; i227++){
for (uint32_t i225 =  (int32_t)0; i225 <  (int32_t)112; i225++){
for (uint32_t i226 =  (int32_t)0; i226 <  (int32_t)112; i226++){
Arr4DIdxRowM(tmp195, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i224,i225,i226,i227) = Arr4DIdxRowM(tmp193, (int32_t)1, (int32_t)16, (int32_t)112, (int32_t)112,i220,i221,i222,i223);
i223 = (i223 +  (int64_t)1);
if ((i223 ==  (int64_t)112)) {
i223 =  (int64_t)0;
i222 = (i222 +  (int64_t)1);
if ((i222 ==  (int64_t)112)) {
i222 =  (int64_t)0;
i221 = (i221 +  (int64_t)1);
if ((i221 ==  (int64_t)16)) {
i221 =  (int64_t)0;
i220 = (i220 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)16,  (int32_t)112,  (int32_t)112, tmp193);

uint64_t* tmp197 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16);
ScaleDown4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp195,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp195, tmp2, tmp3,  (int32_t)0,  (int32_t)0, tmp197);
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp195);

uint64_t* tmp199 = make_array<uint64_t>( (int32_t)1,  (int32_t)16,  (int32_t)112,  (int32_t)112);

int64_t i235;

int64_t i234;

int64_t i233;

int64_t i232;

int64_t i231;

int64_t i230;

int64_t i229;

int64_t i228;
i228 =  (int64_t)0;
i229 =  (int64_t)0;
i230 =  (int64_t)0;
i231 =  (int64_t)0;
for (uint32_t i232 =  (int32_t)0; i232 <  (int32_t)1; i232++){
for (uint32_t i234 =  (int32_t)0; i234 <  (int32_t)112; i234++){
for (uint32_t i235 =  (int32_t)0; i235 <  (int32_t)112; i235++){
for (uint32_t i233 =  (int32_t)0; i233 <  (int32_t)16; i233++){
Arr4DIdxRowM(tmp199, (int32_t)1, (int32_t)16, (int32_t)112, (int32_t)112,i232,i233,i234,i235) = Arr4DIdxRowM(tmp197, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i228,i229,i230,i231);
i231 = (i231 +  (int64_t)1);
if ((i231 ==  (int64_t)16)) {
i231 =  (int64_t)0;
i230 = (i230 +  (int64_t)1);
if ((i230 ==  (int64_t)112)) {
i230 =  (int64_t)0;
i229 = (i229 +  (int64_t)1);
if ((i229 ==  (int64_t)112)) {
i229 =  (int64_t)0;
i228 = (i228 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp197);

uint64_t* tmp201 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16);

int64_t i243;

int64_t i242;

int64_t i241;

int64_t i240;

int64_t i239;

int64_t i238;

int64_t i237;

int64_t i236;
i236 =  (int64_t)0;
i237 =  (int64_t)0;
i238 =  (int64_t)0;
i239 =  (int64_t)0;
for (uint32_t i240 =  (int32_t)0; i240 <  (int32_t)1; i240++){
for (uint32_t i243 =  (int32_t)0; i243 <  (int32_t)16; i243++){
for (uint32_t i241 =  (int32_t)0; i241 <  (int32_t)112; i241++){
for (uint32_t i242 =  (int32_t)0; i242 <  (int32_t)112; i242++){
Arr4DIdxRowM(tmp201, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i240,i241,i242,i243) = Arr4DIdxRowM(tmp199, (int32_t)1, (int32_t)16, (int32_t)112, (int32_t)112,i236,i237,i238,i239);
i239 = (i239 +  (int64_t)1);
if ((i239 ==  (int64_t)112)) {
i239 =  (int64_t)0;
i238 = (i238 +  (int64_t)1);
if ((i238 ==  (int64_t)112)) {
i238 =  (int64_t)0;
i237 = (i237 +  (int64_t)1);
if ((i237 ==  (int64_t)16)) {
i237 =  (int64_t)0;
i236 = (i236 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)16,  (int32_t)112,  (int32_t)112, tmp199);

uint64_t* tmp203 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16);

int64_t i251;

int64_t i250;

int64_t i249;

int64_t i248;

int64_t i247;

int64_t i246;

int64_t i245;

int64_t i244;
i244 =  (int64_t)0;
i245 =  (int64_t)0;
i246 =  (int64_t)0;
i247 =  (int64_t)0;
for (uint32_t i248 =  (int32_t)0; i248 <  (int32_t)1; i248++){
for (uint32_t i251 =  (int32_t)0; i251 <  (int32_t)16; i251++){
for (uint32_t i249 =  (int32_t)0; i249 <  (int32_t)112; i249++){
for (uint32_t i250 =  (int32_t)0; i250 <  (int32_t)112; i250++){
Arr4DIdxRowM(tmp203, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i248,i249,i250,i251) = Arr4DIdxRowM(tmp143, (int32_t)1, (int32_t)16, (int32_t)112, (int32_t)112,i244,i245,i246,i247);
i247 = (i247 +  (int64_t)1);
if ((i247 ==  (int64_t)112)) {
i247 =  (int64_t)0;
i246 = (i246 +  (int64_t)1);
if ((i246 ==  (int64_t)112)) {
i246 =  (int64_t)0;
i245 = (i245 +  (int64_t)1);
if ((i245 ==  (int64_t)16)) {
i245 =  (int64_t)0;
i244 = (i244 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)16,  (int32_t)112,  (int32_t)112, tmp143);

uint64_t* tmp205 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16);
for (uint32_t i0 =  (int32_t)0; i0 <  (int32_t)1; i0++){
for (uint32_t i1 =  (int32_t)0; i1 <  (int32_t)112; i1++){
for (uint32_t i2 =  (int32_t)0; i2 <  (int32_t)112; i2++){
for (uint32_t i3 =  (int32_t)0; i3 <  (int32_t)16; i3++){
Arr4DIdxRowM(tmp205, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i0,i1,i2,i3) = SecretAdd(Arr4DIdxRowM(tmp201, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i0,i1,i2,i3), Arr4DIdxRowM(tmp203, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i0,i1,i2,i3));
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp203);
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp201);

uint64_t* tmp208 = make_array<uint64_t>( (int32_t)1,  (int32_t)16,  (int32_t)112,  (int32_t)112);

int64_t i259;

int64_t i258;

int64_t i257;

int64_t i256;

int64_t i255;

int64_t i254;

int64_t i253;

int64_t i252;
i252 =  (int64_t)0;
i253 =  (int64_t)0;
i254 =  (int64_t)0;
i255 =  (int64_t)0;
for (uint32_t i256 =  (int32_t)0; i256 <  (int32_t)1; i256++){
for (uint32_t i258 =  (int32_t)0; i258 <  (int32_t)112; i258++){
for (uint32_t i259 =  (int32_t)0; i259 <  (int32_t)112; i259++){
for (uint32_t i257 =  (int32_t)0; i257 <  (int32_t)16; i257++){
Arr4DIdxRowM(tmp208, (int32_t)1, (int32_t)16, (int32_t)112, (int32_t)112,i256,i257,i258,i259) = Arr4DIdxRowM(tmp205, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i252,i253,i254,i255);
i255 = (i255 +  (int64_t)1);
if ((i255 ==  (int64_t)16)) {
i255 =  (int64_t)0;
i254 = (i254 +  (int64_t)1);
if ((i254 ==  (int64_t)112)) {
i254 =  (int64_t)0;
i253 = (i253 +  (int64_t)1);
if ((i253 ==  (int64_t)112)) {
i253 =  (int64_t)0;
i252 = (i252 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp205);

uint64_t* tmp210 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16);

int64_t i267;

int64_t i266;

int64_t i265;

int64_t i264;

int64_t i263;

int64_t i262;

int64_t i261;

int64_t i260;
i260 =  (int64_t)0;
i261 =  (int64_t)0;
i262 =  (int64_t)0;
i263 =  (int64_t)0;
for (uint32_t i264 =  (int32_t)0; i264 <  (int32_t)1; i264++){
for (uint32_t i267 =  (int32_t)0; i267 <  (int32_t)16; i267++){
for (uint32_t i265 =  (int32_t)0; i265 <  (int32_t)112; i265++){
for (uint32_t i266 =  (int32_t)0; i266 <  (int32_t)112; i266++){
Arr4DIdxRowM(tmp210, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i264,i265,i266,i267) = Arr4DIdxRowM(tmp208, (int32_t)1, (int32_t)16, (int32_t)112, (int32_t)112,i260,i261,i262,i263);
i263 = (i263 +  (int64_t)1);
if ((i263 ==  (int64_t)112)) {
i263 =  (int64_t)0;
i262 = (i262 +  (int64_t)1);
if ((i262 ==  (int64_t)112)) {
i262 =  (int64_t)0;
i261 = (i261 +  (int64_t)1);
if ((i261 ==  (int64_t)16)) {
i261 =  (int64_t)0;
i260 = (i260 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)16,  (int32_t)112,  (int32_t)112, tmp208);

uint64_t* tmp212 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16);
Relu4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp210, tmp212,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp210);

uint64_t* tmp214 = make_array<uint64_t>( (int32_t)1,  (int32_t)16,  (int32_t)112,  (int32_t)112);

int64_t i275;

int64_t i274;

int64_t i273;

int64_t i272;

int64_t i271;

int64_t i270;

int64_t i269;

int64_t i268;
i268 =  (int64_t)0;
i269 =  (int64_t)0;
i270 =  (int64_t)0;
i271 =  (int64_t)0;
for (uint32_t i272 =  (int32_t)0; i272 <  (int32_t)1; i272++){
for (uint32_t i274 =  (int32_t)0; i274 <  (int32_t)112; i274++){
for (uint32_t i275 =  (int32_t)0; i275 <  (int32_t)112; i275++){
for (uint32_t i273 =  (int32_t)0; i273 <  (int32_t)16; i273++){
Arr4DIdxRowM(tmp214, (int32_t)1, (int32_t)16, (int32_t)112, (int32_t)112,i272,i273,i274,i275) = Arr4DIdxRowM(tmp212, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i268,i269,i270,i271);
i271 = (i271 +  (int64_t)1);
if ((i271 ==  (int64_t)16)) {
i271 =  (int64_t)0;
i270 = (i270 +  (int64_t)1);
if ((i270 ==  (int64_t)112)) {
i270 =  (int64_t)0;
i269 = (i269 +  (int64_t)1);
if ((i269 ==  (int64_t)112)) {
i269 =  (int64_t)0;
i268 = (i268 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp212);

uint64_t* tmp216 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16);

int64_t i283;

int64_t i282;

int64_t i281;

int64_t i280;

int64_t i279;

int64_t i278;

int64_t i277;

int64_t i276;
i276 =  (int64_t)0;
i277 =  (int64_t)0;
i278 =  (int64_t)0;
i279 =  (int64_t)0;
for (uint32_t i280 =  (int32_t)0; i280 <  (int32_t)1; i280++){
for (uint32_t i283 =  (int32_t)0; i283 <  (int32_t)16; i283++){
for (uint32_t i281 =  (int32_t)0; i281 <  (int32_t)112; i281++){
for (uint32_t i282 =  (int32_t)0; i282 <  (int32_t)112; i282++){
Arr4DIdxRowM(tmp216, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i280,i281,i282,i283) = Arr4DIdxRowM(tmp214, (int32_t)1, (int32_t)16, (int32_t)112, (int32_t)112,i276,i277,i278,i279);
i279 = (i279 +  (int64_t)1);
if ((i279 ==  (int64_t)112)) {
i279 =  (int64_t)0;
i278 = (i278 +  (int64_t)1);
if ((i278 ==  (int64_t)112)) {
i278 =  (int64_t)0;
i277 = (i277 +  (int64_t)1);
if ((i277 ==  (int64_t)16)) {
i277 =  (int64_t)0;
i276 = (i276 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp217 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)16,  (int32_t)64);

int64_t i291;

int64_t i290;

int64_t i289;

int64_t i288;

int64_t i287;

int64_t i286;

int64_t i285;

int64_t i284;
i284 =  (int64_t)0;
i285 =  (int64_t)0;
i286 =  (int64_t)0;
i287 =  (int64_t)0;
for (uint32_t i291 =  (int32_t)0; i291 <  (int32_t)64; i291++){
for (uint32_t i290 =  (int32_t)0; i290 <  (int32_t)16; i290++){
for (uint32_t i288 =  (int32_t)0; i288 <  (int32_t)1; i288++){
for (uint32_t i289 =  (int32_t)0; i289 <  (int32_t)1; i289++){
Arr4DIdxRowM(tmp217, (int32_t)1, (int32_t)1, (int32_t)16, (int32_t)64,i288,i289,i290,i291) = Arr4DIdxRowM(tmp7, (int32_t)64, (int32_t)16, (int32_t)1, (int32_t)1,i284,i285,i286,i287);
i287 = (i287 +  (int64_t)1);
if ((i287 ==  (int64_t)1)) {
i287 =  (int64_t)0;
i286 = (i286 +  (int64_t)1);
if ((i286 ==  (int64_t)1)) {
i286 =  (int64_t)0;
i285 = (i285 +  (int64_t)1);
if ((i285 ==  (int64_t)16)) {
i285 =  (int64_t)0;
i284 = (i284 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)64,  (int32_t)16,  (int32_t)1,  (int32_t)1, tmp7);

uint64_t* tmp219 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)64);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16,  (int32_t)1,  (int32_t)1,  (int32_t)64,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp216, tmp217, tmp219);
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp216);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)16,  (int32_t)64, tmp217);

uint64_t* tmp222 = make_array<uint64_t>( (int32_t)1,  (int32_t)64,  (int32_t)112,  (int32_t)112);

int64_t i299;

int64_t i298;

int64_t i297;

int64_t i296;

int64_t i295;

int64_t i294;

int64_t i293;

int64_t i292;
i292 =  (int64_t)0;
i293 =  (int64_t)0;
i294 =  (int64_t)0;
i295 =  (int64_t)0;
for (uint32_t i296 =  (int32_t)0; i296 <  (int32_t)1; i296++){
for (uint32_t i298 =  (int32_t)0; i298 <  (int32_t)112; i298++){
for (uint32_t i299 =  (int32_t)0; i299 <  (int32_t)112; i299++){
for (uint32_t i297 =  (int32_t)0; i297 <  (int32_t)64; i297++){
Arr4DIdxRowM(tmp222, (int32_t)1, (int32_t)64, (int32_t)112, (int32_t)112,i296,i297,i298,i299) = Arr4DIdxRowM(tmp219, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)64,i292,i293,i294,i295);
i295 = (i295 +  (int64_t)1);
if ((i295 ==  (int64_t)64)) {
i295 =  (int64_t)0;
i294 = (i294 +  (int64_t)1);
if ((i294 ==  (int64_t)112)) {
i294 =  (int64_t)0;
i293 = (i293 +  (int64_t)1);
if ((i293 ==  (int64_t)112)) {
i293 =  (int64_t)0;
i292 = (i292 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)64, tmp219);

uint64_t* tmp224 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)64);

int64_t i307;

int64_t i306;

int64_t i305;

int64_t i304;

int64_t i303;

int64_t i302;

int64_t i301;

int64_t i300;
i300 =  (int64_t)0;
i301 =  (int64_t)0;
i302 =  (int64_t)0;
i303 =  (int64_t)0;
for (uint32_t i304 =  (int32_t)0; i304 <  (int32_t)1; i304++){
for (uint32_t i307 =  (int32_t)0; i307 <  (int32_t)64; i307++){
for (uint32_t i305 =  (int32_t)0; i305 <  (int32_t)112; i305++){
for (uint32_t i306 =  (int32_t)0; i306 <  (int32_t)112; i306++){
Arr4DIdxRowM(tmp224, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)64,i304,i305,i306,i307) = Arr4DIdxRowM(tmp222, (int32_t)1, (int32_t)64, (int32_t)112, (int32_t)112,i300,i301,i302,i303);
i303 = (i303 +  (int64_t)1);
if ((i303 ==  (int64_t)112)) {
i303 =  (int64_t)0;
i302 = (i302 +  (int64_t)1);
if ((i302 ==  (int64_t)112)) {
i302 =  (int64_t)0;
i301 = (i301 +  (int64_t)1);
if ((i301 ==  (int64_t)64)) {
i301 =  (int64_t)0;
i300 = (i300 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)64,  (int32_t)112,  (int32_t)112, tmp222);

uint64_t* tmp226 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)64);
ScaleDown4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)64, tmp224,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)64, tmp224, tmp8, tmp9,  (int32_t)0,  (int32_t)23, tmp226);
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)64, tmp224);

uint64_t* tmp228 = make_array<uint64_t>( (int32_t)1,  (int32_t)64,  (int32_t)112,  (int32_t)112);

int64_t i315;

int64_t i314;

int64_t i313;

int64_t i312;

int64_t i311;

int64_t i310;

int64_t i309;

int64_t i308;
i308 =  (int64_t)0;
i309 =  (int64_t)0;
i310 =  (int64_t)0;
i311 =  (int64_t)0;
for (uint32_t i312 =  (int32_t)0; i312 <  (int32_t)1; i312++){
for (uint32_t i314 =  (int32_t)0; i314 <  (int32_t)112; i314++){
for (uint32_t i315 =  (int32_t)0; i315 <  (int32_t)112; i315++){
for (uint32_t i313 =  (int32_t)0; i313 <  (int32_t)64; i313++){
Arr4DIdxRowM(tmp228, (int32_t)1, (int32_t)64, (int32_t)112, (int32_t)112,i312,i313,i314,i315) = Arr4DIdxRowM(tmp226, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)64,i308,i309,i310,i311);
i311 = (i311 +  (int64_t)1);
if ((i311 ==  (int64_t)64)) {
i311 =  (int64_t)0;
i310 = (i310 +  (int64_t)1);
if ((i310 ==  (int64_t)112)) {
i310 =  (int64_t)0;
i309 = (i309 +  (int64_t)1);
if ((i309 ==  (int64_t)112)) {
i309 =  (int64_t)0;
i308 = (i308 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)64, tmp226);

uint64_t* tmp230 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)64);

int64_t i323;

int64_t i322;

int64_t i321;

int64_t i320;

int64_t i319;

int64_t i318;

int64_t i317;

int64_t i316;
i316 =  (int64_t)0;
i317 =  (int64_t)0;
i318 =  (int64_t)0;
i319 =  (int64_t)0;
for (uint32_t i320 =  (int32_t)0; i320 <  (int32_t)1; i320++){
for (uint32_t i323 =  (int32_t)0; i323 <  (int32_t)64; i323++){
for (uint32_t i321 =  (int32_t)0; i321 <  (int32_t)112; i321++){
for (uint32_t i322 =  (int32_t)0; i322 <  (int32_t)112; i322++){
Arr4DIdxRowM(tmp230, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)64,i320,i321,i322,i323) = Arr4DIdxRowM(tmp228, (int32_t)1, (int32_t)64, (int32_t)112, (int32_t)112,i316,i317,i318,i319);
i319 = (i319 +  (int64_t)1);
if ((i319 ==  (int64_t)112)) {
i319 =  (int64_t)0;
i318 = (i318 +  (int64_t)1);
if ((i318 ==  (int64_t)112)) {
i318 =  (int64_t)0;
i317 = (i317 +  (int64_t)1);
if ((i317 ==  (int64_t)64)) {
i317 =  (int64_t)0;
i316 = (i316 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)64,  (int32_t)112,  (int32_t)112, tmp228);

uint64_t* tmp232 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)64);
Relu4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)64, tmp230, tmp232,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)64, tmp230);

uint64_t* tmp234 = make_array<uint64_t>( (int32_t)1,  (int32_t)64,  (int32_t)112,  (int32_t)112);

int64_t i331;

int64_t i330;

int64_t i329;

int64_t i328;

int64_t i327;

int64_t i326;

int64_t i325;

int64_t i324;
i324 =  (int64_t)0;
i325 =  (int64_t)0;
i326 =  (int64_t)0;
i327 =  (int64_t)0;
for (uint32_t i328 =  (int32_t)0; i328 <  (int32_t)1; i328++){
for (uint32_t i330 =  (int32_t)0; i330 <  (int32_t)112; i330++){
for (uint32_t i331 =  (int32_t)0; i331 <  (int32_t)112; i331++){
for (uint32_t i329 =  (int32_t)0; i329 <  (int32_t)64; i329++){
Arr4DIdxRowM(tmp234, (int32_t)1, (int32_t)64, (int32_t)112, (int32_t)112,i328,i329,i330,i331) = Arr4DIdxRowM(tmp232, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)64,i324,i325,i326,i327);
i327 = (i327 +  (int64_t)1);
if ((i327 ==  (int64_t)64)) {
i327 =  (int64_t)0;
i326 = (i326 +  (int64_t)1);
if ((i326 ==  (int64_t)112)) {
i326 =  (int64_t)0;
i325 = (i325 +  (int64_t)1);
if ((i325 ==  (int64_t)112)) {
i325 =  (int64_t)0;
i324 = (i324 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)64, tmp232);

uint64_t* tmp236 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)64);

int64_t i339;

int64_t i338;

int64_t i337;

int64_t i336;

int64_t i335;

int64_t i334;

int64_t i333;

int64_t i332;
i332 =  (int64_t)0;
i333 =  (int64_t)0;
i334 =  (int64_t)0;
i335 =  (int64_t)0;
for (uint32_t i336 =  (int32_t)0; i336 <  (int32_t)1; i336++){
for (uint32_t i339 =  (int32_t)0; i339 <  (int32_t)64; i339++){
for (uint32_t i337 =  (int32_t)0; i337 <  (int32_t)112; i337++){
for (uint32_t i338 =  (int32_t)0; i338 <  (int32_t)112; i338++){
Arr4DIdxRowM(tmp236, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)64,i336,i337,i338,i339) = Arr4DIdxRowM(tmp234, (int32_t)1, (int32_t)64, (int32_t)112, (int32_t)112,i332,i333,i334,i335);
i335 = (i335 +  (int64_t)1);
if ((i335 ==  (int64_t)112)) {
i335 =  (int64_t)0;
i334 = (i334 +  (int64_t)1);
if ((i334 ==  (int64_t)112)) {
i334 =  (int64_t)0;
i333 = (i333 +  (int64_t)1);
if ((i333 ==  (int64_t)64)) {
i333 =  (int64_t)0;
i332 = (i332 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)64,  (int32_t)112,  (int32_t)112, tmp234);

uint64_t* tmp238 = make_array<uint64_t>( (int32_t)3,  (int32_t)3,  (int32_t)1,  (int32_t)64);

int64_t i347;

int64_t i346;

int64_t i345;

int64_t i344;

int64_t i343;

int64_t i342;

int64_t i341;

int64_t i340;
i340 =  (int64_t)0;
i341 =  (int64_t)0;
i342 =  (int64_t)0;
i343 =  (int64_t)0;
for (uint32_t i347 =  (int32_t)0; i347 <  (int32_t)64; i347++){
for (uint32_t i346 =  (int32_t)0; i346 <  (int32_t)1; i346++){
for (uint32_t i344 =  (int32_t)0; i344 <  (int32_t)3; i344++){
for (uint32_t i345 =  (int32_t)0; i345 <  (int32_t)3; i345++){
Arr4DIdxRowM(tmp238, (int32_t)3, (int32_t)3, (int32_t)1, (int32_t)64,i344,i345,i346,i347) = Arr4DIdxRowM(tmp10, (int32_t)64, (int32_t)1, (int32_t)3, (int32_t)3,i340,i341,i342,i343);
i343 = (i343 +  (int64_t)1);
if ((i343 ==  (int64_t)3)) {
i343 =  (int64_t)0;
i342 = (i342 +  (int64_t)1);
if ((i342 ==  (int64_t)3)) {
i342 =  (int64_t)0;
i341 = (i341 +  (int64_t)1);
if ((i341 ==  (int64_t)1)) {
i341 =  (int64_t)0;
i340 = (i340 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)64,  (int32_t)1,  (int32_t)3,  (int32_t)3, tmp10);

uint64_t* tmp240 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)64);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)64,  (int32_t)3,  (int32_t)3,  (int32_t)64,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)2,  (int32_t)2,  (int32_t)64, tmp236, tmp238, tmp240);
ClearMemSecret4( (int32_t)3,  (int32_t)3,  (int32_t)1,  (int32_t)64, tmp238);
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)64, tmp236);

uint64_t* tmp243 = make_array<uint64_t>( (int32_t)1,  (int32_t)64,  (int32_t)56,  (int32_t)56);

int64_t i355;

int64_t i354;

int64_t i353;

int64_t i352;

int64_t i351;

int64_t i350;

int64_t i349;

int64_t i348;
i348 =  (int64_t)0;
i349 =  (int64_t)0;
i350 =  (int64_t)0;
i351 =  (int64_t)0;
for (uint32_t i352 =  (int32_t)0; i352 <  (int32_t)1; i352++){
for (uint32_t i354 =  (int32_t)0; i354 <  (int32_t)56; i354++){
for (uint32_t i355 =  (int32_t)0; i355 <  (int32_t)56; i355++){
for (uint32_t i353 =  (int32_t)0; i353 <  (int32_t)64; i353++){
Arr4DIdxRowM(tmp243, (int32_t)1, (int32_t)64, (int32_t)56, (int32_t)56,i352,i353,i354,i355) = Arr4DIdxRowM(tmp240, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)64,i348,i349,i350,i351);
i351 = (i351 +  (int64_t)1);
if ((i351 ==  (int64_t)64)) {
i351 =  (int64_t)0;
i350 = (i350 +  (int64_t)1);
if ((i350 ==  (int64_t)56)) {
i350 =  (int64_t)0;
i349 = (i349 +  (int64_t)1);
if ((i349 ==  (int64_t)56)) {
i349 =  (int64_t)0;
i348 = (i348 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)64, tmp240);

uint64_t* tmp245 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)64);

int64_t i363;

int64_t i362;

int64_t i361;

int64_t i360;

int64_t i359;

int64_t i358;

int64_t i357;

int64_t i356;
i356 =  (int64_t)0;
i357 =  (int64_t)0;
i358 =  (int64_t)0;
i359 =  (int64_t)0;
for (uint32_t i360 =  (int32_t)0; i360 <  (int32_t)1; i360++){
for (uint32_t i363 =  (int32_t)0; i363 <  (int32_t)64; i363++){
for (uint32_t i361 =  (int32_t)0; i361 <  (int32_t)56; i361++){
for (uint32_t i362 =  (int32_t)0; i362 <  (int32_t)56; i362++){
Arr4DIdxRowM(tmp245, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)64,i360,i361,i362,i363) = Arr4DIdxRowM(tmp243, (int32_t)1, (int32_t)64, (int32_t)56, (int32_t)56,i356,i357,i358,i359);
i359 = (i359 +  (int64_t)1);
if ((i359 ==  (int64_t)56)) {
i359 =  (int64_t)0;
i358 = (i358 +  (int64_t)1);
if ((i358 ==  (int64_t)56)) {
i358 =  (int64_t)0;
i357 = (i357 +  (int64_t)1);
if ((i357 ==  (int64_t)64)) {
i357 =  (int64_t)0;
i356 = (i356 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)64,  (int32_t)56,  (int32_t)56, tmp243);

uint64_t* tmp247 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)64);
ScaleDown4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)64, tmp245,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)64, tmp245, tmp8, tmp9,  (int32_t)0,  (int32_t)0, tmp247);
ClearMemSecret1( (int32_t)64, tmp9);
ClearMemSecret1( (int32_t)64, tmp8);
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)64, tmp245);

uint64_t* tmp251 = make_array<uint64_t>( (int32_t)1,  (int32_t)64,  (int32_t)56,  (int32_t)56);

int64_t i371;

int64_t i370;

int64_t i369;

int64_t i368;

int64_t i367;

int64_t i366;

int64_t i365;

int64_t i364;
i364 =  (int64_t)0;
i365 =  (int64_t)0;
i366 =  (int64_t)0;
i367 =  (int64_t)0;
for (uint32_t i368 =  (int32_t)0; i368 <  (int32_t)1; i368++){
for (uint32_t i370 =  (int32_t)0; i370 <  (int32_t)56; i370++){
for (uint32_t i371 =  (int32_t)0; i371 <  (int32_t)56; i371++){
for (uint32_t i369 =  (int32_t)0; i369 <  (int32_t)64; i369++){
Arr4DIdxRowM(tmp251, (int32_t)1, (int32_t)64, (int32_t)56, (int32_t)56,i368,i369,i370,i371) = Arr4DIdxRowM(tmp247, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)64,i364,i365,i366,i367);
i367 = (i367 +  (int64_t)1);
if ((i367 ==  (int64_t)64)) {
i367 =  (int64_t)0;
i366 = (i366 +  (int64_t)1);
if ((i366 ==  (int64_t)56)) {
i366 =  (int64_t)0;
i365 = (i365 +  (int64_t)1);
if ((i365 ==  (int64_t)56)) {
i365 =  (int64_t)0;
i364 = (i364 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)64, tmp247);

uint64_t* tmp253 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)64);

int64_t i379;

int64_t i378;

int64_t i377;

int64_t i376;

int64_t i375;

int64_t i374;

int64_t i373;

int64_t i372;
i372 =  (int64_t)0;
i373 =  (int64_t)0;
i374 =  (int64_t)0;
i375 =  (int64_t)0;
for (uint32_t i376 =  (int32_t)0; i376 <  (int32_t)1; i376++){
for (uint32_t i379 =  (int32_t)0; i379 <  (int32_t)64; i379++){
for (uint32_t i377 =  (int32_t)0; i377 <  (int32_t)56; i377++){
for (uint32_t i378 =  (int32_t)0; i378 <  (int32_t)56; i378++){
Arr4DIdxRowM(tmp253, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)64,i376,i377,i378,i379) = Arr4DIdxRowM(tmp251, (int32_t)1, (int32_t)64, (int32_t)56, (int32_t)56,i372,i373,i374,i375);
i375 = (i375 +  (int64_t)1);
if ((i375 ==  (int64_t)56)) {
i375 =  (int64_t)0;
i374 = (i374 +  (int64_t)1);
if ((i374 ==  (int64_t)56)) {
i374 =  (int64_t)0;
i373 = (i373 +  (int64_t)1);
if ((i373 ==  (int64_t)64)) {
i373 =  (int64_t)0;
i372 = (i372 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)64,  (int32_t)56,  (int32_t)56, tmp251);

uint64_t* tmp255 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)64);
Relu4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)64, tmp253, tmp255,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)64, tmp253);

uint64_t* tmp257 = make_array<uint64_t>( (int32_t)1,  (int32_t)64,  (int32_t)56,  (int32_t)56);

int64_t i387;

int64_t i386;

int64_t i385;

int64_t i384;

int64_t i383;

int64_t i382;

int64_t i381;

int64_t i380;
i380 =  (int64_t)0;
i381 =  (int64_t)0;
i382 =  (int64_t)0;
i383 =  (int64_t)0;
for (uint32_t i384 =  (int32_t)0; i384 <  (int32_t)1; i384++){
for (uint32_t i386 =  (int32_t)0; i386 <  (int32_t)56; i386++){
for (uint32_t i387 =  (int32_t)0; i387 <  (int32_t)56; i387++){
for (uint32_t i385 =  (int32_t)0; i385 <  (int32_t)64; i385++){
Arr4DIdxRowM(tmp257, (int32_t)1, (int32_t)64, (int32_t)56, (int32_t)56,i384,i385,i386,i387) = Arr4DIdxRowM(tmp255, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)64,i380,i381,i382,i383);
i383 = (i383 +  (int64_t)1);
if ((i383 ==  (int64_t)64)) {
i383 =  (int64_t)0;
i382 = (i382 +  (int64_t)1);
if ((i382 ==  (int64_t)56)) {
i382 =  (int64_t)0;
i381 = (i381 +  (int64_t)1);
if ((i381 ==  (int64_t)56)) {
i381 =  (int64_t)0;
i380 = (i380 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)64, tmp255);

uint64_t* tmp259 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)64);

int64_t i395;

int64_t i394;

int64_t i393;

int64_t i392;

int64_t i391;

int64_t i390;

int64_t i389;

int64_t i388;
i388 =  (int64_t)0;
i389 =  (int64_t)0;
i390 =  (int64_t)0;
i391 =  (int64_t)0;
for (uint32_t i392 =  (int32_t)0; i392 <  (int32_t)1; i392++){
for (uint32_t i395 =  (int32_t)0; i395 <  (int32_t)64; i395++){
for (uint32_t i393 =  (int32_t)0; i393 <  (int32_t)56; i393++){
for (uint32_t i394 =  (int32_t)0; i394 <  (int32_t)56; i394++){
Arr4DIdxRowM(tmp259, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)64,i392,i393,i394,i395) = Arr4DIdxRowM(tmp257, (int32_t)1, (int32_t)64, (int32_t)56, (int32_t)56,i388,i389,i390,i391);
i391 = (i391 +  (int64_t)1);
if ((i391 ==  (int64_t)56)) {
i391 =  (int64_t)0;
i390 = (i390 +  (int64_t)1);
if ((i390 ==  (int64_t)56)) {
i390 =  (int64_t)0;
i389 = (i389 +  (int64_t)1);
if ((i389 ==  (int64_t)64)) {
i389 =  (int64_t)0;
i388 = (i388 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)64,  (int32_t)56,  (int32_t)56, tmp257);

uint64_t* tmp261 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)64,  (int32_t)24);

int64_t i403;

int64_t i402;

int64_t i401;

int64_t i400;

int64_t i399;

int64_t i398;

int64_t i397;

int64_t i396;
i396 =  (int64_t)0;
i397 =  (int64_t)0;
i398 =  (int64_t)0;
i399 =  (int64_t)0;
for (uint32_t i403 =  (int32_t)0; i403 <  (int32_t)24; i403++){
for (uint32_t i402 =  (int32_t)0; i402 <  (int32_t)64; i402++){
for (uint32_t i400 =  (int32_t)0; i400 <  (int32_t)1; i400++){
for (uint32_t i401 =  (int32_t)0; i401 <  (int32_t)1; i401++){
Arr4DIdxRowM(tmp261, (int32_t)1, (int32_t)1, (int32_t)64, (int32_t)24,i400,i401,i402,i403) = Arr4DIdxRowM(tmp11, (int32_t)24, (int32_t)64, (int32_t)1, (int32_t)1,i396,i397,i398,i399);
i399 = (i399 +  (int64_t)1);
if ((i399 ==  (int64_t)1)) {
i399 =  (int64_t)0;
i398 = (i398 +  (int64_t)1);
if ((i398 ==  (int64_t)1)) {
i398 =  (int64_t)0;
i397 = (i397 +  (int64_t)1);
if ((i397 ==  (int64_t)64)) {
i397 =  (int64_t)0;
i396 = (i396 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)24,  (int32_t)64,  (int32_t)1,  (int32_t)1, tmp11);

uint64_t* tmp263 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)64,  (int32_t)1,  (int32_t)1,  (int32_t)24,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp259, tmp261, tmp263);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)64,  (int32_t)24, tmp261);
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)64, tmp259);

uint64_t* tmp266 = make_array<uint64_t>( (int32_t)1,  (int32_t)24,  (int32_t)56,  (int32_t)56);

int64_t i411;

int64_t i410;

int64_t i409;

int64_t i408;

int64_t i407;

int64_t i406;

int64_t i405;

int64_t i404;
i404 =  (int64_t)0;
i405 =  (int64_t)0;
i406 =  (int64_t)0;
i407 =  (int64_t)0;
for (uint32_t i408 =  (int32_t)0; i408 <  (int32_t)1; i408++){
for (uint32_t i410 =  (int32_t)0; i410 <  (int32_t)56; i410++){
for (uint32_t i411 =  (int32_t)0; i411 <  (int32_t)56; i411++){
for (uint32_t i409 =  (int32_t)0; i409 <  (int32_t)24; i409++){
Arr4DIdxRowM(tmp266, (int32_t)1, (int32_t)24, (int32_t)56, (int32_t)56,i408,i409,i410,i411) = Arr4DIdxRowM(tmp263, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)24,i404,i405,i406,i407);
i407 = (i407 +  (int64_t)1);
if ((i407 ==  (int64_t)24)) {
i407 =  (int64_t)0;
i406 = (i406 +  (int64_t)1);
if ((i406 ==  (int64_t)56)) {
i406 =  (int64_t)0;
i405 = (i405 +  (int64_t)1);
if ((i405 ==  (int64_t)56)) {
i405 =  (int64_t)0;
i404 = (i404 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24, tmp263);

uint64_t* tmp268 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24);

int64_t i419;

int64_t i418;

int64_t i417;

int64_t i416;

int64_t i415;

int64_t i414;

int64_t i413;

int64_t i412;
i412 =  (int64_t)0;
i413 =  (int64_t)0;
i414 =  (int64_t)0;
i415 =  (int64_t)0;
for (uint32_t i416 =  (int32_t)0; i416 <  (int32_t)1; i416++){
for (uint32_t i419 =  (int32_t)0; i419 <  (int32_t)24; i419++){
for (uint32_t i417 =  (int32_t)0; i417 <  (int32_t)56; i417++){
for (uint32_t i418 =  (int32_t)0; i418 <  (int32_t)56; i418++){
Arr4DIdxRowM(tmp268, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)24,i416,i417,i418,i419) = Arr4DIdxRowM(tmp266, (int32_t)1, (int32_t)24, (int32_t)56, (int32_t)56,i412,i413,i414,i415);
i415 = (i415 +  (int64_t)1);
if ((i415 ==  (int64_t)56)) {
i415 =  (int64_t)0;
i414 = (i414 +  (int64_t)1);
if ((i414 ==  (int64_t)56)) {
i414 =  (int64_t)0;
i413 = (i413 +  (int64_t)1);
if ((i413 ==  (int64_t)24)) {
i413 =  (int64_t)0;
i412 = (i412 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)24,  (int32_t)56,  (int32_t)56, tmp266);

uint64_t* tmp270 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24);
ScaleDown4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24, tmp268,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24, tmp268, tmp12, tmp13,  (int32_t)0,  (int32_t)23, tmp270);
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24, tmp268);

uint64_t* tmp272 = make_array<uint64_t>( (int32_t)1,  (int32_t)24,  (int32_t)56,  (int32_t)56);

int64_t i427;

int64_t i426;

int64_t i425;

int64_t i424;

int64_t i423;

int64_t i422;

int64_t i421;

int64_t i420;
i420 =  (int64_t)0;
i421 =  (int64_t)0;
i422 =  (int64_t)0;
i423 =  (int64_t)0;
for (uint32_t i424 =  (int32_t)0; i424 <  (int32_t)1; i424++){
for (uint32_t i426 =  (int32_t)0; i426 <  (int32_t)56; i426++){
for (uint32_t i427 =  (int32_t)0; i427 <  (int32_t)56; i427++){
for (uint32_t i425 =  (int32_t)0; i425 <  (int32_t)24; i425++){
Arr4DIdxRowM(tmp272, (int32_t)1, (int32_t)24, (int32_t)56, (int32_t)56,i424,i425,i426,i427) = Arr4DIdxRowM(tmp270, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)24,i420,i421,i422,i423);
i423 = (i423 +  (int64_t)1);
if ((i423 ==  (int64_t)24)) {
i423 =  (int64_t)0;
i422 = (i422 +  (int64_t)1);
if ((i422 ==  (int64_t)56)) {
i422 =  (int64_t)0;
i421 = (i421 +  (int64_t)1);
if ((i421 ==  (int64_t)56)) {
i421 =  (int64_t)0;
i420 = (i420 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24, tmp270);

uint64_t* tmp274 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16);

int64_t i435;

int64_t i434;

int64_t i433;

int64_t i432;

int64_t i431;

int64_t i430;

int64_t i429;

int64_t i428;
i428 =  (int64_t)0;
i429 =  (int64_t)0;
i430 =  (int64_t)0;
i431 =  (int64_t)0;
for (uint32_t i432 =  (int32_t)0; i432 <  (int32_t)1; i432++){
for (uint32_t i435 =  (int32_t)0; i435 <  (int32_t)16; i435++){
for (uint32_t i433 =  (int32_t)0; i433 <  (int32_t)112; i433++){
for (uint32_t i434 =  (int32_t)0; i434 <  (int32_t)112; i434++){
Arr4DIdxRowM(tmp274, (int32_t)1, (int32_t)112, (int32_t)112, (int32_t)16,i432,i433,i434,i435) = Arr4DIdxRowM(tmp214, (int32_t)1, (int32_t)16, (int32_t)112, (int32_t)112,i428,i429,i430,i431);
i431 = (i431 +  (int64_t)1);
if ((i431 ==  (int64_t)112)) {
i431 =  (int64_t)0;
i430 = (i430 +  (int64_t)1);
if ((i430 ==  (int64_t)112)) {
i430 =  (int64_t)0;
i429 = (i429 +  (int64_t)1);
if ((i429 ==  (int64_t)16)) {
i429 =  (int64_t)0;
i428 = (i428 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)16,  (int32_t)112,  (int32_t)112, tmp214);

uint64_t* tmp276 = make_array<uint64_t>( (int32_t)3,  (int32_t)3,  (int32_t)1,  (int32_t)16);

int64_t i443;

int64_t i442;

int64_t i441;

int64_t i440;

int64_t i439;

int64_t i438;

int64_t i437;

int64_t i436;
i436 =  (int64_t)0;
i437 =  (int64_t)0;
i438 =  (int64_t)0;
i439 =  (int64_t)0;
for (uint32_t i443 =  (int32_t)0; i443 <  (int32_t)16; i443++){
for (uint32_t i442 =  (int32_t)0; i442 <  (int32_t)1; i442++){
for (uint32_t i440 =  (int32_t)0; i440 <  (int32_t)3; i440++){
for (uint32_t i441 =  (int32_t)0; i441 <  (int32_t)3; i441++){
Arr4DIdxRowM(tmp276, (int32_t)3, (int32_t)3, (int32_t)1, (int32_t)16,i440,i441,i442,i443) = Arr4DIdxRowM(tmp14, (int32_t)16, (int32_t)1, (int32_t)3, (int32_t)3,i436,i437,i438,i439);
i439 = (i439 +  (int64_t)1);
if ((i439 ==  (int64_t)3)) {
i439 =  (int64_t)0;
i438 = (i438 +  (int64_t)1);
if ((i438 ==  (int64_t)3)) {
i438 =  (int64_t)0;
i437 = (i437 +  (int64_t)1);
if ((i437 ==  (int64_t)1)) {
i437 =  (int64_t)0;
i436 = (i436 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)16,  (int32_t)1,  (int32_t)3,  (int32_t)3, tmp14);

uint64_t* tmp278 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)16);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16,  (int32_t)3,  (int32_t)3,  (int32_t)16,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)2,  (int32_t)2,  (int32_t)16, tmp274, tmp276, tmp278);
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)112,  (int32_t)16, tmp274);
ClearMemSecret4( (int32_t)3,  (int32_t)3,  (int32_t)1,  (int32_t)16, tmp276);

uint64_t* tmp281 = make_array<uint64_t>( (int32_t)1,  (int32_t)16,  (int32_t)56,  (int32_t)56);

int64_t i451;

int64_t i450;

int64_t i449;

int64_t i448;

int64_t i447;

int64_t i446;

int64_t i445;

int64_t i444;
i444 =  (int64_t)0;
i445 =  (int64_t)0;
i446 =  (int64_t)0;
i447 =  (int64_t)0;
for (uint32_t i448 =  (int32_t)0; i448 <  (int32_t)1; i448++){
for (uint32_t i450 =  (int32_t)0; i450 <  (int32_t)56; i450++){
for (uint32_t i451 =  (int32_t)0; i451 <  (int32_t)56; i451++){
for (uint32_t i449 =  (int32_t)0; i449 <  (int32_t)16; i449++){
Arr4DIdxRowM(tmp281, (int32_t)1, (int32_t)16, (int32_t)56, (int32_t)56,i448,i449,i450,i451) = Arr4DIdxRowM(tmp278, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)16,i444,i445,i446,i447);
i447 = (i447 +  (int64_t)1);
if ((i447 ==  (int64_t)16)) {
i447 =  (int64_t)0;
i446 = (i446 +  (int64_t)1);
if ((i446 ==  (int64_t)56)) {
i446 =  (int64_t)0;
i445 = (i445 +  (int64_t)1);
if ((i445 ==  (int64_t)56)) {
i445 =  (int64_t)0;
i444 = (i444 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)16, tmp278);

uint64_t* tmp283 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)16);

int64_t i459;

int64_t i458;

int64_t i457;

int64_t i456;

int64_t i455;

int64_t i454;

int64_t i453;

int64_t i452;
i452 =  (int64_t)0;
i453 =  (int64_t)0;
i454 =  (int64_t)0;
i455 =  (int64_t)0;
for (uint32_t i456 =  (int32_t)0; i456 <  (int32_t)1; i456++){
for (uint32_t i459 =  (int32_t)0; i459 <  (int32_t)16; i459++){
for (uint32_t i457 =  (int32_t)0; i457 <  (int32_t)56; i457++){
for (uint32_t i458 =  (int32_t)0; i458 <  (int32_t)56; i458++){
Arr4DIdxRowM(tmp283, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)16,i456,i457,i458,i459) = Arr4DIdxRowM(tmp281, (int32_t)1, (int32_t)16, (int32_t)56, (int32_t)56,i452,i453,i454,i455);
i455 = (i455 +  (int64_t)1);
if ((i455 ==  (int64_t)56)) {
i455 =  (int64_t)0;
i454 = (i454 +  (int64_t)1);
if ((i454 ==  (int64_t)56)) {
i454 =  (int64_t)0;
i453 = (i453 +  (int64_t)1);
if ((i453 ==  (int64_t)16)) {
i453 =  (int64_t)0;
i452 = (i452 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)16,  (int32_t)56,  (int32_t)56, tmp281);

uint64_t* tmp285 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)16);
ScaleDown4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)16, tmp283,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)16, tmp283, tmp2, tmp3,  (int32_t)0,  (int32_t)0, tmp285);
ClearMemSecret1( (int32_t)16, tmp3);
ClearMemSecret1( (int32_t)16, tmp2);
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)16, tmp283);

uint64_t* tmp289 = make_array<uint64_t>( (int32_t)1,  (int32_t)16,  (int32_t)56,  (int32_t)56);

int64_t i467;

int64_t i466;

int64_t i465;

int64_t i464;

int64_t i463;

int64_t i462;

int64_t i461;

int64_t i460;
i460 =  (int64_t)0;
i461 =  (int64_t)0;
i462 =  (int64_t)0;
i463 =  (int64_t)0;
for (uint32_t i464 =  (int32_t)0; i464 <  (int32_t)1; i464++){
for (uint32_t i466 =  (int32_t)0; i466 <  (int32_t)56; i466++){
for (uint32_t i467 =  (int32_t)0; i467 <  (int32_t)56; i467++){
for (uint32_t i465 =  (int32_t)0; i465 <  (int32_t)16; i465++){
Arr4DIdxRowM(tmp289, (int32_t)1, (int32_t)16, (int32_t)56, (int32_t)56,i464,i465,i466,i467) = Arr4DIdxRowM(tmp285, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)16,i460,i461,i462,i463);
i463 = (i463 +  (int64_t)1);
if ((i463 ==  (int64_t)16)) {
i463 =  (int64_t)0;
i462 = (i462 +  (int64_t)1);
if ((i462 ==  (int64_t)56)) {
i462 =  (int64_t)0;
i461 = (i461 +  (int64_t)1);
if ((i461 ==  (int64_t)56)) {
i461 =  (int64_t)0;
i460 = (i460 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)16, tmp285);

uint64_t* tmp291 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)16);

int64_t i475;

int64_t i474;

int64_t i473;

int64_t i472;

int64_t i471;

int64_t i470;

int64_t i469;

int64_t i468;
i468 =  (int64_t)0;
i469 =  (int64_t)0;
i470 =  (int64_t)0;
i471 =  (int64_t)0;
for (uint32_t i472 =  (int32_t)0; i472 <  (int32_t)1; i472++){
for (uint32_t i475 =  (int32_t)0; i475 <  (int32_t)16; i475++){
for (uint32_t i473 =  (int32_t)0; i473 <  (int32_t)56; i473++){
for (uint32_t i474 =  (int32_t)0; i474 <  (int32_t)56; i474++){
Arr4DIdxRowM(tmp291, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)16,i472,i473,i474,i475) = Arr4DIdxRowM(tmp289, (int32_t)1, (int32_t)16, (int32_t)56, (int32_t)56,i468,i469,i470,i471);
i471 = (i471 +  (int64_t)1);
if ((i471 ==  (int64_t)56)) {
i471 =  (int64_t)0;
i470 = (i470 +  (int64_t)1);
if ((i470 ==  (int64_t)56)) {
i470 =  (int64_t)0;
i469 = (i469 +  (int64_t)1);
if ((i469 ==  (int64_t)16)) {
i469 =  (int64_t)0;
i468 = (i468 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)16,  (int32_t)56,  (int32_t)56, tmp289);

uint64_t* tmp293 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)16,  (int32_t)24);

int64_t i483;

int64_t i482;

int64_t i481;

int64_t i480;

int64_t i479;

int64_t i478;

int64_t i477;

int64_t i476;
i476 =  (int64_t)0;
i477 =  (int64_t)0;
i478 =  (int64_t)0;
i479 =  (int64_t)0;
for (uint32_t i483 =  (int32_t)0; i483 <  (int32_t)24; i483++){
for (uint32_t i482 =  (int32_t)0; i482 <  (int32_t)16; i482++){
for (uint32_t i480 =  (int32_t)0; i480 <  (int32_t)1; i480++){
for (uint32_t i481 =  (int32_t)0; i481 <  (int32_t)1; i481++){
Arr4DIdxRowM(tmp293, (int32_t)1, (int32_t)1, (int32_t)16, (int32_t)24,i480,i481,i482,i483) = Arr4DIdxRowM(tmp15, (int32_t)24, (int32_t)16, (int32_t)1, (int32_t)1,i476,i477,i478,i479);
i479 = (i479 +  (int64_t)1);
if ((i479 ==  (int64_t)1)) {
i479 =  (int64_t)0;
i478 = (i478 +  (int64_t)1);
if ((i478 ==  (int64_t)1)) {
i478 =  (int64_t)0;
i477 = (i477 +  (int64_t)1);
if ((i477 ==  (int64_t)16)) {
i477 =  (int64_t)0;
i476 = (i476 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)24,  (int32_t)16,  (int32_t)1,  (int32_t)1, tmp15);

uint64_t* tmp295 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24);
ScaleDown4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)16, tmp291,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)16,  (int32_t)1,  (int32_t)1,  (int32_t)24,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp291, tmp293, tmp295);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)16,  (int32_t)24, tmp293);
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)16, tmp291);

uint64_t* tmp298 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)24);

int64_t i488;

int64_t i487;

int64_t i486;

int64_t i485;

int64_t i484;
i484 =  (int64_t)0;
for (uint32_t i485 =  (int32_t)0; i485 <  (int32_t)1; i485++){
for (uint32_t i486 =  (int32_t)0; i486 <  (int32_t)1; i486++){
for (uint32_t i487 =  (int32_t)0; i487 <  (int32_t)1; i487++){
for (uint32_t i488 =  (int32_t)0; i488 <  (int32_t)24; i488++){
Arr4DIdxRowM(tmp298, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)24,i485,i486,i487,i488) = Arr1DIdxRowM(tmp13, (int32_t)24,i484);
i484 = (i484 +  (int64_t)1);
}
}
}
}

uint64_t* tmp299 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24);
for (uint32_t i0 =  (int32_t)0; i0 <  (int32_t)1; i0++){
for (uint32_t i1 =  (int32_t)0; i1 <  (int32_t)56; i1++){
for (uint32_t i2 =  (int32_t)0; i2 <  (int32_t)56; i2++){
for (uint32_t i3 =  (int32_t)0; i3 <  (int32_t)24; i3++){
Arr4DIdxRowM(tmp299, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)24,i0,i1,i2,i3) = SecretAdd(Arr4DIdxRowM(tmp295, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)24,i0,i1,i2,i3), Arr4DIdxRowM(tmp298, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)24,i0, (int32_t)0, (int32_t)0,i3));
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)24, tmp298);
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24, tmp295);

uint64_t* tmp302 = make_array<uint64_t>( (int32_t)1,  (int32_t)24,  (int32_t)56,  (int32_t)56);

int64_t i496;

int64_t i495;

int64_t i494;

int64_t i493;

int64_t i492;

int64_t i491;

int64_t i490;

int64_t i489;
i489 =  (int64_t)0;
i490 =  (int64_t)0;
i491 =  (int64_t)0;
i492 =  (int64_t)0;
for (uint32_t i493 =  (int32_t)0; i493 <  (int32_t)1; i493++){
for (uint32_t i495 =  (int32_t)0; i495 <  (int32_t)56; i495++){
for (uint32_t i496 =  (int32_t)0; i496 <  (int32_t)56; i496++){
for (uint32_t i494 =  (int32_t)0; i494 <  (int32_t)24; i494++){
Arr4DIdxRowM(tmp302, (int32_t)1, (int32_t)24, (int32_t)56, (int32_t)56,i493,i494,i495,i496) = Arr4DIdxRowM(tmp299, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)24,i489,i490,i491,i492);
i492 = (i492 +  (int64_t)1);
if ((i492 ==  (int64_t)24)) {
i492 =  (int64_t)0;
i491 = (i491 +  (int64_t)1);
if ((i491 ==  (int64_t)56)) {
i491 =  (int64_t)0;
i490 = (i490 +  (int64_t)1);
if ((i490 ==  (int64_t)56)) {
i490 =  (int64_t)0;
i489 = (i489 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24, tmp299);

uint64_t* tmp304 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24);

int64_t i504;

int64_t i503;

int64_t i502;

int64_t i501;

int64_t i500;

int64_t i499;

int64_t i498;

int64_t i497;
i497 =  (int64_t)0;
i498 =  (int64_t)0;
i499 =  (int64_t)0;
i500 =  (int64_t)0;
for (uint32_t i501 =  (int32_t)0; i501 <  (int32_t)1; i501++){
for (uint32_t i504 =  (int32_t)0; i504 <  (int32_t)24; i504++){
for (uint32_t i502 =  (int32_t)0; i502 <  (int32_t)56; i502++){
for (uint32_t i503 =  (int32_t)0; i503 <  (int32_t)56; i503++){
Arr4DIdxRowM(tmp304, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)24,i501,i502,i503,i504) = Arr4DIdxRowM(tmp302, (int32_t)1, (int32_t)24, (int32_t)56, (int32_t)56,i497,i498,i499,i500);
i500 = (i500 +  (int64_t)1);
if ((i500 ==  (int64_t)56)) {
i500 =  (int64_t)0;
i499 = (i499 +  (int64_t)1);
if ((i499 ==  (int64_t)56)) {
i499 =  (int64_t)0;
i498 = (i498 +  (int64_t)1);
if ((i498 ==  (int64_t)24)) {
i498 =  (int64_t)0;
i497 = (i497 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)24,  (int32_t)56,  (int32_t)56, tmp302);

uint64_t* tmp306 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24);
ScaleDown4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24, tmp304,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24, tmp304, tmp12, tmp13,  (int32_t)0,  (int32_t)0, tmp306);
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24, tmp304);

uint64_t* tmp308 = make_array<uint64_t>( (int32_t)1,  (int32_t)24,  (int32_t)56,  (int32_t)56);

int64_t i512;

int64_t i511;

int64_t i510;

int64_t i509;

int64_t i508;

int64_t i507;

int64_t i506;

int64_t i505;
i505 =  (int64_t)0;
i506 =  (int64_t)0;
i507 =  (int64_t)0;
i508 =  (int64_t)0;
for (uint32_t i509 =  (int32_t)0; i509 <  (int32_t)1; i509++){
for (uint32_t i511 =  (int32_t)0; i511 <  (int32_t)56; i511++){
for (uint32_t i512 =  (int32_t)0; i512 <  (int32_t)56; i512++){
for (uint32_t i510 =  (int32_t)0; i510 <  (int32_t)24; i510++){
Arr4DIdxRowM(tmp308, (int32_t)1, (int32_t)24, (int32_t)56, (int32_t)56,i509,i510,i511,i512) = Arr4DIdxRowM(tmp306, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)24,i505,i506,i507,i508);
i508 = (i508 +  (int64_t)1);
if ((i508 ==  (int64_t)24)) {
i508 =  (int64_t)0;
i507 = (i507 +  (int64_t)1);
if ((i507 ==  (int64_t)56)) {
i507 =  (int64_t)0;
i506 = (i506 +  (int64_t)1);
if ((i506 ==  (int64_t)56)) {
i506 =  (int64_t)0;
i505 = (i505 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24, tmp306);

uint64_t* tmp310 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24);

int64_t i520;

int64_t i519;

int64_t i518;

int64_t i517;

int64_t i516;

int64_t i515;

int64_t i514;

int64_t i513;
i513 =  (int64_t)0;
i514 =  (int64_t)0;
i515 =  (int64_t)0;
i516 =  (int64_t)0;
for (uint32_t i517 =  (int32_t)0; i517 <  (int32_t)1; i517++){
for (uint32_t i520 =  (int32_t)0; i520 <  (int32_t)24; i520++){
for (uint32_t i518 =  (int32_t)0; i518 <  (int32_t)56; i518++){
for (uint32_t i519 =  (int32_t)0; i519 <  (int32_t)56; i519++){
Arr4DIdxRowM(tmp310, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)24,i517,i518,i519,i520) = Arr4DIdxRowM(tmp272, (int32_t)1, (int32_t)24, (int32_t)56, (int32_t)56,i513,i514,i515,i516);
i516 = (i516 +  (int64_t)1);
if ((i516 ==  (int64_t)56)) {
i516 =  (int64_t)0;
i515 = (i515 +  (int64_t)1);
if ((i515 ==  (int64_t)56)) {
i515 =  (int64_t)0;
i514 = (i514 +  (int64_t)1);
if ((i514 ==  (int64_t)24)) {
i514 =  (int64_t)0;
i513 = (i513 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)24,  (int32_t)56,  (int32_t)56, tmp272);

uint64_t* tmp312 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24);

int64_t i528;

int64_t i527;

int64_t i526;

int64_t i525;

int64_t i524;

int64_t i523;

int64_t i522;

int64_t i521;
i521 =  (int64_t)0;
i522 =  (int64_t)0;
i523 =  (int64_t)0;
i524 =  (int64_t)0;
for (uint32_t i525 =  (int32_t)0; i525 <  (int32_t)1; i525++){
for (uint32_t i528 =  (int32_t)0; i528 <  (int32_t)24; i528++){
for (uint32_t i526 =  (int32_t)0; i526 <  (int32_t)56; i526++){
for (uint32_t i527 =  (int32_t)0; i527 <  (int32_t)56; i527++){
Arr4DIdxRowM(tmp312, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)24,i525,i526,i527,i528) = Arr4DIdxRowM(tmp308, (int32_t)1, (int32_t)24, (int32_t)56, (int32_t)56,i521,i522,i523,i524);
i524 = (i524 +  (int64_t)1);
if ((i524 ==  (int64_t)56)) {
i524 =  (int64_t)0;
i523 = (i523 +  (int64_t)1);
if ((i523 ==  (int64_t)56)) {
i523 =  (int64_t)0;
i522 = (i522 +  (int64_t)1);
if ((i522 ==  (int64_t)24)) {
i522 =  (int64_t)0;
i521 = (i521 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)24,  (int32_t)56,  (int32_t)56, tmp308);

uint64_t* tmp314 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24);
for (uint32_t i0 =  (int32_t)0; i0 <  (int32_t)1; i0++){
for (uint32_t i1 =  (int32_t)0; i1 <  (int32_t)56; i1++){
for (uint32_t i2 =  (int32_t)0; i2 <  (int32_t)56; i2++){
for (uint32_t i3 =  (int32_t)0; i3 <  (int32_t)24; i3++){
Arr4DIdxRowM(tmp314, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)24,i0,i1,i2,i3) = SecretAdd(Arr4DIdxRowM(tmp310, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)24,i0,i1,i2,i3), Arr4DIdxRowM(tmp312, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)24,i0,i1,i2,i3));
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24, tmp312);
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24, tmp310);

uint64_t* tmp317 = make_array<uint64_t>( (int32_t)1,  (int32_t)24,  (int32_t)56,  (int32_t)56);

int64_t i536;

int64_t i535;

int64_t i534;

int64_t i533;

int64_t i532;

int64_t i531;

int64_t i530;

int64_t i529;
i529 =  (int64_t)0;
i530 =  (int64_t)0;
i531 =  (int64_t)0;
i532 =  (int64_t)0;
for (uint32_t i533 =  (int32_t)0; i533 <  (int32_t)1; i533++){
for (uint32_t i535 =  (int32_t)0; i535 <  (int32_t)56; i535++){
for (uint32_t i536 =  (int32_t)0; i536 <  (int32_t)56; i536++){
for (uint32_t i534 =  (int32_t)0; i534 <  (int32_t)24; i534++){
Arr4DIdxRowM(tmp317, (int32_t)1, (int32_t)24, (int32_t)56, (int32_t)56,i533,i534,i535,i536) = Arr4DIdxRowM(tmp314, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)24,i529,i530,i531,i532);
i532 = (i532 +  (int64_t)1);
if ((i532 ==  (int64_t)24)) {
i532 =  (int64_t)0;
i531 = (i531 +  (int64_t)1);
if ((i531 ==  (int64_t)56)) {
i531 =  (int64_t)0;
i530 = (i530 +  (int64_t)1);
if ((i530 ==  (int64_t)56)) {
i530 =  (int64_t)0;
i529 = (i529 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24, tmp314);

uint64_t* tmp319 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24);

int64_t i544;

int64_t i543;

int64_t i542;

int64_t i541;

int64_t i540;

int64_t i539;

int64_t i538;

int64_t i537;
i537 =  (int64_t)0;
i538 =  (int64_t)0;
i539 =  (int64_t)0;
i540 =  (int64_t)0;
for (uint32_t i541 =  (int32_t)0; i541 <  (int32_t)1; i541++){
for (uint32_t i544 =  (int32_t)0; i544 <  (int32_t)24; i544++){
for (uint32_t i542 =  (int32_t)0; i542 <  (int32_t)56; i542++){
for (uint32_t i543 =  (int32_t)0; i543 <  (int32_t)56; i543++){
Arr4DIdxRowM(tmp319, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)24,i541,i542,i543,i544) = Arr4DIdxRowM(tmp317, (int32_t)1, (int32_t)24, (int32_t)56, (int32_t)56,i537,i538,i539,i540);
i540 = (i540 +  (int64_t)1);
if ((i540 ==  (int64_t)56)) {
i540 =  (int64_t)0;
i539 = (i539 +  (int64_t)1);
if ((i539 ==  (int64_t)56)) {
i539 =  (int64_t)0;
i538 = (i538 +  (int64_t)1);
if ((i538 ==  (int64_t)24)) {
i538 =  (int64_t)0;
i537 = (i537 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)24,  (int32_t)56,  (int32_t)56, tmp317);

uint64_t* tmp321 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24);
Relu4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24, tmp319, tmp321,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24, tmp319);

uint64_t* tmp323 = make_array<uint64_t>( (int32_t)1,  (int32_t)24,  (int32_t)56,  (int32_t)56);

int64_t i552;

int64_t i551;

int64_t i550;

int64_t i549;

int64_t i548;

int64_t i547;

int64_t i546;

int64_t i545;
i545 =  (int64_t)0;
i546 =  (int64_t)0;
i547 =  (int64_t)0;
i548 =  (int64_t)0;
for (uint32_t i549 =  (int32_t)0; i549 <  (int32_t)1; i549++){
for (uint32_t i551 =  (int32_t)0; i551 <  (int32_t)56; i551++){
for (uint32_t i552 =  (int32_t)0; i552 <  (int32_t)56; i552++){
for (uint32_t i550 =  (int32_t)0; i550 <  (int32_t)24; i550++){
Arr4DIdxRowM(tmp323, (int32_t)1, (int32_t)24, (int32_t)56, (int32_t)56,i549,i550,i551,i552) = Arr4DIdxRowM(tmp321, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)24,i545,i546,i547,i548);
i548 = (i548 +  (int64_t)1);
if ((i548 ==  (int64_t)24)) {
i548 =  (int64_t)0;
i547 = (i547 +  (int64_t)1);
if ((i547 ==  (int64_t)56)) {
i547 =  (int64_t)0;
i546 = (i546 +  (int64_t)1);
if ((i546 ==  (int64_t)56)) {
i546 =  (int64_t)0;
i545 = (i545 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24, tmp321);

uint64_t* tmp325 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24);

int64_t i560;

int64_t i559;

int64_t i558;

int64_t i557;

int64_t i556;

int64_t i555;

int64_t i554;

int64_t i553;
i553 =  (int64_t)0;
i554 =  (int64_t)0;
i555 =  (int64_t)0;
i556 =  (int64_t)0;
for (uint32_t i557 =  (int32_t)0; i557 <  (int32_t)1; i557++){
for (uint32_t i560 =  (int32_t)0; i560 <  (int32_t)24; i560++){
for (uint32_t i558 =  (int32_t)0; i558 <  (int32_t)56; i558++){
for (uint32_t i559 =  (int32_t)0; i559 <  (int32_t)56; i559++){
Arr4DIdxRowM(tmp325, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)24,i557,i558,i559,i560) = Arr4DIdxRowM(tmp323, (int32_t)1, (int32_t)24, (int32_t)56, (int32_t)56,i553,i554,i555,i556);
i556 = (i556 +  (int64_t)1);
if ((i556 ==  (int64_t)56)) {
i556 =  (int64_t)0;
i555 = (i555 +  (int64_t)1);
if ((i555 ==  (int64_t)56)) {
i555 =  (int64_t)0;
i554 = (i554 +  (int64_t)1);
if ((i554 ==  (int64_t)24)) {
i554 =  (int64_t)0;
i553 = (i553 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp326 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)24,  (int32_t)72);

int64_t i568;

int64_t i567;

int64_t i566;

int64_t i565;

int64_t i564;

int64_t i563;

int64_t i562;

int64_t i561;
i561 =  (int64_t)0;
i562 =  (int64_t)0;
i563 =  (int64_t)0;
i564 =  (int64_t)0;
for (uint32_t i568 =  (int32_t)0; i568 <  (int32_t)72; i568++){
for (uint32_t i567 =  (int32_t)0; i567 <  (int32_t)24; i567++){
for (uint32_t i565 =  (int32_t)0; i565 <  (int32_t)1; i565++){
for (uint32_t i566 =  (int32_t)0; i566 <  (int32_t)1; i566++){
Arr4DIdxRowM(tmp326, (int32_t)1, (int32_t)1, (int32_t)24, (int32_t)72,i565,i566,i567,i568) = Arr4DIdxRowM(tmp16, (int32_t)72, (int32_t)24, (int32_t)1, (int32_t)1,i561,i562,i563,i564);
i564 = (i564 +  (int64_t)1);
if ((i564 ==  (int64_t)1)) {
i564 =  (int64_t)0;
i563 = (i563 +  (int64_t)1);
if ((i563 ==  (int64_t)1)) {
i563 =  (int64_t)0;
i562 = (i562 +  (int64_t)1);
if ((i562 ==  (int64_t)24)) {
i562 =  (int64_t)0;
i561 = (i561 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)72,  (int32_t)24,  (int32_t)1,  (int32_t)1, tmp16);

uint64_t* tmp328 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24,  (int32_t)1,  (int32_t)1,  (int32_t)72,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp325, tmp326, tmp328);
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24, tmp325);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)24,  (int32_t)72, tmp326);

uint64_t* tmp331 = make_array<uint64_t>( (int32_t)1,  (int32_t)72,  (int32_t)56,  (int32_t)56);

int64_t i576;

int64_t i575;

int64_t i574;

int64_t i573;

int64_t i572;

int64_t i571;

int64_t i570;

int64_t i569;
i569 =  (int64_t)0;
i570 =  (int64_t)0;
i571 =  (int64_t)0;
i572 =  (int64_t)0;
for (uint32_t i573 =  (int32_t)0; i573 <  (int32_t)1; i573++){
for (uint32_t i575 =  (int32_t)0; i575 <  (int32_t)56; i575++){
for (uint32_t i576 =  (int32_t)0; i576 <  (int32_t)56; i576++){
for (uint32_t i574 =  (int32_t)0; i574 <  (int32_t)72; i574++){
Arr4DIdxRowM(tmp331, (int32_t)1, (int32_t)72, (int32_t)56, (int32_t)56,i573,i574,i575,i576) = Arr4DIdxRowM(tmp328, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)72,i569,i570,i571,i572);
i572 = (i572 +  (int64_t)1);
if ((i572 ==  (int64_t)72)) {
i572 =  (int64_t)0;
i571 = (i571 +  (int64_t)1);
if ((i571 ==  (int64_t)56)) {
i571 =  (int64_t)0;
i570 = (i570 +  (int64_t)1);
if ((i570 ==  (int64_t)56)) {
i570 =  (int64_t)0;
i569 = (i569 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72, tmp328);

uint64_t* tmp333 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72);

int64_t i584;

int64_t i583;

int64_t i582;

int64_t i581;

int64_t i580;

int64_t i579;

int64_t i578;

int64_t i577;
i577 =  (int64_t)0;
i578 =  (int64_t)0;
i579 =  (int64_t)0;
i580 =  (int64_t)0;
for (uint32_t i581 =  (int32_t)0; i581 <  (int32_t)1; i581++){
for (uint32_t i584 =  (int32_t)0; i584 <  (int32_t)72; i584++){
for (uint32_t i582 =  (int32_t)0; i582 <  (int32_t)56; i582++){
for (uint32_t i583 =  (int32_t)0; i583 <  (int32_t)56; i583++){
Arr4DIdxRowM(tmp333, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)72,i581,i582,i583,i584) = Arr4DIdxRowM(tmp331, (int32_t)1, (int32_t)72, (int32_t)56, (int32_t)56,i577,i578,i579,i580);
i580 = (i580 +  (int64_t)1);
if ((i580 ==  (int64_t)56)) {
i580 =  (int64_t)0;
i579 = (i579 +  (int64_t)1);
if ((i579 ==  (int64_t)56)) {
i579 =  (int64_t)0;
i578 = (i578 +  (int64_t)1);
if ((i578 ==  (int64_t)72)) {
i578 =  (int64_t)0;
i577 = (i577 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)72,  (int32_t)56,  (int32_t)56, tmp331);

uint64_t* tmp335 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72);
ScaleDown4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72, tmp333,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72, tmp333, tmp17, tmp18,  (int32_t)0,  (int32_t)23, tmp335);
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72, tmp333);

uint64_t* tmp337 = make_array<uint64_t>( (int32_t)1,  (int32_t)72,  (int32_t)56,  (int32_t)56);

int64_t i592;

int64_t i591;

int64_t i590;

int64_t i589;

int64_t i588;

int64_t i587;

int64_t i586;

int64_t i585;
i585 =  (int64_t)0;
i586 =  (int64_t)0;
i587 =  (int64_t)0;
i588 =  (int64_t)0;
for (uint32_t i589 =  (int32_t)0; i589 <  (int32_t)1; i589++){
for (uint32_t i591 =  (int32_t)0; i591 <  (int32_t)56; i591++){
for (uint32_t i592 =  (int32_t)0; i592 <  (int32_t)56; i592++){
for (uint32_t i590 =  (int32_t)0; i590 <  (int32_t)72; i590++){
Arr4DIdxRowM(tmp337, (int32_t)1, (int32_t)72, (int32_t)56, (int32_t)56,i589,i590,i591,i592) = Arr4DIdxRowM(tmp335, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)72,i585,i586,i587,i588);
i588 = (i588 +  (int64_t)1);
if ((i588 ==  (int64_t)72)) {
i588 =  (int64_t)0;
i587 = (i587 +  (int64_t)1);
if ((i587 ==  (int64_t)56)) {
i587 =  (int64_t)0;
i586 = (i586 +  (int64_t)1);
if ((i586 ==  (int64_t)56)) {
i586 =  (int64_t)0;
i585 = (i585 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72, tmp335);

uint64_t* tmp339 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72);

int64_t i600;

int64_t i599;

int64_t i598;

int64_t i597;

int64_t i596;

int64_t i595;

int64_t i594;

int64_t i593;
i593 =  (int64_t)0;
i594 =  (int64_t)0;
i595 =  (int64_t)0;
i596 =  (int64_t)0;
for (uint32_t i597 =  (int32_t)0; i597 <  (int32_t)1; i597++){
for (uint32_t i600 =  (int32_t)0; i600 <  (int32_t)72; i600++){
for (uint32_t i598 =  (int32_t)0; i598 <  (int32_t)56; i598++){
for (uint32_t i599 =  (int32_t)0; i599 <  (int32_t)56; i599++){
Arr4DIdxRowM(tmp339, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)72,i597,i598,i599,i600) = Arr4DIdxRowM(tmp337, (int32_t)1, (int32_t)72, (int32_t)56, (int32_t)56,i593,i594,i595,i596);
i596 = (i596 +  (int64_t)1);
if ((i596 ==  (int64_t)56)) {
i596 =  (int64_t)0;
i595 = (i595 +  (int64_t)1);
if ((i595 ==  (int64_t)56)) {
i595 =  (int64_t)0;
i594 = (i594 +  (int64_t)1);
if ((i594 ==  (int64_t)72)) {
i594 =  (int64_t)0;
i593 = (i593 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)72,  (int32_t)56,  (int32_t)56, tmp337);

uint64_t* tmp341 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72);
Relu4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72, tmp339, tmp341,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72, tmp339);

uint64_t* tmp343 = make_array<uint64_t>( (int32_t)1,  (int32_t)72,  (int32_t)56,  (int32_t)56);

int64_t i608;

int64_t i607;

int64_t i606;

int64_t i605;

int64_t i604;

int64_t i603;

int64_t i602;

int64_t i601;
i601 =  (int64_t)0;
i602 =  (int64_t)0;
i603 =  (int64_t)0;
i604 =  (int64_t)0;
for (uint32_t i605 =  (int32_t)0; i605 <  (int32_t)1; i605++){
for (uint32_t i607 =  (int32_t)0; i607 <  (int32_t)56; i607++){
for (uint32_t i608 =  (int32_t)0; i608 <  (int32_t)56; i608++){
for (uint32_t i606 =  (int32_t)0; i606 <  (int32_t)72; i606++){
Arr4DIdxRowM(tmp343, (int32_t)1, (int32_t)72, (int32_t)56, (int32_t)56,i605,i606,i607,i608) = Arr4DIdxRowM(tmp341, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)72,i601,i602,i603,i604);
i604 = (i604 +  (int64_t)1);
if ((i604 ==  (int64_t)72)) {
i604 =  (int64_t)0;
i603 = (i603 +  (int64_t)1);
if ((i603 ==  (int64_t)56)) {
i603 =  (int64_t)0;
i602 = (i602 +  (int64_t)1);
if ((i602 ==  (int64_t)56)) {
i602 =  (int64_t)0;
i601 = (i601 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72, tmp341);

uint64_t* tmp345 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72);

int64_t i616;

int64_t i615;

int64_t i614;

int64_t i613;

int64_t i612;

int64_t i611;

int64_t i610;

int64_t i609;
i609 =  (int64_t)0;
i610 =  (int64_t)0;
i611 =  (int64_t)0;
i612 =  (int64_t)0;
for (uint32_t i613 =  (int32_t)0; i613 <  (int32_t)1; i613++){
for (uint32_t i616 =  (int32_t)0; i616 <  (int32_t)72; i616++){
for (uint32_t i614 =  (int32_t)0; i614 <  (int32_t)56; i614++){
for (uint32_t i615 =  (int32_t)0; i615 <  (int32_t)56; i615++){
Arr4DIdxRowM(tmp345, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)72,i613,i614,i615,i616) = Arr4DIdxRowM(tmp343, (int32_t)1, (int32_t)72, (int32_t)56, (int32_t)56,i609,i610,i611,i612);
i612 = (i612 +  (int64_t)1);
if ((i612 ==  (int64_t)56)) {
i612 =  (int64_t)0;
i611 = (i611 +  (int64_t)1);
if ((i611 ==  (int64_t)56)) {
i611 =  (int64_t)0;
i610 = (i610 +  (int64_t)1);
if ((i610 ==  (int64_t)72)) {
i610 =  (int64_t)0;
i609 = (i609 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)72,  (int32_t)56,  (int32_t)56, tmp343);

uint64_t* tmp347 = make_array<uint64_t>( (int32_t)3,  (int32_t)3,  (int32_t)1,  (int32_t)72);

int64_t i624;

int64_t i623;

int64_t i622;

int64_t i621;

int64_t i620;

int64_t i619;

int64_t i618;

int64_t i617;
i617 =  (int64_t)0;
i618 =  (int64_t)0;
i619 =  (int64_t)0;
i620 =  (int64_t)0;
for (uint32_t i624 =  (int32_t)0; i624 <  (int32_t)72; i624++){
for (uint32_t i623 =  (int32_t)0; i623 <  (int32_t)1; i623++){
for (uint32_t i621 =  (int32_t)0; i621 <  (int32_t)3; i621++){
for (uint32_t i622 =  (int32_t)0; i622 <  (int32_t)3; i622++){
Arr4DIdxRowM(tmp347, (int32_t)3, (int32_t)3, (int32_t)1, (int32_t)72,i621,i622,i623,i624) = Arr4DIdxRowM(tmp19, (int32_t)72, (int32_t)1, (int32_t)3, (int32_t)3,i617,i618,i619,i620);
i620 = (i620 +  (int64_t)1);
if ((i620 ==  (int64_t)3)) {
i620 =  (int64_t)0;
i619 = (i619 +  (int64_t)1);
if ((i619 ==  (int64_t)3)) {
i619 =  (int64_t)0;
i618 = (i618 +  (int64_t)1);
if ((i618 ==  (int64_t)1)) {
i618 =  (int64_t)0;
i617 = (i617 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)72,  (int32_t)1,  (int32_t)3,  (int32_t)3, tmp19);

uint64_t* tmp349 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72,  (int32_t)3,  (int32_t)3,  (int32_t)72,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)72, tmp345, tmp347, tmp349);
ClearMemSecret4( (int32_t)3,  (int32_t)3,  (int32_t)1,  (int32_t)72, tmp347);
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72, tmp345);

uint64_t* tmp352 = make_array<uint64_t>( (int32_t)1,  (int32_t)72,  (int32_t)56,  (int32_t)56);

int64_t i632;

int64_t i631;

int64_t i630;

int64_t i629;

int64_t i628;

int64_t i627;

int64_t i626;

int64_t i625;
i625 =  (int64_t)0;
i626 =  (int64_t)0;
i627 =  (int64_t)0;
i628 =  (int64_t)0;
for (uint32_t i629 =  (int32_t)0; i629 <  (int32_t)1; i629++){
for (uint32_t i631 =  (int32_t)0; i631 <  (int32_t)56; i631++){
for (uint32_t i632 =  (int32_t)0; i632 <  (int32_t)56; i632++){
for (uint32_t i630 =  (int32_t)0; i630 <  (int32_t)72; i630++){
Arr4DIdxRowM(tmp352, (int32_t)1, (int32_t)72, (int32_t)56, (int32_t)56,i629,i630,i631,i632) = Arr4DIdxRowM(tmp349, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)72,i625,i626,i627,i628);
i628 = (i628 +  (int64_t)1);
if ((i628 ==  (int64_t)72)) {
i628 =  (int64_t)0;
i627 = (i627 +  (int64_t)1);
if ((i627 ==  (int64_t)56)) {
i627 =  (int64_t)0;
i626 = (i626 +  (int64_t)1);
if ((i626 ==  (int64_t)56)) {
i626 =  (int64_t)0;
i625 = (i625 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72, tmp349);

uint64_t* tmp354 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72);

int64_t i640;

int64_t i639;

int64_t i638;

int64_t i637;

int64_t i636;

int64_t i635;

int64_t i634;

int64_t i633;
i633 =  (int64_t)0;
i634 =  (int64_t)0;
i635 =  (int64_t)0;
i636 =  (int64_t)0;
for (uint32_t i637 =  (int32_t)0; i637 <  (int32_t)1; i637++){
for (uint32_t i640 =  (int32_t)0; i640 <  (int32_t)72; i640++){
for (uint32_t i638 =  (int32_t)0; i638 <  (int32_t)56; i638++){
for (uint32_t i639 =  (int32_t)0; i639 <  (int32_t)56; i639++){
Arr4DIdxRowM(tmp354, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)72,i637,i638,i639,i640) = Arr4DIdxRowM(tmp352, (int32_t)1, (int32_t)72, (int32_t)56, (int32_t)56,i633,i634,i635,i636);
i636 = (i636 +  (int64_t)1);
if ((i636 ==  (int64_t)56)) {
i636 =  (int64_t)0;
i635 = (i635 +  (int64_t)1);
if ((i635 ==  (int64_t)56)) {
i635 =  (int64_t)0;
i634 = (i634 +  (int64_t)1);
if ((i634 ==  (int64_t)72)) {
i634 =  (int64_t)0;
i633 = (i633 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)72,  (int32_t)56,  (int32_t)56, tmp352);

uint64_t* tmp356 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72);
ScaleDown4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72, tmp354,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72, tmp354, tmp17, tmp18,  (int32_t)0,  (int32_t)0, tmp356);
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72, tmp354);

uint64_t* tmp358 = make_array<uint64_t>( (int32_t)1,  (int32_t)72,  (int32_t)56,  (int32_t)56);

int64_t i648;

int64_t i647;

int64_t i646;

int64_t i645;

int64_t i644;

int64_t i643;

int64_t i642;

int64_t i641;
i641 =  (int64_t)0;
i642 =  (int64_t)0;
i643 =  (int64_t)0;
i644 =  (int64_t)0;
for (uint32_t i645 =  (int32_t)0; i645 <  (int32_t)1; i645++){
for (uint32_t i647 =  (int32_t)0; i647 <  (int32_t)56; i647++){
for (uint32_t i648 =  (int32_t)0; i648 <  (int32_t)56; i648++){
for (uint32_t i646 =  (int32_t)0; i646 <  (int32_t)72; i646++){
Arr4DIdxRowM(tmp358, (int32_t)1, (int32_t)72, (int32_t)56, (int32_t)56,i645,i646,i647,i648) = Arr4DIdxRowM(tmp356, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)72,i641,i642,i643,i644);
i644 = (i644 +  (int64_t)1);
if ((i644 ==  (int64_t)72)) {
i644 =  (int64_t)0;
i643 = (i643 +  (int64_t)1);
if ((i643 ==  (int64_t)56)) {
i643 =  (int64_t)0;
i642 = (i642 +  (int64_t)1);
if ((i642 ==  (int64_t)56)) {
i642 =  (int64_t)0;
i641 = (i641 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72, tmp356);

uint64_t* tmp360 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72);

int64_t i656;

int64_t i655;

int64_t i654;

int64_t i653;

int64_t i652;

int64_t i651;

int64_t i650;

int64_t i649;
i649 =  (int64_t)0;
i650 =  (int64_t)0;
i651 =  (int64_t)0;
i652 =  (int64_t)0;
for (uint32_t i653 =  (int32_t)0; i653 <  (int32_t)1; i653++){
for (uint32_t i656 =  (int32_t)0; i656 <  (int32_t)72; i656++){
for (uint32_t i654 =  (int32_t)0; i654 <  (int32_t)56; i654++){
for (uint32_t i655 =  (int32_t)0; i655 <  (int32_t)56; i655++){
Arr4DIdxRowM(tmp360, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)72,i653,i654,i655,i656) = Arr4DIdxRowM(tmp358, (int32_t)1, (int32_t)72, (int32_t)56, (int32_t)56,i649,i650,i651,i652);
i652 = (i652 +  (int64_t)1);
if ((i652 ==  (int64_t)56)) {
i652 =  (int64_t)0;
i651 = (i651 +  (int64_t)1);
if ((i651 ==  (int64_t)56)) {
i651 =  (int64_t)0;
i650 = (i650 +  (int64_t)1);
if ((i650 ==  (int64_t)72)) {
i650 =  (int64_t)0;
i649 = (i649 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)72,  (int32_t)56,  (int32_t)56, tmp358);

uint64_t* tmp362 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72);
Relu4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72, tmp360, tmp362,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72, tmp360);

uint64_t* tmp364 = make_array<uint64_t>( (int32_t)1,  (int32_t)72,  (int32_t)56,  (int32_t)56);

int64_t i664;

int64_t i663;

int64_t i662;

int64_t i661;

int64_t i660;

int64_t i659;

int64_t i658;

int64_t i657;
i657 =  (int64_t)0;
i658 =  (int64_t)0;
i659 =  (int64_t)0;
i660 =  (int64_t)0;
for (uint32_t i661 =  (int32_t)0; i661 <  (int32_t)1; i661++){
for (uint32_t i663 =  (int32_t)0; i663 <  (int32_t)56; i663++){
for (uint32_t i664 =  (int32_t)0; i664 <  (int32_t)56; i664++){
for (uint32_t i662 =  (int32_t)0; i662 <  (int32_t)72; i662++){
Arr4DIdxRowM(tmp364, (int32_t)1, (int32_t)72, (int32_t)56, (int32_t)56,i661,i662,i663,i664) = Arr4DIdxRowM(tmp362, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)72,i657,i658,i659,i660);
i660 = (i660 +  (int64_t)1);
if ((i660 ==  (int64_t)72)) {
i660 =  (int64_t)0;
i659 = (i659 +  (int64_t)1);
if ((i659 ==  (int64_t)56)) {
i659 =  (int64_t)0;
i658 = (i658 +  (int64_t)1);
if ((i658 ==  (int64_t)56)) {
i658 =  (int64_t)0;
i657 = (i657 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72, tmp362);

uint64_t* tmp366 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72);

int64_t i672;

int64_t i671;

int64_t i670;

int64_t i669;

int64_t i668;

int64_t i667;

int64_t i666;

int64_t i665;
i665 =  (int64_t)0;
i666 =  (int64_t)0;
i667 =  (int64_t)0;
i668 =  (int64_t)0;
for (uint32_t i669 =  (int32_t)0; i669 <  (int32_t)1; i669++){
for (uint32_t i672 =  (int32_t)0; i672 <  (int32_t)72; i672++){
for (uint32_t i670 =  (int32_t)0; i670 <  (int32_t)56; i670++){
for (uint32_t i671 =  (int32_t)0; i671 <  (int32_t)56; i671++){
Arr4DIdxRowM(tmp366, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)72,i669,i670,i671,i672) = Arr4DIdxRowM(tmp364, (int32_t)1, (int32_t)72, (int32_t)56, (int32_t)56,i665,i666,i667,i668);
i668 = (i668 +  (int64_t)1);
if ((i668 ==  (int64_t)56)) {
i668 =  (int64_t)0;
i667 = (i667 +  (int64_t)1);
if ((i667 ==  (int64_t)56)) {
i667 =  (int64_t)0;
i666 = (i666 +  (int64_t)1);
if ((i666 ==  (int64_t)72)) {
i666 =  (int64_t)0;
i665 = (i665 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)72,  (int32_t)56,  (int32_t)56, tmp364);

uint64_t* tmp368 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)72,  (int32_t)24);

int64_t i680;

int64_t i679;

int64_t i678;

int64_t i677;

int64_t i676;

int64_t i675;

int64_t i674;

int64_t i673;
i673 =  (int64_t)0;
i674 =  (int64_t)0;
i675 =  (int64_t)0;
i676 =  (int64_t)0;
for (uint32_t i680 =  (int32_t)0; i680 <  (int32_t)24; i680++){
for (uint32_t i679 =  (int32_t)0; i679 <  (int32_t)72; i679++){
for (uint32_t i677 =  (int32_t)0; i677 <  (int32_t)1; i677++){
for (uint32_t i678 =  (int32_t)0; i678 <  (int32_t)1; i678++){
Arr4DIdxRowM(tmp368, (int32_t)1, (int32_t)1, (int32_t)72, (int32_t)24,i677,i678,i679,i680) = Arr4DIdxRowM(tmp20, (int32_t)24, (int32_t)72, (int32_t)1, (int32_t)1,i673,i674,i675,i676);
i676 = (i676 +  (int64_t)1);
if ((i676 ==  (int64_t)1)) {
i676 =  (int64_t)0;
i675 = (i675 +  (int64_t)1);
if ((i675 ==  (int64_t)1)) {
i675 =  (int64_t)0;
i674 = (i674 +  (int64_t)1);
if ((i674 ==  (int64_t)72)) {
i674 =  (int64_t)0;
i673 = (i673 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)24,  (int32_t)72,  (int32_t)1,  (int32_t)1, tmp20);

uint64_t* tmp370 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72,  (int32_t)1,  (int32_t)1,  (int32_t)24,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp366, tmp368, tmp370);
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72, tmp366);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)72,  (int32_t)24, tmp368);

uint64_t* tmp373 = make_array<uint64_t>( (int32_t)1,  (int32_t)24,  (int32_t)56,  (int32_t)56);

int64_t i688;

int64_t i687;

int64_t i686;

int64_t i685;

int64_t i684;

int64_t i683;

int64_t i682;

int64_t i681;
i681 =  (int64_t)0;
i682 =  (int64_t)0;
i683 =  (int64_t)0;
i684 =  (int64_t)0;
for (uint32_t i685 =  (int32_t)0; i685 <  (int32_t)1; i685++){
for (uint32_t i687 =  (int32_t)0; i687 <  (int32_t)56; i687++){
for (uint32_t i688 =  (int32_t)0; i688 <  (int32_t)56; i688++){
for (uint32_t i686 =  (int32_t)0; i686 <  (int32_t)24; i686++){
Arr4DIdxRowM(tmp373, (int32_t)1, (int32_t)24, (int32_t)56, (int32_t)56,i685,i686,i687,i688) = Arr4DIdxRowM(tmp370, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)24,i681,i682,i683,i684);
i684 = (i684 +  (int64_t)1);
if ((i684 ==  (int64_t)24)) {
i684 =  (int64_t)0;
i683 = (i683 +  (int64_t)1);
if ((i683 ==  (int64_t)56)) {
i683 =  (int64_t)0;
i682 = (i682 +  (int64_t)1);
if ((i682 ==  (int64_t)56)) {
i682 =  (int64_t)0;
i681 = (i681 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24, tmp370);

uint64_t* tmp375 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24);

int64_t i696;

int64_t i695;

int64_t i694;

int64_t i693;

int64_t i692;

int64_t i691;

int64_t i690;

int64_t i689;
i689 =  (int64_t)0;
i690 =  (int64_t)0;
i691 =  (int64_t)0;
i692 =  (int64_t)0;
for (uint32_t i693 =  (int32_t)0; i693 <  (int32_t)1; i693++){
for (uint32_t i696 =  (int32_t)0; i696 <  (int32_t)24; i696++){
for (uint32_t i694 =  (int32_t)0; i694 <  (int32_t)56; i694++){
for (uint32_t i695 =  (int32_t)0; i695 <  (int32_t)56; i695++){
Arr4DIdxRowM(tmp375, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)24,i693,i694,i695,i696) = Arr4DIdxRowM(tmp373, (int32_t)1, (int32_t)24, (int32_t)56, (int32_t)56,i689,i690,i691,i692);
i692 = (i692 +  (int64_t)1);
if ((i692 ==  (int64_t)56)) {
i692 =  (int64_t)0;
i691 = (i691 +  (int64_t)1);
if ((i691 ==  (int64_t)56)) {
i691 =  (int64_t)0;
i690 = (i690 +  (int64_t)1);
if ((i690 ==  (int64_t)24)) {
i690 =  (int64_t)0;
i689 = (i689 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)24,  (int32_t)56,  (int32_t)56, tmp373);

uint64_t* tmp377 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24);
ScaleDown4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24, tmp375,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24, tmp375, tmp12, tmp13,  (int32_t)0,  (int32_t)0, tmp377);
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24, tmp375);

uint64_t* tmp379 = make_array<uint64_t>( (int32_t)1,  (int32_t)24,  (int32_t)56,  (int32_t)56);

int64_t i704;

int64_t i703;

int64_t i702;

int64_t i701;

int64_t i700;

int64_t i699;

int64_t i698;

int64_t i697;
i697 =  (int64_t)0;
i698 =  (int64_t)0;
i699 =  (int64_t)0;
i700 =  (int64_t)0;
for (uint32_t i701 =  (int32_t)0; i701 <  (int32_t)1; i701++){
for (uint32_t i703 =  (int32_t)0; i703 <  (int32_t)56; i703++){
for (uint32_t i704 =  (int32_t)0; i704 <  (int32_t)56; i704++){
for (uint32_t i702 =  (int32_t)0; i702 <  (int32_t)24; i702++){
Arr4DIdxRowM(tmp379, (int32_t)1, (int32_t)24, (int32_t)56, (int32_t)56,i701,i702,i703,i704) = Arr4DIdxRowM(tmp377, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)24,i697,i698,i699,i700);
i700 = (i700 +  (int64_t)1);
if ((i700 ==  (int64_t)24)) {
i700 =  (int64_t)0;
i699 = (i699 +  (int64_t)1);
if ((i699 ==  (int64_t)56)) {
i699 =  (int64_t)0;
i698 = (i698 +  (int64_t)1);
if ((i698 ==  (int64_t)56)) {
i698 =  (int64_t)0;
i697 = (i697 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24, tmp377);

uint64_t* tmp381 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24);

int64_t i712;

int64_t i711;

int64_t i710;

int64_t i709;

int64_t i708;

int64_t i707;

int64_t i706;

int64_t i705;
i705 =  (int64_t)0;
i706 =  (int64_t)0;
i707 =  (int64_t)0;
i708 =  (int64_t)0;
for (uint32_t i709 =  (int32_t)0; i709 <  (int32_t)1; i709++){
for (uint32_t i712 =  (int32_t)0; i712 <  (int32_t)24; i712++){
for (uint32_t i710 =  (int32_t)0; i710 <  (int32_t)56; i710++){
for (uint32_t i711 =  (int32_t)0; i711 <  (int32_t)56; i711++){
Arr4DIdxRowM(tmp381, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)24,i709,i710,i711,i712) = Arr4DIdxRowM(tmp379, (int32_t)1, (int32_t)24, (int32_t)56, (int32_t)56,i705,i706,i707,i708);
i708 = (i708 +  (int64_t)1);
if ((i708 ==  (int64_t)56)) {
i708 =  (int64_t)0;
i707 = (i707 +  (int64_t)1);
if ((i707 ==  (int64_t)56)) {
i707 =  (int64_t)0;
i706 = (i706 +  (int64_t)1);
if ((i706 ==  (int64_t)24)) {
i706 =  (int64_t)0;
i705 = (i705 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)24,  (int32_t)56,  (int32_t)56, tmp379);

uint64_t* tmp383 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24);

int64_t i720;

int64_t i719;

int64_t i718;

int64_t i717;

int64_t i716;

int64_t i715;

int64_t i714;

int64_t i713;
i713 =  (int64_t)0;
i714 =  (int64_t)0;
i715 =  (int64_t)0;
i716 =  (int64_t)0;
for (uint32_t i717 =  (int32_t)0; i717 <  (int32_t)1; i717++){
for (uint32_t i720 =  (int32_t)0; i720 <  (int32_t)24; i720++){
for (uint32_t i718 =  (int32_t)0; i718 <  (int32_t)56; i718++){
for (uint32_t i719 =  (int32_t)0; i719 <  (int32_t)56; i719++){
Arr4DIdxRowM(tmp383, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)24,i717,i718,i719,i720) = Arr4DIdxRowM(tmp323, (int32_t)1, (int32_t)24, (int32_t)56, (int32_t)56,i713,i714,i715,i716);
i716 = (i716 +  (int64_t)1);
if ((i716 ==  (int64_t)56)) {
i716 =  (int64_t)0;
i715 = (i715 +  (int64_t)1);
if ((i715 ==  (int64_t)56)) {
i715 =  (int64_t)0;
i714 = (i714 +  (int64_t)1);
if ((i714 ==  (int64_t)24)) {
i714 =  (int64_t)0;
i713 = (i713 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)24,  (int32_t)56,  (int32_t)56, tmp323);
ScaleUp4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24, tmp383,  (int32_t)23);

uint64_t* tmp385 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24);
for (uint32_t i0 =  (int32_t)0; i0 <  (int32_t)1; i0++){
for (uint32_t i1 =  (int32_t)0; i1 <  (int32_t)56; i1++){
for (uint32_t i2 =  (int32_t)0; i2 <  (int32_t)56; i2++){
for (uint32_t i3 =  (int32_t)0; i3 <  (int32_t)24; i3++){
Arr4DIdxRowM(tmp385, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)24,i0,i1,i2,i3) = SecretAdd(Arr4DIdxRowM(tmp381, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)24,i0,i1,i2,i3), Arr4DIdxRowM(tmp383, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)24,i0,i1,i2,i3));
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24, tmp383);
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24, tmp381);

uint64_t* tmp388 = make_array<uint64_t>( (int32_t)1,  (int32_t)24,  (int32_t)56,  (int32_t)56);

int64_t i728;

int64_t i727;

int64_t i726;

int64_t i725;

int64_t i724;

int64_t i723;

int64_t i722;

int64_t i721;
i721 =  (int64_t)0;
i722 =  (int64_t)0;
i723 =  (int64_t)0;
i724 =  (int64_t)0;
for (uint32_t i725 =  (int32_t)0; i725 <  (int32_t)1; i725++){
for (uint32_t i727 =  (int32_t)0; i727 <  (int32_t)56; i727++){
for (uint32_t i728 =  (int32_t)0; i728 <  (int32_t)56; i728++){
for (uint32_t i726 =  (int32_t)0; i726 <  (int32_t)24; i726++){
Arr4DIdxRowM(tmp388, (int32_t)1, (int32_t)24, (int32_t)56, (int32_t)56,i725,i726,i727,i728) = Arr4DIdxRowM(tmp385, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)24,i721,i722,i723,i724);
i724 = (i724 +  (int64_t)1);
if ((i724 ==  (int64_t)24)) {
i724 =  (int64_t)0;
i723 = (i723 +  (int64_t)1);
if ((i723 ==  (int64_t)56)) {
i723 =  (int64_t)0;
i722 = (i722 +  (int64_t)1);
if ((i722 ==  (int64_t)56)) {
i722 =  (int64_t)0;
i721 = (i721 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24, tmp385);

uint64_t* tmp390 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24);

int64_t i736;

int64_t i735;

int64_t i734;

int64_t i733;

int64_t i732;

int64_t i731;

int64_t i730;

int64_t i729;
i729 =  (int64_t)0;
i730 =  (int64_t)0;
i731 =  (int64_t)0;
i732 =  (int64_t)0;
for (uint32_t i733 =  (int32_t)0; i733 <  (int32_t)1; i733++){
for (uint32_t i736 =  (int32_t)0; i736 <  (int32_t)24; i736++){
for (uint32_t i734 =  (int32_t)0; i734 <  (int32_t)56; i734++){
for (uint32_t i735 =  (int32_t)0; i735 <  (int32_t)56; i735++){
Arr4DIdxRowM(tmp390, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)24,i733,i734,i735,i736) = Arr4DIdxRowM(tmp388, (int32_t)1, (int32_t)24, (int32_t)56, (int32_t)56,i729,i730,i731,i732);
i732 = (i732 +  (int64_t)1);
if ((i732 ==  (int64_t)56)) {
i732 =  (int64_t)0;
i731 = (i731 +  (int64_t)1);
if ((i731 ==  (int64_t)56)) {
i731 =  (int64_t)0;
i730 = (i730 +  (int64_t)1);
if ((i730 ==  (int64_t)24)) {
i730 =  (int64_t)0;
i729 = (i729 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)24,  (int32_t)56,  (int32_t)56, tmp388);

uint64_t* tmp392 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24);
Relu4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24, tmp390, tmp392,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24, tmp390);

uint64_t* tmp394 = make_array<uint64_t>( (int32_t)1,  (int32_t)24,  (int32_t)56,  (int32_t)56);

int64_t i744;

int64_t i743;

int64_t i742;

int64_t i741;

int64_t i740;

int64_t i739;

int64_t i738;

int64_t i737;
i737 =  (int64_t)0;
i738 =  (int64_t)0;
i739 =  (int64_t)0;
i740 =  (int64_t)0;
for (uint32_t i741 =  (int32_t)0; i741 <  (int32_t)1; i741++){
for (uint32_t i743 =  (int32_t)0; i743 <  (int32_t)56; i743++){
for (uint32_t i744 =  (int32_t)0; i744 <  (int32_t)56; i744++){
for (uint32_t i742 =  (int32_t)0; i742 <  (int32_t)24; i742++){
Arr4DIdxRowM(tmp394, (int32_t)1, (int32_t)24, (int32_t)56, (int32_t)56,i741,i742,i743,i744) = Arr4DIdxRowM(tmp392, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)24,i737,i738,i739,i740);
i740 = (i740 +  (int64_t)1);
if ((i740 ==  (int64_t)24)) {
i740 =  (int64_t)0;
i739 = (i739 +  (int64_t)1);
if ((i739 ==  (int64_t)56)) {
i739 =  (int64_t)0;
i738 = (i738 +  (int64_t)1);
if ((i738 ==  (int64_t)56)) {
i738 =  (int64_t)0;
i737 = (i737 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24, tmp392);

uint64_t* tmp396 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24);

int64_t i752;

int64_t i751;

int64_t i750;

int64_t i749;

int64_t i748;

int64_t i747;

int64_t i746;

int64_t i745;
i745 =  (int64_t)0;
i746 =  (int64_t)0;
i747 =  (int64_t)0;
i748 =  (int64_t)0;
for (uint32_t i749 =  (int32_t)0; i749 <  (int32_t)1; i749++){
for (uint32_t i752 =  (int32_t)0; i752 <  (int32_t)24; i752++){
for (uint32_t i750 =  (int32_t)0; i750 <  (int32_t)56; i750++){
for (uint32_t i751 =  (int32_t)0; i751 <  (int32_t)56; i751++){
Arr4DIdxRowM(tmp396, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)24,i749,i750,i751,i752) = Arr4DIdxRowM(tmp394, (int32_t)1, (int32_t)24, (int32_t)56, (int32_t)56,i745,i746,i747,i748);
i748 = (i748 +  (int64_t)1);
if ((i748 ==  (int64_t)56)) {
i748 =  (int64_t)0;
i747 = (i747 +  (int64_t)1);
if ((i747 ==  (int64_t)56)) {
i747 =  (int64_t)0;
i746 = (i746 +  (int64_t)1);
if ((i746 ==  (int64_t)24)) {
i746 =  (int64_t)0;
i745 = (i745 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp397 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)24,  (int32_t)72);

int64_t i760;

int64_t i759;

int64_t i758;

int64_t i757;

int64_t i756;

int64_t i755;

int64_t i754;

int64_t i753;
i753 =  (int64_t)0;
i754 =  (int64_t)0;
i755 =  (int64_t)0;
i756 =  (int64_t)0;
for (uint32_t i760 =  (int32_t)0; i760 <  (int32_t)72; i760++){
for (uint32_t i759 =  (int32_t)0; i759 <  (int32_t)24; i759++){
for (uint32_t i757 =  (int32_t)0; i757 <  (int32_t)1; i757++){
for (uint32_t i758 =  (int32_t)0; i758 <  (int32_t)1; i758++){
Arr4DIdxRowM(tmp397, (int32_t)1, (int32_t)1, (int32_t)24, (int32_t)72,i757,i758,i759,i760) = Arr4DIdxRowM(tmp21, (int32_t)72, (int32_t)24, (int32_t)1, (int32_t)1,i753,i754,i755,i756);
i756 = (i756 +  (int64_t)1);
if ((i756 ==  (int64_t)1)) {
i756 =  (int64_t)0;
i755 = (i755 +  (int64_t)1);
if ((i755 ==  (int64_t)1)) {
i755 =  (int64_t)0;
i754 = (i754 +  (int64_t)1);
if ((i754 ==  (int64_t)24)) {
i754 =  (int64_t)0;
i753 = (i753 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)72,  (int32_t)24,  (int32_t)1,  (int32_t)1, tmp21);

uint64_t* tmp399 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24,  (int32_t)1,  (int32_t)1,  (int32_t)72,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp396, tmp397, tmp399);
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24, tmp396);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)24,  (int32_t)72, tmp397);

uint64_t* tmp402 = make_array<uint64_t>( (int32_t)1,  (int32_t)72,  (int32_t)56,  (int32_t)56);

int64_t i768;

int64_t i767;

int64_t i766;

int64_t i765;

int64_t i764;

int64_t i763;

int64_t i762;

int64_t i761;
i761 =  (int64_t)0;
i762 =  (int64_t)0;
i763 =  (int64_t)0;
i764 =  (int64_t)0;
for (uint32_t i765 =  (int32_t)0; i765 <  (int32_t)1; i765++){
for (uint32_t i767 =  (int32_t)0; i767 <  (int32_t)56; i767++){
for (uint32_t i768 =  (int32_t)0; i768 <  (int32_t)56; i768++){
for (uint32_t i766 =  (int32_t)0; i766 <  (int32_t)72; i766++){
Arr4DIdxRowM(tmp402, (int32_t)1, (int32_t)72, (int32_t)56, (int32_t)56,i765,i766,i767,i768) = Arr4DIdxRowM(tmp399, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)72,i761,i762,i763,i764);
i764 = (i764 +  (int64_t)1);
if ((i764 ==  (int64_t)72)) {
i764 =  (int64_t)0;
i763 = (i763 +  (int64_t)1);
if ((i763 ==  (int64_t)56)) {
i763 =  (int64_t)0;
i762 = (i762 +  (int64_t)1);
if ((i762 ==  (int64_t)56)) {
i762 =  (int64_t)0;
i761 = (i761 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72, tmp399);

uint64_t* tmp404 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72);

int64_t i776;

int64_t i775;

int64_t i774;

int64_t i773;

int64_t i772;

int64_t i771;

int64_t i770;

int64_t i769;
i769 =  (int64_t)0;
i770 =  (int64_t)0;
i771 =  (int64_t)0;
i772 =  (int64_t)0;
for (uint32_t i773 =  (int32_t)0; i773 <  (int32_t)1; i773++){
for (uint32_t i776 =  (int32_t)0; i776 <  (int32_t)72; i776++){
for (uint32_t i774 =  (int32_t)0; i774 <  (int32_t)56; i774++){
for (uint32_t i775 =  (int32_t)0; i775 <  (int32_t)56; i775++){
Arr4DIdxRowM(tmp404, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)72,i773,i774,i775,i776) = Arr4DIdxRowM(tmp402, (int32_t)1, (int32_t)72, (int32_t)56, (int32_t)56,i769,i770,i771,i772);
i772 = (i772 +  (int64_t)1);
if ((i772 ==  (int64_t)56)) {
i772 =  (int64_t)0;
i771 = (i771 +  (int64_t)1);
if ((i771 ==  (int64_t)56)) {
i771 =  (int64_t)0;
i770 = (i770 +  (int64_t)1);
if ((i770 ==  (int64_t)72)) {
i770 =  (int64_t)0;
i769 = (i769 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)72,  (int32_t)56,  (int32_t)56, tmp402);

uint64_t* tmp406 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72);
ScaleDown4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72, tmp404,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72, tmp404, tmp17, tmp18,  (int32_t)0,  (int32_t)0, tmp406);
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72, tmp404);

uint64_t* tmp408 = make_array<uint64_t>( (int32_t)1,  (int32_t)72,  (int32_t)56,  (int32_t)56);

int64_t i784;

int64_t i783;

int64_t i782;

int64_t i781;

int64_t i780;

int64_t i779;

int64_t i778;

int64_t i777;
i777 =  (int64_t)0;
i778 =  (int64_t)0;
i779 =  (int64_t)0;
i780 =  (int64_t)0;
for (uint32_t i781 =  (int32_t)0; i781 <  (int32_t)1; i781++){
for (uint32_t i783 =  (int32_t)0; i783 <  (int32_t)56; i783++){
for (uint32_t i784 =  (int32_t)0; i784 <  (int32_t)56; i784++){
for (uint32_t i782 =  (int32_t)0; i782 <  (int32_t)72; i782++){
Arr4DIdxRowM(tmp408, (int32_t)1, (int32_t)72, (int32_t)56, (int32_t)56,i781,i782,i783,i784) = Arr4DIdxRowM(tmp406, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)72,i777,i778,i779,i780);
i780 = (i780 +  (int64_t)1);
if ((i780 ==  (int64_t)72)) {
i780 =  (int64_t)0;
i779 = (i779 +  (int64_t)1);
if ((i779 ==  (int64_t)56)) {
i779 =  (int64_t)0;
i778 = (i778 +  (int64_t)1);
if ((i778 ==  (int64_t)56)) {
i778 =  (int64_t)0;
i777 = (i777 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72, tmp406);

uint64_t* tmp410 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72);

int64_t i792;

int64_t i791;

int64_t i790;

int64_t i789;

int64_t i788;

int64_t i787;

int64_t i786;

int64_t i785;
i785 =  (int64_t)0;
i786 =  (int64_t)0;
i787 =  (int64_t)0;
i788 =  (int64_t)0;
for (uint32_t i789 =  (int32_t)0; i789 <  (int32_t)1; i789++){
for (uint32_t i792 =  (int32_t)0; i792 <  (int32_t)72; i792++){
for (uint32_t i790 =  (int32_t)0; i790 <  (int32_t)56; i790++){
for (uint32_t i791 =  (int32_t)0; i791 <  (int32_t)56; i791++){
Arr4DIdxRowM(tmp410, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)72,i789,i790,i791,i792) = Arr4DIdxRowM(tmp408, (int32_t)1, (int32_t)72, (int32_t)56, (int32_t)56,i785,i786,i787,i788);
i788 = (i788 +  (int64_t)1);
if ((i788 ==  (int64_t)56)) {
i788 =  (int64_t)0;
i787 = (i787 +  (int64_t)1);
if ((i787 ==  (int64_t)56)) {
i787 =  (int64_t)0;
i786 = (i786 +  (int64_t)1);
if ((i786 ==  (int64_t)72)) {
i786 =  (int64_t)0;
i785 = (i785 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)72,  (int32_t)56,  (int32_t)56, tmp408);

uint64_t* tmp412 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72);
Relu4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72, tmp410, tmp412,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72, tmp410);

uint64_t* tmp414 = make_array<uint64_t>( (int32_t)1,  (int32_t)72,  (int32_t)56,  (int32_t)56);

int64_t i800;

int64_t i799;

int64_t i798;

int64_t i797;

int64_t i796;

int64_t i795;

int64_t i794;

int64_t i793;
i793 =  (int64_t)0;
i794 =  (int64_t)0;
i795 =  (int64_t)0;
i796 =  (int64_t)0;
for (uint32_t i797 =  (int32_t)0; i797 <  (int32_t)1; i797++){
for (uint32_t i799 =  (int32_t)0; i799 <  (int32_t)56; i799++){
for (uint32_t i800 =  (int32_t)0; i800 <  (int32_t)56; i800++){
for (uint32_t i798 =  (int32_t)0; i798 <  (int32_t)72; i798++){
Arr4DIdxRowM(tmp414, (int32_t)1, (int32_t)72, (int32_t)56, (int32_t)56,i797,i798,i799,i800) = Arr4DIdxRowM(tmp412, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)72,i793,i794,i795,i796);
i796 = (i796 +  (int64_t)1);
if ((i796 ==  (int64_t)72)) {
i796 =  (int64_t)0;
i795 = (i795 +  (int64_t)1);
if ((i795 ==  (int64_t)56)) {
i795 =  (int64_t)0;
i794 = (i794 +  (int64_t)1);
if ((i794 ==  (int64_t)56)) {
i794 =  (int64_t)0;
i793 = (i793 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72, tmp412);

uint64_t* tmp416 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72);

int64_t i808;

int64_t i807;

int64_t i806;

int64_t i805;

int64_t i804;

int64_t i803;

int64_t i802;

int64_t i801;
i801 =  (int64_t)0;
i802 =  (int64_t)0;
i803 =  (int64_t)0;
i804 =  (int64_t)0;
for (uint32_t i805 =  (int32_t)0; i805 <  (int32_t)1; i805++){
for (uint32_t i808 =  (int32_t)0; i808 <  (int32_t)72; i808++){
for (uint32_t i806 =  (int32_t)0; i806 <  (int32_t)56; i806++){
for (uint32_t i807 =  (int32_t)0; i807 <  (int32_t)56; i807++){
Arr4DIdxRowM(tmp416, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)72,i805,i806,i807,i808) = Arr4DIdxRowM(tmp414, (int32_t)1, (int32_t)72, (int32_t)56, (int32_t)56,i801,i802,i803,i804);
i804 = (i804 +  (int64_t)1);
if ((i804 ==  (int64_t)56)) {
i804 =  (int64_t)0;
i803 = (i803 +  (int64_t)1);
if ((i803 ==  (int64_t)56)) {
i803 =  (int64_t)0;
i802 = (i802 +  (int64_t)1);
if ((i802 ==  (int64_t)72)) {
i802 =  (int64_t)0;
i801 = (i801 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)72,  (int32_t)56,  (int32_t)56, tmp414);

uint64_t* tmp418 = make_array<uint64_t>( (int32_t)5,  (int32_t)5,  (int32_t)1,  (int32_t)72);

int64_t i816;

int64_t i815;

int64_t i814;

int64_t i813;

int64_t i812;

int64_t i811;

int64_t i810;

int64_t i809;
i809 =  (int64_t)0;
i810 =  (int64_t)0;
i811 =  (int64_t)0;
i812 =  (int64_t)0;
for (uint32_t i816 =  (int32_t)0; i816 <  (int32_t)72; i816++){
for (uint32_t i815 =  (int32_t)0; i815 <  (int32_t)1; i815++){
for (uint32_t i813 =  (int32_t)0; i813 <  (int32_t)5; i813++){
for (uint32_t i814 =  (int32_t)0; i814 <  (int32_t)5; i814++){
Arr4DIdxRowM(tmp418, (int32_t)5, (int32_t)5, (int32_t)1, (int32_t)72,i813,i814,i815,i816) = Arr4DIdxRowM(tmp22, (int32_t)72, (int32_t)1, (int32_t)5, (int32_t)5,i809,i810,i811,i812);
i812 = (i812 +  (int64_t)1);
if ((i812 ==  (int64_t)5)) {
i812 =  (int64_t)0;
i811 = (i811 +  (int64_t)1);
if ((i811 ==  (int64_t)5)) {
i811 =  (int64_t)0;
i810 = (i810 +  (int64_t)1);
if ((i810 ==  (int64_t)1)) {
i810 =  (int64_t)0;
i809 = (i809 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)72,  (int32_t)1,  (int32_t)5,  (int32_t)5, tmp22);

uint64_t* tmp420 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)72);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72,  (int32_t)5,  (int32_t)5,  (int32_t)72,  (int32_t)2,  (int32_t)2,  (int32_t)2,  (int32_t)2,  (int32_t)2,  (int32_t)2,  (int32_t)72, tmp416, tmp418, tmp420);
ClearMemSecret4( (int32_t)5,  (int32_t)5,  (int32_t)1,  (int32_t)72, tmp418);
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)72, tmp416);

uint64_t* tmp423 = make_array<uint64_t>( (int32_t)1,  (int32_t)72,  (int32_t)28,  (int32_t)28);

int64_t i824;

int64_t i823;

int64_t i822;

int64_t i821;

int64_t i820;

int64_t i819;

int64_t i818;

int64_t i817;
i817 =  (int64_t)0;
i818 =  (int64_t)0;
i819 =  (int64_t)0;
i820 =  (int64_t)0;
for (uint32_t i821 =  (int32_t)0; i821 <  (int32_t)1; i821++){
for (uint32_t i823 =  (int32_t)0; i823 <  (int32_t)28; i823++){
for (uint32_t i824 =  (int32_t)0; i824 <  (int32_t)28; i824++){
for (uint32_t i822 =  (int32_t)0; i822 <  (int32_t)72; i822++){
Arr4DIdxRowM(tmp423, (int32_t)1, (int32_t)72, (int32_t)28, (int32_t)28,i821,i822,i823,i824) = Arr4DIdxRowM(tmp420, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)72,i817,i818,i819,i820);
i820 = (i820 +  (int64_t)1);
if ((i820 ==  (int64_t)72)) {
i820 =  (int64_t)0;
i819 = (i819 +  (int64_t)1);
if ((i819 ==  (int64_t)28)) {
i819 =  (int64_t)0;
i818 = (i818 +  (int64_t)1);
if ((i818 ==  (int64_t)28)) {
i818 =  (int64_t)0;
i817 = (i817 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)72, tmp420);

uint64_t* tmp425 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)72);

int64_t i832;

int64_t i831;

int64_t i830;

int64_t i829;

int64_t i828;

int64_t i827;

int64_t i826;

int64_t i825;
i825 =  (int64_t)0;
i826 =  (int64_t)0;
i827 =  (int64_t)0;
i828 =  (int64_t)0;
for (uint32_t i829 =  (int32_t)0; i829 <  (int32_t)1; i829++){
for (uint32_t i832 =  (int32_t)0; i832 <  (int32_t)72; i832++){
for (uint32_t i830 =  (int32_t)0; i830 <  (int32_t)28; i830++){
for (uint32_t i831 =  (int32_t)0; i831 <  (int32_t)28; i831++){
Arr4DIdxRowM(tmp425, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)72,i829,i830,i831,i832) = Arr4DIdxRowM(tmp423, (int32_t)1, (int32_t)72, (int32_t)28, (int32_t)28,i825,i826,i827,i828);
i828 = (i828 +  (int64_t)1);
if ((i828 ==  (int64_t)28)) {
i828 =  (int64_t)0;
i827 = (i827 +  (int64_t)1);
if ((i827 ==  (int64_t)28)) {
i827 =  (int64_t)0;
i826 = (i826 +  (int64_t)1);
if ((i826 ==  (int64_t)72)) {
i826 =  (int64_t)0;
i825 = (i825 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)72,  (int32_t)28,  (int32_t)28, tmp423);

uint64_t* tmp427 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)72);
ScaleDown4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)72, tmp425,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)72, tmp425, tmp17, tmp18,  (int32_t)0,  (int32_t)0, tmp427);
ClearMemSecret1( (int32_t)72, tmp17);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)72, tmp425);
ClearMemSecret1( (int32_t)72, tmp18);

uint64_t* tmp431 = make_array<uint64_t>( (int32_t)1,  (int32_t)72,  (int32_t)28,  (int32_t)28);

int64_t i840;

int64_t i839;

int64_t i838;

int64_t i837;

int64_t i836;

int64_t i835;

int64_t i834;

int64_t i833;
i833 =  (int64_t)0;
i834 =  (int64_t)0;
i835 =  (int64_t)0;
i836 =  (int64_t)0;
for (uint32_t i837 =  (int32_t)0; i837 <  (int32_t)1; i837++){
for (uint32_t i839 =  (int32_t)0; i839 <  (int32_t)28; i839++){
for (uint32_t i840 =  (int32_t)0; i840 <  (int32_t)28; i840++){
for (uint32_t i838 =  (int32_t)0; i838 <  (int32_t)72; i838++){
Arr4DIdxRowM(tmp431, (int32_t)1, (int32_t)72, (int32_t)28, (int32_t)28,i837,i838,i839,i840) = Arr4DIdxRowM(tmp427, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)72,i833,i834,i835,i836);
i836 = (i836 +  (int64_t)1);
if ((i836 ==  (int64_t)72)) {
i836 =  (int64_t)0;
i835 = (i835 +  (int64_t)1);
if ((i835 ==  (int64_t)28)) {
i835 =  (int64_t)0;
i834 = (i834 +  (int64_t)1);
if ((i834 ==  (int64_t)28)) {
i834 =  (int64_t)0;
i833 = (i833 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)72, tmp427);

uint64_t* tmp433 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)72);

int64_t i848;

int64_t i847;

int64_t i846;

int64_t i845;

int64_t i844;

int64_t i843;

int64_t i842;

int64_t i841;
i841 =  (int64_t)0;
i842 =  (int64_t)0;
i843 =  (int64_t)0;
i844 =  (int64_t)0;
for (uint32_t i845 =  (int32_t)0; i845 <  (int32_t)1; i845++){
for (uint32_t i848 =  (int32_t)0; i848 <  (int32_t)72; i848++){
for (uint32_t i846 =  (int32_t)0; i846 <  (int32_t)28; i846++){
for (uint32_t i847 =  (int32_t)0; i847 <  (int32_t)28; i847++){
Arr4DIdxRowM(tmp433, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)72,i845,i846,i847,i848) = Arr4DIdxRowM(tmp431, (int32_t)1, (int32_t)72, (int32_t)28, (int32_t)28,i841,i842,i843,i844);
i844 = (i844 +  (int64_t)1);
if ((i844 ==  (int64_t)28)) {
i844 =  (int64_t)0;
i843 = (i843 +  (int64_t)1);
if ((i843 ==  (int64_t)28)) {
i843 =  (int64_t)0;
i842 = (i842 +  (int64_t)1);
if ((i842 ==  (int64_t)72)) {
i842 =  (int64_t)0;
i841 = (i841 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)72,  (int32_t)28,  (int32_t)28, tmp431);

uint64_t* tmp435 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)72);
Relu4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)72, tmp433, tmp435,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)72, tmp433);

uint64_t* tmp437 = make_array<uint64_t>( (int32_t)1,  (int32_t)72,  (int32_t)28,  (int32_t)28);

int64_t i856;

int64_t i855;

int64_t i854;

int64_t i853;

int64_t i852;

int64_t i851;

int64_t i850;

int64_t i849;
i849 =  (int64_t)0;
i850 =  (int64_t)0;
i851 =  (int64_t)0;
i852 =  (int64_t)0;
for (uint32_t i853 =  (int32_t)0; i853 <  (int32_t)1; i853++){
for (uint32_t i855 =  (int32_t)0; i855 <  (int32_t)28; i855++){
for (uint32_t i856 =  (int32_t)0; i856 <  (int32_t)28; i856++){
for (uint32_t i854 =  (int32_t)0; i854 <  (int32_t)72; i854++){
Arr4DIdxRowM(tmp437, (int32_t)1, (int32_t)72, (int32_t)28, (int32_t)28,i853,i854,i855,i856) = Arr4DIdxRowM(tmp435, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)72,i849,i850,i851,i852);
i852 = (i852 +  (int64_t)1);
if ((i852 ==  (int64_t)72)) {
i852 =  (int64_t)0;
i851 = (i851 +  (int64_t)1);
if ((i851 ==  (int64_t)28)) {
i851 =  (int64_t)0;
i850 = (i850 +  (int64_t)1);
if ((i850 ==  (int64_t)28)) {
i850 =  (int64_t)0;
i849 = (i849 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)72, tmp435);

uint64_t* tmp439 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)72);

int64_t i864;

int64_t i863;

int64_t i862;

int64_t i861;

int64_t i860;

int64_t i859;

int64_t i858;

int64_t i857;
i857 =  (int64_t)0;
i858 =  (int64_t)0;
i859 =  (int64_t)0;
i860 =  (int64_t)0;
for (uint32_t i861 =  (int32_t)0; i861 <  (int32_t)1; i861++){
for (uint32_t i864 =  (int32_t)0; i864 <  (int32_t)72; i864++){
for (uint32_t i862 =  (int32_t)0; i862 <  (int32_t)28; i862++){
for (uint32_t i863 =  (int32_t)0; i863 <  (int32_t)28; i863++){
Arr4DIdxRowM(tmp439, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)72,i861,i862,i863,i864) = Arr4DIdxRowM(tmp437, (int32_t)1, (int32_t)72, (int32_t)28, (int32_t)28,i857,i858,i859,i860);
i860 = (i860 +  (int64_t)1);
if ((i860 ==  (int64_t)28)) {
i860 =  (int64_t)0;
i859 = (i859 +  (int64_t)1);
if ((i859 ==  (int64_t)28)) {
i859 =  (int64_t)0;
i858 = (i858 +  (int64_t)1);
if ((i858 ==  (int64_t)72)) {
i858 =  (int64_t)0;
i857 = (i857 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp440 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)72);
AvgPool( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)72,  (int32_t)28,  (int32_t)28,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)72, tmp439, tmp440);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)72, tmp439);

uint64_t* tmp442 = make_array<uint64_t>( (int32_t)1,  (int32_t)72,  (int32_t)1,  (int32_t)1);

int64_t i872;

int64_t i871;

int64_t i870;

int64_t i869;

int64_t i868;

int64_t i867;

int64_t i866;

int64_t i865;
i865 =  (int64_t)0;
i866 =  (int64_t)0;
i867 =  (int64_t)0;
i868 =  (int64_t)0;
for (uint32_t i869 =  (int32_t)0; i869 <  (int32_t)1; i869++){
for (uint32_t i871 =  (int32_t)0; i871 <  (int32_t)1; i871++){
for (uint32_t i872 =  (int32_t)0; i872 <  (int32_t)1; i872++){
for (uint32_t i870 =  (int32_t)0; i870 <  (int32_t)72; i870++){
Arr4DIdxRowM(tmp442, (int32_t)1, (int32_t)72, (int32_t)1, (int32_t)1,i869,i870,i871,i872) = Arr4DIdxRowM(tmp440, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)72,i865,i866,i867,i868);
i868 = (i868 +  (int64_t)1);
if ((i868 ==  (int64_t)72)) {
i868 =  (int64_t)0;
i867 = (i867 +  (int64_t)1);
if ((i867 ==  (int64_t)1)) {
i867 =  (int64_t)0;
i866 = (i866 +  (int64_t)1);
if ((i866 ==  (int64_t)1)) {
i866 =  (int64_t)0;
i865 = (i865 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)72, tmp440);

uint64_t* tmp444 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)72);

int64_t i880;

int64_t i879;

int64_t i878;

int64_t i877;

int64_t i876;

int64_t i875;

int64_t i874;

int64_t i873;
i873 =  (int64_t)0;
i874 =  (int64_t)0;
i875 =  (int64_t)0;
i876 =  (int64_t)0;
for (uint32_t i877 =  (int32_t)0; i877 <  (int32_t)1; i877++){
for (uint32_t i880 =  (int32_t)0; i880 <  (int32_t)72; i880++){
for (uint32_t i878 =  (int32_t)0; i878 <  (int32_t)1; i878++){
for (uint32_t i879 =  (int32_t)0; i879 <  (int32_t)1; i879++){
Arr4DIdxRowM(tmp444, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)72,i877,i878,i879,i880) = Arr4DIdxRowM(tmp442, (int32_t)1, (int32_t)72, (int32_t)1, (int32_t)1,i873,i874,i875,i876);
i876 = (i876 +  (int64_t)1);
if ((i876 ==  (int64_t)1)) {
i876 =  (int64_t)0;
i875 = (i875 +  (int64_t)1);
if ((i875 ==  (int64_t)1)) {
i875 =  (int64_t)0;
i874 = (i874 +  (int64_t)1);
if ((i874 ==  (int64_t)72)) {
i874 =  (int64_t)0;
i873 = (i873 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)72,  (int32_t)1,  (int32_t)1, tmp442);

uint64_t* tmp446 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)72,  (int32_t)18);

int64_t i888;

int64_t i887;

int64_t i886;

int64_t i885;

int64_t i884;

int64_t i883;

int64_t i882;

int64_t i881;
i881 =  (int64_t)0;
i882 =  (int64_t)0;
i883 =  (int64_t)0;
i884 =  (int64_t)0;
for (uint32_t i888 =  (int32_t)0; i888 <  (int32_t)18; i888++){
for (uint32_t i887 =  (int32_t)0; i887 <  (int32_t)72; i887++){
for (uint32_t i885 =  (int32_t)0; i885 <  (int32_t)1; i885++){
for (uint32_t i886 =  (int32_t)0; i886 <  (int32_t)1; i886++){
Arr4DIdxRowM(tmp446, (int32_t)1, (int32_t)1, (int32_t)72, (int32_t)18,i885,i886,i887,i888) = Arr4DIdxRowM(tmp23, (int32_t)18, (int32_t)72, (int32_t)1, (int32_t)1,i881,i882,i883,i884);
i884 = (i884 +  (int64_t)1);
if ((i884 ==  (int64_t)1)) {
i884 =  (int64_t)0;
i883 = (i883 +  (int64_t)1);
if ((i883 ==  (int64_t)1)) {
i883 =  (int64_t)0;
i882 = (i882 +  (int64_t)1);
if ((i882 ==  (int64_t)72)) {
i882 =  (int64_t)0;
i881 = (i881 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)18,  (int32_t)72,  (int32_t)1,  (int32_t)1, tmp23);

uint64_t* tmp448 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)18);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)72,  (int32_t)1,  (int32_t)1,  (int32_t)18,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp444, tmp446, tmp448);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)72,  (int32_t)18, tmp446);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)72, tmp444);

uint64_t* tmp451 = make_array<uint64_t>( (int32_t)1,  (int32_t)18,  (int32_t)1,  (int32_t)1);

int64_t i896;

int64_t i895;

int64_t i894;

int64_t i893;

int64_t i892;

int64_t i891;

int64_t i890;

int64_t i889;
i889 =  (int64_t)0;
i890 =  (int64_t)0;
i891 =  (int64_t)0;
i892 =  (int64_t)0;
for (uint32_t i893 =  (int32_t)0; i893 <  (int32_t)1; i893++){
for (uint32_t i895 =  (int32_t)0; i895 <  (int32_t)1; i895++){
for (uint32_t i896 =  (int32_t)0; i896 <  (int32_t)1; i896++){
for (uint32_t i894 =  (int32_t)0; i894 <  (int32_t)18; i894++){
Arr4DIdxRowM(tmp451, (int32_t)1, (int32_t)18, (int32_t)1, (int32_t)1,i893,i894,i895,i896) = Arr4DIdxRowM(tmp448, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)18,i889,i890,i891,i892);
i892 = (i892 +  (int64_t)1);
if ((i892 ==  (int64_t)18)) {
i892 =  (int64_t)0;
i891 = (i891 +  (int64_t)1);
if ((i891 ==  (int64_t)1)) {
i891 =  (int64_t)0;
i890 = (i890 +  (int64_t)1);
if ((i890 ==  (int64_t)1)) {
i890 =  (int64_t)0;
i889 = (i889 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)18, tmp448);

uint64_t* tmp453 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)18);

int64_t i904;

int64_t i903;

int64_t i902;

int64_t i901;

int64_t i900;

int64_t i899;

int64_t i898;

int64_t i897;
i897 =  (int64_t)0;
i898 =  (int64_t)0;
i899 =  (int64_t)0;
i900 =  (int64_t)0;
for (uint32_t i901 =  (int32_t)0; i901 <  (int32_t)1; i901++){
for (uint32_t i904 =  (int32_t)0; i904 <  (int32_t)18; i904++){
for (uint32_t i902 =  (int32_t)0; i902 <  (int32_t)1; i902++){
for (uint32_t i903 =  (int32_t)0; i903 <  (int32_t)1; i903++){
Arr4DIdxRowM(tmp453, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)18,i901,i902,i903,i904) = Arr4DIdxRowM(tmp451, (int32_t)1, (int32_t)18, (int32_t)1, (int32_t)1,i897,i898,i899,i900);
i900 = (i900 +  (int64_t)1);
if ((i900 ==  (int64_t)1)) {
i900 =  (int64_t)0;
i899 = (i899 +  (int64_t)1);
if ((i899 ==  (int64_t)1)) {
i899 =  (int64_t)0;
i898 = (i898 +  (int64_t)1);
if ((i898 ==  (int64_t)18)) {
i898 =  (int64_t)0;
i897 = (i897 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)18,  (int32_t)1,  (int32_t)1, tmp451);

uint64_t* tmp455 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)18);
ScaleDown4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)18, tmp453,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)18, tmp453, tmp24, tmp25,  (int32_t)0,  (int32_t)23, tmp455);
ClearMemSecret1( (int32_t)18, tmp24);
ClearMemSecret1( (int32_t)18, tmp25);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)18, tmp453);

uint64_t* tmp459 = make_array<uint64_t>( (int32_t)1,  (int32_t)18,  (int32_t)1,  (int32_t)1);

int64_t i912;

int64_t i911;

int64_t i910;

int64_t i909;

int64_t i908;

int64_t i907;

int64_t i906;

int64_t i905;
i905 =  (int64_t)0;
i906 =  (int64_t)0;
i907 =  (int64_t)0;
i908 =  (int64_t)0;
for (uint32_t i909 =  (int32_t)0; i909 <  (int32_t)1; i909++){
for (uint32_t i911 =  (int32_t)0; i911 <  (int32_t)1; i911++){
for (uint32_t i912 =  (int32_t)0; i912 <  (int32_t)1; i912++){
for (uint32_t i910 =  (int32_t)0; i910 <  (int32_t)18; i910++){
Arr4DIdxRowM(tmp459, (int32_t)1, (int32_t)18, (int32_t)1, (int32_t)1,i909,i910,i911,i912) = Arr4DIdxRowM(tmp455, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)18,i905,i906,i907,i908);
i908 = (i908 +  (int64_t)1);
if ((i908 ==  (int64_t)18)) {
i908 =  (int64_t)0;
i907 = (i907 +  (int64_t)1);
if ((i907 ==  (int64_t)1)) {
i907 =  (int64_t)0;
i906 = (i906 +  (int64_t)1);
if ((i906 ==  (int64_t)1)) {
i906 =  (int64_t)0;
i905 = (i905 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)18, tmp455);

uint64_t* tmp461 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)18);

int64_t i920;

int64_t i919;

int64_t i918;

int64_t i917;

int64_t i916;

int64_t i915;

int64_t i914;

int64_t i913;
i913 =  (int64_t)0;
i914 =  (int64_t)0;
i915 =  (int64_t)0;
i916 =  (int64_t)0;
for (uint32_t i917 =  (int32_t)0; i917 <  (int32_t)1; i917++){
for (uint32_t i920 =  (int32_t)0; i920 <  (int32_t)18; i920++){
for (uint32_t i918 =  (int32_t)0; i918 <  (int32_t)1; i918++){
for (uint32_t i919 =  (int32_t)0; i919 <  (int32_t)1; i919++){
Arr4DIdxRowM(tmp461, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)18,i917,i918,i919,i920) = Arr4DIdxRowM(tmp459, (int32_t)1, (int32_t)18, (int32_t)1, (int32_t)1,i913,i914,i915,i916);
i916 = (i916 +  (int64_t)1);
if ((i916 ==  (int64_t)1)) {
i916 =  (int64_t)0;
i915 = (i915 +  (int64_t)1);
if ((i915 ==  (int64_t)1)) {
i915 =  (int64_t)0;
i914 = (i914 +  (int64_t)1);
if ((i914 ==  (int64_t)18)) {
i914 =  (int64_t)0;
i913 = (i913 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)18,  (int32_t)1,  (int32_t)1, tmp459);

uint64_t* tmp463 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)18);
Relu4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)18, tmp461, tmp463,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)18, tmp461);

uint64_t* tmp465 = make_array<uint64_t>( (int32_t)1,  (int32_t)18,  (int32_t)1,  (int32_t)1);

int64_t i928;

int64_t i927;

int64_t i926;

int64_t i925;

int64_t i924;

int64_t i923;

int64_t i922;

int64_t i921;
i921 =  (int64_t)0;
i922 =  (int64_t)0;
i923 =  (int64_t)0;
i924 =  (int64_t)0;
for (uint32_t i925 =  (int32_t)0; i925 <  (int32_t)1; i925++){
for (uint32_t i927 =  (int32_t)0; i927 <  (int32_t)1; i927++){
for (uint32_t i928 =  (int32_t)0; i928 <  (int32_t)1; i928++){
for (uint32_t i926 =  (int32_t)0; i926 <  (int32_t)18; i926++){
Arr4DIdxRowM(tmp465, (int32_t)1, (int32_t)18, (int32_t)1, (int32_t)1,i925,i926,i927,i928) = Arr4DIdxRowM(tmp463, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)18,i921,i922,i923,i924);
i924 = (i924 +  (int64_t)1);
if ((i924 ==  (int64_t)18)) {
i924 =  (int64_t)0;
i923 = (i923 +  (int64_t)1);
if ((i923 ==  (int64_t)1)) {
i923 =  (int64_t)0;
i922 = (i922 +  (int64_t)1);
if ((i922 ==  (int64_t)1)) {
i922 =  (int64_t)0;
i921 = (i921 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)18, tmp463);

uint64_t* tmp467 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)18);

int64_t i936;

int64_t i935;

int64_t i934;

int64_t i933;

int64_t i932;

int64_t i931;

int64_t i930;

int64_t i929;
i929 =  (int64_t)0;
i930 =  (int64_t)0;
i931 =  (int64_t)0;
i932 =  (int64_t)0;
for (uint32_t i933 =  (int32_t)0; i933 <  (int32_t)1; i933++){
for (uint32_t i936 =  (int32_t)0; i936 <  (int32_t)18; i936++){
for (uint32_t i934 =  (int32_t)0; i934 <  (int32_t)1; i934++){
for (uint32_t i935 =  (int32_t)0; i935 <  (int32_t)1; i935++){
Arr4DIdxRowM(tmp467, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)18,i933,i934,i935,i936) = Arr4DIdxRowM(tmp465, (int32_t)1, (int32_t)18, (int32_t)1, (int32_t)1,i929,i930,i931,i932);
i932 = (i932 +  (int64_t)1);
if ((i932 ==  (int64_t)1)) {
i932 =  (int64_t)0;
i931 = (i931 +  (int64_t)1);
if ((i931 ==  (int64_t)1)) {
i931 =  (int64_t)0;
i930 = (i930 +  (int64_t)1);
if ((i930 ==  (int64_t)18)) {
i930 =  (int64_t)0;
i929 = (i929 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)18,  (int32_t)1,  (int32_t)1, tmp465);

uint64_t* tmp469 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)18,  (int32_t)72);

int64_t i944;

int64_t i943;

int64_t i942;

int64_t i941;

int64_t i940;

int64_t i939;

int64_t i938;

int64_t i937;
i937 =  (int64_t)0;
i938 =  (int64_t)0;
i939 =  (int64_t)0;
i940 =  (int64_t)0;
for (uint32_t i944 =  (int32_t)0; i944 <  (int32_t)72; i944++){
for (uint32_t i943 =  (int32_t)0; i943 <  (int32_t)18; i943++){
for (uint32_t i941 =  (int32_t)0; i941 <  (int32_t)1; i941++){
for (uint32_t i942 =  (int32_t)0; i942 <  (int32_t)1; i942++){
Arr4DIdxRowM(tmp469, (int32_t)1, (int32_t)1, (int32_t)18, (int32_t)72,i941,i942,i943,i944) = Arr4DIdxRowM(tmp26, (int32_t)72, (int32_t)18, (int32_t)1, (int32_t)1,i937,i938,i939,i940);
i940 = (i940 +  (int64_t)1);
if ((i940 ==  (int64_t)1)) {
i940 =  (int64_t)0;
i939 = (i939 +  (int64_t)1);
if ((i939 ==  (int64_t)1)) {
i939 =  (int64_t)0;
i938 = (i938 +  (int64_t)1);
if ((i938 ==  (int64_t)18)) {
i938 =  (int64_t)0;
i937 = (i937 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)72,  (int32_t)18,  (int32_t)1,  (int32_t)1, tmp26);

uint64_t* tmp471 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)72);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)18,  (int32_t)1,  (int32_t)1,  (int32_t)72,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp467, tmp469, tmp471);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)18,  (int32_t)72, tmp469);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)18, tmp467);

uint64_t* tmp474 = make_array<uint64_t>( (int32_t)1,  (int32_t)72,  (int32_t)1,  (int32_t)1);

int64_t i952;

int64_t i951;

int64_t i950;

int64_t i949;

int64_t i948;

int64_t i947;

int64_t i946;

int64_t i945;
i945 =  (int64_t)0;
i946 =  (int64_t)0;
i947 =  (int64_t)0;
i948 =  (int64_t)0;
for (uint32_t i949 =  (int32_t)0; i949 <  (int32_t)1; i949++){
for (uint32_t i951 =  (int32_t)0; i951 <  (int32_t)1; i951++){
for (uint32_t i952 =  (int32_t)0; i952 <  (int32_t)1; i952++){
for (uint32_t i950 =  (int32_t)0; i950 <  (int32_t)72; i950++){
Arr4DIdxRowM(tmp474, (int32_t)1, (int32_t)72, (int32_t)1, (int32_t)1,i949,i950,i951,i952) = Arr4DIdxRowM(tmp471, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)72,i945,i946,i947,i948);
i948 = (i948 +  (int64_t)1);
if ((i948 ==  (int64_t)72)) {
i948 =  (int64_t)0;
i947 = (i947 +  (int64_t)1);
if ((i947 ==  (int64_t)1)) {
i947 =  (int64_t)0;
i946 = (i946 +  (int64_t)1);
if ((i946 ==  (int64_t)1)) {
i946 =  (int64_t)0;
i945 = (i945 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)72, tmp471);

uint64_t* tmp476 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)72);

int64_t i960;

int64_t i959;

int64_t i958;

int64_t i957;

int64_t i956;

int64_t i955;

int64_t i954;

int64_t i953;
i953 =  (int64_t)0;
i954 =  (int64_t)0;
i955 =  (int64_t)0;
i956 =  (int64_t)0;
for (uint32_t i957 =  (int32_t)0; i957 <  (int32_t)1; i957++){
for (uint32_t i960 =  (int32_t)0; i960 <  (int32_t)72; i960++){
for (uint32_t i958 =  (int32_t)0; i958 <  (int32_t)1; i958++){
for (uint32_t i959 =  (int32_t)0; i959 <  (int32_t)1; i959++){
Arr4DIdxRowM(tmp476, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)72,i957,i958,i959,i960) = Arr4DIdxRowM(tmp474, (int32_t)1, (int32_t)72, (int32_t)1, (int32_t)1,i953,i954,i955,i956);
i956 = (i956 +  (int64_t)1);
if ((i956 ==  (int64_t)1)) {
i956 =  (int64_t)0;
i955 = (i955 +  (int64_t)1);
if ((i955 ==  (int64_t)1)) {
i955 =  (int64_t)0;
i954 = (i954 +  (int64_t)1);
if ((i954 ==  (int64_t)72)) {
i954 =  (int64_t)0;
i953 = (i953 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)72,  (int32_t)1,  (int32_t)1, tmp474);

uint64_t* tmp478 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)72);
HardSigmoid4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)72, tmp476, tmp478,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)72, tmp476);

uint64_t* tmp480 = make_array<uint64_t>( (int32_t)1,  (int32_t)72,  (int32_t)1,  (int32_t)1);

int64_t i968;

int64_t i967;

int64_t i966;

int64_t i965;

int64_t i964;

int64_t i963;

int64_t i962;

int64_t i961;
i961 =  (int64_t)0;
i962 =  (int64_t)0;
i963 =  (int64_t)0;
i964 =  (int64_t)0;
for (uint32_t i965 =  (int32_t)0; i965 <  (int32_t)1; i965++){
for (uint32_t i967 =  (int32_t)0; i967 <  (int32_t)1; i967++){
for (uint32_t i968 =  (int32_t)0; i968 <  (int32_t)1; i968++){
for (uint32_t i966 =  (int32_t)0; i966 <  (int32_t)72; i966++){
Arr4DIdxRowM(tmp480, (int32_t)1, (int32_t)72, (int32_t)1, (int32_t)1,i965,i966,i967,i968) = Arr4DIdxRowM(tmp478, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)72,i961,i962,i963,i964);
i964 = (i964 +  (int64_t)1);
if ((i964 ==  (int64_t)72)) {
i964 =  (int64_t)0;
i963 = (i963 +  (int64_t)1);
if ((i963 ==  (int64_t)1)) {
i963 =  (int64_t)0;
i962 = (i962 +  (int64_t)1);
if ((i962 ==  (int64_t)1)) {
i962 =  (int64_t)0;
i961 = (i961 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)72, tmp478);

uint64_t* tmp482 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)72);

int64_t i976;

int64_t i975;

int64_t i974;

int64_t i973;

int64_t i972;

int64_t i971;

int64_t i970;

int64_t i969;
i969 =  (int64_t)0;
i970 =  (int64_t)0;
i971 =  (int64_t)0;
i972 =  (int64_t)0;
for (uint32_t i973 =  (int32_t)0; i973 <  (int32_t)1; i973++){
for (uint32_t i976 =  (int32_t)0; i976 <  (int32_t)72; i976++){
for (uint32_t i974 =  (int32_t)0; i974 <  (int32_t)28; i974++){
for (uint32_t i975 =  (int32_t)0; i975 <  (int32_t)28; i975++){
Arr4DIdxRowM(tmp482, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)72,i973,i974,i975,i976) = Arr4DIdxRowM(tmp437, (int32_t)1, (int32_t)72, (int32_t)28, (int32_t)28,i969,i970,i971,i972);
i972 = (i972 +  (int64_t)1);
if ((i972 ==  (int64_t)28)) {
i972 =  (int64_t)0;
i971 = (i971 +  (int64_t)1);
if ((i971 ==  (int64_t)28)) {
i971 =  (int64_t)0;
i970 = (i970 +  (int64_t)1);
if ((i970 ==  (int64_t)72)) {
i970 =  (int64_t)0;
i969 = (i969 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)72,  (int32_t)28,  (int32_t)28, tmp437);

uint64_t* tmp484 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)72);

int64_t i984;

int64_t i983;

int64_t i982;

int64_t i981;

int64_t i980;

int64_t i979;

int64_t i978;

int64_t i977;
i977 =  (int64_t)0;
i978 =  (int64_t)0;
i979 =  (int64_t)0;
i980 =  (int64_t)0;
for (uint32_t i981 =  (int32_t)0; i981 <  (int32_t)1; i981++){
for (uint32_t i984 =  (int32_t)0; i984 <  (int32_t)72; i984++){
for (uint32_t i982 =  (int32_t)0; i982 <  (int32_t)1; i982++){
for (uint32_t i983 =  (int32_t)0; i983 <  (int32_t)1; i983++){
Arr4DIdxRowM(tmp484, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)72,i981,i982,i983,i984) = Arr4DIdxRowM(tmp480, (int32_t)1, (int32_t)72, (int32_t)1, (int32_t)1,i977,i978,i979,i980);
i980 = (i980 +  (int64_t)1);
if ((i980 ==  (int64_t)1)) {
i980 =  (int64_t)0;
i979 = (i979 +  (int64_t)1);
if ((i979 ==  (int64_t)1)) {
i979 =  (int64_t)0;
i978 = (i978 +  (int64_t)1);
if ((i978 ==  (int64_t)72)) {
i978 =  (int64_t)0;
i977 = (i977 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)72,  (int32_t)1,  (int32_t)1, tmp480);

uint64_t* tmp486 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)72);

uint64_t* tmp487 = make_array<uint64_t>( (int32_t)56448);

uint64_t* tmp488 = make_array<uint64_t>( (int32_t)56448);

uint64_t* tmp489 = make_array<uint64_t>( (int32_t)56448);

int32_t tmp490;
for (uint32_t i985 =  (int32_t)0; i985 <  (int32_t)1; i985++){
for (uint32_t i986 =  (int32_t)0; i986 <  (int32_t)28; i986++){
for (uint32_t i987 =  (int32_t)0; i987 <  (int32_t)28; i987++){
for (uint32_t i988 =  (int32_t)0; i988 <  (int32_t)72; i988++){
tmp490 = (((( (int32_t)0 + (i985 *  (int32_t)56448)) + (i986 *  (int32_t)2016)) + (i987 *  (int32_t)72)) + (i988 *  (int32_t)1));
Arr1DIdxRowM(tmp487, (int32_t)56448,tmp490) = Arr4DIdxRowM(tmp482, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)72,i985,i986,i987,i988);
Arr1DIdxRowM(tmp488, (int32_t)56448,tmp490) = Arr4DIdxRowM(tmp484, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)72,i985, (int32_t)0, (int32_t)0,i988);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)56448, tmp487, tmp488, tmp489);
ClearMemSecret1( (int32_t)56448, tmp487);
ClearMemSecret1( (int32_t)56448, tmp488);
for (uint32_t i985 =  (int32_t)0; i985 <  (int32_t)1; i985++){
for (uint32_t i986 =  (int32_t)0; i986 <  (int32_t)28; i986++){
for (uint32_t i987 =  (int32_t)0; i987 <  (int32_t)28; i987++){
for (uint32_t i988 =  (int32_t)0; i988 <  (int32_t)72; i988++){
tmp490 = (((( (int32_t)0 + (i985 *  (int32_t)56448)) + (i986 *  (int32_t)2016)) + (i987 *  (int32_t)72)) + (i988 *  (int32_t)1));
Arr4DIdxRowM(tmp486, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)72,i985,i986,i987,i988) = Arr1DIdxRowM(tmp489, (int32_t)56448,tmp490);
}
}
}
}
ClearMemSecret1( (int32_t)56448, tmp489);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)72, tmp482);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)72, tmp484);

uint64_t* tmp493 = make_array<uint64_t>( (int32_t)1,  (int32_t)72,  (int32_t)28,  (int32_t)28);

int64_t i996;

int64_t i995;

int64_t i994;

int64_t i993;

int64_t i992;

int64_t i991;

int64_t i990;

int64_t i989;
i989 =  (int64_t)0;
i990 =  (int64_t)0;
i991 =  (int64_t)0;
i992 =  (int64_t)0;
for (uint32_t i993 =  (int32_t)0; i993 <  (int32_t)1; i993++){
for (uint32_t i995 =  (int32_t)0; i995 <  (int32_t)28; i995++){
for (uint32_t i996 =  (int32_t)0; i996 <  (int32_t)28; i996++){
for (uint32_t i994 =  (int32_t)0; i994 <  (int32_t)72; i994++){
Arr4DIdxRowM(tmp493, (int32_t)1, (int32_t)72, (int32_t)28, (int32_t)28,i993,i994,i995,i996) = Arr4DIdxRowM(tmp486, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)72,i989,i990,i991,i992);
i992 = (i992 +  (int64_t)1);
if ((i992 ==  (int64_t)72)) {
i992 =  (int64_t)0;
i991 = (i991 +  (int64_t)1);
if ((i991 ==  (int64_t)28)) {
i991 =  (int64_t)0;
i990 = (i990 +  (int64_t)1);
if ((i990 ==  (int64_t)28)) {
i990 =  (int64_t)0;
i989 = (i989 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)72, tmp486);

uint64_t* tmp495 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)72);

int64_t i1004;

int64_t i1003;

int64_t i1002;

int64_t i1001;

int64_t i1000;

int64_t i999;

int64_t i998;

int64_t i997;
i997 =  (int64_t)0;
i998 =  (int64_t)0;
i999 =  (int64_t)0;
i1000 =  (int64_t)0;
for (uint32_t i1001 =  (int32_t)0; i1001 <  (int32_t)1; i1001++){
for (uint32_t i1004 =  (int32_t)0; i1004 <  (int32_t)72; i1004++){
for (uint32_t i1002 =  (int32_t)0; i1002 <  (int32_t)28; i1002++){
for (uint32_t i1003 =  (int32_t)0; i1003 <  (int32_t)28; i1003++){
Arr4DIdxRowM(tmp495, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)72,i1001,i1002,i1003,i1004) = Arr4DIdxRowM(tmp493, (int32_t)1, (int32_t)72, (int32_t)28, (int32_t)28,i997,i998,i999,i1000);
i1000 = (i1000 +  (int64_t)1);
if ((i1000 ==  (int64_t)28)) {
i1000 =  (int64_t)0;
i999 = (i999 +  (int64_t)1);
if ((i999 ==  (int64_t)28)) {
i999 =  (int64_t)0;
i998 = (i998 +  (int64_t)1);
if ((i998 ==  (int64_t)72)) {
i998 =  (int64_t)0;
i997 = (i997 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)72,  (int32_t)28,  (int32_t)28, tmp493);

uint64_t* tmp497 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)72,  (int32_t)40);

int64_t i1012;

int64_t i1011;

int64_t i1010;

int64_t i1009;

int64_t i1008;

int64_t i1007;

int64_t i1006;

int64_t i1005;
i1005 =  (int64_t)0;
i1006 =  (int64_t)0;
i1007 =  (int64_t)0;
i1008 =  (int64_t)0;
for (uint32_t i1012 =  (int32_t)0; i1012 <  (int32_t)40; i1012++){
for (uint32_t i1011 =  (int32_t)0; i1011 <  (int32_t)72; i1011++){
for (uint32_t i1009 =  (int32_t)0; i1009 <  (int32_t)1; i1009++){
for (uint32_t i1010 =  (int32_t)0; i1010 <  (int32_t)1; i1010++){
Arr4DIdxRowM(tmp497, (int32_t)1, (int32_t)1, (int32_t)72, (int32_t)40,i1009,i1010,i1011,i1012) = Arr4DIdxRowM(tmp27, (int32_t)40, (int32_t)72, (int32_t)1, (int32_t)1,i1005,i1006,i1007,i1008);
i1008 = (i1008 +  (int64_t)1);
if ((i1008 ==  (int64_t)1)) {
i1008 =  (int64_t)0;
i1007 = (i1007 +  (int64_t)1);
if ((i1007 ==  (int64_t)1)) {
i1007 =  (int64_t)0;
i1006 = (i1006 +  (int64_t)1);
if ((i1006 ==  (int64_t)72)) {
i1006 =  (int64_t)0;
i1005 = (i1005 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)40,  (int32_t)72,  (int32_t)1,  (int32_t)1, tmp27);

uint64_t* tmp499 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40);
ScaleDown4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)72, tmp495,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)72,  (int32_t)1,  (int32_t)1,  (int32_t)40,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp495, tmp497, tmp499);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)72,  (int32_t)40, tmp497);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)72, tmp495);

uint64_t* tmp502 = make_array<uint64_t>( (int32_t)1,  (int32_t)40,  (int32_t)28,  (int32_t)28);

int64_t i1020;

int64_t i1019;

int64_t i1018;

int64_t i1017;

int64_t i1016;

int64_t i1015;

int64_t i1014;

int64_t i1013;
i1013 =  (int64_t)0;
i1014 =  (int64_t)0;
i1015 =  (int64_t)0;
i1016 =  (int64_t)0;
for (uint32_t i1017 =  (int32_t)0; i1017 <  (int32_t)1; i1017++){
for (uint32_t i1019 =  (int32_t)0; i1019 <  (int32_t)28; i1019++){
for (uint32_t i1020 =  (int32_t)0; i1020 <  (int32_t)28; i1020++){
for (uint32_t i1018 =  (int32_t)0; i1018 <  (int32_t)40; i1018++){
Arr4DIdxRowM(tmp502, (int32_t)1, (int32_t)40, (int32_t)28, (int32_t)28,i1017,i1018,i1019,i1020) = Arr4DIdxRowM(tmp499, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i1013,i1014,i1015,i1016);
i1016 = (i1016 +  (int64_t)1);
if ((i1016 ==  (int64_t)40)) {
i1016 =  (int64_t)0;
i1015 = (i1015 +  (int64_t)1);
if ((i1015 ==  (int64_t)28)) {
i1015 =  (int64_t)0;
i1014 = (i1014 +  (int64_t)1);
if ((i1014 ==  (int64_t)28)) {
i1014 =  (int64_t)0;
i1013 = (i1013 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp499);

uint64_t* tmp504 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40);

int64_t i1028;

int64_t i1027;

int64_t i1026;

int64_t i1025;

int64_t i1024;

int64_t i1023;

int64_t i1022;

int64_t i1021;
i1021 =  (int64_t)0;
i1022 =  (int64_t)0;
i1023 =  (int64_t)0;
i1024 =  (int64_t)0;
for (uint32_t i1025 =  (int32_t)0; i1025 <  (int32_t)1; i1025++){
for (uint32_t i1028 =  (int32_t)0; i1028 <  (int32_t)40; i1028++){
for (uint32_t i1026 =  (int32_t)0; i1026 <  (int32_t)28; i1026++){
for (uint32_t i1027 =  (int32_t)0; i1027 <  (int32_t)28; i1027++){
Arr4DIdxRowM(tmp504, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i1025,i1026,i1027,i1028) = Arr4DIdxRowM(tmp502, (int32_t)1, (int32_t)40, (int32_t)28, (int32_t)28,i1021,i1022,i1023,i1024);
i1024 = (i1024 +  (int64_t)1);
if ((i1024 ==  (int64_t)28)) {
i1024 =  (int64_t)0;
i1023 = (i1023 +  (int64_t)1);
if ((i1023 ==  (int64_t)28)) {
i1023 =  (int64_t)0;
i1022 = (i1022 +  (int64_t)1);
if ((i1022 ==  (int64_t)40)) {
i1022 =  (int64_t)0;
i1021 = (i1021 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)40,  (int32_t)28,  (int32_t)28, tmp502);

uint64_t* tmp506 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40);
ScaleDown4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp504,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp504, tmp28, tmp29,  (int32_t)0,  (int32_t)23, tmp506);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp504);

uint64_t* tmp508 = make_array<uint64_t>( (int32_t)1,  (int32_t)40,  (int32_t)28,  (int32_t)28);

int64_t i1036;

int64_t i1035;

int64_t i1034;

int64_t i1033;

int64_t i1032;

int64_t i1031;

int64_t i1030;

int64_t i1029;
i1029 =  (int64_t)0;
i1030 =  (int64_t)0;
i1031 =  (int64_t)0;
i1032 =  (int64_t)0;
for (uint32_t i1033 =  (int32_t)0; i1033 <  (int32_t)1; i1033++){
for (uint32_t i1035 =  (int32_t)0; i1035 <  (int32_t)28; i1035++){
for (uint32_t i1036 =  (int32_t)0; i1036 <  (int32_t)28; i1036++){
for (uint32_t i1034 =  (int32_t)0; i1034 <  (int32_t)40; i1034++){
Arr4DIdxRowM(tmp508, (int32_t)1, (int32_t)40, (int32_t)28, (int32_t)28,i1033,i1034,i1035,i1036) = Arr4DIdxRowM(tmp506, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i1029,i1030,i1031,i1032);
i1032 = (i1032 +  (int64_t)1);
if ((i1032 ==  (int64_t)40)) {
i1032 =  (int64_t)0;
i1031 = (i1031 +  (int64_t)1);
if ((i1031 ==  (int64_t)28)) {
i1031 =  (int64_t)0;
i1030 = (i1030 +  (int64_t)1);
if ((i1030 ==  (int64_t)28)) {
i1030 =  (int64_t)0;
i1029 = (i1029 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp506);

uint64_t* tmp510 = make_array<uint64_t>( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24);

int64_t i1044;

int64_t i1043;

int64_t i1042;

int64_t i1041;

int64_t i1040;

int64_t i1039;

int64_t i1038;

int64_t i1037;
i1037 =  (int64_t)0;
i1038 =  (int64_t)0;
i1039 =  (int64_t)0;
i1040 =  (int64_t)0;
for (uint32_t i1041 =  (int32_t)0; i1041 <  (int32_t)1; i1041++){
for (uint32_t i1044 =  (int32_t)0; i1044 <  (int32_t)24; i1044++){
for (uint32_t i1042 =  (int32_t)0; i1042 <  (int32_t)56; i1042++){
for (uint32_t i1043 =  (int32_t)0; i1043 <  (int32_t)56; i1043++){
Arr4DIdxRowM(tmp510, (int32_t)1, (int32_t)56, (int32_t)56, (int32_t)24,i1041,i1042,i1043,i1044) = Arr4DIdxRowM(tmp394, (int32_t)1, (int32_t)24, (int32_t)56, (int32_t)56,i1037,i1038,i1039,i1040);
i1040 = (i1040 +  (int64_t)1);
if ((i1040 ==  (int64_t)56)) {
i1040 =  (int64_t)0;
i1039 = (i1039 +  (int64_t)1);
if ((i1039 ==  (int64_t)56)) {
i1039 =  (int64_t)0;
i1038 = (i1038 +  (int64_t)1);
if ((i1038 ==  (int64_t)24)) {
i1038 =  (int64_t)0;
i1037 = (i1037 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)24,  (int32_t)56,  (int32_t)56, tmp394);

uint64_t* tmp512 = make_array<uint64_t>( (int32_t)3,  (int32_t)3,  (int32_t)1,  (int32_t)24);

int64_t i1052;

int64_t i1051;

int64_t i1050;

int64_t i1049;

int64_t i1048;

int64_t i1047;

int64_t i1046;

int64_t i1045;
i1045 =  (int64_t)0;
i1046 =  (int64_t)0;
i1047 =  (int64_t)0;
i1048 =  (int64_t)0;
for (uint32_t i1052 =  (int32_t)0; i1052 <  (int32_t)24; i1052++){
for (uint32_t i1051 =  (int32_t)0; i1051 <  (int32_t)1; i1051++){
for (uint32_t i1049 =  (int32_t)0; i1049 <  (int32_t)3; i1049++){
for (uint32_t i1050 =  (int32_t)0; i1050 <  (int32_t)3; i1050++){
Arr4DIdxRowM(tmp512, (int32_t)3, (int32_t)3, (int32_t)1, (int32_t)24,i1049,i1050,i1051,i1052) = Arr4DIdxRowM(tmp30, (int32_t)24, (int32_t)1, (int32_t)3, (int32_t)3,i1045,i1046,i1047,i1048);
i1048 = (i1048 +  (int64_t)1);
if ((i1048 ==  (int64_t)3)) {
i1048 =  (int64_t)0;
i1047 = (i1047 +  (int64_t)1);
if ((i1047 ==  (int64_t)3)) {
i1047 =  (int64_t)0;
i1046 = (i1046 +  (int64_t)1);
if ((i1046 ==  (int64_t)1)) {
i1046 =  (int64_t)0;
i1045 = (i1045 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)24,  (int32_t)1,  (int32_t)3,  (int32_t)3, tmp30);

uint64_t* tmp514 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)24);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24,  (int32_t)3,  (int32_t)3,  (int32_t)24,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)2,  (int32_t)2,  (int32_t)24, tmp510, tmp512, tmp514);
ClearMemSecret4( (int32_t)1,  (int32_t)56,  (int32_t)56,  (int32_t)24, tmp510);
ClearMemSecret4( (int32_t)3,  (int32_t)3,  (int32_t)1,  (int32_t)24, tmp512);

uint64_t* tmp517 = make_array<uint64_t>( (int32_t)1,  (int32_t)24,  (int32_t)28,  (int32_t)28);

int64_t i1060;

int64_t i1059;

int64_t i1058;

int64_t i1057;

int64_t i1056;

int64_t i1055;

int64_t i1054;

int64_t i1053;
i1053 =  (int64_t)0;
i1054 =  (int64_t)0;
i1055 =  (int64_t)0;
i1056 =  (int64_t)0;
for (uint32_t i1057 =  (int32_t)0; i1057 <  (int32_t)1; i1057++){
for (uint32_t i1059 =  (int32_t)0; i1059 <  (int32_t)28; i1059++){
for (uint32_t i1060 =  (int32_t)0; i1060 <  (int32_t)28; i1060++){
for (uint32_t i1058 =  (int32_t)0; i1058 <  (int32_t)24; i1058++){
Arr4DIdxRowM(tmp517, (int32_t)1, (int32_t)24, (int32_t)28, (int32_t)28,i1057,i1058,i1059,i1060) = Arr4DIdxRowM(tmp514, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)24,i1053,i1054,i1055,i1056);
i1056 = (i1056 +  (int64_t)1);
if ((i1056 ==  (int64_t)24)) {
i1056 =  (int64_t)0;
i1055 = (i1055 +  (int64_t)1);
if ((i1055 ==  (int64_t)28)) {
i1055 =  (int64_t)0;
i1054 = (i1054 +  (int64_t)1);
if ((i1054 ==  (int64_t)28)) {
i1054 =  (int64_t)0;
i1053 = (i1053 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)24, tmp514);

uint64_t* tmp519 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)24);

int64_t i1068;

int64_t i1067;

int64_t i1066;

int64_t i1065;

int64_t i1064;

int64_t i1063;

int64_t i1062;

int64_t i1061;
i1061 =  (int64_t)0;
i1062 =  (int64_t)0;
i1063 =  (int64_t)0;
i1064 =  (int64_t)0;
for (uint32_t i1065 =  (int32_t)0; i1065 <  (int32_t)1; i1065++){
for (uint32_t i1068 =  (int32_t)0; i1068 <  (int32_t)24; i1068++){
for (uint32_t i1066 =  (int32_t)0; i1066 <  (int32_t)28; i1066++){
for (uint32_t i1067 =  (int32_t)0; i1067 <  (int32_t)28; i1067++){
Arr4DIdxRowM(tmp519, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)24,i1065,i1066,i1067,i1068) = Arr4DIdxRowM(tmp517, (int32_t)1, (int32_t)24, (int32_t)28, (int32_t)28,i1061,i1062,i1063,i1064);
i1064 = (i1064 +  (int64_t)1);
if ((i1064 ==  (int64_t)28)) {
i1064 =  (int64_t)0;
i1063 = (i1063 +  (int64_t)1);
if ((i1063 ==  (int64_t)28)) {
i1063 =  (int64_t)0;
i1062 = (i1062 +  (int64_t)1);
if ((i1062 ==  (int64_t)24)) {
i1062 =  (int64_t)0;
i1061 = (i1061 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)24,  (int32_t)28,  (int32_t)28, tmp517);

uint64_t* tmp521 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)24);
ScaleDown4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)24, tmp519,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)24, tmp519, tmp12, tmp13,  (int32_t)0,  (int32_t)0, tmp521);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)24, tmp519);
ClearMemSecret1( (int32_t)24, tmp12);
ClearMemSecret1( (int32_t)24, tmp13);

uint64_t* tmp525 = make_array<uint64_t>( (int32_t)1,  (int32_t)24,  (int32_t)28,  (int32_t)28);

int64_t i1076;

int64_t i1075;

int64_t i1074;

int64_t i1073;

int64_t i1072;

int64_t i1071;

int64_t i1070;

int64_t i1069;
i1069 =  (int64_t)0;
i1070 =  (int64_t)0;
i1071 =  (int64_t)0;
i1072 =  (int64_t)0;
for (uint32_t i1073 =  (int32_t)0; i1073 <  (int32_t)1; i1073++){
for (uint32_t i1075 =  (int32_t)0; i1075 <  (int32_t)28; i1075++){
for (uint32_t i1076 =  (int32_t)0; i1076 <  (int32_t)28; i1076++){
for (uint32_t i1074 =  (int32_t)0; i1074 <  (int32_t)24; i1074++){
Arr4DIdxRowM(tmp525, (int32_t)1, (int32_t)24, (int32_t)28, (int32_t)28,i1073,i1074,i1075,i1076) = Arr4DIdxRowM(tmp521, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)24,i1069,i1070,i1071,i1072);
i1072 = (i1072 +  (int64_t)1);
if ((i1072 ==  (int64_t)24)) {
i1072 =  (int64_t)0;
i1071 = (i1071 +  (int64_t)1);
if ((i1071 ==  (int64_t)28)) {
i1071 =  (int64_t)0;
i1070 = (i1070 +  (int64_t)1);
if ((i1070 ==  (int64_t)28)) {
i1070 =  (int64_t)0;
i1069 = (i1069 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)24, tmp521);

uint64_t* tmp527 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)24);

int64_t i1084;

int64_t i1083;

int64_t i1082;

int64_t i1081;

int64_t i1080;

int64_t i1079;

int64_t i1078;

int64_t i1077;
i1077 =  (int64_t)0;
i1078 =  (int64_t)0;
i1079 =  (int64_t)0;
i1080 =  (int64_t)0;
for (uint32_t i1081 =  (int32_t)0; i1081 <  (int32_t)1; i1081++){
for (uint32_t i1084 =  (int32_t)0; i1084 <  (int32_t)24; i1084++){
for (uint32_t i1082 =  (int32_t)0; i1082 <  (int32_t)28; i1082++){
for (uint32_t i1083 =  (int32_t)0; i1083 <  (int32_t)28; i1083++){
Arr4DIdxRowM(tmp527, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)24,i1081,i1082,i1083,i1084) = Arr4DIdxRowM(tmp525, (int32_t)1, (int32_t)24, (int32_t)28, (int32_t)28,i1077,i1078,i1079,i1080);
i1080 = (i1080 +  (int64_t)1);
if ((i1080 ==  (int64_t)28)) {
i1080 =  (int64_t)0;
i1079 = (i1079 +  (int64_t)1);
if ((i1079 ==  (int64_t)28)) {
i1079 =  (int64_t)0;
i1078 = (i1078 +  (int64_t)1);
if ((i1078 ==  (int64_t)24)) {
i1078 =  (int64_t)0;
i1077 = (i1077 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)24,  (int32_t)28,  (int32_t)28, tmp525);

uint64_t* tmp529 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)24,  (int32_t)40);

int64_t i1092;

int64_t i1091;

int64_t i1090;

int64_t i1089;

int64_t i1088;

int64_t i1087;

int64_t i1086;

int64_t i1085;
i1085 =  (int64_t)0;
i1086 =  (int64_t)0;
i1087 =  (int64_t)0;
i1088 =  (int64_t)0;
for (uint32_t i1092 =  (int32_t)0; i1092 <  (int32_t)40; i1092++){
for (uint32_t i1091 =  (int32_t)0; i1091 <  (int32_t)24; i1091++){
for (uint32_t i1089 =  (int32_t)0; i1089 <  (int32_t)1; i1089++){
for (uint32_t i1090 =  (int32_t)0; i1090 <  (int32_t)1; i1090++){
Arr4DIdxRowM(tmp529, (int32_t)1, (int32_t)1, (int32_t)24, (int32_t)40,i1089,i1090,i1091,i1092) = Arr4DIdxRowM(tmp31, (int32_t)40, (int32_t)24, (int32_t)1, (int32_t)1,i1085,i1086,i1087,i1088);
i1088 = (i1088 +  (int64_t)1);
if ((i1088 ==  (int64_t)1)) {
i1088 =  (int64_t)0;
i1087 = (i1087 +  (int64_t)1);
if ((i1087 ==  (int64_t)1)) {
i1087 =  (int64_t)0;
i1086 = (i1086 +  (int64_t)1);
if ((i1086 ==  (int64_t)24)) {
i1086 =  (int64_t)0;
i1085 = (i1085 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)40,  (int32_t)24,  (int32_t)1,  (int32_t)1, tmp31);

uint64_t* tmp531 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40);
ScaleDown4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)24, tmp527,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)24,  (int32_t)1,  (int32_t)1,  (int32_t)40,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp527, tmp529, tmp531);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)24,  (int32_t)40, tmp529);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)24, tmp527);

uint64_t* tmp534 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)40);

int64_t i1097;

int64_t i1096;

int64_t i1095;

int64_t i1094;

int64_t i1093;
i1093 =  (int64_t)0;
for (uint32_t i1094 =  (int32_t)0; i1094 <  (int32_t)1; i1094++){
for (uint32_t i1095 =  (int32_t)0; i1095 <  (int32_t)1; i1095++){
for (uint32_t i1096 =  (int32_t)0; i1096 <  (int32_t)1; i1096++){
for (uint32_t i1097 =  (int32_t)0; i1097 <  (int32_t)40; i1097++){
Arr4DIdxRowM(tmp534, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)40,i1094,i1095,i1096,i1097) = Arr1DIdxRowM(tmp29, (int32_t)40,i1093);
i1093 = (i1093 +  (int64_t)1);
}
}
}
}

uint64_t* tmp535 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40);
for (uint32_t i0 =  (int32_t)0; i0 <  (int32_t)1; i0++){
for (uint32_t i1 =  (int32_t)0; i1 <  (int32_t)28; i1++){
for (uint32_t i2 =  (int32_t)0; i2 <  (int32_t)28; i2++){
for (uint32_t i3 =  (int32_t)0; i3 <  (int32_t)40; i3++){
Arr4DIdxRowM(tmp535, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i0,i1,i2,i3) = SecretAdd(Arr4DIdxRowM(tmp531, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i0,i1,i2,i3), Arr4DIdxRowM(tmp534, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)40,i0, (int32_t)0, (int32_t)0,i3));
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp531);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)40, tmp534);

uint64_t* tmp538 = make_array<uint64_t>( (int32_t)1,  (int32_t)40,  (int32_t)28,  (int32_t)28);

int64_t i1105;

int64_t i1104;

int64_t i1103;

int64_t i1102;

int64_t i1101;

int64_t i1100;

int64_t i1099;

int64_t i1098;
i1098 =  (int64_t)0;
i1099 =  (int64_t)0;
i1100 =  (int64_t)0;
i1101 =  (int64_t)0;
for (uint32_t i1102 =  (int32_t)0; i1102 <  (int32_t)1; i1102++){
for (uint32_t i1104 =  (int32_t)0; i1104 <  (int32_t)28; i1104++){
for (uint32_t i1105 =  (int32_t)0; i1105 <  (int32_t)28; i1105++){
for (uint32_t i1103 =  (int32_t)0; i1103 <  (int32_t)40; i1103++){
Arr4DIdxRowM(tmp538, (int32_t)1, (int32_t)40, (int32_t)28, (int32_t)28,i1102,i1103,i1104,i1105) = Arr4DIdxRowM(tmp535, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i1098,i1099,i1100,i1101);
i1101 = (i1101 +  (int64_t)1);
if ((i1101 ==  (int64_t)40)) {
i1101 =  (int64_t)0;
i1100 = (i1100 +  (int64_t)1);
if ((i1100 ==  (int64_t)28)) {
i1100 =  (int64_t)0;
i1099 = (i1099 +  (int64_t)1);
if ((i1099 ==  (int64_t)28)) {
i1099 =  (int64_t)0;
i1098 = (i1098 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp535);

uint64_t* tmp540 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40);

int64_t i1113;

int64_t i1112;

int64_t i1111;

int64_t i1110;

int64_t i1109;

int64_t i1108;

int64_t i1107;

int64_t i1106;
i1106 =  (int64_t)0;
i1107 =  (int64_t)0;
i1108 =  (int64_t)0;
i1109 =  (int64_t)0;
for (uint32_t i1110 =  (int32_t)0; i1110 <  (int32_t)1; i1110++){
for (uint32_t i1113 =  (int32_t)0; i1113 <  (int32_t)40; i1113++){
for (uint32_t i1111 =  (int32_t)0; i1111 <  (int32_t)28; i1111++){
for (uint32_t i1112 =  (int32_t)0; i1112 <  (int32_t)28; i1112++){
Arr4DIdxRowM(tmp540, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i1110,i1111,i1112,i1113) = Arr4DIdxRowM(tmp538, (int32_t)1, (int32_t)40, (int32_t)28, (int32_t)28,i1106,i1107,i1108,i1109);
i1109 = (i1109 +  (int64_t)1);
if ((i1109 ==  (int64_t)28)) {
i1109 =  (int64_t)0;
i1108 = (i1108 +  (int64_t)1);
if ((i1108 ==  (int64_t)28)) {
i1108 =  (int64_t)0;
i1107 = (i1107 +  (int64_t)1);
if ((i1107 ==  (int64_t)40)) {
i1107 =  (int64_t)0;
i1106 = (i1106 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)40,  (int32_t)28,  (int32_t)28, tmp538);

uint64_t* tmp542 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40);
ScaleDown4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp540,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp540, tmp28, tmp29,  (int32_t)0,  (int32_t)0, tmp542);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp540);

uint64_t* tmp544 = make_array<uint64_t>( (int32_t)1,  (int32_t)40,  (int32_t)28,  (int32_t)28);

int64_t i1121;

int64_t i1120;

int64_t i1119;

int64_t i1118;

int64_t i1117;

int64_t i1116;

int64_t i1115;

int64_t i1114;
i1114 =  (int64_t)0;
i1115 =  (int64_t)0;
i1116 =  (int64_t)0;
i1117 =  (int64_t)0;
for (uint32_t i1118 =  (int32_t)0; i1118 <  (int32_t)1; i1118++){
for (uint32_t i1120 =  (int32_t)0; i1120 <  (int32_t)28; i1120++){
for (uint32_t i1121 =  (int32_t)0; i1121 <  (int32_t)28; i1121++){
for (uint32_t i1119 =  (int32_t)0; i1119 <  (int32_t)40; i1119++){
Arr4DIdxRowM(tmp544, (int32_t)1, (int32_t)40, (int32_t)28, (int32_t)28,i1118,i1119,i1120,i1121) = Arr4DIdxRowM(tmp542, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i1114,i1115,i1116,i1117);
i1117 = (i1117 +  (int64_t)1);
if ((i1117 ==  (int64_t)40)) {
i1117 =  (int64_t)0;
i1116 = (i1116 +  (int64_t)1);
if ((i1116 ==  (int64_t)28)) {
i1116 =  (int64_t)0;
i1115 = (i1115 +  (int64_t)1);
if ((i1115 ==  (int64_t)28)) {
i1115 =  (int64_t)0;
i1114 = (i1114 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp542);

uint64_t* tmp546 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40);

int64_t i1129;

int64_t i1128;

int64_t i1127;

int64_t i1126;

int64_t i1125;

int64_t i1124;

int64_t i1123;

int64_t i1122;
i1122 =  (int64_t)0;
i1123 =  (int64_t)0;
i1124 =  (int64_t)0;
i1125 =  (int64_t)0;
for (uint32_t i1126 =  (int32_t)0; i1126 <  (int32_t)1; i1126++){
for (uint32_t i1129 =  (int32_t)0; i1129 <  (int32_t)40; i1129++){
for (uint32_t i1127 =  (int32_t)0; i1127 <  (int32_t)28; i1127++){
for (uint32_t i1128 =  (int32_t)0; i1128 <  (int32_t)28; i1128++){
Arr4DIdxRowM(tmp546, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i1126,i1127,i1128,i1129) = Arr4DIdxRowM(tmp508, (int32_t)1, (int32_t)40, (int32_t)28, (int32_t)28,i1122,i1123,i1124,i1125);
i1125 = (i1125 +  (int64_t)1);
if ((i1125 ==  (int64_t)28)) {
i1125 =  (int64_t)0;
i1124 = (i1124 +  (int64_t)1);
if ((i1124 ==  (int64_t)28)) {
i1124 =  (int64_t)0;
i1123 = (i1123 +  (int64_t)1);
if ((i1123 ==  (int64_t)40)) {
i1123 =  (int64_t)0;
i1122 = (i1122 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)40,  (int32_t)28,  (int32_t)28, tmp508);

uint64_t* tmp548 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40);

int64_t i1137;

int64_t i1136;

int64_t i1135;

int64_t i1134;

int64_t i1133;

int64_t i1132;

int64_t i1131;

int64_t i1130;
i1130 =  (int64_t)0;
i1131 =  (int64_t)0;
i1132 =  (int64_t)0;
i1133 =  (int64_t)0;
for (uint32_t i1134 =  (int32_t)0; i1134 <  (int32_t)1; i1134++){
for (uint32_t i1137 =  (int32_t)0; i1137 <  (int32_t)40; i1137++){
for (uint32_t i1135 =  (int32_t)0; i1135 <  (int32_t)28; i1135++){
for (uint32_t i1136 =  (int32_t)0; i1136 <  (int32_t)28; i1136++){
Arr4DIdxRowM(tmp548, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i1134,i1135,i1136,i1137) = Arr4DIdxRowM(tmp544, (int32_t)1, (int32_t)40, (int32_t)28, (int32_t)28,i1130,i1131,i1132,i1133);
i1133 = (i1133 +  (int64_t)1);
if ((i1133 ==  (int64_t)28)) {
i1133 =  (int64_t)0;
i1132 = (i1132 +  (int64_t)1);
if ((i1132 ==  (int64_t)28)) {
i1132 =  (int64_t)0;
i1131 = (i1131 +  (int64_t)1);
if ((i1131 ==  (int64_t)40)) {
i1131 =  (int64_t)0;
i1130 = (i1130 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)40,  (int32_t)28,  (int32_t)28, tmp544);

uint64_t* tmp550 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40);
for (uint32_t i0 =  (int32_t)0; i0 <  (int32_t)1; i0++){
for (uint32_t i1 =  (int32_t)0; i1 <  (int32_t)28; i1++){
for (uint32_t i2 =  (int32_t)0; i2 <  (int32_t)28; i2++){
for (uint32_t i3 =  (int32_t)0; i3 <  (int32_t)40; i3++){
Arr4DIdxRowM(tmp550, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i0,i1,i2,i3) = SecretAdd(Arr4DIdxRowM(tmp546, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i0,i1,i2,i3), Arr4DIdxRowM(tmp548, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i0,i1,i2,i3));
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp548);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp546);

uint64_t* tmp553 = make_array<uint64_t>( (int32_t)1,  (int32_t)40,  (int32_t)28,  (int32_t)28);

int64_t i1145;

int64_t i1144;

int64_t i1143;

int64_t i1142;

int64_t i1141;

int64_t i1140;

int64_t i1139;

int64_t i1138;
i1138 =  (int64_t)0;
i1139 =  (int64_t)0;
i1140 =  (int64_t)0;
i1141 =  (int64_t)0;
for (uint32_t i1142 =  (int32_t)0; i1142 <  (int32_t)1; i1142++){
for (uint32_t i1144 =  (int32_t)0; i1144 <  (int32_t)28; i1144++){
for (uint32_t i1145 =  (int32_t)0; i1145 <  (int32_t)28; i1145++){
for (uint32_t i1143 =  (int32_t)0; i1143 <  (int32_t)40; i1143++){
Arr4DIdxRowM(tmp553, (int32_t)1, (int32_t)40, (int32_t)28, (int32_t)28,i1142,i1143,i1144,i1145) = Arr4DIdxRowM(tmp550, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i1138,i1139,i1140,i1141);
i1141 = (i1141 +  (int64_t)1);
if ((i1141 ==  (int64_t)40)) {
i1141 =  (int64_t)0;
i1140 = (i1140 +  (int64_t)1);
if ((i1140 ==  (int64_t)28)) {
i1140 =  (int64_t)0;
i1139 = (i1139 +  (int64_t)1);
if ((i1139 ==  (int64_t)28)) {
i1139 =  (int64_t)0;
i1138 = (i1138 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp550);

uint64_t* tmp555 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40);

int64_t i1153;

int64_t i1152;

int64_t i1151;

int64_t i1150;

int64_t i1149;

int64_t i1148;

int64_t i1147;

int64_t i1146;
i1146 =  (int64_t)0;
i1147 =  (int64_t)0;
i1148 =  (int64_t)0;
i1149 =  (int64_t)0;
for (uint32_t i1150 =  (int32_t)0; i1150 <  (int32_t)1; i1150++){
for (uint32_t i1153 =  (int32_t)0; i1153 <  (int32_t)40; i1153++){
for (uint32_t i1151 =  (int32_t)0; i1151 <  (int32_t)28; i1151++){
for (uint32_t i1152 =  (int32_t)0; i1152 <  (int32_t)28; i1152++){
Arr4DIdxRowM(tmp555, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i1150,i1151,i1152,i1153) = Arr4DIdxRowM(tmp553, (int32_t)1, (int32_t)40, (int32_t)28, (int32_t)28,i1146,i1147,i1148,i1149);
i1149 = (i1149 +  (int64_t)1);
if ((i1149 ==  (int64_t)28)) {
i1149 =  (int64_t)0;
i1148 = (i1148 +  (int64_t)1);
if ((i1148 ==  (int64_t)28)) {
i1148 =  (int64_t)0;
i1147 = (i1147 +  (int64_t)1);
if ((i1147 ==  (int64_t)40)) {
i1147 =  (int64_t)0;
i1146 = (i1146 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)40,  (int32_t)28,  (int32_t)28, tmp553);

uint64_t* tmp557 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40);
Relu4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp555, tmp557,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp555);

uint64_t* tmp559 = make_array<uint64_t>( (int32_t)1,  (int32_t)40,  (int32_t)28,  (int32_t)28);

int64_t i1161;

int64_t i1160;

int64_t i1159;

int64_t i1158;

int64_t i1157;

int64_t i1156;

int64_t i1155;

int64_t i1154;
i1154 =  (int64_t)0;
i1155 =  (int64_t)0;
i1156 =  (int64_t)0;
i1157 =  (int64_t)0;
for (uint32_t i1158 =  (int32_t)0; i1158 <  (int32_t)1; i1158++){
for (uint32_t i1160 =  (int32_t)0; i1160 <  (int32_t)28; i1160++){
for (uint32_t i1161 =  (int32_t)0; i1161 <  (int32_t)28; i1161++){
for (uint32_t i1159 =  (int32_t)0; i1159 <  (int32_t)40; i1159++){
Arr4DIdxRowM(tmp559, (int32_t)1, (int32_t)40, (int32_t)28, (int32_t)28,i1158,i1159,i1160,i1161) = Arr4DIdxRowM(tmp557, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i1154,i1155,i1156,i1157);
i1157 = (i1157 +  (int64_t)1);
if ((i1157 ==  (int64_t)40)) {
i1157 =  (int64_t)0;
i1156 = (i1156 +  (int64_t)1);
if ((i1156 ==  (int64_t)28)) {
i1156 =  (int64_t)0;
i1155 = (i1155 +  (int64_t)1);
if ((i1155 ==  (int64_t)28)) {
i1155 =  (int64_t)0;
i1154 = (i1154 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp557);

uint64_t* tmp561 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40);

int64_t i1169;

int64_t i1168;

int64_t i1167;

int64_t i1166;

int64_t i1165;

int64_t i1164;

int64_t i1163;

int64_t i1162;
i1162 =  (int64_t)0;
i1163 =  (int64_t)0;
i1164 =  (int64_t)0;
i1165 =  (int64_t)0;
for (uint32_t i1166 =  (int32_t)0; i1166 <  (int32_t)1; i1166++){
for (uint32_t i1169 =  (int32_t)0; i1169 <  (int32_t)40; i1169++){
for (uint32_t i1167 =  (int32_t)0; i1167 <  (int32_t)28; i1167++){
for (uint32_t i1168 =  (int32_t)0; i1168 <  (int32_t)28; i1168++){
Arr4DIdxRowM(tmp561, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i1166,i1167,i1168,i1169) = Arr4DIdxRowM(tmp559, (int32_t)1, (int32_t)40, (int32_t)28, (int32_t)28,i1162,i1163,i1164,i1165);
i1165 = (i1165 +  (int64_t)1);
if ((i1165 ==  (int64_t)28)) {
i1165 =  (int64_t)0;
i1164 = (i1164 +  (int64_t)1);
if ((i1164 ==  (int64_t)28)) {
i1164 =  (int64_t)0;
i1163 = (i1163 +  (int64_t)1);
if ((i1163 ==  (int64_t)40)) {
i1163 =  (int64_t)0;
i1162 = (i1162 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp562 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)40,  (int32_t)120);

int64_t i1177;

int64_t i1176;

int64_t i1175;

int64_t i1174;

int64_t i1173;

int64_t i1172;

int64_t i1171;

int64_t i1170;
i1170 =  (int64_t)0;
i1171 =  (int64_t)0;
i1172 =  (int64_t)0;
i1173 =  (int64_t)0;
for (uint32_t i1177 =  (int32_t)0; i1177 <  (int32_t)120; i1177++){
for (uint32_t i1176 =  (int32_t)0; i1176 <  (int32_t)40; i1176++){
for (uint32_t i1174 =  (int32_t)0; i1174 <  (int32_t)1; i1174++){
for (uint32_t i1175 =  (int32_t)0; i1175 <  (int32_t)1; i1175++){
Arr4DIdxRowM(tmp562, (int32_t)1, (int32_t)1, (int32_t)40, (int32_t)120,i1174,i1175,i1176,i1177) = Arr4DIdxRowM(tmp32, (int32_t)120, (int32_t)40, (int32_t)1, (int32_t)1,i1170,i1171,i1172,i1173);
i1173 = (i1173 +  (int64_t)1);
if ((i1173 ==  (int64_t)1)) {
i1173 =  (int64_t)0;
i1172 = (i1172 +  (int64_t)1);
if ((i1172 ==  (int64_t)1)) {
i1172 =  (int64_t)0;
i1171 = (i1171 +  (int64_t)1);
if ((i1171 ==  (int64_t)40)) {
i1171 =  (int64_t)0;
i1170 = (i1170 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)120,  (int32_t)40,  (int32_t)1,  (int32_t)1, tmp32);

uint64_t* tmp564 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40,  (int32_t)1,  (int32_t)1,  (int32_t)120,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp561, tmp562, tmp564);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)40,  (int32_t)120, tmp562);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp561);

uint64_t* tmp567 = make_array<uint64_t>( (int32_t)1,  (int32_t)120,  (int32_t)28,  (int32_t)28);

int64_t i1185;

int64_t i1184;

int64_t i1183;

int64_t i1182;

int64_t i1181;

int64_t i1180;

int64_t i1179;

int64_t i1178;
i1178 =  (int64_t)0;
i1179 =  (int64_t)0;
i1180 =  (int64_t)0;
i1181 =  (int64_t)0;
for (uint32_t i1182 =  (int32_t)0; i1182 <  (int32_t)1; i1182++){
for (uint32_t i1184 =  (int32_t)0; i1184 <  (int32_t)28; i1184++){
for (uint32_t i1185 =  (int32_t)0; i1185 <  (int32_t)28; i1185++){
for (uint32_t i1183 =  (int32_t)0; i1183 <  (int32_t)120; i1183++){
Arr4DIdxRowM(tmp567, (int32_t)1, (int32_t)120, (int32_t)28, (int32_t)28,i1182,i1183,i1184,i1185) = Arr4DIdxRowM(tmp564, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)120,i1178,i1179,i1180,i1181);
i1181 = (i1181 +  (int64_t)1);
if ((i1181 ==  (int64_t)120)) {
i1181 =  (int64_t)0;
i1180 = (i1180 +  (int64_t)1);
if ((i1180 ==  (int64_t)28)) {
i1180 =  (int64_t)0;
i1179 = (i1179 +  (int64_t)1);
if ((i1179 ==  (int64_t)28)) {
i1179 =  (int64_t)0;
i1178 = (i1178 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp564);

uint64_t* tmp569 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120);

int64_t i1193;

int64_t i1192;

int64_t i1191;

int64_t i1190;

int64_t i1189;

int64_t i1188;

int64_t i1187;

int64_t i1186;
i1186 =  (int64_t)0;
i1187 =  (int64_t)0;
i1188 =  (int64_t)0;
i1189 =  (int64_t)0;
for (uint32_t i1190 =  (int32_t)0; i1190 <  (int32_t)1; i1190++){
for (uint32_t i1193 =  (int32_t)0; i1193 <  (int32_t)120; i1193++){
for (uint32_t i1191 =  (int32_t)0; i1191 <  (int32_t)28; i1191++){
for (uint32_t i1192 =  (int32_t)0; i1192 <  (int32_t)28; i1192++){
Arr4DIdxRowM(tmp569, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)120,i1190,i1191,i1192,i1193) = Arr4DIdxRowM(tmp567, (int32_t)1, (int32_t)120, (int32_t)28, (int32_t)28,i1186,i1187,i1188,i1189);
i1189 = (i1189 +  (int64_t)1);
if ((i1189 ==  (int64_t)28)) {
i1189 =  (int64_t)0;
i1188 = (i1188 +  (int64_t)1);
if ((i1188 ==  (int64_t)28)) {
i1188 =  (int64_t)0;
i1187 = (i1187 +  (int64_t)1);
if ((i1187 ==  (int64_t)120)) {
i1187 =  (int64_t)0;
i1186 = (i1186 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)120,  (int32_t)28,  (int32_t)28, tmp567);

uint64_t* tmp571 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120);
ScaleDown4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp569,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp569, tmp33, tmp34,  (int32_t)0,  (int32_t)23, tmp571);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp569);

uint64_t* tmp573 = make_array<uint64_t>( (int32_t)1,  (int32_t)120,  (int32_t)28,  (int32_t)28);

int64_t i1201;

int64_t i1200;

int64_t i1199;

int64_t i1198;

int64_t i1197;

int64_t i1196;

int64_t i1195;

int64_t i1194;
i1194 =  (int64_t)0;
i1195 =  (int64_t)0;
i1196 =  (int64_t)0;
i1197 =  (int64_t)0;
for (uint32_t i1198 =  (int32_t)0; i1198 <  (int32_t)1; i1198++){
for (uint32_t i1200 =  (int32_t)0; i1200 <  (int32_t)28; i1200++){
for (uint32_t i1201 =  (int32_t)0; i1201 <  (int32_t)28; i1201++){
for (uint32_t i1199 =  (int32_t)0; i1199 <  (int32_t)120; i1199++){
Arr4DIdxRowM(tmp573, (int32_t)1, (int32_t)120, (int32_t)28, (int32_t)28,i1198,i1199,i1200,i1201) = Arr4DIdxRowM(tmp571, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)120,i1194,i1195,i1196,i1197);
i1197 = (i1197 +  (int64_t)1);
if ((i1197 ==  (int64_t)120)) {
i1197 =  (int64_t)0;
i1196 = (i1196 +  (int64_t)1);
if ((i1196 ==  (int64_t)28)) {
i1196 =  (int64_t)0;
i1195 = (i1195 +  (int64_t)1);
if ((i1195 ==  (int64_t)28)) {
i1195 =  (int64_t)0;
i1194 = (i1194 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp571);

uint64_t* tmp575 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120);

int64_t i1209;

int64_t i1208;

int64_t i1207;

int64_t i1206;

int64_t i1205;

int64_t i1204;

int64_t i1203;

int64_t i1202;
i1202 =  (int64_t)0;
i1203 =  (int64_t)0;
i1204 =  (int64_t)0;
i1205 =  (int64_t)0;
for (uint32_t i1206 =  (int32_t)0; i1206 <  (int32_t)1; i1206++){
for (uint32_t i1209 =  (int32_t)0; i1209 <  (int32_t)120; i1209++){
for (uint32_t i1207 =  (int32_t)0; i1207 <  (int32_t)28; i1207++){
for (uint32_t i1208 =  (int32_t)0; i1208 <  (int32_t)28; i1208++){
Arr4DIdxRowM(tmp575, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)120,i1206,i1207,i1208,i1209) = Arr4DIdxRowM(tmp573, (int32_t)1, (int32_t)120, (int32_t)28, (int32_t)28,i1202,i1203,i1204,i1205);
i1205 = (i1205 +  (int64_t)1);
if ((i1205 ==  (int64_t)28)) {
i1205 =  (int64_t)0;
i1204 = (i1204 +  (int64_t)1);
if ((i1204 ==  (int64_t)28)) {
i1204 =  (int64_t)0;
i1203 = (i1203 +  (int64_t)1);
if ((i1203 ==  (int64_t)120)) {
i1203 =  (int64_t)0;
i1202 = (i1202 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)120,  (int32_t)28,  (int32_t)28, tmp573);

uint64_t* tmp577 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120);
Relu4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp575, tmp577,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp575);

uint64_t* tmp579 = make_array<uint64_t>( (int32_t)1,  (int32_t)120,  (int32_t)28,  (int32_t)28);

int64_t i1217;

int64_t i1216;

int64_t i1215;

int64_t i1214;

int64_t i1213;

int64_t i1212;

int64_t i1211;

int64_t i1210;
i1210 =  (int64_t)0;
i1211 =  (int64_t)0;
i1212 =  (int64_t)0;
i1213 =  (int64_t)0;
for (uint32_t i1214 =  (int32_t)0; i1214 <  (int32_t)1; i1214++){
for (uint32_t i1216 =  (int32_t)0; i1216 <  (int32_t)28; i1216++){
for (uint32_t i1217 =  (int32_t)0; i1217 <  (int32_t)28; i1217++){
for (uint32_t i1215 =  (int32_t)0; i1215 <  (int32_t)120; i1215++){
Arr4DIdxRowM(tmp579, (int32_t)1, (int32_t)120, (int32_t)28, (int32_t)28,i1214,i1215,i1216,i1217) = Arr4DIdxRowM(tmp577, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)120,i1210,i1211,i1212,i1213);
i1213 = (i1213 +  (int64_t)1);
if ((i1213 ==  (int64_t)120)) {
i1213 =  (int64_t)0;
i1212 = (i1212 +  (int64_t)1);
if ((i1212 ==  (int64_t)28)) {
i1212 =  (int64_t)0;
i1211 = (i1211 +  (int64_t)1);
if ((i1211 ==  (int64_t)28)) {
i1211 =  (int64_t)0;
i1210 = (i1210 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp577);

uint64_t* tmp581 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120);

int64_t i1225;

int64_t i1224;

int64_t i1223;

int64_t i1222;

int64_t i1221;

int64_t i1220;

int64_t i1219;

int64_t i1218;
i1218 =  (int64_t)0;
i1219 =  (int64_t)0;
i1220 =  (int64_t)0;
i1221 =  (int64_t)0;
for (uint32_t i1222 =  (int32_t)0; i1222 <  (int32_t)1; i1222++){
for (uint32_t i1225 =  (int32_t)0; i1225 <  (int32_t)120; i1225++){
for (uint32_t i1223 =  (int32_t)0; i1223 <  (int32_t)28; i1223++){
for (uint32_t i1224 =  (int32_t)0; i1224 <  (int32_t)28; i1224++){
Arr4DIdxRowM(tmp581, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)120,i1222,i1223,i1224,i1225) = Arr4DIdxRowM(tmp579, (int32_t)1, (int32_t)120, (int32_t)28, (int32_t)28,i1218,i1219,i1220,i1221);
i1221 = (i1221 +  (int64_t)1);
if ((i1221 ==  (int64_t)28)) {
i1221 =  (int64_t)0;
i1220 = (i1220 +  (int64_t)1);
if ((i1220 ==  (int64_t)28)) {
i1220 =  (int64_t)0;
i1219 = (i1219 +  (int64_t)1);
if ((i1219 ==  (int64_t)120)) {
i1219 =  (int64_t)0;
i1218 = (i1218 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)120,  (int32_t)28,  (int32_t)28, tmp579);

uint64_t* tmp583 = make_array<uint64_t>( (int32_t)5,  (int32_t)5,  (int32_t)1,  (int32_t)120);

int64_t i1233;

int64_t i1232;

int64_t i1231;

int64_t i1230;

int64_t i1229;

int64_t i1228;

int64_t i1227;

int64_t i1226;
i1226 =  (int64_t)0;
i1227 =  (int64_t)0;
i1228 =  (int64_t)0;
i1229 =  (int64_t)0;
for (uint32_t i1233 =  (int32_t)0; i1233 <  (int32_t)120; i1233++){
for (uint32_t i1232 =  (int32_t)0; i1232 <  (int32_t)1; i1232++){
for (uint32_t i1230 =  (int32_t)0; i1230 <  (int32_t)5; i1230++){
for (uint32_t i1231 =  (int32_t)0; i1231 <  (int32_t)5; i1231++){
Arr4DIdxRowM(tmp583, (int32_t)5, (int32_t)5, (int32_t)1, (int32_t)120,i1230,i1231,i1232,i1233) = Arr4DIdxRowM(tmp35, (int32_t)120, (int32_t)1, (int32_t)5, (int32_t)5,i1226,i1227,i1228,i1229);
i1229 = (i1229 +  (int64_t)1);
if ((i1229 ==  (int64_t)5)) {
i1229 =  (int64_t)0;
i1228 = (i1228 +  (int64_t)1);
if ((i1228 ==  (int64_t)5)) {
i1228 =  (int64_t)0;
i1227 = (i1227 +  (int64_t)1);
if ((i1227 ==  (int64_t)1)) {
i1227 =  (int64_t)0;
i1226 = (i1226 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)120,  (int32_t)1,  (int32_t)5,  (int32_t)5, tmp35);

uint64_t* tmp585 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120,  (int32_t)5,  (int32_t)5,  (int32_t)120,  (int32_t)2,  (int32_t)2,  (int32_t)2,  (int32_t)2,  (int32_t)1,  (int32_t)1,  (int32_t)120, tmp581, tmp583, tmp585);
ClearMemSecret4( (int32_t)5,  (int32_t)5,  (int32_t)1,  (int32_t)120, tmp583);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp581);

uint64_t* tmp588 = make_array<uint64_t>( (int32_t)1,  (int32_t)120,  (int32_t)28,  (int32_t)28);

int64_t i1241;

int64_t i1240;

int64_t i1239;

int64_t i1238;

int64_t i1237;

int64_t i1236;

int64_t i1235;

int64_t i1234;
i1234 =  (int64_t)0;
i1235 =  (int64_t)0;
i1236 =  (int64_t)0;
i1237 =  (int64_t)0;
for (uint32_t i1238 =  (int32_t)0; i1238 <  (int32_t)1; i1238++){
for (uint32_t i1240 =  (int32_t)0; i1240 <  (int32_t)28; i1240++){
for (uint32_t i1241 =  (int32_t)0; i1241 <  (int32_t)28; i1241++){
for (uint32_t i1239 =  (int32_t)0; i1239 <  (int32_t)120; i1239++){
Arr4DIdxRowM(tmp588, (int32_t)1, (int32_t)120, (int32_t)28, (int32_t)28,i1238,i1239,i1240,i1241) = Arr4DIdxRowM(tmp585, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)120,i1234,i1235,i1236,i1237);
i1237 = (i1237 +  (int64_t)1);
if ((i1237 ==  (int64_t)120)) {
i1237 =  (int64_t)0;
i1236 = (i1236 +  (int64_t)1);
if ((i1236 ==  (int64_t)28)) {
i1236 =  (int64_t)0;
i1235 = (i1235 +  (int64_t)1);
if ((i1235 ==  (int64_t)28)) {
i1235 =  (int64_t)0;
i1234 = (i1234 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp585);

uint64_t* tmp590 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120);

int64_t i1249;

int64_t i1248;

int64_t i1247;

int64_t i1246;

int64_t i1245;

int64_t i1244;

int64_t i1243;

int64_t i1242;
i1242 =  (int64_t)0;
i1243 =  (int64_t)0;
i1244 =  (int64_t)0;
i1245 =  (int64_t)0;
for (uint32_t i1246 =  (int32_t)0; i1246 <  (int32_t)1; i1246++){
for (uint32_t i1249 =  (int32_t)0; i1249 <  (int32_t)120; i1249++){
for (uint32_t i1247 =  (int32_t)0; i1247 <  (int32_t)28; i1247++){
for (uint32_t i1248 =  (int32_t)0; i1248 <  (int32_t)28; i1248++){
Arr4DIdxRowM(tmp590, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)120,i1246,i1247,i1248,i1249) = Arr4DIdxRowM(tmp588, (int32_t)1, (int32_t)120, (int32_t)28, (int32_t)28,i1242,i1243,i1244,i1245);
i1245 = (i1245 +  (int64_t)1);
if ((i1245 ==  (int64_t)28)) {
i1245 =  (int64_t)0;
i1244 = (i1244 +  (int64_t)1);
if ((i1244 ==  (int64_t)28)) {
i1244 =  (int64_t)0;
i1243 = (i1243 +  (int64_t)1);
if ((i1243 ==  (int64_t)120)) {
i1243 =  (int64_t)0;
i1242 = (i1242 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)120,  (int32_t)28,  (int32_t)28, tmp588);

uint64_t* tmp592 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120);
ScaleDown4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp590,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp590, tmp33, tmp34,  (int32_t)0,  (int32_t)0, tmp592);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp590);

uint64_t* tmp594 = make_array<uint64_t>( (int32_t)1,  (int32_t)120,  (int32_t)28,  (int32_t)28);

int64_t i1257;

int64_t i1256;

int64_t i1255;

int64_t i1254;

int64_t i1253;

int64_t i1252;

int64_t i1251;

int64_t i1250;
i1250 =  (int64_t)0;
i1251 =  (int64_t)0;
i1252 =  (int64_t)0;
i1253 =  (int64_t)0;
for (uint32_t i1254 =  (int32_t)0; i1254 <  (int32_t)1; i1254++){
for (uint32_t i1256 =  (int32_t)0; i1256 <  (int32_t)28; i1256++){
for (uint32_t i1257 =  (int32_t)0; i1257 <  (int32_t)28; i1257++){
for (uint32_t i1255 =  (int32_t)0; i1255 <  (int32_t)120; i1255++){
Arr4DIdxRowM(tmp594, (int32_t)1, (int32_t)120, (int32_t)28, (int32_t)28,i1254,i1255,i1256,i1257) = Arr4DIdxRowM(tmp592, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)120,i1250,i1251,i1252,i1253);
i1253 = (i1253 +  (int64_t)1);
if ((i1253 ==  (int64_t)120)) {
i1253 =  (int64_t)0;
i1252 = (i1252 +  (int64_t)1);
if ((i1252 ==  (int64_t)28)) {
i1252 =  (int64_t)0;
i1251 = (i1251 +  (int64_t)1);
if ((i1251 ==  (int64_t)28)) {
i1251 =  (int64_t)0;
i1250 = (i1250 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp592);

uint64_t* tmp596 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120);

int64_t i1265;

int64_t i1264;

int64_t i1263;

int64_t i1262;

int64_t i1261;

int64_t i1260;

int64_t i1259;

int64_t i1258;
i1258 =  (int64_t)0;
i1259 =  (int64_t)0;
i1260 =  (int64_t)0;
i1261 =  (int64_t)0;
for (uint32_t i1262 =  (int32_t)0; i1262 <  (int32_t)1; i1262++){
for (uint32_t i1265 =  (int32_t)0; i1265 <  (int32_t)120; i1265++){
for (uint32_t i1263 =  (int32_t)0; i1263 <  (int32_t)28; i1263++){
for (uint32_t i1264 =  (int32_t)0; i1264 <  (int32_t)28; i1264++){
Arr4DIdxRowM(tmp596, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)120,i1262,i1263,i1264,i1265) = Arr4DIdxRowM(tmp594, (int32_t)1, (int32_t)120, (int32_t)28, (int32_t)28,i1258,i1259,i1260,i1261);
i1261 = (i1261 +  (int64_t)1);
if ((i1261 ==  (int64_t)28)) {
i1261 =  (int64_t)0;
i1260 = (i1260 +  (int64_t)1);
if ((i1260 ==  (int64_t)28)) {
i1260 =  (int64_t)0;
i1259 = (i1259 +  (int64_t)1);
if ((i1259 ==  (int64_t)120)) {
i1259 =  (int64_t)0;
i1258 = (i1258 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)120,  (int32_t)28,  (int32_t)28, tmp594);

uint64_t* tmp598 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120);
Relu4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp596, tmp598,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp596);

uint64_t* tmp600 = make_array<uint64_t>( (int32_t)1,  (int32_t)120,  (int32_t)28,  (int32_t)28);

int64_t i1273;

int64_t i1272;

int64_t i1271;

int64_t i1270;

int64_t i1269;

int64_t i1268;

int64_t i1267;

int64_t i1266;
i1266 =  (int64_t)0;
i1267 =  (int64_t)0;
i1268 =  (int64_t)0;
i1269 =  (int64_t)0;
for (uint32_t i1270 =  (int32_t)0; i1270 <  (int32_t)1; i1270++){
for (uint32_t i1272 =  (int32_t)0; i1272 <  (int32_t)28; i1272++){
for (uint32_t i1273 =  (int32_t)0; i1273 <  (int32_t)28; i1273++){
for (uint32_t i1271 =  (int32_t)0; i1271 <  (int32_t)120; i1271++){
Arr4DIdxRowM(tmp600, (int32_t)1, (int32_t)120, (int32_t)28, (int32_t)28,i1270,i1271,i1272,i1273) = Arr4DIdxRowM(tmp598, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)120,i1266,i1267,i1268,i1269);
i1269 = (i1269 +  (int64_t)1);
if ((i1269 ==  (int64_t)120)) {
i1269 =  (int64_t)0;
i1268 = (i1268 +  (int64_t)1);
if ((i1268 ==  (int64_t)28)) {
i1268 =  (int64_t)0;
i1267 = (i1267 +  (int64_t)1);
if ((i1267 ==  (int64_t)28)) {
i1267 =  (int64_t)0;
i1266 = (i1266 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp598);

uint64_t* tmp602 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120);

int64_t i1281;

int64_t i1280;

int64_t i1279;

int64_t i1278;

int64_t i1277;

int64_t i1276;

int64_t i1275;

int64_t i1274;
i1274 =  (int64_t)0;
i1275 =  (int64_t)0;
i1276 =  (int64_t)0;
i1277 =  (int64_t)0;
for (uint32_t i1278 =  (int32_t)0; i1278 <  (int32_t)1; i1278++){
for (uint32_t i1281 =  (int32_t)0; i1281 <  (int32_t)120; i1281++){
for (uint32_t i1279 =  (int32_t)0; i1279 <  (int32_t)28; i1279++){
for (uint32_t i1280 =  (int32_t)0; i1280 <  (int32_t)28; i1280++){
Arr4DIdxRowM(tmp602, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)120,i1278,i1279,i1280,i1281) = Arr4DIdxRowM(tmp600, (int32_t)1, (int32_t)120, (int32_t)28, (int32_t)28,i1274,i1275,i1276,i1277);
i1277 = (i1277 +  (int64_t)1);
if ((i1277 ==  (int64_t)28)) {
i1277 =  (int64_t)0;
i1276 = (i1276 +  (int64_t)1);
if ((i1276 ==  (int64_t)28)) {
i1276 =  (int64_t)0;
i1275 = (i1275 +  (int64_t)1);
if ((i1275 ==  (int64_t)120)) {
i1275 =  (int64_t)0;
i1274 = (i1274 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp603 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120);
AvgPool( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120,  (int32_t)28,  (int32_t)28,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp602, tmp603);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp602);

uint64_t* tmp605 = make_array<uint64_t>( (int32_t)1,  (int32_t)120,  (int32_t)1,  (int32_t)1);

int64_t i1289;

int64_t i1288;

int64_t i1287;

int64_t i1286;

int64_t i1285;

int64_t i1284;

int64_t i1283;

int64_t i1282;
i1282 =  (int64_t)0;
i1283 =  (int64_t)0;
i1284 =  (int64_t)0;
i1285 =  (int64_t)0;
for (uint32_t i1286 =  (int32_t)0; i1286 <  (int32_t)1; i1286++){
for (uint32_t i1288 =  (int32_t)0; i1288 <  (int32_t)1; i1288++){
for (uint32_t i1289 =  (int32_t)0; i1289 <  (int32_t)1; i1289++){
for (uint32_t i1287 =  (int32_t)0; i1287 <  (int32_t)120; i1287++){
Arr4DIdxRowM(tmp605, (int32_t)1, (int32_t)120, (int32_t)1, (int32_t)1,i1286,i1287,i1288,i1289) = Arr4DIdxRowM(tmp603, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)120,i1282,i1283,i1284,i1285);
i1285 = (i1285 +  (int64_t)1);
if ((i1285 ==  (int64_t)120)) {
i1285 =  (int64_t)0;
i1284 = (i1284 +  (int64_t)1);
if ((i1284 ==  (int64_t)1)) {
i1284 =  (int64_t)0;
i1283 = (i1283 +  (int64_t)1);
if ((i1283 ==  (int64_t)1)) {
i1283 =  (int64_t)0;
i1282 = (i1282 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120, tmp603);

uint64_t* tmp607 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120);

int64_t i1297;

int64_t i1296;

int64_t i1295;

int64_t i1294;

int64_t i1293;

int64_t i1292;

int64_t i1291;

int64_t i1290;
i1290 =  (int64_t)0;
i1291 =  (int64_t)0;
i1292 =  (int64_t)0;
i1293 =  (int64_t)0;
for (uint32_t i1294 =  (int32_t)0; i1294 <  (int32_t)1; i1294++){
for (uint32_t i1297 =  (int32_t)0; i1297 <  (int32_t)120; i1297++){
for (uint32_t i1295 =  (int32_t)0; i1295 <  (int32_t)1; i1295++){
for (uint32_t i1296 =  (int32_t)0; i1296 <  (int32_t)1; i1296++){
Arr4DIdxRowM(tmp607, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)120,i1294,i1295,i1296,i1297) = Arr4DIdxRowM(tmp605, (int32_t)1, (int32_t)120, (int32_t)1, (int32_t)1,i1290,i1291,i1292,i1293);
i1293 = (i1293 +  (int64_t)1);
if ((i1293 ==  (int64_t)1)) {
i1293 =  (int64_t)0;
i1292 = (i1292 +  (int64_t)1);
if ((i1292 ==  (int64_t)1)) {
i1292 =  (int64_t)0;
i1291 = (i1291 +  (int64_t)1);
if ((i1291 ==  (int64_t)120)) {
i1291 =  (int64_t)0;
i1290 = (i1290 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)120,  (int32_t)1,  (int32_t)1, tmp605);

uint64_t* tmp609 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)120,  (int32_t)30);

int64_t i1305;

int64_t i1304;

int64_t i1303;

int64_t i1302;

int64_t i1301;

int64_t i1300;

int64_t i1299;

int64_t i1298;
i1298 =  (int64_t)0;
i1299 =  (int64_t)0;
i1300 =  (int64_t)0;
i1301 =  (int64_t)0;
for (uint32_t i1305 =  (int32_t)0; i1305 <  (int32_t)30; i1305++){
for (uint32_t i1304 =  (int32_t)0; i1304 <  (int32_t)120; i1304++){
for (uint32_t i1302 =  (int32_t)0; i1302 <  (int32_t)1; i1302++){
for (uint32_t i1303 =  (int32_t)0; i1303 <  (int32_t)1; i1303++){
Arr4DIdxRowM(tmp609, (int32_t)1, (int32_t)1, (int32_t)120, (int32_t)30,i1302,i1303,i1304,i1305) = Arr4DIdxRowM(tmp36, (int32_t)30, (int32_t)120, (int32_t)1, (int32_t)1,i1298,i1299,i1300,i1301);
i1301 = (i1301 +  (int64_t)1);
if ((i1301 ==  (int64_t)1)) {
i1301 =  (int64_t)0;
i1300 = (i1300 +  (int64_t)1);
if ((i1300 ==  (int64_t)1)) {
i1300 =  (int64_t)0;
i1299 = (i1299 +  (int64_t)1);
if ((i1299 ==  (int64_t)120)) {
i1299 =  (int64_t)0;
i1298 = (i1298 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)30,  (int32_t)120,  (int32_t)1,  (int32_t)1, tmp36);

uint64_t* tmp611 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)30);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120,  (int32_t)1,  (int32_t)1,  (int32_t)30,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp607, tmp609, tmp611);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120, tmp607);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)120,  (int32_t)30, tmp609);

uint64_t* tmp614 = make_array<uint64_t>( (int32_t)1,  (int32_t)30,  (int32_t)1,  (int32_t)1);

int64_t i1313;

int64_t i1312;

int64_t i1311;

int64_t i1310;

int64_t i1309;

int64_t i1308;

int64_t i1307;

int64_t i1306;
i1306 =  (int64_t)0;
i1307 =  (int64_t)0;
i1308 =  (int64_t)0;
i1309 =  (int64_t)0;
for (uint32_t i1310 =  (int32_t)0; i1310 <  (int32_t)1; i1310++){
for (uint32_t i1312 =  (int32_t)0; i1312 <  (int32_t)1; i1312++){
for (uint32_t i1313 =  (int32_t)0; i1313 <  (int32_t)1; i1313++){
for (uint32_t i1311 =  (int32_t)0; i1311 <  (int32_t)30; i1311++){
Arr4DIdxRowM(tmp614, (int32_t)1, (int32_t)30, (int32_t)1, (int32_t)1,i1310,i1311,i1312,i1313) = Arr4DIdxRowM(tmp611, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)30,i1306,i1307,i1308,i1309);
i1309 = (i1309 +  (int64_t)1);
if ((i1309 ==  (int64_t)30)) {
i1309 =  (int64_t)0;
i1308 = (i1308 +  (int64_t)1);
if ((i1308 ==  (int64_t)1)) {
i1308 =  (int64_t)0;
i1307 = (i1307 +  (int64_t)1);
if ((i1307 ==  (int64_t)1)) {
i1307 =  (int64_t)0;
i1306 = (i1306 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)30, tmp611);

uint64_t* tmp616 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)30);

int64_t i1321;

int64_t i1320;

int64_t i1319;

int64_t i1318;

int64_t i1317;

int64_t i1316;

int64_t i1315;

int64_t i1314;
i1314 =  (int64_t)0;
i1315 =  (int64_t)0;
i1316 =  (int64_t)0;
i1317 =  (int64_t)0;
for (uint32_t i1318 =  (int32_t)0; i1318 <  (int32_t)1; i1318++){
for (uint32_t i1321 =  (int32_t)0; i1321 <  (int32_t)30; i1321++){
for (uint32_t i1319 =  (int32_t)0; i1319 <  (int32_t)1; i1319++){
for (uint32_t i1320 =  (int32_t)0; i1320 <  (int32_t)1; i1320++){
Arr4DIdxRowM(tmp616, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)30,i1318,i1319,i1320,i1321) = Arr4DIdxRowM(tmp614, (int32_t)1, (int32_t)30, (int32_t)1, (int32_t)1,i1314,i1315,i1316,i1317);
i1317 = (i1317 +  (int64_t)1);
if ((i1317 ==  (int64_t)1)) {
i1317 =  (int64_t)0;
i1316 = (i1316 +  (int64_t)1);
if ((i1316 ==  (int64_t)1)) {
i1316 =  (int64_t)0;
i1315 = (i1315 +  (int64_t)1);
if ((i1315 ==  (int64_t)30)) {
i1315 =  (int64_t)0;
i1314 = (i1314 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)30,  (int32_t)1,  (int32_t)1, tmp614);

uint64_t* tmp618 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)30);
ScaleDown4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)30, tmp616,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)30, tmp616, tmp37, tmp38,  (int32_t)0,  (int32_t)23, tmp618);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)30, tmp616);

uint64_t* tmp620 = make_array<uint64_t>( (int32_t)1,  (int32_t)30,  (int32_t)1,  (int32_t)1);

int64_t i1329;

int64_t i1328;

int64_t i1327;

int64_t i1326;

int64_t i1325;

int64_t i1324;

int64_t i1323;

int64_t i1322;
i1322 =  (int64_t)0;
i1323 =  (int64_t)0;
i1324 =  (int64_t)0;
i1325 =  (int64_t)0;
for (uint32_t i1326 =  (int32_t)0; i1326 <  (int32_t)1; i1326++){
for (uint32_t i1328 =  (int32_t)0; i1328 <  (int32_t)1; i1328++){
for (uint32_t i1329 =  (int32_t)0; i1329 <  (int32_t)1; i1329++){
for (uint32_t i1327 =  (int32_t)0; i1327 <  (int32_t)30; i1327++){
Arr4DIdxRowM(tmp620, (int32_t)1, (int32_t)30, (int32_t)1, (int32_t)1,i1326,i1327,i1328,i1329) = Arr4DIdxRowM(tmp618, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)30,i1322,i1323,i1324,i1325);
i1325 = (i1325 +  (int64_t)1);
if ((i1325 ==  (int64_t)30)) {
i1325 =  (int64_t)0;
i1324 = (i1324 +  (int64_t)1);
if ((i1324 ==  (int64_t)1)) {
i1324 =  (int64_t)0;
i1323 = (i1323 +  (int64_t)1);
if ((i1323 ==  (int64_t)1)) {
i1323 =  (int64_t)0;
i1322 = (i1322 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)30, tmp618);

uint64_t* tmp622 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)30);

int64_t i1337;

int64_t i1336;

int64_t i1335;

int64_t i1334;

int64_t i1333;

int64_t i1332;

int64_t i1331;

int64_t i1330;
i1330 =  (int64_t)0;
i1331 =  (int64_t)0;
i1332 =  (int64_t)0;
i1333 =  (int64_t)0;
for (uint32_t i1334 =  (int32_t)0; i1334 <  (int32_t)1; i1334++){
for (uint32_t i1337 =  (int32_t)0; i1337 <  (int32_t)30; i1337++){
for (uint32_t i1335 =  (int32_t)0; i1335 <  (int32_t)1; i1335++){
for (uint32_t i1336 =  (int32_t)0; i1336 <  (int32_t)1; i1336++){
Arr4DIdxRowM(tmp622, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)30,i1334,i1335,i1336,i1337) = Arr4DIdxRowM(tmp620, (int32_t)1, (int32_t)30, (int32_t)1, (int32_t)1,i1330,i1331,i1332,i1333);
i1333 = (i1333 +  (int64_t)1);
if ((i1333 ==  (int64_t)1)) {
i1333 =  (int64_t)0;
i1332 = (i1332 +  (int64_t)1);
if ((i1332 ==  (int64_t)1)) {
i1332 =  (int64_t)0;
i1331 = (i1331 +  (int64_t)1);
if ((i1331 ==  (int64_t)30)) {
i1331 =  (int64_t)0;
i1330 = (i1330 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)30,  (int32_t)1,  (int32_t)1, tmp620);

uint64_t* tmp624 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)30);
Relu4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)30, tmp622, tmp624,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)30, tmp622);

uint64_t* tmp626 = make_array<uint64_t>( (int32_t)1,  (int32_t)30,  (int32_t)1,  (int32_t)1);

int64_t i1345;

int64_t i1344;

int64_t i1343;

int64_t i1342;

int64_t i1341;

int64_t i1340;

int64_t i1339;

int64_t i1338;
i1338 =  (int64_t)0;
i1339 =  (int64_t)0;
i1340 =  (int64_t)0;
i1341 =  (int64_t)0;
for (uint32_t i1342 =  (int32_t)0; i1342 <  (int32_t)1; i1342++){
for (uint32_t i1344 =  (int32_t)0; i1344 <  (int32_t)1; i1344++){
for (uint32_t i1345 =  (int32_t)0; i1345 <  (int32_t)1; i1345++){
for (uint32_t i1343 =  (int32_t)0; i1343 <  (int32_t)30; i1343++){
Arr4DIdxRowM(tmp626, (int32_t)1, (int32_t)30, (int32_t)1, (int32_t)1,i1342,i1343,i1344,i1345) = Arr4DIdxRowM(tmp624, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)30,i1338,i1339,i1340,i1341);
i1341 = (i1341 +  (int64_t)1);
if ((i1341 ==  (int64_t)30)) {
i1341 =  (int64_t)0;
i1340 = (i1340 +  (int64_t)1);
if ((i1340 ==  (int64_t)1)) {
i1340 =  (int64_t)0;
i1339 = (i1339 +  (int64_t)1);
if ((i1339 ==  (int64_t)1)) {
i1339 =  (int64_t)0;
i1338 = (i1338 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)30, tmp624);

uint64_t* tmp628 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)30);

int64_t i1353;

int64_t i1352;

int64_t i1351;

int64_t i1350;

int64_t i1349;

int64_t i1348;

int64_t i1347;

int64_t i1346;
i1346 =  (int64_t)0;
i1347 =  (int64_t)0;
i1348 =  (int64_t)0;
i1349 =  (int64_t)0;
for (uint32_t i1350 =  (int32_t)0; i1350 <  (int32_t)1; i1350++){
for (uint32_t i1353 =  (int32_t)0; i1353 <  (int32_t)30; i1353++){
for (uint32_t i1351 =  (int32_t)0; i1351 <  (int32_t)1; i1351++){
for (uint32_t i1352 =  (int32_t)0; i1352 <  (int32_t)1; i1352++){
Arr4DIdxRowM(tmp628, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)30,i1350,i1351,i1352,i1353) = Arr4DIdxRowM(tmp626, (int32_t)1, (int32_t)30, (int32_t)1, (int32_t)1,i1346,i1347,i1348,i1349);
i1349 = (i1349 +  (int64_t)1);
if ((i1349 ==  (int64_t)1)) {
i1349 =  (int64_t)0;
i1348 = (i1348 +  (int64_t)1);
if ((i1348 ==  (int64_t)1)) {
i1348 =  (int64_t)0;
i1347 = (i1347 +  (int64_t)1);
if ((i1347 ==  (int64_t)30)) {
i1347 =  (int64_t)0;
i1346 = (i1346 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)30,  (int32_t)1,  (int32_t)1, tmp626);

uint64_t* tmp630 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)30,  (int32_t)120);

int64_t i1361;

int64_t i1360;

int64_t i1359;

int64_t i1358;

int64_t i1357;

int64_t i1356;

int64_t i1355;

int64_t i1354;
i1354 =  (int64_t)0;
i1355 =  (int64_t)0;
i1356 =  (int64_t)0;
i1357 =  (int64_t)0;
for (uint32_t i1361 =  (int32_t)0; i1361 <  (int32_t)120; i1361++){
for (uint32_t i1360 =  (int32_t)0; i1360 <  (int32_t)30; i1360++){
for (uint32_t i1358 =  (int32_t)0; i1358 <  (int32_t)1; i1358++){
for (uint32_t i1359 =  (int32_t)0; i1359 <  (int32_t)1; i1359++){
Arr4DIdxRowM(tmp630, (int32_t)1, (int32_t)1, (int32_t)30, (int32_t)120,i1358,i1359,i1360,i1361) = Arr4DIdxRowM(tmp39, (int32_t)120, (int32_t)30, (int32_t)1, (int32_t)1,i1354,i1355,i1356,i1357);
i1357 = (i1357 +  (int64_t)1);
if ((i1357 ==  (int64_t)1)) {
i1357 =  (int64_t)0;
i1356 = (i1356 +  (int64_t)1);
if ((i1356 ==  (int64_t)1)) {
i1356 =  (int64_t)0;
i1355 = (i1355 +  (int64_t)1);
if ((i1355 ==  (int64_t)30)) {
i1355 =  (int64_t)0;
i1354 = (i1354 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)120,  (int32_t)30,  (int32_t)1,  (int32_t)1, tmp39);

uint64_t* tmp632 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)30,  (int32_t)1,  (int32_t)1,  (int32_t)120,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp628, tmp630, tmp632);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)30,  (int32_t)120, tmp630);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)30, tmp628);

uint64_t* tmp635 = make_array<uint64_t>( (int32_t)1,  (int32_t)120,  (int32_t)1,  (int32_t)1);

int64_t i1369;

int64_t i1368;

int64_t i1367;

int64_t i1366;

int64_t i1365;

int64_t i1364;

int64_t i1363;

int64_t i1362;
i1362 =  (int64_t)0;
i1363 =  (int64_t)0;
i1364 =  (int64_t)0;
i1365 =  (int64_t)0;
for (uint32_t i1366 =  (int32_t)0; i1366 <  (int32_t)1; i1366++){
for (uint32_t i1368 =  (int32_t)0; i1368 <  (int32_t)1; i1368++){
for (uint32_t i1369 =  (int32_t)0; i1369 <  (int32_t)1; i1369++){
for (uint32_t i1367 =  (int32_t)0; i1367 <  (int32_t)120; i1367++){
Arr4DIdxRowM(tmp635, (int32_t)1, (int32_t)120, (int32_t)1, (int32_t)1,i1366,i1367,i1368,i1369) = Arr4DIdxRowM(tmp632, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)120,i1362,i1363,i1364,i1365);
i1365 = (i1365 +  (int64_t)1);
if ((i1365 ==  (int64_t)120)) {
i1365 =  (int64_t)0;
i1364 = (i1364 +  (int64_t)1);
if ((i1364 ==  (int64_t)1)) {
i1364 =  (int64_t)0;
i1363 = (i1363 +  (int64_t)1);
if ((i1363 ==  (int64_t)1)) {
i1363 =  (int64_t)0;
i1362 = (i1362 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120, tmp632);

uint64_t* tmp637 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120);

int64_t i1377;

int64_t i1376;

int64_t i1375;

int64_t i1374;

int64_t i1373;

int64_t i1372;

int64_t i1371;

int64_t i1370;
i1370 =  (int64_t)0;
i1371 =  (int64_t)0;
i1372 =  (int64_t)0;
i1373 =  (int64_t)0;
for (uint32_t i1374 =  (int32_t)0; i1374 <  (int32_t)1; i1374++){
for (uint32_t i1377 =  (int32_t)0; i1377 <  (int32_t)120; i1377++){
for (uint32_t i1375 =  (int32_t)0; i1375 <  (int32_t)1; i1375++){
for (uint32_t i1376 =  (int32_t)0; i1376 <  (int32_t)1; i1376++){
Arr4DIdxRowM(tmp637, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)120,i1374,i1375,i1376,i1377) = Arr4DIdxRowM(tmp635, (int32_t)1, (int32_t)120, (int32_t)1, (int32_t)1,i1370,i1371,i1372,i1373);
i1373 = (i1373 +  (int64_t)1);
if ((i1373 ==  (int64_t)1)) {
i1373 =  (int64_t)0;
i1372 = (i1372 +  (int64_t)1);
if ((i1372 ==  (int64_t)1)) {
i1372 =  (int64_t)0;
i1371 = (i1371 +  (int64_t)1);
if ((i1371 ==  (int64_t)120)) {
i1371 =  (int64_t)0;
i1370 = (i1370 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)120,  (int32_t)1,  (int32_t)1, tmp635);

uint64_t* tmp639 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120);
HardSigmoid4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120, tmp637, tmp639,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120, tmp637);

uint64_t* tmp641 = make_array<uint64_t>( (int32_t)1,  (int32_t)120,  (int32_t)1,  (int32_t)1);

int64_t i1385;

int64_t i1384;

int64_t i1383;

int64_t i1382;

int64_t i1381;

int64_t i1380;

int64_t i1379;

int64_t i1378;
i1378 =  (int64_t)0;
i1379 =  (int64_t)0;
i1380 =  (int64_t)0;
i1381 =  (int64_t)0;
for (uint32_t i1382 =  (int32_t)0; i1382 <  (int32_t)1; i1382++){
for (uint32_t i1384 =  (int32_t)0; i1384 <  (int32_t)1; i1384++){
for (uint32_t i1385 =  (int32_t)0; i1385 <  (int32_t)1; i1385++){
for (uint32_t i1383 =  (int32_t)0; i1383 <  (int32_t)120; i1383++){
Arr4DIdxRowM(tmp641, (int32_t)1, (int32_t)120, (int32_t)1, (int32_t)1,i1382,i1383,i1384,i1385) = Arr4DIdxRowM(tmp639, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)120,i1378,i1379,i1380,i1381);
i1381 = (i1381 +  (int64_t)1);
if ((i1381 ==  (int64_t)120)) {
i1381 =  (int64_t)0;
i1380 = (i1380 +  (int64_t)1);
if ((i1380 ==  (int64_t)1)) {
i1380 =  (int64_t)0;
i1379 = (i1379 +  (int64_t)1);
if ((i1379 ==  (int64_t)1)) {
i1379 =  (int64_t)0;
i1378 = (i1378 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120, tmp639);

uint64_t* tmp643 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120);

int64_t i1393;

int64_t i1392;

int64_t i1391;

int64_t i1390;

int64_t i1389;

int64_t i1388;

int64_t i1387;

int64_t i1386;
i1386 =  (int64_t)0;
i1387 =  (int64_t)0;
i1388 =  (int64_t)0;
i1389 =  (int64_t)0;
for (uint32_t i1390 =  (int32_t)0; i1390 <  (int32_t)1; i1390++){
for (uint32_t i1393 =  (int32_t)0; i1393 <  (int32_t)120; i1393++){
for (uint32_t i1391 =  (int32_t)0; i1391 <  (int32_t)28; i1391++){
for (uint32_t i1392 =  (int32_t)0; i1392 <  (int32_t)28; i1392++){
Arr4DIdxRowM(tmp643, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)120,i1390,i1391,i1392,i1393) = Arr4DIdxRowM(tmp600, (int32_t)1, (int32_t)120, (int32_t)28, (int32_t)28,i1386,i1387,i1388,i1389);
i1389 = (i1389 +  (int64_t)1);
if ((i1389 ==  (int64_t)28)) {
i1389 =  (int64_t)0;
i1388 = (i1388 +  (int64_t)1);
if ((i1388 ==  (int64_t)28)) {
i1388 =  (int64_t)0;
i1387 = (i1387 +  (int64_t)1);
if ((i1387 ==  (int64_t)120)) {
i1387 =  (int64_t)0;
i1386 = (i1386 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)120,  (int32_t)28,  (int32_t)28, tmp600);

uint64_t* tmp645 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120);

int64_t i1401;

int64_t i1400;

int64_t i1399;

int64_t i1398;

int64_t i1397;

int64_t i1396;

int64_t i1395;

int64_t i1394;
i1394 =  (int64_t)0;
i1395 =  (int64_t)0;
i1396 =  (int64_t)0;
i1397 =  (int64_t)0;
for (uint32_t i1398 =  (int32_t)0; i1398 <  (int32_t)1; i1398++){
for (uint32_t i1401 =  (int32_t)0; i1401 <  (int32_t)120; i1401++){
for (uint32_t i1399 =  (int32_t)0; i1399 <  (int32_t)1; i1399++){
for (uint32_t i1400 =  (int32_t)0; i1400 <  (int32_t)1; i1400++){
Arr4DIdxRowM(tmp645, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)120,i1398,i1399,i1400,i1401) = Arr4DIdxRowM(tmp641, (int32_t)1, (int32_t)120, (int32_t)1, (int32_t)1,i1394,i1395,i1396,i1397);
i1397 = (i1397 +  (int64_t)1);
if ((i1397 ==  (int64_t)1)) {
i1397 =  (int64_t)0;
i1396 = (i1396 +  (int64_t)1);
if ((i1396 ==  (int64_t)1)) {
i1396 =  (int64_t)0;
i1395 = (i1395 +  (int64_t)1);
if ((i1395 ==  (int64_t)120)) {
i1395 =  (int64_t)0;
i1394 = (i1394 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)120,  (int32_t)1,  (int32_t)1, tmp641);

uint64_t* tmp647 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120);

uint64_t* tmp648 = make_array<uint64_t>( (int32_t)94080);

uint64_t* tmp649 = make_array<uint64_t>( (int32_t)94080);

uint64_t* tmp650 = make_array<uint64_t>( (int32_t)94080);

int32_t tmp651;
for (uint32_t i1402 =  (int32_t)0; i1402 <  (int32_t)1; i1402++){
for (uint32_t i1403 =  (int32_t)0; i1403 <  (int32_t)28; i1403++){
for (uint32_t i1404 =  (int32_t)0; i1404 <  (int32_t)28; i1404++){
for (uint32_t i1405 =  (int32_t)0; i1405 <  (int32_t)120; i1405++){
tmp651 = (((( (int32_t)0 + (i1402 *  (int32_t)94080)) + (i1403 *  (int32_t)3360)) + (i1404 *  (int32_t)120)) + (i1405 *  (int32_t)1));
Arr1DIdxRowM(tmp648, (int32_t)94080,tmp651) = Arr4DIdxRowM(tmp643, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)120,i1402,i1403,i1404,i1405);
Arr1DIdxRowM(tmp649, (int32_t)94080,tmp651) = Arr4DIdxRowM(tmp645, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)120,i1402, (int32_t)0, (int32_t)0,i1405);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)94080, tmp648, tmp649, tmp650);
ClearMemSecret1( (int32_t)94080, tmp648);
ClearMemSecret1( (int32_t)94080, tmp649);
for (uint32_t i1402 =  (int32_t)0; i1402 <  (int32_t)1; i1402++){
for (uint32_t i1403 =  (int32_t)0; i1403 <  (int32_t)28; i1403++){
for (uint32_t i1404 =  (int32_t)0; i1404 <  (int32_t)28; i1404++){
for (uint32_t i1405 =  (int32_t)0; i1405 <  (int32_t)120; i1405++){
tmp651 = (((( (int32_t)0 + (i1402 *  (int32_t)94080)) + (i1403 *  (int32_t)3360)) + (i1404 *  (int32_t)120)) + (i1405 *  (int32_t)1));
Arr4DIdxRowM(tmp647, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)120,i1402,i1403,i1404,i1405) = Arr1DIdxRowM(tmp650, (int32_t)94080,tmp651);
}
}
}
}
ClearMemSecret1( (int32_t)94080, tmp650);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp643);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120, tmp645);

uint64_t* tmp654 = make_array<uint64_t>( (int32_t)1,  (int32_t)120,  (int32_t)28,  (int32_t)28);

int64_t i1413;

int64_t i1412;

int64_t i1411;

int64_t i1410;

int64_t i1409;

int64_t i1408;

int64_t i1407;

int64_t i1406;
i1406 =  (int64_t)0;
i1407 =  (int64_t)0;
i1408 =  (int64_t)0;
i1409 =  (int64_t)0;
for (uint32_t i1410 =  (int32_t)0; i1410 <  (int32_t)1; i1410++){
for (uint32_t i1412 =  (int32_t)0; i1412 <  (int32_t)28; i1412++){
for (uint32_t i1413 =  (int32_t)0; i1413 <  (int32_t)28; i1413++){
for (uint32_t i1411 =  (int32_t)0; i1411 <  (int32_t)120; i1411++){
Arr4DIdxRowM(tmp654, (int32_t)1, (int32_t)120, (int32_t)28, (int32_t)28,i1410,i1411,i1412,i1413) = Arr4DIdxRowM(tmp647, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)120,i1406,i1407,i1408,i1409);
i1409 = (i1409 +  (int64_t)1);
if ((i1409 ==  (int64_t)120)) {
i1409 =  (int64_t)0;
i1408 = (i1408 +  (int64_t)1);
if ((i1408 ==  (int64_t)28)) {
i1408 =  (int64_t)0;
i1407 = (i1407 +  (int64_t)1);
if ((i1407 ==  (int64_t)28)) {
i1407 =  (int64_t)0;
i1406 = (i1406 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp647);

uint64_t* tmp656 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120);

int64_t i1421;

int64_t i1420;

int64_t i1419;

int64_t i1418;

int64_t i1417;

int64_t i1416;

int64_t i1415;

int64_t i1414;
i1414 =  (int64_t)0;
i1415 =  (int64_t)0;
i1416 =  (int64_t)0;
i1417 =  (int64_t)0;
for (uint32_t i1418 =  (int32_t)0; i1418 <  (int32_t)1; i1418++){
for (uint32_t i1421 =  (int32_t)0; i1421 <  (int32_t)120; i1421++){
for (uint32_t i1419 =  (int32_t)0; i1419 <  (int32_t)28; i1419++){
for (uint32_t i1420 =  (int32_t)0; i1420 <  (int32_t)28; i1420++){
Arr4DIdxRowM(tmp656, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)120,i1418,i1419,i1420,i1421) = Arr4DIdxRowM(tmp654, (int32_t)1, (int32_t)120, (int32_t)28, (int32_t)28,i1414,i1415,i1416,i1417);
i1417 = (i1417 +  (int64_t)1);
if ((i1417 ==  (int64_t)28)) {
i1417 =  (int64_t)0;
i1416 = (i1416 +  (int64_t)1);
if ((i1416 ==  (int64_t)28)) {
i1416 =  (int64_t)0;
i1415 = (i1415 +  (int64_t)1);
if ((i1415 ==  (int64_t)120)) {
i1415 =  (int64_t)0;
i1414 = (i1414 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)120,  (int32_t)28,  (int32_t)28, tmp654);

uint64_t* tmp658 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)120,  (int32_t)40);

int64_t i1429;

int64_t i1428;

int64_t i1427;

int64_t i1426;

int64_t i1425;

int64_t i1424;

int64_t i1423;

int64_t i1422;
i1422 =  (int64_t)0;
i1423 =  (int64_t)0;
i1424 =  (int64_t)0;
i1425 =  (int64_t)0;
for (uint32_t i1429 =  (int32_t)0; i1429 <  (int32_t)40; i1429++){
for (uint32_t i1428 =  (int32_t)0; i1428 <  (int32_t)120; i1428++){
for (uint32_t i1426 =  (int32_t)0; i1426 <  (int32_t)1; i1426++){
for (uint32_t i1427 =  (int32_t)0; i1427 <  (int32_t)1; i1427++){
Arr4DIdxRowM(tmp658, (int32_t)1, (int32_t)1, (int32_t)120, (int32_t)40,i1426,i1427,i1428,i1429) = Arr4DIdxRowM(tmp40, (int32_t)40, (int32_t)120, (int32_t)1, (int32_t)1,i1422,i1423,i1424,i1425);
i1425 = (i1425 +  (int64_t)1);
if ((i1425 ==  (int64_t)1)) {
i1425 =  (int64_t)0;
i1424 = (i1424 +  (int64_t)1);
if ((i1424 ==  (int64_t)1)) {
i1424 =  (int64_t)0;
i1423 = (i1423 +  (int64_t)1);
if ((i1423 ==  (int64_t)120)) {
i1423 =  (int64_t)0;
i1422 = (i1422 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)40,  (int32_t)120,  (int32_t)1,  (int32_t)1, tmp40);

uint64_t* tmp660 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40);
ScaleDown4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp656,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120,  (int32_t)1,  (int32_t)1,  (int32_t)40,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp656, tmp658, tmp660);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp656);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)120,  (int32_t)40, tmp658);

uint64_t* tmp663 = make_array<uint64_t>( (int32_t)1,  (int32_t)40,  (int32_t)28,  (int32_t)28);

int64_t i1437;

int64_t i1436;

int64_t i1435;

int64_t i1434;

int64_t i1433;

int64_t i1432;

int64_t i1431;

int64_t i1430;
i1430 =  (int64_t)0;
i1431 =  (int64_t)0;
i1432 =  (int64_t)0;
i1433 =  (int64_t)0;
for (uint32_t i1434 =  (int32_t)0; i1434 <  (int32_t)1; i1434++){
for (uint32_t i1436 =  (int32_t)0; i1436 <  (int32_t)28; i1436++){
for (uint32_t i1437 =  (int32_t)0; i1437 <  (int32_t)28; i1437++){
for (uint32_t i1435 =  (int32_t)0; i1435 <  (int32_t)40; i1435++){
Arr4DIdxRowM(tmp663, (int32_t)1, (int32_t)40, (int32_t)28, (int32_t)28,i1434,i1435,i1436,i1437) = Arr4DIdxRowM(tmp660, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i1430,i1431,i1432,i1433);
i1433 = (i1433 +  (int64_t)1);
if ((i1433 ==  (int64_t)40)) {
i1433 =  (int64_t)0;
i1432 = (i1432 +  (int64_t)1);
if ((i1432 ==  (int64_t)28)) {
i1432 =  (int64_t)0;
i1431 = (i1431 +  (int64_t)1);
if ((i1431 ==  (int64_t)28)) {
i1431 =  (int64_t)0;
i1430 = (i1430 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp660);

uint64_t* tmp665 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40);

int64_t i1445;

int64_t i1444;

int64_t i1443;

int64_t i1442;

int64_t i1441;

int64_t i1440;

int64_t i1439;

int64_t i1438;
i1438 =  (int64_t)0;
i1439 =  (int64_t)0;
i1440 =  (int64_t)0;
i1441 =  (int64_t)0;
for (uint32_t i1442 =  (int32_t)0; i1442 <  (int32_t)1; i1442++){
for (uint32_t i1445 =  (int32_t)0; i1445 <  (int32_t)40; i1445++){
for (uint32_t i1443 =  (int32_t)0; i1443 <  (int32_t)28; i1443++){
for (uint32_t i1444 =  (int32_t)0; i1444 <  (int32_t)28; i1444++){
Arr4DIdxRowM(tmp665, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i1442,i1443,i1444,i1445) = Arr4DIdxRowM(tmp663, (int32_t)1, (int32_t)40, (int32_t)28, (int32_t)28,i1438,i1439,i1440,i1441);
i1441 = (i1441 +  (int64_t)1);
if ((i1441 ==  (int64_t)28)) {
i1441 =  (int64_t)0;
i1440 = (i1440 +  (int64_t)1);
if ((i1440 ==  (int64_t)28)) {
i1440 =  (int64_t)0;
i1439 = (i1439 +  (int64_t)1);
if ((i1439 ==  (int64_t)40)) {
i1439 =  (int64_t)0;
i1438 = (i1438 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)40,  (int32_t)28,  (int32_t)28, tmp663);

uint64_t* tmp667 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40);
ScaleDown4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp665,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp665, tmp28, tmp29,  (int32_t)0,  (int32_t)0, tmp667);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp665);

uint64_t* tmp669 = make_array<uint64_t>( (int32_t)1,  (int32_t)40,  (int32_t)28,  (int32_t)28);

int64_t i1453;

int64_t i1452;

int64_t i1451;

int64_t i1450;

int64_t i1449;

int64_t i1448;

int64_t i1447;

int64_t i1446;
i1446 =  (int64_t)0;
i1447 =  (int64_t)0;
i1448 =  (int64_t)0;
i1449 =  (int64_t)0;
for (uint32_t i1450 =  (int32_t)0; i1450 <  (int32_t)1; i1450++){
for (uint32_t i1452 =  (int32_t)0; i1452 <  (int32_t)28; i1452++){
for (uint32_t i1453 =  (int32_t)0; i1453 <  (int32_t)28; i1453++){
for (uint32_t i1451 =  (int32_t)0; i1451 <  (int32_t)40; i1451++){
Arr4DIdxRowM(tmp669, (int32_t)1, (int32_t)40, (int32_t)28, (int32_t)28,i1450,i1451,i1452,i1453) = Arr4DIdxRowM(tmp667, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i1446,i1447,i1448,i1449);
i1449 = (i1449 +  (int64_t)1);
if ((i1449 ==  (int64_t)40)) {
i1449 =  (int64_t)0;
i1448 = (i1448 +  (int64_t)1);
if ((i1448 ==  (int64_t)28)) {
i1448 =  (int64_t)0;
i1447 = (i1447 +  (int64_t)1);
if ((i1447 ==  (int64_t)28)) {
i1447 =  (int64_t)0;
i1446 = (i1446 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp667);

uint64_t* tmp671 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40);

int64_t i1461;

int64_t i1460;

int64_t i1459;

int64_t i1458;

int64_t i1457;

int64_t i1456;

int64_t i1455;

int64_t i1454;
i1454 =  (int64_t)0;
i1455 =  (int64_t)0;
i1456 =  (int64_t)0;
i1457 =  (int64_t)0;
for (uint32_t i1458 =  (int32_t)0; i1458 <  (int32_t)1; i1458++){
for (uint32_t i1461 =  (int32_t)0; i1461 <  (int32_t)40; i1461++){
for (uint32_t i1459 =  (int32_t)0; i1459 <  (int32_t)28; i1459++){
for (uint32_t i1460 =  (int32_t)0; i1460 <  (int32_t)28; i1460++){
Arr4DIdxRowM(tmp671, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i1458,i1459,i1460,i1461) = Arr4DIdxRowM(tmp669, (int32_t)1, (int32_t)40, (int32_t)28, (int32_t)28,i1454,i1455,i1456,i1457);
i1457 = (i1457 +  (int64_t)1);
if ((i1457 ==  (int64_t)28)) {
i1457 =  (int64_t)0;
i1456 = (i1456 +  (int64_t)1);
if ((i1456 ==  (int64_t)28)) {
i1456 =  (int64_t)0;
i1455 = (i1455 +  (int64_t)1);
if ((i1455 ==  (int64_t)40)) {
i1455 =  (int64_t)0;
i1454 = (i1454 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)40,  (int32_t)28,  (int32_t)28, tmp669);

uint64_t* tmp673 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40);

int64_t i1469;

int64_t i1468;

int64_t i1467;

int64_t i1466;

int64_t i1465;

int64_t i1464;

int64_t i1463;

int64_t i1462;
i1462 =  (int64_t)0;
i1463 =  (int64_t)0;
i1464 =  (int64_t)0;
i1465 =  (int64_t)0;
for (uint32_t i1466 =  (int32_t)0; i1466 <  (int32_t)1; i1466++){
for (uint32_t i1469 =  (int32_t)0; i1469 <  (int32_t)40; i1469++){
for (uint32_t i1467 =  (int32_t)0; i1467 <  (int32_t)28; i1467++){
for (uint32_t i1468 =  (int32_t)0; i1468 <  (int32_t)28; i1468++){
Arr4DIdxRowM(tmp673, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i1466,i1467,i1468,i1469) = Arr4DIdxRowM(tmp559, (int32_t)1, (int32_t)40, (int32_t)28, (int32_t)28,i1462,i1463,i1464,i1465);
i1465 = (i1465 +  (int64_t)1);
if ((i1465 ==  (int64_t)28)) {
i1465 =  (int64_t)0;
i1464 = (i1464 +  (int64_t)1);
if ((i1464 ==  (int64_t)28)) {
i1464 =  (int64_t)0;
i1463 = (i1463 +  (int64_t)1);
if ((i1463 ==  (int64_t)40)) {
i1463 =  (int64_t)0;
i1462 = (i1462 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)40,  (int32_t)28,  (int32_t)28, tmp559);
ScaleUp4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp673,  (int32_t)23);

uint64_t* tmp675 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40);
for (uint32_t i0 =  (int32_t)0; i0 <  (int32_t)1; i0++){
for (uint32_t i1 =  (int32_t)0; i1 <  (int32_t)28; i1++){
for (uint32_t i2 =  (int32_t)0; i2 <  (int32_t)28; i2++){
for (uint32_t i3 =  (int32_t)0; i3 <  (int32_t)40; i3++){
Arr4DIdxRowM(tmp675, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i0,i1,i2,i3) = SecretAdd(Arr4DIdxRowM(tmp671, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i0,i1,i2,i3), Arr4DIdxRowM(tmp673, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i0,i1,i2,i3));
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp673);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp671);

uint64_t* tmp678 = make_array<uint64_t>( (int32_t)1,  (int32_t)40,  (int32_t)28,  (int32_t)28);

int64_t i1477;

int64_t i1476;

int64_t i1475;

int64_t i1474;

int64_t i1473;

int64_t i1472;

int64_t i1471;

int64_t i1470;
i1470 =  (int64_t)0;
i1471 =  (int64_t)0;
i1472 =  (int64_t)0;
i1473 =  (int64_t)0;
for (uint32_t i1474 =  (int32_t)0; i1474 <  (int32_t)1; i1474++){
for (uint32_t i1476 =  (int32_t)0; i1476 <  (int32_t)28; i1476++){
for (uint32_t i1477 =  (int32_t)0; i1477 <  (int32_t)28; i1477++){
for (uint32_t i1475 =  (int32_t)0; i1475 <  (int32_t)40; i1475++){
Arr4DIdxRowM(tmp678, (int32_t)1, (int32_t)40, (int32_t)28, (int32_t)28,i1474,i1475,i1476,i1477) = Arr4DIdxRowM(tmp675, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i1470,i1471,i1472,i1473);
i1473 = (i1473 +  (int64_t)1);
if ((i1473 ==  (int64_t)40)) {
i1473 =  (int64_t)0;
i1472 = (i1472 +  (int64_t)1);
if ((i1472 ==  (int64_t)28)) {
i1472 =  (int64_t)0;
i1471 = (i1471 +  (int64_t)1);
if ((i1471 ==  (int64_t)28)) {
i1471 =  (int64_t)0;
i1470 = (i1470 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp675);

uint64_t* tmp680 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40);

int64_t i1485;

int64_t i1484;

int64_t i1483;

int64_t i1482;

int64_t i1481;

int64_t i1480;

int64_t i1479;

int64_t i1478;
i1478 =  (int64_t)0;
i1479 =  (int64_t)0;
i1480 =  (int64_t)0;
i1481 =  (int64_t)0;
for (uint32_t i1482 =  (int32_t)0; i1482 <  (int32_t)1; i1482++){
for (uint32_t i1485 =  (int32_t)0; i1485 <  (int32_t)40; i1485++){
for (uint32_t i1483 =  (int32_t)0; i1483 <  (int32_t)28; i1483++){
for (uint32_t i1484 =  (int32_t)0; i1484 <  (int32_t)28; i1484++){
Arr4DIdxRowM(tmp680, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i1482,i1483,i1484,i1485) = Arr4DIdxRowM(tmp678, (int32_t)1, (int32_t)40, (int32_t)28, (int32_t)28,i1478,i1479,i1480,i1481);
i1481 = (i1481 +  (int64_t)1);
if ((i1481 ==  (int64_t)28)) {
i1481 =  (int64_t)0;
i1480 = (i1480 +  (int64_t)1);
if ((i1480 ==  (int64_t)28)) {
i1480 =  (int64_t)0;
i1479 = (i1479 +  (int64_t)1);
if ((i1479 ==  (int64_t)40)) {
i1479 =  (int64_t)0;
i1478 = (i1478 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)40,  (int32_t)28,  (int32_t)28, tmp678);

uint64_t* tmp682 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40);
Relu4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp680, tmp682,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp680);

uint64_t* tmp684 = make_array<uint64_t>( (int32_t)1,  (int32_t)40,  (int32_t)28,  (int32_t)28);

int64_t i1493;

int64_t i1492;

int64_t i1491;

int64_t i1490;

int64_t i1489;

int64_t i1488;

int64_t i1487;

int64_t i1486;
i1486 =  (int64_t)0;
i1487 =  (int64_t)0;
i1488 =  (int64_t)0;
i1489 =  (int64_t)0;
for (uint32_t i1490 =  (int32_t)0; i1490 <  (int32_t)1; i1490++){
for (uint32_t i1492 =  (int32_t)0; i1492 <  (int32_t)28; i1492++){
for (uint32_t i1493 =  (int32_t)0; i1493 <  (int32_t)28; i1493++){
for (uint32_t i1491 =  (int32_t)0; i1491 <  (int32_t)40; i1491++){
Arr4DIdxRowM(tmp684, (int32_t)1, (int32_t)40, (int32_t)28, (int32_t)28,i1490,i1491,i1492,i1493) = Arr4DIdxRowM(tmp682, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i1486,i1487,i1488,i1489);
i1489 = (i1489 +  (int64_t)1);
if ((i1489 ==  (int64_t)40)) {
i1489 =  (int64_t)0;
i1488 = (i1488 +  (int64_t)1);
if ((i1488 ==  (int64_t)28)) {
i1488 =  (int64_t)0;
i1487 = (i1487 +  (int64_t)1);
if ((i1487 ==  (int64_t)28)) {
i1487 =  (int64_t)0;
i1486 = (i1486 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp682);

uint64_t* tmp686 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40);

int64_t i1501;

int64_t i1500;

int64_t i1499;

int64_t i1498;

int64_t i1497;

int64_t i1496;

int64_t i1495;

int64_t i1494;
i1494 =  (int64_t)0;
i1495 =  (int64_t)0;
i1496 =  (int64_t)0;
i1497 =  (int64_t)0;
for (uint32_t i1498 =  (int32_t)0; i1498 <  (int32_t)1; i1498++){
for (uint32_t i1501 =  (int32_t)0; i1501 <  (int32_t)40; i1501++){
for (uint32_t i1499 =  (int32_t)0; i1499 <  (int32_t)28; i1499++){
for (uint32_t i1500 =  (int32_t)0; i1500 <  (int32_t)28; i1500++){
Arr4DIdxRowM(tmp686, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i1498,i1499,i1500,i1501) = Arr4DIdxRowM(tmp684, (int32_t)1, (int32_t)40, (int32_t)28, (int32_t)28,i1494,i1495,i1496,i1497);
i1497 = (i1497 +  (int64_t)1);
if ((i1497 ==  (int64_t)28)) {
i1497 =  (int64_t)0;
i1496 = (i1496 +  (int64_t)1);
if ((i1496 ==  (int64_t)28)) {
i1496 =  (int64_t)0;
i1495 = (i1495 +  (int64_t)1);
if ((i1495 ==  (int64_t)40)) {
i1495 =  (int64_t)0;
i1494 = (i1494 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp687 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)40,  (int32_t)120);

int64_t i1509;

int64_t i1508;

int64_t i1507;

int64_t i1506;

int64_t i1505;

int64_t i1504;

int64_t i1503;

int64_t i1502;
i1502 =  (int64_t)0;
i1503 =  (int64_t)0;
i1504 =  (int64_t)0;
i1505 =  (int64_t)0;
for (uint32_t i1509 =  (int32_t)0; i1509 <  (int32_t)120; i1509++){
for (uint32_t i1508 =  (int32_t)0; i1508 <  (int32_t)40; i1508++){
for (uint32_t i1506 =  (int32_t)0; i1506 <  (int32_t)1; i1506++){
for (uint32_t i1507 =  (int32_t)0; i1507 <  (int32_t)1; i1507++){
Arr4DIdxRowM(tmp687, (int32_t)1, (int32_t)1, (int32_t)40, (int32_t)120,i1506,i1507,i1508,i1509) = Arr4DIdxRowM(tmp41, (int32_t)120, (int32_t)40, (int32_t)1, (int32_t)1,i1502,i1503,i1504,i1505);
i1505 = (i1505 +  (int64_t)1);
if ((i1505 ==  (int64_t)1)) {
i1505 =  (int64_t)0;
i1504 = (i1504 +  (int64_t)1);
if ((i1504 ==  (int64_t)1)) {
i1504 =  (int64_t)0;
i1503 = (i1503 +  (int64_t)1);
if ((i1503 ==  (int64_t)40)) {
i1503 =  (int64_t)0;
i1502 = (i1502 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)120,  (int32_t)40,  (int32_t)1,  (int32_t)1, tmp41);

uint64_t* tmp689 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40,  (int32_t)1,  (int32_t)1,  (int32_t)120,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp686, tmp687, tmp689);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)40,  (int32_t)120, tmp687);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp686);

uint64_t* tmp692 = make_array<uint64_t>( (int32_t)1,  (int32_t)120,  (int32_t)28,  (int32_t)28);

int64_t i1517;

int64_t i1516;

int64_t i1515;

int64_t i1514;

int64_t i1513;

int64_t i1512;

int64_t i1511;

int64_t i1510;
i1510 =  (int64_t)0;
i1511 =  (int64_t)0;
i1512 =  (int64_t)0;
i1513 =  (int64_t)0;
for (uint32_t i1514 =  (int32_t)0; i1514 <  (int32_t)1; i1514++){
for (uint32_t i1516 =  (int32_t)0; i1516 <  (int32_t)28; i1516++){
for (uint32_t i1517 =  (int32_t)0; i1517 <  (int32_t)28; i1517++){
for (uint32_t i1515 =  (int32_t)0; i1515 <  (int32_t)120; i1515++){
Arr4DIdxRowM(tmp692, (int32_t)1, (int32_t)120, (int32_t)28, (int32_t)28,i1514,i1515,i1516,i1517) = Arr4DIdxRowM(tmp689, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)120,i1510,i1511,i1512,i1513);
i1513 = (i1513 +  (int64_t)1);
if ((i1513 ==  (int64_t)120)) {
i1513 =  (int64_t)0;
i1512 = (i1512 +  (int64_t)1);
if ((i1512 ==  (int64_t)28)) {
i1512 =  (int64_t)0;
i1511 = (i1511 +  (int64_t)1);
if ((i1511 ==  (int64_t)28)) {
i1511 =  (int64_t)0;
i1510 = (i1510 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp689);

uint64_t* tmp694 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120);

int64_t i1525;

int64_t i1524;

int64_t i1523;

int64_t i1522;

int64_t i1521;

int64_t i1520;

int64_t i1519;

int64_t i1518;
i1518 =  (int64_t)0;
i1519 =  (int64_t)0;
i1520 =  (int64_t)0;
i1521 =  (int64_t)0;
for (uint32_t i1522 =  (int32_t)0; i1522 <  (int32_t)1; i1522++){
for (uint32_t i1525 =  (int32_t)0; i1525 <  (int32_t)120; i1525++){
for (uint32_t i1523 =  (int32_t)0; i1523 <  (int32_t)28; i1523++){
for (uint32_t i1524 =  (int32_t)0; i1524 <  (int32_t)28; i1524++){
Arr4DIdxRowM(tmp694, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)120,i1522,i1523,i1524,i1525) = Arr4DIdxRowM(tmp692, (int32_t)1, (int32_t)120, (int32_t)28, (int32_t)28,i1518,i1519,i1520,i1521);
i1521 = (i1521 +  (int64_t)1);
if ((i1521 ==  (int64_t)28)) {
i1521 =  (int64_t)0;
i1520 = (i1520 +  (int64_t)1);
if ((i1520 ==  (int64_t)28)) {
i1520 =  (int64_t)0;
i1519 = (i1519 +  (int64_t)1);
if ((i1519 ==  (int64_t)120)) {
i1519 =  (int64_t)0;
i1518 = (i1518 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)120,  (int32_t)28,  (int32_t)28, tmp692);

uint64_t* tmp696 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120);
ScaleDown4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp694,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp694, tmp33, tmp34,  (int32_t)0,  (int32_t)0, tmp696);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp694);

uint64_t* tmp698 = make_array<uint64_t>( (int32_t)1,  (int32_t)120,  (int32_t)28,  (int32_t)28);

int64_t i1533;

int64_t i1532;

int64_t i1531;

int64_t i1530;

int64_t i1529;

int64_t i1528;

int64_t i1527;

int64_t i1526;
i1526 =  (int64_t)0;
i1527 =  (int64_t)0;
i1528 =  (int64_t)0;
i1529 =  (int64_t)0;
for (uint32_t i1530 =  (int32_t)0; i1530 <  (int32_t)1; i1530++){
for (uint32_t i1532 =  (int32_t)0; i1532 <  (int32_t)28; i1532++){
for (uint32_t i1533 =  (int32_t)0; i1533 <  (int32_t)28; i1533++){
for (uint32_t i1531 =  (int32_t)0; i1531 <  (int32_t)120; i1531++){
Arr4DIdxRowM(tmp698, (int32_t)1, (int32_t)120, (int32_t)28, (int32_t)28,i1530,i1531,i1532,i1533) = Arr4DIdxRowM(tmp696, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)120,i1526,i1527,i1528,i1529);
i1529 = (i1529 +  (int64_t)1);
if ((i1529 ==  (int64_t)120)) {
i1529 =  (int64_t)0;
i1528 = (i1528 +  (int64_t)1);
if ((i1528 ==  (int64_t)28)) {
i1528 =  (int64_t)0;
i1527 = (i1527 +  (int64_t)1);
if ((i1527 ==  (int64_t)28)) {
i1527 =  (int64_t)0;
i1526 = (i1526 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp696);

uint64_t* tmp700 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120);

int64_t i1541;

int64_t i1540;

int64_t i1539;

int64_t i1538;

int64_t i1537;

int64_t i1536;

int64_t i1535;

int64_t i1534;
i1534 =  (int64_t)0;
i1535 =  (int64_t)0;
i1536 =  (int64_t)0;
i1537 =  (int64_t)0;
for (uint32_t i1538 =  (int32_t)0; i1538 <  (int32_t)1; i1538++){
for (uint32_t i1541 =  (int32_t)0; i1541 <  (int32_t)120; i1541++){
for (uint32_t i1539 =  (int32_t)0; i1539 <  (int32_t)28; i1539++){
for (uint32_t i1540 =  (int32_t)0; i1540 <  (int32_t)28; i1540++){
Arr4DIdxRowM(tmp700, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)120,i1538,i1539,i1540,i1541) = Arr4DIdxRowM(tmp698, (int32_t)1, (int32_t)120, (int32_t)28, (int32_t)28,i1534,i1535,i1536,i1537);
i1537 = (i1537 +  (int64_t)1);
if ((i1537 ==  (int64_t)28)) {
i1537 =  (int64_t)0;
i1536 = (i1536 +  (int64_t)1);
if ((i1536 ==  (int64_t)28)) {
i1536 =  (int64_t)0;
i1535 = (i1535 +  (int64_t)1);
if ((i1535 ==  (int64_t)120)) {
i1535 =  (int64_t)0;
i1534 = (i1534 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)120,  (int32_t)28,  (int32_t)28, tmp698);

uint64_t* tmp702 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120);
Relu4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp700, tmp702,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp700);

uint64_t* tmp704 = make_array<uint64_t>( (int32_t)1,  (int32_t)120,  (int32_t)28,  (int32_t)28);

int64_t i1549;

int64_t i1548;

int64_t i1547;

int64_t i1546;

int64_t i1545;

int64_t i1544;

int64_t i1543;

int64_t i1542;
i1542 =  (int64_t)0;
i1543 =  (int64_t)0;
i1544 =  (int64_t)0;
i1545 =  (int64_t)0;
for (uint32_t i1546 =  (int32_t)0; i1546 <  (int32_t)1; i1546++){
for (uint32_t i1548 =  (int32_t)0; i1548 <  (int32_t)28; i1548++){
for (uint32_t i1549 =  (int32_t)0; i1549 <  (int32_t)28; i1549++){
for (uint32_t i1547 =  (int32_t)0; i1547 <  (int32_t)120; i1547++){
Arr4DIdxRowM(tmp704, (int32_t)1, (int32_t)120, (int32_t)28, (int32_t)28,i1546,i1547,i1548,i1549) = Arr4DIdxRowM(tmp702, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)120,i1542,i1543,i1544,i1545);
i1545 = (i1545 +  (int64_t)1);
if ((i1545 ==  (int64_t)120)) {
i1545 =  (int64_t)0;
i1544 = (i1544 +  (int64_t)1);
if ((i1544 ==  (int64_t)28)) {
i1544 =  (int64_t)0;
i1543 = (i1543 +  (int64_t)1);
if ((i1543 ==  (int64_t)28)) {
i1543 =  (int64_t)0;
i1542 = (i1542 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp702);

uint64_t* tmp706 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120);

int64_t i1557;

int64_t i1556;

int64_t i1555;

int64_t i1554;

int64_t i1553;

int64_t i1552;

int64_t i1551;

int64_t i1550;
i1550 =  (int64_t)0;
i1551 =  (int64_t)0;
i1552 =  (int64_t)0;
i1553 =  (int64_t)0;
for (uint32_t i1554 =  (int32_t)0; i1554 <  (int32_t)1; i1554++){
for (uint32_t i1557 =  (int32_t)0; i1557 <  (int32_t)120; i1557++){
for (uint32_t i1555 =  (int32_t)0; i1555 <  (int32_t)28; i1555++){
for (uint32_t i1556 =  (int32_t)0; i1556 <  (int32_t)28; i1556++){
Arr4DIdxRowM(tmp706, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)120,i1554,i1555,i1556,i1557) = Arr4DIdxRowM(tmp704, (int32_t)1, (int32_t)120, (int32_t)28, (int32_t)28,i1550,i1551,i1552,i1553);
i1553 = (i1553 +  (int64_t)1);
if ((i1553 ==  (int64_t)28)) {
i1553 =  (int64_t)0;
i1552 = (i1552 +  (int64_t)1);
if ((i1552 ==  (int64_t)28)) {
i1552 =  (int64_t)0;
i1551 = (i1551 +  (int64_t)1);
if ((i1551 ==  (int64_t)120)) {
i1551 =  (int64_t)0;
i1550 = (i1550 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)120,  (int32_t)28,  (int32_t)28, tmp704);

uint64_t* tmp708 = make_array<uint64_t>( (int32_t)5,  (int32_t)5,  (int32_t)1,  (int32_t)120);

int64_t i1565;

int64_t i1564;

int64_t i1563;

int64_t i1562;

int64_t i1561;

int64_t i1560;

int64_t i1559;

int64_t i1558;
i1558 =  (int64_t)0;
i1559 =  (int64_t)0;
i1560 =  (int64_t)0;
i1561 =  (int64_t)0;
for (uint32_t i1565 =  (int32_t)0; i1565 <  (int32_t)120; i1565++){
for (uint32_t i1564 =  (int32_t)0; i1564 <  (int32_t)1; i1564++){
for (uint32_t i1562 =  (int32_t)0; i1562 <  (int32_t)5; i1562++){
for (uint32_t i1563 =  (int32_t)0; i1563 <  (int32_t)5; i1563++){
Arr4DIdxRowM(tmp708, (int32_t)5, (int32_t)5, (int32_t)1, (int32_t)120,i1562,i1563,i1564,i1565) = Arr4DIdxRowM(tmp42, (int32_t)120, (int32_t)1, (int32_t)5, (int32_t)5,i1558,i1559,i1560,i1561);
i1561 = (i1561 +  (int64_t)1);
if ((i1561 ==  (int64_t)5)) {
i1561 =  (int64_t)0;
i1560 = (i1560 +  (int64_t)1);
if ((i1560 ==  (int64_t)5)) {
i1560 =  (int64_t)0;
i1559 = (i1559 +  (int64_t)1);
if ((i1559 ==  (int64_t)1)) {
i1559 =  (int64_t)0;
i1558 = (i1558 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)120,  (int32_t)1,  (int32_t)5,  (int32_t)5, tmp42);

uint64_t* tmp710 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120,  (int32_t)5,  (int32_t)5,  (int32_t)120,  (int32_t)2,  (int32_t)2,  (int32_t)2,  (int32_t)2,  (int32_t)1,  (int32_t)1,  (int32_t)120, tmp706, tmp708, tmp710);
ClearMemSecret4( (int32_t)5,  (int32_t)5,  (int32_t)1,  (int32_t)120, tmp708);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp706);

uint64_t* tmp713 = make_array<uint64_t>( (int32_t)1,  (int32_t)120,  (int32_t)28,  (int32_t)28);

int64_t i1573;

int64_t i1572;

int64_t i1571;

int64_t i1570;

int64_t i1569;

int64_t i1568;

int64_t i1567;

int64_t i1566;
i1566 =  (int64_t)0;
i1567 =  (int64_t)0;
i1568 =  (int64_t)0;
i1569 =  (int64_t)0;
for (uint32_t i1570 =  (int32_t)0; i1570 <  (int32_t)1; i1570++){
for (uint32_t i1572 =  (int32_t)0; i1572 <  (int32_t)28; i1572++){
for (uint32_t i1573 =  (int32_t)0; i1573 <  (int32_t)28; i1573++){
for (uint32_t i1571 =  (int32_t)0; i1571 <  (int32_t)120; i1571++){
Arr4DIdxRowM(tmp713, (int32_t)1, (int32_t)120, (int32_t)28, (int32_t)28,i1570,i1571,i1572,i1573) = Arr4DIdxRowM(tmp710, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)120,i1566,i1567,i1568,i1569);
i1569 = (i1569 +  (int64_t)1);
if ((i1569 ==  (int64_t)120)) {
i1569 =  (int64_t)0;
i1568 = (i1568 +  (int64_t)1);
if ((i1568 ==  (int64_t)28)) {
i1568 =  (int64_t)0;
i1567 = (i1567 +  (int64_t)1);
if ((i1567 ==  (int64_t)28)) {
i1567 =  (int64_t)0;
i1566 = (i1566 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp710);

uint64_t* tmp715 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120);

int64_t i1581;

int64_t i1580;

int64_t i1579;

int64_t i1578;

int64_t i1577;

int64_t i1576;

int64_t i1575;

int64_t i1574;
i1574 =  (int64_t)0;
i1575 =  (int64_t)0;
i1576 =  (int64_t)0;
i1577 =  (int64_t)0;
for (uint32_t i1578 =  (int32_t)0; i1578 <  (int32_t)1; i1578++){
for (uint32_t i1581 =  (int32_t)0; i1581 <  (int32_t)120; i1581++){
for (uint32_t i1579 =  (int32_t)0; i1579 <  (int32_t)28; i1579++){
for (uint32_t i1580 =  (int32_t)0; i1580 <  (int32_t)28; i1580++){
Arr4DIdxRowM(tmp715, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)120,i1578,i1579,i1580,i1581) = Arr4DIdxRowM(tmp713, (int32_t)1, (int32_t)120, (int32_t)28, (int32_t)28,i1574,i1575,i1576,i1577);
i1577 = (i1577 +  (int64_t)1);
if ((i1577 ==  (int64_t)28)) {
i1577 =  (int64_t)0;
i1576 = (i1576 +  (int64_t)1);
if ((i1576 ==  (int64_t)28)) {
i1576 =  (int64_t)0;
i1575 = (i1575 +  (int64_t)1);
if ((i1575 ==  (int64_t)120)) {
i1575 =  (int64_t)0;
i1574 = (i1574 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)120,  (int32_t)28,  (int32_t)28, tmp713);

uint64_t* tmp717 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120);
ScaleDown4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp715,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp715, tmp33, tmp34,  (int32_t)0,  (int32_t)0, tmp717);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp715);

uint64_t* tmp719 = make_array<uint64_t>( (int32_t)1,  (int32_t)120,  (int32_t)28,  (int32_t)28);

int64_t i1589;

int64_t i1588;

int64_t i1587;

int64_t i1586;

int64_t i1585;

int64_t i1584;

int64_t i1583;

int64_t i1582;
i1582 =  (int64_t)0;
i1583 =  (int64_t)0;
i1584 =  (int64_t)0;
i1585 =  (int64_t)0;
for (uint32_t i1586 =  (int32_t)0; i1586 <  (int32_t)1; i1586++){
for (uint32_t i1588 =  (int32_t)0; i1588 <  (int32_t)28; i1588++){
for (uint32_t i1589 =  (int32_t)0; i1589 <  (int32_t)28; i1589++){
for (uint32_t i1587 =  (int32_t)0; i1587 <  (int32_t)120; i1587++){
Arr4DIdxRowM(tmp719, (int32_t)1, (int32_t)120, (int32_t)28, (int32_t)28,i1586,i1587,i1588,i1589) = Arr4DIdxRowM(tmp717, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)120,i1582,i1583,i1584,i1585);
i1585 = (i1585 +  (int64_t)1);
if ((i1585 ==  (int64_t)120)) {
i1585 =  (int64_t)0;
i1584 = (i1584 +  (int64_t)1);
if ((i1584 ==  (int64_t)28)) {
i1584 =  (int64_t)0;
i1583 = (i1583 +  (int64_t)1);
if ((i1583 ==  (int64_t)28)) {
i1583 =  (int64_t)0;
i1582 = (i1582 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp717);

uint64_t* tmp721 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120);

int64_t i1597;

int64_t i1596;

int64_t i1595;

int64_t i1594;

int64_t i1593;

int64_t i1592;

int64_t i1591;

int64_t i1590;
i1590 =  (int64_t)0;
i1591 =  (int64_t)0;
i1592 =  (int64_t)0;
i1593 =  (int64_t)0;
for (uint32_t i1594 =  (int32_t)0; i1594 <  (int32_t)1; i1594++){
for (uint32_t i1597 =  (int32_t)0; i1597 <  (int32_t)120; i1597++){
for (uint32_t i1595 =  (int32_t)0; i1595 <  (int32_t)28; i1595++){
for (uint32_t i1596 =  (int32_t)0; i1596 <  (int32_t)28; i1596++){
Arr4DIdxRowM(tmp721, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)120,i1594,i1595,i1596,i1597) = Arr4DIdxRowM(tmp719, (int32_t)1, (int32_t)120, (int32_t)28, (int32_t)28,i1590,i1591,i1592,i1593);
i1593 = (i1593 +  (int64_t)1);
if ((i1593 ==  (int64_t)28)) {
i1593 =  (int64_t)0;
i1592 = (i1592 +  (int64_t)1);
if ((i1592 ==  (int64_t)28)) {
i1592 =  (int64_t)0;
i1591 = (i1591 +  (int64_t)1);
if ((i1591 ==  (int64_t)120)) {
i1591 =  (int64_t)0;
i1590 = (i1590 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)120,  (int32_t)28,  (int32_t)28, tmp719);

uint64_t* tmp723 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120);
Relu4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp721, tmp723,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp721);

uint64_t* tmp725 = make_array<uint64_t>( (int32_t)1,  (int32_t)120,  (int32_t)28,  (int32_t)28);

int64_t i1605;

int64_t i1604;

int64_t i1603;

int64_t i1602;

int64_t i1601;

int64_t i1600;

int64_t i1599;

int64_t i1598;
i1598 =  (int64_t)0;
i1599 =  (int64_t)0;
i1600 =  (int64_t)0;
i1601 =  (int64_t)0;
for (uint32_t i1602 =  (int32_t)0; i1602 <  (int32_t)1; i1602++){
for (uint32_t i1604 =  (int32_t)0; i1604 <  (int32_t)28; i1604++){
for (uint32_t i1605 =  (int32_t)0; i1605 <  (int32_t)28; i1605++){
for (uint32_t i1603 =  (int32_t)0; i1603 <  (int32_t)120; i1603++){
Arr4DIdxRowM(tmp725, (int32_t)1, (int32_t)120, (int32_t)28, (int32_t)28,i1602,i1603,i1604,i1605) = Arr4DIdxRowM(tmp723, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)120,i1598,i1599,i1600,i1601);
i1601 = (i1601 +  (int64_t)1);
if ((i1601 ==  (int64_t)120)) {
i1601 =  (int64_t)0;
i1600 = (i1600 +  (int64_t)1);
if ((i1600 ==  (int64_t)28)) {
i1600 =  (int64_t)0;
i1599 = (i1599 +  (int64_t)1);
if ((i1599 ==  (int64_t)28)) {
i1599 =  (int64_t)0;
i1598 = (i1598 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp723);

uint64_t* tmp727 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120);

int64_t i1613;

int64_t i1612;

int64_t i1611;

int64_t i1610;

int64_t i1609;

int64_t i1608;

int64_t i1607;

int64_t i1606;
i1606 =  (int64_t)0;
i1607 =  (int64_t)0;
i1608 =  (int64_t)0;
i1609 =  (int64_t)0;
for (uint32_t i1610 =  (int32_t)0; i1610 <  (int32_t)1; i1610++){
for (uint32_t i1613 =  (int32_t)0; i1613 <  (int32_t)120; i1613++){
for (uint32_t i1611 =  (int32_t)0; i1611 <  (int32_t)28; i1611++){
for (uint32_t i1612 =  (int32_t)0; i1612 <  (int32_t)28; i1612++){
Arr4DIdxRowM(tmp727, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)120,i1610,i1611,i1612,i1613) = Arr4DIdxRowM(tmp725, (int32_t)1, (int32_t)120, (int32_t)28, (int32_t)28,i1606,i1607,i1608,i1609);
i1609 = (i1609 +  (int64_t)1);
if ((i1609 ==  (int64_t)28)) {
i1609 =  (int64_t)0;
i1608 = (i1608 +  (int64_t)1);
if ((i1608 ==  (int64_t)28)) {
i1608 =  (int64_t)0;
i1607 = (i1607 +  (int64_t)1);
if ((i1607 ==  (int64_t)120)) {
i1607 =  (int64_t)0;
i1606 = (i1606 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp728 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120);
AvgPool( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120,  (int32_t)28,  (int32_t)28,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp727, tmp728);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp727);

uint64_t* tmp730 = make_array<uint64_t>( (int32_t)1,  (int32_t)120,  (int32_t)1,  (int32_t)1);

int64_t i1621;

int64_t i1620;

int64_t i1619;

int64_t i1618;

int64_t i1617;

int64_t i1616;

int64_t i1615;

int64_t i1614;
i1614 =  (int64_t)0;
i1615 =  (int64_t)0;
i1616 =  (int64_t)0;
i1617 =  (int64_t)0;
for (uint32_t i1618 =  (int32_t)0; i1618 <  (int32_t)1; i1618++){
for (uint32_t i1620 =  (int32_t)0; i1620 <  (int32_t)1; i1620++){
for (uint32_t i1621 =  (int32_t)0; i1621 <  (int32_t)1; i1621++){
for (uint32_t i1619 =  (int32_t)0; i1619 <  (int32_t)120; i1619++){
Arr4DIdxRowM(tmp730, (int32_t)1, (int32_t)120, (int32_t)1, (int32_t)1,i1618,i1619,i1620,i1621) = Arr4DIdxRowM(tmp728, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)120,i1614,i1615,i1616,i1617);
i1617 = (i1617 +  (int64_t)1);
if ((i1617 ==  (int64_t)120)) {
i1617 =  (int64_t)0;
i1616 = (i1616 +  (int64_t)1);
if ((i1616 ==  (int64_t)1)) {
i1616 =  (int64_t)0;
i1615 = (i1615 +  (int64_t)1);
if ((i1615 ==  (int64_t)1)) {
i1615 =  (int64_t)0;
i1614 = (i1614 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120, tmp728);

uint64_t* tmp732 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120);

int64_t i1629;

int64_t i1628;

int64_t i1627;

int64_t i1626;

int64_t i1625;

int64_t i1624;

int64_t i1623;

int64_t i1622;
i1622 =  (int64_t)0;
i1623 =  (int64_t)0;
i1624 =  (int64_t)0;
i1625 =  (int64_t)0;
for (uint32_t i1626 =  (int32_t)0; i1626 <  (int32_t)1; i1626++){
for (uint32_t i1629 =  (int32_t)0; i1629 <  (int32_t)120; i1629++){
for (uint32_t i1627 =  (int32_t)0; i1627 <  (int32_t)1; i1627++){
for (uint32_t i1628 =  (int32_t)0; i1628 <  (int32_t)1; i1628++){
Arr4DIdxRowM(tmp732, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)120,i1626,i1627,i1628,i1629) = Arr4DIdxRowM(tmp730, (int32_t)1, (int32_t)120, (int32_t)1, (int32_t)1,i1622,i1623,i1624,i1625);
i1625 = (i1625 +  (int64_t)1);
if ((i1625 ==  (int64_t)1)) {
i1625 =  (int64_t)0;
i1624 = (i1624 +  (int64_t)1);
if ((i1624 ==  (int64_t)1)) {
i1624 =  (int64_t)0;
i1623 = (i1623 +  (int64_t)1);
if ((i1623 ==  (int64_t)120)) {
i1623 =  (int64_t)0;
i1622 = (i1622 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)120,  (int32_t)1,  (int32_t)1, tmp730);

uint64_t* tmp734 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)120,  (int32_t)30);

int64_t i1637;

int64_t i1636;

int64_t i1635;

int64_t i1634;

int64_t i1633;

int64_t i1632;

int64_t i1631;

int64_t i1630;
i1630 =  (int64_t)0;
i1631 =  (int64_t)0;
i1632 =  (int64_t)0;
i1633 =  (int64_t)0;
for (uint32_t i1637 =  (int32_t)0; i1637 <  (int32_t)30; i1637++){
for (uint32_t i1636 =  (int32_t)0; i1636 <  (int32_t)120; i1636++){
for (uint32_t i1634 =  (int32_t)0; i1634 <  (int32_t)1; i1634++){
for (uint32_t i1635 =  (int32_t)0; i1635 <  (int32_t)1; i1635++){
Arr4DIdxRowM(tmp734, (int32_t)1, (int32_t)1, (int32_t)120, (int32_t)30,i1634,i1635,i1636,i1637) = Arr4DIdxRowM(tmp43, (int32_t)30, (int32_t)120, (int32_t)1, (int32_t)1,i1630,i1631,i1632,i1633);
i1633 = (i1633 +  (int64_t)1);
if ((i1633 ==  (int64_t)1)) {
i1633 =  (int64_t)0;
i1632 = (i1632 +  (int64_t)1);
if ((i1632 ==  (int64_t)1)) {
i1632 =  (int64_t)0;
i1631 = (i1631 +  (int64_t)1);
if ((i1631 ==  (int64_t)120)) {
i1631 =  (int64_t)0;
i1630 = (i1630 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)30,  (int32_t)120,  (int32_t)1,  (int32_t)1, tmp43);

uint64_t* tmp736 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)30);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120,  (int32_t)1,  (int32_t)1,  (int32_t)30,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp732, tmp734, tmp736);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120, tmp732);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)120,  (int32_t)30, tmp734);

uint64_t* tmp739 = make_array<uint64_t>( (int32_t)1,  (int32_t)30,  (int32_t)1,  (int32_t)1);

int64_t i1645;

int64_t i1644;

int64_t i1643;

int64_t i1642;

int64_t i1641;

int64_t i1640;

int64_t i1639;

int64_t i1638;
i1638 =  (int64_t)0;
i1639 =  (int64_t)0;
i1640 =  (int64_t)0;
i1641 =  (int64_t)0;
for (uint32_t i1642 =  (int32_t)0; i1642 <  (int32_t)1; i1642++){
for (uint32_t i1644 =  (int32_t)0; i1644 <  (int32_t)1; i1644++){
for (uint32_t i1645 =  (int32_t)0; i1645 <  (int32_t)1; i1645++){
for (uint32_t i1643 =  (int32_t)0; i1643 <  (int32_t)30; i1643++){
Arr4DIdxRowM(tmp739, (int32_t)1, (int32_t)30, (int32_t)1, (int32_t)1,i1642,i1643,i1644,i1645) = Arr4DIdxRowM(tmp736, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)30,i1638,i1639,i1640,i1641);
i1641 = (i1641 +  (int64_t)1);
if ((i1641 ==  (int64_t)30)) {
i1641 =  (int64_t)0;
i1640 = (i1640 +  (int64_t)1);
if ((i1640 ==  (int64_t)1)) {
i1640 =  (int64_t)0;
i1639 = (i1639 +  (int64_t)1);
if ((i1639 ==  (int64_t)1)) {
i1639 =  (int64_t)0;
i1638 = (i1638 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)30, tmp736);

uint64_t* tmp741 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)30);

int64_t i1653;

int64_t i1652;

int64_t i1651;

int64_t i1650;

int64_t i1649;

int64_t i1648;

int64_t i1647;

int64_t i1646;
i1646 =  (int64_t)0;
i1647 =  (int64_t)0;
i1648 =  (int64_t)0;
i1649 =  (int64_t)0;
for (uint32_t i1650 =  (int32_t)0; i1650 <  (int32_t)1; i1650++){
for (uint32_t i1653 =  (int32_t)0; i1653 <  (int32_t)30; i1653++){
for (uint32_t i1651 =  (int32_t)0; i1651 <  (int32_t)1; i1651++){
for (uint32_t i1652 =  (int32_t)0; i1652 <  (int32_t)1; i1652++){
Arr4DIdxRowM(tmp741, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)30,i1650,i1651,i1652,i1653) = Arr4DIdxRowM(tmp739, (int32_t)1, (int32_t)30, (int32_t)1, (int32_t)1,i1646,i1647,i1648,i1649);
i1649 = (i1649 +  (int64_t)1);
if ((i1649 ==  (int64_t)1)) {
i1649 =  (int64_t)0;
i1648 = (i1648 +  (int64_t)1);
if ((i1648 ==  (int64_t)1)) {
i1648 =  (int64_t)0;
i1647 = (i1647 +  (int64_t)1);
if ((i1647 ==  (int64_t)30)) {
i1647 =  (int64_t)0;
i1646 = (i1646 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)30,  (int32_t)1,  (int32_t)1, tmp739);

uint64_t* tmp743 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)30);
ScaleDown4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)30, tmp741,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)30, tmp741, tmp37, tmp38,  (int32_t)0,  (int32_t)0, tmp743);
ClearMemSecret1( (int32_t)30, tmp37);
ClearMemSecret1( (int32_t)30, tmp38);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)30, tmp741);

uint64_t* tmp747 = make_array<uint64_t>( (int32_t)1,  (int32_t)30,  (int32_t)1,  (int32_t)1);

int64_t i1661;

int64_t i1660;

int64_t i1659;

int64_t i1658;

int64_t i1657;

int64_t i1656;

int64_t i1655;

int64_t i1654;
i1654 =  (int64_t)0;
i1655 =  (int64_t)0;
i1656 =  (int64_t)0;
i1657 =  (int64_t)0;
for (uint32_t i1658 =  (int32_t)0; i1658 <  (int32_t)1; i1658++){
for (uint32_t i1660 =  (int32_t)0; i1660 <  (int32_t)1; i1660++){
for (uint32_t i1661 =  (int32_t)0; i1661 <  (int32_t)1; i1661++){
for (uint32_t i1659 =  (int32_t)0; i1659 <  (int32_t)30; i1659++){
Arr4DIdxRowM(tmp747, (int32_t)1, (int32_t)30, (int32_t)1, (int32_t)1,i1658,i1659,i1660,i1661) = Arr4DIdxRowM(tmp743, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)30,i1654,i1655,i1656,i1657);
i1657 = (i1657 +  (int64_t)1);
if ((i1657 ==  (int64_t)30)) {
i1657 =  (int64_t)0;
i1656 = (i1656 +  (int64_t)1);
if ((i1656 ==  (int64_t)1)) {
i1656 =  (int64_t)0;
i1655 = (i1655 +  (int64_t)1);
if ((i1655 ==  (int64_t)1)) {
i1655 =  (int64_t)0;
i1654 = (i1654 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)30, tmp743);

uint64_t* tmp749 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)30);

int64_t i1669;

int64_t i1668;

int64_t i1667;

int64_t i1666;

int64_t i1665;

int64_t i1664;

int64_t i1663;

int64_t i1662;
i1662 =  (int64_t)0;
i1663 =  (int64_t)0;
i1664 =  (int64_t)0;
i1665 =  (int64_t)0;
for (uint32_t i1666 =  (int32_t)0; i1666 <  (int32_t)1; i1666++){
for (uint32_t i1669 =  (int32_t)0; i1669 <  (int32_t)30; i1669++){
for (uint32_t i1667 =  (int32_t)0; i1667 <  (int32_t)1; i1667++){
for (uint32_t i1668 =  (int32_t)0; i1668 <  (int32_t)1; i1668++){
Arr4DIdxRowM(tmp749, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)30,i1666,i1667,i1668,i1669) = Arr4DIdxRowM(tmp747, (int32_t)1, (int32_t)30, (int32_t)1, (int32_t)1,i1662,i1663,i1664,i1665);
i1665 = (i1665 +  (int64_t)1);
if ((i1665 ==  (int64_t)1)) {
i1665 =  (int64_t)0;
i1664 = (i1664 +  (int64_t)1);
if ((i1664 ==  (int64_t)1)) {
i1664 =  (int64_t)0;
i1663 = (i1663 +  (int64_t)1);
if ((i1663 ==  (int64_t)30)) {
i1663 =  (int64_t)0;
i1662 = (i1662 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)30,  (int32_t)1,  (int32_t)1, tmp747);

uint64_t* tmp751 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)30);
Relu4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)30, tmp749, tmp751,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)30, tmp749);

uint64_t* tmp753 = make_array<uint64_t>( (int32_t)1,  (int32_t)30,  (int32_t)1,  (int32_t)1);

int64_t i1677;

int64_t i1676;

int64_t i1675;

int64_t i1674;

int64_t i1673;

int64_t i1672;

int64_t i1671;

int64_t i1670;
i1670 =  (int64_t)0;
i1671 =  (int64_t)0;
i1672 =  (int64_t)0;
i1673 =  (int64_t)0;
for (uint32_t i1674 =  (int32_t)0; i1674 <  (int32_t)1; i1674++){
for (uint32_t i1676 =  (int32_t)0; i1676 <  (int32_t)1; i1676++){
for (uint32_t i1677 =  (int32_t)0; i1677 <  (int32_t)1; i1677++){
for (uint32_t i1675 =  (int32_t)0; i1675 <  (int32_t)30; i1675++){
Arr4DIdxRowM(tmp753, (int32_t)1, (int32_t)30, (int32_t)1, (int32_t)1,i1674,i1675,i1676,i1677) = Arr4DIdxRowM(tmp751, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)30,i1670,i1671,i1672,i1673);
i1673 = (i1673 +  (int64_t)1);
if ((i1673 ==  (int64_t)30)) {
i1673 =  (int64_t)0;
i1672 = (i1672 +  (int64_t)1);
if ((i1672 ==  (int64_t)1)) {
i1672 =  (int64_t)0;
i1671 = (i1671 +  (int64_t)1);
if ((i1671 ==  (int64_t)1)) {
i1671 =  (int64_t)0;
i1670 = (i1670 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)30, tmp751);

uint64_t* tmp755 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)30);

int64_t i1685;

int64_t i1684;

int64_t i1683;

int64_t i1682;

int64_t i1681;

int64_t i1680;

int64_t i1679;

int64_t i1678;
i1678 =  (int64_t)0;
i1679 =  (int64_t)0;
i1680 =  (int64_t)0;
i1681 =  (int64_t)0;
for (uint32_t i1682 =  (int32_t)0; i1682 <  (int32_t)1; i1682++){
for (uint32_t i1685 =  (int32_t)0; i1685 <  (int32_t)30; i1685++){
for (uint32_t i1683 =  (int32_t)0; i1683 <  (int32_t)1; i1683++){
for (uint32_t i1684 =  (int32_t)0; i1684 <  (int32_t)1; i1684++){
Arr4DIdxRowM(tmp755, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)30,i1682,i1683,i1684,i1685) = Arr4DIdxRowM(tmp753, (int32_t)1, (int32_t)30, (int32_t)1, (int32_t)1,i1678,i1679,i1680,i1681);
i1681 = (i1681 +  (int64_t)1);
if ((i1681 ==  (int64_t)1)) {
i1681 =  (int64_t)0;
i1680 = (i1680 +  (int64_t)1);
if ((i1680 ==  (int64_t)1)) {
i1680 =  (int64_t)0;
i1679 = (i1679 +  (int64_t)1);
if ((i1679 ==  (int64_t)30)) {
i1679 =  (int64_t)0;
i1678 = (i1678 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)30,  (int32_t)1,  (int32_t)1, tmp753);

uint64_t* tmp757 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)30,  (int32_t)120);

int64_t i1693;

int64_t i1692;

int64_t i1691;

int64_t i1690;

int64_t i1689;

int64_t i1688;

int64_t i1687;

int64_t i1686;
i1686 =  (int64_t)0;
i1687 =  (int64_t)0;
i1688 =  (int64_t)0;
i1689 =  (int64_t)0;
for (uint32_t i1693 =  (int32_t)0; i1693 <  (int32_t)120; i1693++){
for (uint32_t i1692 =  (int32_t)0; i1692 <  (int32_t)30; i1692++){
for (uint32_t i1690 =  (int32_t)0; i1690 <  (int32_t)1; i1690++){
for (uint32_t i1691 =  (int32_t)0; i1691 <  (int32_t)1; i1691++){
Arr4DIdxRowM(tmp757, (int32_t)1, (int32_t)1, (int32_t)30, (int32_t)120,i1690,i1691,i1692,i1693) = Arr4DIdxRowM(tmp44, (int32_t)120, (int32_t)30, (int32_t)1, (int32_t)1,i1686,i1687,i1688,i1689);
i1689 = (i1689 +  (int64_t)1);
if ((i1689 ==  (int64_t)1)) {
i1689 =  (int64_t)0;
i1688 = (i1688 +  (int64_t)1);
if ((i1688 ==  (int64_t)1)) {
i1688 =  (int64_t)0;
i1687 = (i1687 +  (int64_t)1);
if ((i1687 ==  (int64_t)30)) {
i1687 =  (int64_t)0;
i1686 = (i1686 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)120,  (int32_t)30,  (int32_t)1,  (int32_t)1, tmp44);

uint64_t* tmp759 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)30,  (int32_t)1,  (int32_t)1,  (int32_t)120,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp755, tmp757, tmp759);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)30, tmp755);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)30,  (int32_t)120, tmp757);

uint64_t* tmp762 = make_array<uint64_t>( (int32_t)1,  (int32_t)120,  (int32_t)1,  (int32_t)1);

int64_t i1701;

int64_t i1700;

int64_t i1699;

int64_t i1698;

int64_t i1697;

int64_t i1696;

int64_t i1695;

int64_t i1694;
i1694 =  (int64_t)0;
i1695 =  (int64_t)0;
i1696 =  (int64_t)0;
i1697 =  (int64_t)0;
for (uint32_t i1698 =  (int32_t)0; i1698 <  (int32_t)1; i1698++){
for (uint32_t i1700 =  (int32_t)0; i1700 <  (int32_t)1; i1700++){
for (uint32_t i1701 =  (int32_t)0; i1701 <  (int32_t)1; i1701++){
for (uint32_t i1699 =  (int32_t)0; i1699 <  (int32_t)120; i1699++){
Arr4DIdxRowM(tmp762, (int32_t)1, (int32_t)120, (int32_t)1, (int32_t)1,i1698,i1699,i1700,i1701) = Arr4DIdxRowM(tmp759, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)120,i1694,i1695,i1696,i1697);
i1697 = (i1697 +  (int64_t)1);
if ((i1697 ==  (int64_t)120)) {
i1697 =  (int64_t)0;
i1696 = (i1696 +  (int64_t)1);
if ((i1696 ==  (int64_t)1)) {
i1696 =  (int64_t)0;
i1695 = (i1695 +  (int64_t)1);
if ((i1695 ==  (int64_t)1)) {
i1695 =  (int64_t)0;
i1694 = (i1694 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120, tmp759);

uint64_t* tmp764 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120);

int64_t i1709;

int64_t i1708;

int64_t i1707;

int64_t i1706;

int64_t i1705;

int64_t i1704;

int64_t i1703;

int64_t i1702;
i1702 =  (int64_t)0;
i1703 =  (int64_t)0;
i1704 =  (int64_t)0;
i1705 =  (int64_t)0;
for (uint32_t i1706 =  (int32_t)0; i1706 <  (int32_t)1; i1706++){
for (uint32_t i1709 =  (int32_t)0; i1709 <  (int32_t)120; i1709++){
for (uint32_t i1707 =  (int32_t)0; i1707 <  (int32_t)1; i1707++){
for (uint32_t i1708 =  (int32_t)0; i1708 <  (int32_t)1; i1708++){
Arr4DIdxRowM(tmp764, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)120,i1706,i1707,i1708,i1709) = Arr4DIdxRowM(tmp762, (int32_t)1, (int32_t)120, (int32_t)1, (int32_t)1,i1702,i1703,i1704,i1705);
i1705 = (i1705 +  (int64_t)1);
if ((i1705 ==  (int64_t)1)) {
i1705 =  (int64_t)0;
i1704 = (i1704 +  (int64_t)1);
if ((i1704 ==  (int64_t)1)) {
i1704 =  (int64_t)0;
i1703 = (i1703 +  (int64_t)1);
if ((i1703 ==  (int64_t)120)) {
i1703 =  (int64_t)0;
i1702 = (i1702 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)120,  (int32_t)1,  (int32_t)1, tmp762);

uint64_t* tmp766 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120);
HardSigmoid4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120, tmp764, tmp766,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120, tmp764);

uint64_t* tmp768 = make_array<uint64_t>( (int32_t)1,  (int32_t)120,  (int32_t)1,  (int32_t)1);

int64_t i1717;

int64_t i1716;

int64_t i1715;

int64_t i1714;

int64_t i1713;

int64_t i1712;

int64_t i1711;

int64_t i1710;
i1710 =  (int64_t)0;
i1711 =  (int64_t)0;
i1712 =  (int64_t)0;
i1713 =  (int64_t)0;
for (uint32_t i1714 =  (int32_t)0; i1714 <  (int32_t)1; i1714++){
for (uint32_t i1716 =  (int32_t)0; i1716 <  (int32_t)1; i1716++){
for (uint32_t i1717 =  (int32_t)0; i1717 <  (int32_t)1; i1717++){
for (uint32_t i1715 =  (int32_t)0; i1715 <  (int32_t)120; i1715++){
Arr4DIdxRowM(tmp768, (int32_t)1, (int32_t)120, (int32_t)1, (int32_t)1,i1714,i1715,i1716,i1717) = Arr4DIdxRowM(tmp766, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)120,i1710,i1711,i1712,i1713);
i1713 = (i1713 +  (int64_t)1);
if ((i1713 ==  (int64_t)120)) {
i1713 =  (int64_t)0;
i1712 = (i1712 +  (int64_t)1);
if ((i1712 ==  (int64_t)1)) {
i1712 =  (int64_t)0;
i1711 = (i1711 +  (int64_t)1);
if ((i1711 ==  (int64_t)1)) {
i1711 =  (int64_t)0;
i1710 = (i1710 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120, tmp766);

uint64_t* tmp770 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120);

int64_t i1725;

int64_t i1724;

int64_t i1723;

int64_t i1722;

int64_t i1721;

int64_t i1720;

int64_t i1719;

int64_t i1718;
i1718 =  (int64_t)0;
i1719 =  (int64_t)0;
i1720 =  (int64_t)0;
i1721 =  (int64_t)0;
for (uint32_t i1722 =  (int32_t)0; i1722 <  (int32_t)1; i1722++){
for (uint32_t i1725 =  (int32_t)0; i1725 <  (int32_t)120; i1725++){
for (uint32_t i1723 =  (int32_t)0; i1723 <  (int32_t)28; i1723++){
for (uint32_t i1724 =  (int32_t)0; i1724 <  (int32_t)28; i1724++){
Arr4DIdxRowM(tmp770, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)120,i1722,i1723,i1724,i1725) = Arr4DIdxRowM(tmp725, (int32_t)1, (int32_t)120, (int32_t)28, (int32_t)28,i1718,i1719,i1720,i1721);
i1721 = (i1721 +  (int64_t)1);
if ((i1721 ==  (int64_t)28)) {
i1721 =  (int64_t)0;
i1720 = (i1720 +  (int64_t)1);
if ((i1720 ==  (int64_t)28)) {
i1720 =  (int64_t)0;
i1719 = (i1719 +  (int64_t)1);
if ((i1719 ==  (int64_t)120)) {
i1719 =  (int64_t)0;
i1718 = (i1718 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)120,  (int32_t)28,  (int32_t)28, tmp725);

uint64_t* tmp772 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120);

int64_t i1733;

int64_t i1732;

int64_t i1731;

int64_t i1730;

int64_t i1729;

int64_t i1728;

int64_t i1727;

int64_t i1726;
i1726 =  (int64_t)0;
i1727 =  (int64_t)0;
i1728 =  (int64_t)0;
i1729 =  (int64_t)0;
for (uint32_t i1730 =  (int32_t)0; i1730 <  (int32_t)1; i1730++){
for (uint32_t i1733 =  (int32_t)0; i1733 <  (int32_t)120; i1733++){
for (uint32_t i1731 =  (int32_t)0; i1731 <  (int32_t)1; i1731++){
for (uint32_t i1732 =  (int32_t)0; i1732 <  (int32_t)1; i1732++){
Arr4DIdxRowM(tmp772, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)120,i1730,i1731,i1732,i1733) = Arr4DIdxRowM(tmp768, (int32_t)1, (int32_t)120, (int32_t)1, (int32_t)1,i1726,i1727,i1728,i1729);
i1729 = (i1729 +  (int64_t)1);
if ((i1729 ==  (int64_t)1)) {
i1729 =  (int64_t)0;
i1728 = (i1728 +  (int64_t)1);
if ((i1728 ==  (int64_t)1)) {
i1728 =  (int64_t)0;
i1727 = (i1727 +  (int64_t)1);
if ((i1727 ==  (int64_t)120)) {
i1727 =  (int64_t)0;
i1726 = (i1726 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)120,  (int32_t)1,  (int32_t)1, tmp768);

uint64_t* tmp774 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120);

uint64_t* tmp775 = make_array<uint64_t>( (int32_t)94080);

uint64_t* tmp776 = make_array<uint64_t>( (int32_t)94080);

uint64_t* tmp777 = make_array<uint64_t>( (int32_t)94080);

int32_t tmp778;
for (uint32_t i1734 =  (int32_t)0; i1734 <  (int32_t)1; i1734++){
for (uint32_t i1735 =  (int32_t)0; i1735 <  (int32_t)28; i1735++){
for (uint32_t i1736 =  (int32_t)0; i1736 <  (int32_t)28; i1736++){
for (uint32_t i1737 =  (int32_t)0; i1737 <  (int32_t)120; i1737++){
tmp778 = (((( (int32_t)0 + (i1734 *  (int32_t)94080)) + (i1735 *  (int32_t)3360)) + (i1736 *  (int32_t)120)) + (i1737 *  (int32_t)1));
Arr1DIdxRowM(tmp775, (int32_t)94080,tmp778) = Arr4DIdxRowM(tmp770, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)120,i1734,i1735,i1736,i1737);
Arr1DIdxRowM(tmp776, (int32_t)94080,tmp778) = Arr4DIdxRowM(tmp772, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)120,i1734, (int32_t)0, (int32_t)0,i1737);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)94080, tmp775, tmp776, tmp777);
ClearMemSecret1( (int32_t)94080, tmp775);
ClearMemSecret1( (int32_t)94080, tmp776);
for (uint32_t i1734 =  (int32_t)0; i1734 <  (int32_t)1; i1734++){
for (uint32_t i1735 =  (int32_t)0; i1735 <  (int32_t)28; i1735++){
for (uint32_t i1736 =  (int32_t)0; i1736 <  (int32_t)28; i1736++){
for (uint32_t i1737 =  (int32_t)0; i1737 <  (int32_t)120; i1737++){
tmp778 = (((( (int32_t)0 + (i1734 *  (int32_t)94080)) + (i1735 *  (int32_t)3360)) + (i1736 *  (int32_t)120)) + (i1737 *  (int32_t)1));
Arr4DIdxRowM(tmp774, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)120,i1734,i1735,i1736,i1737) = Arr1DIdxRowM(tmp777, (int32_t)94080,tmp778);
}
}
}
}
ClearMemSecret1( (int32_t)94080, tmp777);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120, tmp772);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp770);

uint64_t* tmp781 = make_array<uint64_t>( (int32_t)1,  (int32_t)120,  (int32_t)28,  (int32_t)28);

int64_t i1745;

int64_t i1744;

int64_t i1743;

int64_t i1742;

int64_t i1741;

int64_t i1740;

int64_t i1739;

int64_t i1738;
i1738 =  (int64_t)0;
i1739 =  (int64_t)0;
i1740 =  (int64_t)0;
i1741 =  (int64_t)0;
for (uint32_t i1742 =  (int32_t)0; i1742 <  (int32_t)1; i1742++){
for (uint32_t i1744 =  (int32_t)0; i1744 <  (int32_t)28; i1744++){
for (uint32_t i1745 =  (int32_t)0; i1745 <  (int32_t)28; i1745++){
for (uint32_t i1743 =  (int32_t)0; i1743 <  (int32_t)120; i1743++){
Arr4DIdxRowM(tmp781, (int32_t)1, (int32_t)120, (int32_t)28, (int32_t)28,i1742,i1743,i1744,i1745) = Arr4DIdxRowM(tmp774, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)120,i1738,i1739,i1740,i1741);
i1741 = (i1741 +  (int64_t)1);
if ((i1741 ==  (int64_t)120)) {
i1741 =  (int64_t)0;
i1740 = (i1740 +  (int64_t)1);
if ((i1740 ==  (int64_t)28)) {
i1740 =  (int64_t)0;
i1739 = (i1739 +  (int64_t)1);
if ((i1739 ==  (int64_t)28)) {
i1739 =  (int64_t)0;
i1738 = (i1738 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp774);

uint64_t* tmp783 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120);

int64_t i1753;

int64_t i1752;

int64_t i1751;

int64_t i1750;

int64_t i1749;

int64_t i1748;

int64_t i1747;

int64_t i1746;
i1746 =  (int64_t)0;
i1747 =  (int64_t)0;
i1748 =  (int64_t)0;
i1749 =  (int64_t)0;
for (uint32_t i1750 =  (int32_t)0; i1750 <  (int32_t)1; i1750++){
for (uint32_t i1753 =  (int32_t)0; i1753 <  (int32_t)120; i1753++){
for (uint32_t i1751 =  (int32_t)0; i1751 <  (int32_t)28; i1751++){
for (uint32_t i1752 =  (int32_t)0; i1752 <  (int32_t)28; i1752++){
Arr4DIdxRowM(tmp783, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)120,i1750,i1751,i1752,i1753) = Arr4DIdxRowM(tmp781, (int32_t)1, (int32_t)120, (int32_t)28, (int32_t)28,i1746,i1747,i1748,i1749);
i1749 = (i1749 +  (int64_t)1);
if ((i1749 ==  (int64_t)28)) {
i1749 =  (int64_t)0;
i1748 = (i1748 +  (int64_t)1);
if ((i1748 ==  (int64_t)28)) {
i1748 =  (int64_t)0;
i1747 = (i1747 +  (int64_t)1);
if ((i1747 ==  (int64_t)120)) {
i1747 =  (int64_t)0;
i1746 = (i1746 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)120,  (int32_t)28,  (int32_t)28, tmp781);

uint64_t* tmp785 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)120,  (int32_t)40);

int64_t i1761;

int64_t i1760;

int64_t i1759;

int64_t i1758;

int64_t i1757;

int64_t i1756;

int64_t i1755;

int64_t i1754;
i1754 =  (int64_t)0;
i1755 =  (int64_t)0;
i1756 =  (int64_t)0;
i1757 =  (int64_t)0;
for (uint32_t i1761 =  (int32_t)0; i1761 <  (int32_t)40; i1761++){
for (uint32_t i1760 =  (int32_t)0; i1760 <  (int32_t)120; i1760++){
for (uint32_t i1758 =  (int32_t)0; i1758 <  (int32_t)1; i1758++){
for (uint32_t i1759 =  (int32_t)0; i1759 <  (int32_t)1; i1759++){
Arr4DIdxRowM(tmp785, (int32_t)1, (int32_t)1, (int32_t)120, (int32_t)40,i1758,i1759,i1760,i1761) = Arr4DIdxRowM(tmp45, (int32_t)40, (int32_t)120, (int32_t)1, (int32_t)1,i1754,i1755,i1756,i1757);
i1757 = (i1757 +  (int64_t)1);
if ((i1757 ==  (int64_t)1)) {
i1757 =  (int64_t)0;
i1756 = (i1756 +  (int64_t)1);
if ((i1756 ==  (int64_t)1)) {
i1756 =  (int64_t)0;
i1755 = (i1755 +  (int64_t)1);
if ((i1755 ==  (int64_t)120)) {
i1755 =  (int64_t)0;
i1754 = (i1754 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)40,  (int32_t)120,  (int32_t)1,  (int32_t)1, tmp45);

uint64_t* tmp787 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40);
ScaleDown4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp783,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120,  (int32_t)1,  (int32_t)1,  (int32_t)40,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp783, tmp785, tmp787);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)120,  (int32_t)40, tmp785);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)120, tmp783);

uint64_t* tmp790 = make_array<uint64_t>( (int32_t)1,  (int32_t)40,  (int32_t)28,  (int32_t)28);

int64_t i1769;

int64_t i1768;

int64_t i1767;

int64_t i1766;

int64_t i1765;

int64_t i1764;

int64_t i1763;

int64_t i1762;
i1762 =  (int64_t)0;
i1763 =  (int64_t)0;
i1764 =  (int64_t)0;
i1765 =  (int64_t)0;
for (uint32_t i1766 =  (int32_t)0; i1766 <  (int32_t)1; i1766++){
for (uint32_t i1768 =  (int32_t)0; i1768 <  (int32_t)28; i1768++){
for (uint32_t i1769 =  (int32_t)0; i1769 <  (int32_t)28; i1769++){
for (uint32_t i1767 =  (int32_t)0; i1767 <  (int32_t)40; i1767++){
Arr4DIdxRowM(tmp790, (int32_t)1, (int32_t)40, (int32_t)28, (int32_t)28,i1766,i1767,i1768,i1769) = Arr4DIdxRowM(tmp787, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i1762,i1763,i1764,i1765);
i1765 = (i1765 +  (int64_t)1);
if ((i1765 ==  (int64_t)40)) {
i1765 =  (int64_t)0;
i1764 = (i1764 +  (int64_t)1);
if ((i1764 ==  (int64_t)28)) {
i1764 =  (int64_t)0;
i1763 = (i1763 +  (int64_t)1);
if ((i1763 ==  (int64_t)28)) {
i1763 =  (int64_t)0;
i1762 = (i1762 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp787);

uint64_t* tmp792 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40);

int64_t i1777;

int64_t i1776;

int64_t i1775;

int64_t i1774;

int64_t i1773;

int64_t i1772;

int64_t i1771;

int64_t i1770;
i1770 =  (int64_t)0;
i1771 =  (int64_t)0;
i1772 =  (int64_t)0;
i1773 =  (int64_t)0;
for (uint32_t i1774 =  (int32_t)0; i1774 <  (int32_t)1; i1774++){
for (uint32_t i1777 =  (int32_t)0; i1777 <  (int32_t)40; i1777++){
for (uint32_t i1775 =  (int32_t)0; i1775 <  (int32_t)28; i1775++){
for (uint32_t i1776 =  (int32_t)0; i1776 <  (int32_t)28; i1776++){
Arr4DIdxRowM(tmp792, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i1774,i1775,i1776,i1777) = Arr4DIdxRowM(tmp790, (int32_t)1, (int32_t)40, (int32_t)28, (int32_t)28,i1770,i1771,i1772,i1773);
i1773 = (i1773 +  (int64_t)1);
if ((i1773 ==  (int64_t)28)) {
i1773 =  (int64_t)0;
i1772 = (i1772 +  (int64_t)1);
if ((i1772 ==  (int64_t)28)) {
i1772 =  (int64_t)0;
i1771 = (i1771 +  (int64_t)1);
if ((i1771 ==  (int64_t)40)) {
i1771 =  (int64_t)0;
i1770 = (i1770 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)40,  (int32_t)28,  (int32_t)28, tmp790);

uint64_t* tmp794 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40);
ScaleDown4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp792,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp792, tmp28, tmp29,  (int32_t)0,  (int32_t)0, tmp794);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp792);

uint64_t* tmp796 = make_array<uint64_t>( (int32_t)1,  (int32_t)40,  (int32_t)28,  (int32_t)28);

int64_t i1785;

int64_t i1784;

int64_t i1783;

int64_t i1782;

int64_t i1781;

int64_t i1780;

int64_t i1779;

int64_t i1778;
i1778 =  (int64_t)0;
i1779 =  (int64_t)0;
i1780 =  (int64_t)0;
i1781 =  (int64_t)0;
for (uint32_t i1782 =  (int32_t)0; i1782 <  (int32_t)1; i1782++){
for (uint32_t i1784 =  (int32_t)0; i1784 <  (int32_t)28; i1784++){
for (uint32_t i1785 =  (int32_t)0; i1785 <  (int32_t)28; i1785++){
for (uint32_t i1783 =  (int32_t)0; i1783 <  (int32_t)40; i1783++){
Arr4DIdxRowM(tmp796, (int32_t)1, (int32_t)40, (int32_t)28, (int32_t)28,i1782,i1783,i1784,i1785) = Arr4DIdxRowM(tmp794, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i1778,i1779,i1780,i1781);
i1781 = (i1781 +  (int64_t)1);
if ((i1781 ==  (int64_t)40)) {
i1781 =  (int64_t)0;
i1780 = (i1780 +  (int64_t)1);
if ((i1780 ==  (int64_t)28)) {
i1780 =  (int64_t)0;
i1779 = (i1779 +  (int64_t)1);
if ((i1779 ==  (int64_t)28)) {
i1779 =  (int64_t)0;
i1778 = (i1778 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp794);

uint64_t* tmp798 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40);

int64_t i1793;

int64_t i1792;

int64_t i1791;

int64_t i1790;

int64_t i1789;

int64_t i1788;

int64_t i1787;

int64_t i1786;
i1786 =  (int64_t)0;
i1787 =  (int64_t)0;
i1788 =  (int64_t)0;
i1789 =  (int64_t)0;
for (uint32_t i1790 =  (int32_t)0; i1790 <  (int32_t)1; i1790++){
for (uint32_t i1793 =  (int32_t)0; i1793 <  (int32_t)40; i1793++){
for (uint32_t i1791 =  (int32_t)0; i1791 <  (int32_t)28; i1791++){
for (uint32_t i1792 =  (int32_t)0; i1792 <  (int32_t)28; i1792++){
Arr4DIdxRowM(tmp798, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i1790,i1791,i1792,i1793) = Arr4DIdxRowM(tmp796, (int32_t)1, (int32_t)40, (int32_t)28, (int32_t)28,i1786,i1787,i1788,i1789);
i1789 = (i1789 +  (int64_t)1);
if ((i1789 ==  (int64_t)28)) {
i1789 =  (int64_t)0;
i1788 = (i1788 +  (int64_t)1);
if ((i1788 ==  (int64_t)28)) {
i1788 =  (int64_t)0;
i1787 = (i1787 +  (int64_t)1);
if ((i1787 ==  (int64_t)40)) {
i1787 =  (int64_t)0;
i1786 = (i1786 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)40,  (int32_t)28,  (int32_t)28, tmp796);

uint64_t* tmp800 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40);

int64_t i1801;

int64_t i1800;

int64_t i1799;

int64_t i1798;

int64_t i1797;

int64_t i1796;

int64_t i1795;

int64_t i1794;
i1794 =  (int64_t)0;
i1795 =  (int64_t)0;
i1796 =  (int64_t)0;
i1797 =  (int64_t)0;
for (uint32_t i1798 =  (int32_t)0; i1798 <  (int32_t)1; i1798++){
for (uint32_t i1801 =  (int32_t)0; i1801 <  (int32_t)40; i1801++){
for (uint32_t i1799 =  (int32_t)0; i1799 <  (int32_t)28; i1799++){
for (uint32_t i1800 =  (int32_t)0; i1800 <  (int32_t)28; i1800++){
Arr4DIdxRowM(tmp800, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i1798,i1799,i1800,i1801) = Arr4DIdxRowM(tmp684, (int32_t)1, (int32_t)40, (int32_t)28, (int32_t)28,i1794,i1795,i1796,i1797);
i1797 = (i1797 +  (int64_t)1);
if ((i1797 ==  (int64_t)28)) {
i1797 =  (int64_t)0;
i1796 = (i1796 +  (int64_t)1);
if ((i1796 ==  (int64_t)28)) {
i1796 =  (int64_t)0;
i1795 = (i1795 +  (int64_t)1);
if ((i1795 ==  (int64_t)40)) {
i1795 =  (int64_t)0;
i1794 = (i1794 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)40,  (int32_t)28,  (int32_t)28, tmp684);
ScaleUp4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp800,  (int32_t)23);

uint64_t* tmp802 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40);
for (uint32_t i0 =  (int32_t)0; i0 <  (int32_t)1; i0++){
for (uint32_t i1 =  (int32_t)0; i1 <  (int32_t)28; i1++){
for (uint32_t i2 =  (int32_t)0; i2 <  (int32_t)28; i2++){
for (uint32_t i3 =  (int32_t)0; i3 <  (int32_t)40; i3++){
Arr4DIdxRowM(tmp802, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i0,i1,i2,i3) = SecretAdd(Arr4DIdxRowM(tmp798, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i0,i1,i2,i3), Arr4DIdxRowM(tmp800, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i0,i1,i2,i3));
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp798);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp800);

uint64_t* tmp805 = make_array<uint64_t>( (int32_t)1,  (int32_t)40,  (int32_t)28,  (int32_t)28);

int64_t i1809;

int64_t i1808;

int64_t i1807;

int64_t i1806;

int64_t i1805;

int64_t i1804;

int64_t i1803;

int64_t i1802;
i1802 =  (int64_t)0;
i1803 =  (int64_t)0;
i1804 =  (int64_t)0;
i1805 =  (int64_t)0;
for (uint32_t i1806 =  (int32_t)0; i1806 <  (int32_t)1; i1806++){
for (uint32_t i1808 =  (int32_t)0; i1808 <  (int32_t)28; i1808++){
for (uint32_t i1809 =  (int32_t)0; i1809 <  (int32_t)28; i1809++){
for (uint32_t i1807 =  (int32_t)0; i1807 <  (int32_t)40; i1807++){
Arr4DIdxRowM(tmp805, (int32_t)1, (int32_t)40, (int32_t)28, (int32_t)28,i1806,i1807,i1808,i1809) = Arr4DIdxRowM(tmp802, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i1802,i1803,i1804,i1805);
i1805 = (i1805 +  (int64_t)1);
if ((i1805 ==  (int64_t)40)) {
i1805 =  (int64_t)0;
i1804 = (i1804 +  (int64_t)1);
if ((i1804 ==  (int64_t)28)) {
i1804 =  (int64_t)0;
i1803 = (i1803 +  (int64_t)1);
if ((i1803 ==  (int64_t)28)) {
i1803 =  (int64_t)0;
i1802 = (i1802 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp802);

uint64_t* tmp807 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40);

int64_t i1817;

int64_t i1816;

int64_t i1815;

int64_t i1814;

int64_t i1813;

int64_t i1812;

int64_t i1811;

int64_t i1810;
i1810 =  (int64_t)0;
i1811 =  (int64_t)0;
i1812 =  (int64_t)0;
i1813 =  (int64_t)0;
for (uint32_t i1814 =  (int32_t)0; i1814 <  (int32_t)1; i1814++){
for (uint32_t i1817 =  (int32_t)0; i1817 <  (int32_t)40; i1817++){
for (uint32_t i1815 =  (int32_t)0; i1815 <  (int32_t)28; i1815++){
for (uint32_t i1816 =  (int32_t)0; i1816 <  (int32_t)28; i1816++){
Arr4DIdxRowM(tmp807, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i1814,i1815,i1816,i1817) = Arr4DIdxRowM(tmp805, (int32_t)1, (int32_t)40, (int32_t)28, (int32_t)28,i1810,i1811,i1812,i1813);
i1813 = (i1813 +  (int64_t)1);
if ((i1813 ==  (int64_t)28)) {
i1813 =  (int64_t)0;
i1812 = (i1812 +  (int64_t)1);
if ((i1812 ==  (int64_t)28)) {
i1812 =  (int64_t)0;
i1811 = (i1811 +  (int64_t)1);
if ((i1811 ==  (int64_t)40)) {
i1811 =  (int64_t)0;
i1810 = (i1810 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)40,  (int32_t)28,  (int32_t)28, tmp805);

uint64_t* tmp809 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40);
Relu4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp807, tmp809,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp807);

uint64_t* tmp811 = make_array<uint64_t>( (int32_t)1,  (int32_t)40,  (int32_t)28,  (int32_t)28);

int64_t i1825;

int64_t i1824;

int64_t i1823;

int64_t i1822;

int64_t i1821;

int64_t i1820;

int64_t i1819;

int64_t i1818;
i1818 =  (int64_t)0;
i1819 =  (int64_t)0;
i1820 =  (int64_t)0;
i1821 =  (int64_t)0;
for (uint32_t i1822 =  (int32_t)0; i1822 <  (int32_t)1; i1822++){
for (uint32_t i1824 =  (int32_t)0; i1824 <  (int32_t)28; i1824++){
for (uint32_t i1825 =  (int32_t)0; i1825 <  (int32_t)28; i1825++){
for (uint32_t i1823 =  (int32_t)0; i1823 <  (int32_t)40; i1823++){
Arr4DIdxRowM(tmp811, (int32_t)1, (int32_t)40, (int32_t)28, (int32_t)28,i1822,i1823,i1824,i1825) = Arr4DIdxRowM(tmp809, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i1818,i1819,i1820,i1821);
i1821 = (i1821 +  (int64_t)1);
if ((i1821 ==  (int64_t)40)) {
i1821 =  (int64_t)0;
i1820 = (i1820 +  (int64_t)1);
if ((i1820 ==  (int64_t)28)) {
i1820 =  (int64_t)0;
i1819 = (i1819 +  (int64_t)1);
if ((i1819 ==  (int64_t)28)) {
i1819 =  (int64_t)0;
i1818 = (i1818 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp809);

uint64_t* tmp813 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40);

int64_t i1833;

int64_t i1832;

int64_t i1831;

int64_t i1830;

int64_t i1829;

int64_t i1828;

int64_t i1827;

int64_t i1826;
i1826 =  (int64_t)0;
i1827 =  (int64_t)0;
i1828 =  (int64_t)0;
i1829 =  (int64_t)0;
for (uint32_t i1830 =  (int32_t)0; i1830 <  (int32_t)1; i1830++){
for (uint32_t i1833 =  (int32_t)0; i1833 <  (int32_t)40; i1833++){
for (uint32_t i1831 =  (int32_t)0; i1831 <  (int32_t)28; i1831++){
for (uint32_t i1832 =  (int32_t)0; i1832 <  (int32_t)28; i1832++){
Arr4DIdxRowM(tmp813, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i1830,i1831,i1832,i1833) = Arr4DIdxRowM(tmp811, (int32_t)1, (int32_t)40, (int32_t)28, (int32_t)28,i1826,i1827,i1828,i1829);
i1829 = (i1829 +  (int64_t)1);
if ((i1829 ==  (int64_t)28)) {
i1829 =  (int64_t)0;
i1828 = (i1828 +  (int64_t)1);
if ((i1828 ==  (int64_t)28)) {
i1828 =  (int64_t)0;
i1827 = (i1827 +  (int64_t)1);
if ((i1827 ==  (int64_t)40)) {
i1827 =  (int64_t)0;
i1826 = (i1826 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp814 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)40,  (int32_t)240);

int64_t i1841;

int64_t i1840;

int64_t i1839;

int64_t i1838;

int64_t i1837;

int64_t i1836;

int64_t i1835;

int64_t i1834;
i1834 =  (int64_t)0;
i1835 =  (int64_t)0;
i1836 =  (int64_t)0;
i1837 =  (int64_t)0;
for (uint32_t i1841 =  (int32_t)0; i1841 <  (int32_t)240; i1841++){
for (uint32_t i1840 =  (int32_t)0; i1840 <  (int32_t)40; i1840++){
for (uint32_t i1838 =  (int32_t)0; i1838 <  (int32_t)1; i1838++){
for (uint32_t i1839 =  (int32_t)0; i1839 <  (int32_t)1; i1839++){
Arr4DIdxRowM(tmp814, (int32_t)1, (int32_t)1, (int32_t)40, (int32_t)240,i1838,i1839,i1840,i1841) = Arr4DIdxRowM(tmp46, (int32_t)240, (int32_t)40, (int32_t)1, (int32_t)1,i1834,i1835,i1836,i1837);
i1837 = (i1837 +  (int64_t)1);
if ((i1837 ==  (int64_t)1)) {
i1837 =  (int64_t)0;
i1836 = (i1836 +  (int64_t)1);
if ((i1836 ==  (int64_t)1)) {
i1836 =  (int64_t)0;
i1835 = (i1835 +  (int64_t)1);
if ((i1835 ==  (int64_t)40)) {
i1835 =  (int64_t)0;
i1834 = (i1834 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)240,  (int32_t)40,  (int32_t)1,  (int32_t)1, tmp46);

uint64_t* tmp816 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)240);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40,  (int32_t)1,  (int32_t)1,  (int32_t)240,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp813, tmp814, tmp816);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp813);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)40,  (int32_t)240, tmp814);

uint64_t* tmp819 = make_array<uint64_t>( (int32_t)1,  (int32_t)240,  (int32_t)28,  (int32_t)28);

int64_t i1849;

int64_t i1848;

int64_t i1847;

int64_t i1846;

int64_t i1845;

int64_t i1844;

int64_t i1843;

int64_t i1842;
i1842 =  (int64_t)0;
i1843 =  (int64_t)0;
i1844 =  (int64_t)0;
i1845 =  (int64_t)0;
for (uint32_t i1846 =  (int32_t)0; i1846 <  (int32_t)1; i1846++){
for (uint32_t i1848 =  (int32_t)0; i1848 <  (int32_t)28; i1848++){
for (uint32_t i1849 =  (int32_t)0; i1849 <  (int32_t)28; i1849++){
for (uint32_t i1847 =  (int32_t)0; i1847 <  (int32_t)240; i1847++){
Arr4DIdxRowM(tmp819, (int32_t)1, (int32_t)240, (int32_t)28, (int32_t)28,i1846,i1847,i1848,i1849) = Arr4DIdxRowM(tmp816, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)240,i1842,i1843,i1844,i1845);
i1845 = (i1845 +  (int64_t)1);
if ((i1845 ==  (int64_t)240)) {
i1845 =  (int64_t)0;
i1844 = (i1844 +  (int64_t)1);
if ((i1844 ==  (int64_t)28)) {
i1844 =  (int64_t)0;
i1843 = (i1843 +  (int64_t)1);
if ((i1843 ==  (int64_t)28)) {
i1843 =  (int64_t)0;
i1842 = (i1842 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)240, tmp816);

uint64_t* tmp821 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)240);

int64_t i1857;

int64_t i1856;

int64_t i1855;

int64_t i1854;

int64_t i1853;

int64_t i1852;

int64_t i1851;

int64_t i1850;
i1850 =  (int64_t)0;
i1851 =  (int64_t)0;
i1852 =  (int64_t)0;
i1853 =  (int64_t)0;
for (uint32_t i1854 =  (int32_t)0; i1854 <  (int32_t)1; i1854++){
for (uint32_t i1857 =  (int32_t)0; i1857 <  (int32_t)240; i1857++){
for (uint32_t i1855 =  (int32_t)0; i1855 <  (int32_t)28; i1855++){
for (uint32_t i1856 =  (int32_t)0; i1856 <  (int32_t)28; i1856++){
Arr4DIdxRowM(tmp821, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)240,i1854,i1855,i1856,i1857) = Arr4DIdxRowM(tmp819, (int32_t)1, (int32_t)240, (int32_t)28, (int32_t)28,i1850,i1851,i1852,i1853);
i1853 = (i1853 +  (int64_t)1);
if ((i1853 ==  (int64_t)28)) {
i1853 =  (int64_t)0;
i1852 = (i1852 +  (int64_t)1);
if ((i1852 ==  (int64_t)28)) {
i1852 =  (int64_t)0;
i1851 = (i1851 +  (int64_t)1);
if ((i1851 ==  (int64_t)240)) {
i1851 =  (int64_t)0;
i1850 = (i1850 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)240,  (int32_t)28,  (int32_t)28, tmp819);

uint64_t* tmp823 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)240);
ScaleDown4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)240, tmp821,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)240, tmp821, tmp47, tmp48,  (int32_t)0,  (int32_t)23, tmp823);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)240, tmp821);

uint64_t* tmp825 = make_array<uint64_t>( (int32_t)1,  (int32_t)240,  (int32_t)28,  (int32_t)28);

int64_t i1865;

int64_t i1864;

int64_t i1863;

int64_t i1862;

int64_t i1861;

int64_t i1860;

int64_t i1859;

int64_t i1858;
i1858 =  (int64_t)0;
i1859 =  (int64_t)0;
i1860 =  (int64_t)0;
i1861 =  (int64_t)0;
for (uint32_t i1862 =  (int32_t)0; i1862 <  (int32_t)1; i1862++){
for (uint32_t i1864 =  (int32_t)0; i1864 <  (int32_t)28; i1864++){
for (uint32_t i1865 =  (int32_t)0; i1865 <  (int32_t)28; i1865++){
for (uint32_t i1863 =  (int32_t)0; i1863 <  (int32_t)240; i1863++){
Arr4DIdxRowM(tmp825, (int32_t)1, (int32_t)240, (int32_t)28, (int32_t)28,i1862,i1863,i1864,i1865) = Arr4DIdxRowM(tmp823, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)240,i1858,i1859,i1860,i1861);
i1861 = (i1861 +  (int64_t)1);
if ((i1861 ==  (int64_t)240)) {
i1861 =  (int64_t)0;
i1860 = (i1860 +  (int64_t)1);
if ((i1860 ==  (int64_t)28)) {
i1860 =  (int64_t)0;
i1859 = (i1859 +  (int64_t)1);
if ((i1859 ==  (int64_t)28)) {
i1859 =  (int64_t)0;
i1858 = (i1858 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)240, tmp823);

uint64_t* tmp827 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)240);

int64_t i1873;

int64_t i1872;

int64_t i1871;

int64_t i1870;

int64_t i1869;

int64_t i1868;

int64_t i1867;

int64_t i1866;
i1866 =  (int64_t)0;
i1867 =  (int64_t)0;
i1868 =  (int64_t)0;
i1869 =  (int64_t)0;
for (uint32_t i1870 =  (int32_t)0; i1870 <  (int32_t)1; i1870++){
for (uint32_t i1873 =  (int32_t)0; i1873 <  (int32_t)240; i1873++){
for (uint32_t i1871 =  (int32_t)0; i1871 <  (int32_t)28; i1871++){
for (uint32_t i1872 =  (int32_t)0; i1872 <  (int32_t)28; i1872++){
Arr4DIdxRowM(tmp827, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)240,i1870,i1871,i1872,i1873) = Arr4DIdxRowM(tmp825, (int32_t)1, (int32_t)240, (int32_t)28, (int32_t)28,i1866,i1867,i1868,i1869);
i1869 = (i1869 +  (int64_t)1);
if ((i1869 ==  (int64_t)28)) {
i1869 =  (int64_t)0;
i1868 = (i1868 +  (int64_t)1);
if ((i1868 ==  (int64_t)28)) {
i1868 =  (int64_t)0;
i1867 = (i1867 +  (int64_t)1);
if ((i1867 ==  (int64_t)240)) {
i1867 =  (int64_t)0;
i1866 = (i1866 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp828 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)240);
HardSigmoid4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)240, tmp827, tmp828,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)240, tmp827);

uint64_t* tmp830 = make_array<uint64_t>( (int32_t)1,  (int32_t)240,  (int32_t)28,  (int32_t)28);

int64_t i1881;

int64_t i1880;

int64_t i1879;

int64_t i1878;

int64_t i1877;

int64_t i1876;

int64_t i1875;

int64_t i1874;
i1874 =  (int64_t)0;
i1875 =  (int64_t)0;
i1876 =  (int64_t)0;
i1877 =  (int64_t)0;
for (uint32_t i1878 =  (int32_t)0; i1878 <  (int32_t)1; i1878++){
for (uint32_t i1880 =  (int32_t)0; i1880 <  (int32_t)28; i1880++){
for (uint32_t i1881 =  (int32_t)0; i1881 <  (int32_t)28; i1881++){
for (uint32_t i1879 =  (int32_t)0; i1879 <  (int32_t)240; i1879++){
Arr4DIdxRowM(tmp830, (int32_t)1, (int32_t)240, (int32_t)28, (int32_t)28,i1878,i1879,i1880,i1881) = Arr4DIdxRowM(tmp828, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)240,i1874,i1875,i1876,i1877);
i1877 = (i1877 +  (int64_t)1);
if ((i1877 ==  (int64_t)240)) {
i1877 =  (int64_t)0;
i1876 = (i1876 +  (int64_t)1);
if ((i1876 ==  (int64_t)28)) {
i1876 =  (int64_t)0;
i1875 = (i1875 +  (int64_t)1);
if ((i1875 ==  (int64_t)28)) {
i1875 =  (int64_t)0;
i1874 = (i1874 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)240, tmp828);

uint64_t* tmp832 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)240);

int64_t i1889;

int64_t i1888;

int64_t i1887;

int64_t i1886;

int64_t i1885;

int64_t i1884;

int64_t i1883;

int64_t i1882;
i1882 =  (int64_t)0;
i1883 =  (int64_t)0;
i1884 =  (int64_t)0;
i1885 =  (int64_t)0;
for (uint32_t i1886 =  (int32_t)0; i1886 <  (int32_t)1; i1886++){
for (uint32_t i1889 =  (int32_t)0; i1889 <  (int32_t)240; i1889++){
for (uint32_t i1887 =  (int32_t)0; i1887 <  (int32_t)28; i1887++){
for (uint32_t i1888 =  (int32_t)0; i1888 <  (int32_t)28; i1888++){
Arr4DIdxRowM(tmp832, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)240,i1886,i1887,i1888,i1889) = Arr4DIdxRowM(tmp825, (int32_t)1, (int32_t)240, (int32_t)28, (int32_t)28,i1882,i1883,i1884,i1885);
i1885 = (i1885 +  (int64_t)1);
if ((i1885 ==  (int64_t)28)) {
i1885 =  (int64_t)0;
i1884 = (i1884 +  (int64_t)1);
if ((i1884 ==  (int64_t)28)) {
i1884 =  (int64_t)0;
i1883 = (i1883 +  (int64_t)1);
if ((i1883 ==  (int64_t)240)) {
i1883 =  (int64_t)0;
i1882 = (i1882 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)240,  (int32_t)28,  (int32_t)28, tmp825);

uint64_t* tmp834 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)240);

int64_t i1897;

int64_t i1896;

int64_t i1895;

int64_t i1894;

int64_t i1893;

int64_t i1892;

int64_t i1891;

int64_t i1890;
i1890 =  (int64_t)0;
i1891 =  (int64_t)0;
i1892 =  (int64_t)0;
i1893 =  (int64_t)0;
for (uint32_t i1894 =  (int32_t)0; i1894 <  (int32_t)1; i1894++){
for (uint32_t i1897 =  (int32_t)0; i1897 <  (int32_t)240; i1897++){
for (uint32_t i1895 =  (int32_t)0; i1895 <  (int32_t)28; i1895++){
for (uint32_t i1896 =  (int32_t)0; i1896 <  (int32_t)28; i1896++){
Arr4DIdxRowM(tmp834, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)240,i1894,i1895,i1896,i1897) = Arr4DIdxRowM(tmp830, (int32_t)1, (int32_t)240, (int32_t)28, (int32_t)28,i1890,i1891,i1892,i1893);
i1893 = (i1893 +  (int64_t)1);
if ((i1893 ==  (int64_t)28)) {
i1893 =  (int64_t)0;
i1892 = (i1892 +  (int64_t)1);
if ((i1892 ==  (int64_t)28)) {
i1892 =  (int64_t)0;
i1891 = (i1891 +  (int64_t)1);
if ((i1891 ==  (int64_t)240)) {
i1891 =  (int64_t)0;
i1890 = (i1890 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)240,  (int32_t)28,  (int32_t)28, tmp830);
ScaleDown4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)240, tmp832,  (int32_t)23);

uint64_t* tmp836 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)240);

uint64_t* tmp837 = make_array<uint64_t>( (int32_t)188160);

uint64_t* tmp838 = make_array<uint64_t>( (int32_t)188160);

uint64_t* tmp839 = make_array<uint64_t>( (int32_t)188160);

int32_t tmp840;
for (uint32_t i1898 =  (int32_t)0; i1898 <  (int32_t)1; i1898++){
for (uint32_t i1899 =  (int32_t)0; i1899 <  (int32_t)28; i1899++){
for (uint32_t i1900 =  (int32_t)0; i1900 <  (int32_t)28; i1900++){
for (uint32_t i1901 =  (int32_t)0; i1901 <  (int32_t)240; i1901++){
tmp840 = (((( (int32_t)0 + (i1898 *  (int32_t)188160)) + (i1899 *  (int32_t)6720)) + (i1900 *  (int32_t)240)) + (i1901 *  (int32_t)1));
Arr1DIdxRowM(tmp837, (int32_t)188160,tmp840) = Arr4DIdxRowM(tmp832, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)240,i1898,i1899,i1900,i1901);
Arr1DIdxRowM(tmp838, (int32_t)188160,tmp840) = Arr4DIdxRowM(tmp834, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)240,i1898,i1899,i1900,i1901);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)188160, tmp837, tmp838, tmp839);
ClearMemSecret1( (int32_t)188160, tmp837);
ClearMemSecret1( (int32_t)188160, tmp838);
for (uint32_t i1898 =  (int32_t)0; i1898 <  (int32_t)1; i1898++){
for (uint32_t i1899 =  (int32_t)0; i1899 <  (int32_t)28; i1899++){
for (uint32_t i1900 =  (int32_t)0; i1900 <  (int32_t)28; i1900++){
for (uint32_t i1901 =  (int32_t)0; i1901 <  (int32_t)240; i1901++){
tmp840 = (((( (int32_t)0 + (i1898 *  (int32_t)188160)) + (i1899 *  (int32_t)6720)) + (i1900 *  (int32_t)240)) + (i1901 *  (int32_t)1));
Arr4DIdxRowM(tmp836, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)240,i1898,i1899,i1900,i1901) = Arr1DIdxRowM(tmp839, (int32_t)188160,tmp840);
}
}
}
}
ClearMemSecret1( (int32_t)188160, tmp839);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)240, tmp834);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)240, tmp832);

uint64_t* tmp843 = make_array<uint64_t>( (int32_t)1,  (int32_t)240,  (int32_t)28,  (int32_t)28);

int64_t i1909;

int64_t i1908;

int64_t i1907;

int64_t i1906;

int64_t i1905;

int64_t i1904;

int64_t i1903;

int64_t i1902;
i1902 =  (int64_t)0;
i1903 =  (int64_t)0;
i1904 =  (int64_t)0;
i1905 =  (int64_t)0;
for (uint32_t i1906 =  (int32_t)0; i1906 <  (int32_t)1; i1906++){
for (uint32_t i1908 =  (int32_t)0; i1908 <  (int32_t)28; i1908++){
for (uint32_t i1909 =  (int32_t)0; i1909 <  (int32_t)28; i1909++){
for (uint32_t i1907 =  (int32_t)0; i1907 <  (int32_t)240; i1907++){
Arr4DIdxRowM(tmp843, (int32_t)1, (int32_t)240, (int32_t)28, (int32_t)28,i1906,i1907,i1908,i1909) = Arr4DIdxRowM(tmp836, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)240,i1902,i1903,i1904,i1905);
i1905 = (i1905 +  (int64_t)1);
if ((i1905 ==  (int64_t)240)) {
i1905 =  (int64_t)0;
i1904 = (i1904 +  (int64_t)1);
if ((i1904 ==  (int64_t)28)) {
i1904 =  (int64_t)0;
i1903 = (i1903 +  (int64_t)1);
if ((i1903 ==  (int64_t)28)) {
i1903 =  (int64_t)0;
i1902 = (i1902 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)240, tmp836);

uint64_t* tmp845 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)240);

int64_t i1917;

int64_t i1916;

int64_t i1915;

int64_t i1914;

int64_t i1913;

int64_t i1912;

int64_t i1911;

int64_t i1910;
i1910 =  (int64_t)0;
i1911 =  (int64_t)0;
i1912 =  (int64_t)0;
i1913 =  (int64_t)0;
for (uint32_t i1914 =  (int32_t)0; i1914 <  (int32_t)1; i1914++){
for (uint32_t i1917 =  (int32_t)0; i1917 <  (int32_t)240; i1917++){
for (uint32_t i1915 =  (int32_t)0; i1915 <  (int32_t)28; i1915++){
for (uint32_t i1916 =  (int32_t)0; i1916 <  (int32_t)28; i1916++){
Arr4DIdxRowM(tmp845, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)240,i1914,i1915,i1916,i1917) = Arr4DIdxRowM(tmp843, (int32_t)1, (int32_t)240, (int32_t)28, (int32_t)28,i1910,i1911,i1912,i1913);
i1913 = (i1913 +  (int64_t)1);
if ((i1913 ==  (int64_t)28)) {
i1913 =  (int64_t)0;
i1912 = (i1912 +  (int64_t)1);
if ((i1912 ==  (int64_t)28)) {
i1912 =  (int64_t)0;
i1911 = (i1911 +  (int64_t)1);
if ((i1911 ==  (int64_t)240)) {
i1911 =  (int64_t)0;
i1910 = (i1910 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)240,  (int32_t)28,  (int32_t)28, tmp843);

uint64_t* tmp847 = make_array<uint64_t>( (int32_t)3,  (int32_t)3,  (int32_t)1,  (int32_t)240);

int64_t i1925;

int64_t i1924;

int64_t i1923;

int64_t i1922;

int64_t i1921;

int64_t i1920;

int64_t i1919;

int64_t i1918;
i1918 =  (int64_t)0;
i1919 =  (int64_t)0;
i1920 =  (int64_t)0;
i1921 =  (int64_t)0;
for (uint32_t i1925 =  (int32_t)0; i1925 <  (int32_t)240; i1925++){
for (uint32_t i1924 =  (int32_t)0; i1924 <  (int32_t)1; i1924++){
for (uint32_t i1922 =  (int32_t)0; i1922 <  (int32_t)3; i1922++){
for (uint32_t i1923 =  (int32_t)0; i1923 <  (int32_t)3; i1923++){
Arr4DIdxRowM(tmp847, (int32_t)3, (int32_t)3, (int32_t)1, (int32_t)240,i1922,i1923,i1924,i1925) = Arr4DIdxRowM(tmp49, (int32_t)240, (int32_t)1, (int32_t)3, (int32_t)3,i1918,i1919,i1920,i1921);
i1921 = (i1921 +  (int64_t)1);
if ((i1921 ==  (int64_t)3)) {
i1921 =  (int64_t)0;
i1920 = (i1920 +  (int64_t)1);
if ((i1920 ==  (int64_t)3)) {
i1920 =  (int64_t)0;
i1919 = (i1919 +  (int64_t)1);
if ((i1919 ==  (int64_t)1)) {
i1919 =  (int64_t)0;
i1918 = (i1918 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)240,  (int32_t)1,  (int32_t)3,  (int32_t)3, tmp49);

uint64_t* tmp849 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)240);
ScaleDown4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)240, tmp845,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)240,  (int32_t)3,  (int32_t)3,  (int32_t)240,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)2,  (int32_t)2,  (int32_t)240, tmp845, tmp847, tmp849);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)240, tmp845);
ClearMemSecret4( (int32_t)3,  (int32_t)3,  (int32_t)1,  (int32_t)240, tmp847);

uint64_t* tmp852 = make_array<uint64_t>( (int32_t)1,  (int32_t)240,  (int32_t)14,  (int32_t)14);

int64_t i1933;

int64_t i1932;

int64_t i1931;

int64_t i1930;

int64_t i1929;

int64_t i1928;

int64_t i1927;

int64_t i1926;
i1926 =  (int64_t)0;
i1927 =  (int64_t)0;
i1928 =  (int64_t)0;
i1929 =  (int64_t)0;
for (uint32_t i1930 =  (int32_t)0; i1930 <  (int32_t)1; i1930++){
for (uint32_t i1932 =  (int32_t)0; i1932 <  (int32_t)14; i1932++){
for (uint32_t i1933 =  (int32_t)0; i1933 <  (int32_t)14; i1933++){
for (uint32_t i1931 =  (int32_t)0; i1931 <  (int32_t)240; i1931++){
Arr4DIdxRowM(tmp852, (int32_t)1, (int32_t)240, (int32_t)14, (int32_t)14,i1930,i1931,i1932,i1933) = Arr4DIdxRowM(tmp849, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)240,i1926,i1927,i1928,i1929);
i1929 = (i1929 +  (int64_t)1);
if ((i1929 ==  (int64_t)240)) {
i1929 =  (int64_t)0;
i1928 = (i1928 +  (int64_t)1);
if ((i1928 ==  (int64_t)14)) {
i1928 =  (int64_t)0;
i1927 = (i1927 +  (int64_t)1);
if ((i1927 ==  (int64_t)14)) {
i1927 =  (int64_t)0;
i1926 = (i1926 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)240, tmp849);

uint64_t* tmp854 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)240);

int64_t i1941;

int64_t i1940;

int64_t i1939;

int64_t i1938;

int64_t i1937;

int64_t i1936;

int64_t i1935;

int64_t i1934;
i1934 =  (int64_t)0;
i1935 =  (int64_t)0;
i1936 =  (int64_t)0;
i1937 =  (int64_t)0;
for (uint32_t i1938 =  (int32_t)0; i1938 <  (int32_t)1; i1938++){
for (uint32_t i1941 =  (int32_t)0; i1941 <  (int32_t)240; i1941++){
for (uint32_t i1939 =  (int32_t)0; i1939 <  (int32_t)14; i1939++){
for (uint32_t i1940 =  (int32_t)0; i1940 <  (int32_t)14; i1940++){
Arr4DIdxRowM(tmp854, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)240,i1938,i1939,i1940,i1941) = Arr4DIdxRowM(tmp852, (int32_t)1, (int32_t)240, (int32_t)14, (int32_t)14,i1934,i1935,i1936,i1937);
i1937 = (i1937 +  (int64_t)1);
if ((i1937 ==  (int64_t)14)) {
i1937 =  (int64_t)0;
i1936 = (i1936 +  (int64_t)1);
if ((i1936 ==  (int64_t)14)) {
i1936 =  (int64_t)0;
i1935 = (i1935 +  (int64_t)1);
if ((i1935 ==  (int64_t)240)) {
i1935 =  (int64_t)0;
i1934 = (i1934 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)240,  (int32_t)14,  (int32_t)14, tmp852);

uint64_t* tmp856 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)240);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)240, tmp854,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)240, tmp854, tmp47, tmp48,  (int32_t)0,  (int32_t)0, tmp856);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)240, tmp854);

uint64_t* tmp858 = make_array<uint64_t>( (int32_t)1,  (int32_t)240,  (int32_t)14,  (int32_t)14);

int64_t i1949;

int64_t i1948;

int64_t i1947;

int64_t i1946;

int64_t i1945;

int64_t i1944;

int64_t i1943;

int64_t i1942;
i1942 =  (int64_t)0;
i1943 =  (int64_t)0;
i1944 =  (int64_t)0;
i1945 =  (int64_t)0;
for (uint32_t i1946 =  (int32_t)0; i1946 <  (int32_t)1; i1946++){
for (uint32_t i1948 =  (int32_t)0; i1948 <  (int32_t)14; i1948++){
for (uint32_t i1949 =  (int32_t)0; i1949 <  (int32_t)14; i1949++){
for (uint32_t i1947 =  (int32_t)0; i1947 <  (int32_t)240; i1947++){
Arr4DIdxRowM(tmp858, (int32_t)1, (int32_t)240, (int32_t)14, (int32_t)14,i1946,i1947,i1948,i1949) = Arr4DIdxRowM(tmp856, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)240,i1942,i1943,i1944,i1945);
i1945 = (i1945 +  (int64_t)1);
if ((i1945 ==  (int64_t)240)) {
i1945 =  (int64_t)0;
i1944 = (i1944 +  (int64_t)1);
if ((i1944 ==  (int64_t)14)) {
i1944 =  (int64_t)0;
i1943 = (i1943 +  (int64_t)1);
if ((i1943 ==  (int64_t)14)) {
i1943 =  (int64_t)0;
i1942 = (i1942 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)240, tmp856);

uint64_t* tmp860 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)240);

int64_t i1957;

int64_t i1956;

int64_t i1955;

int64_t i1954;

int64_t i1953;

int64_t i1952;

int64_t i1951;

int64_t i1950;
i1950 =  (int64_t)0;
i1951 =  (int64_t)0;
i1952 =  (int64_t)0;
i1953 =  (int64_t)0;
for (uint32_t i1954 =  (int32_t)0; i1954 <  (int32_t)1; i1954++){
for (uint32_t i1957 =  (int32_t)0; i1957 <  (int32_t)240; i1957++){
for (uint32_t i1955 =  (int32_t)0; i1955 <  (int32_t)14; i1955++){
for (uint32_t i1956 =  (int32_t)0; i1956 <  (int32_t)14; i1956++){
Arr4DIdxRowM(tmp860, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)240,i1954,i1955,i1956,i1957) = Arr4DIdxRowM(tmp858, (int32_t)1, (int32_t)240, (int32_t)14, (int32_t)14,i1950,i1951,i1952,i1953);
i1953 = (i1953 +  (int64_t)1);
if ((i1953 ==  (int64_t)14)) {
i1953 =  (int64_t)0;
i1952 = (i1952 +  (int64_t)1);
if ((i1952 ==  (int64_t)14)) {
i1952 =  (int64_t)0;
i1951 = (i1951 +  (int64_t)1);
if ((i1951 ==  (int64_t)240)) {
i1951 =  (int64_t)0;
i1950 = (i1950 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp861 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)240);
HardSigmoid4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)240, tmp860, tmp861,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)240, tmp860);

uint64_t* tmp863 = make_array<uint64_t>( (int32_t)1,  (int32_t)240,  (int32_t)14,  (int32_t)14);

int64_t i1965;

int64_t i1964;

int64_t i1963;

int64_t i1962;

int64_t i1961;

int64_t i1960;

int64_t i1959;

int64_t i1958;
i1958 =  (int64_t)0;
i1959 =  (int64_t)0;
i1960 =  (int64_t)0;
i1961 =  (int64_t)0;
for (uint32_t i1962 =  (int32_t)0; i1962 <  (int32_t)1; i1962++){
for (uint32_t i1964 =  (int32_t)0; i1964 <  (int32_t)14; i1964++){
for (uint32_t i1965 =  (int32_t)0; i1965 <  (int32_t)14; i1965++){
for (uint32_t i1963 =  (int32_t)0; i1963 <  (int32_t)240; i1963++){
Arr4DIdxRowM(tmp863, (int32_t)1, (int32_t)240, (int32_t)14, (int32_t)14,i1962,i1963,i1964,i1965) = Arr4DIdxRowM(tmp861, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)240,i1958,i1959,i1960,i1961);
i1961 = (i1961 +  (int64_t)1);
if ((i1961 ==  (int64_t)240)) {
i1961 =  (int64_t)0;
i1960 = (i1960 +  (int64_t)1);
if ((i1960 ==  (int64_t)14)) {
i1960 =  (int64_t)0;
i1959 = (i1959 +  (int64_t)1);
if ((i1959 ==  (int64_t)14)) {
i1959 =  (int64_t)0;
i1958 = (i1958 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)240, tmp861);

uint64_t* tmp865 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)240);

int64_t i1973;

int64_t i1972;

int64_t i1971;

int64_t i1970;

int64_t i1969;

int64_t i1968;

int64_t i1967;

int64_t i1966;
i1966 =  (int64_t)0;
i1967 =  (int64_t)0;
i1968 =  (int64_t)0;
i1969 =  (int64_t)0;
for (uint32_t i1970 =  (int32_t)0; i1970 <  (int32_t)1; i1970++){
for (uint32_t i1973 =  (int32_t)0; i1973 <  (int32_t)240; i1973++){
for (uint32_t i1971 =  (int32_t)0; i1971 <  (int32_t)14; i1971++){
for (uint32_t i1972 =  (int32_t)0; i1972 <  (int32_t)14; i1972++){
Arr4DIdxRowM(tmp865, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)240,i1970,i1971,i1972,i1973) = Arr4DIdxRowM(tmp858, (int32_t)1, (int32_t)240, (int32_t)14, (int32_t)14,i1966,i1967,i1968,i1969);
i1969 = (i1969 +  (int64_t)1);
if ((i1969 ==  (int64_t)14)) {
i1969 =  (int64_t)0;
i1968 = (i1968 +  (int64_t)1);
if ((i1968 ==  (int64_t)14)) {
i1968 =  (int64_t)0;
i1967 = (i1967 +  (int64_t)1);
if ((i1967 ==  (int64_t)240)) {
i1967 =  (int64_t)0;
i1966 = (i1966 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)240,  (int32_t)14,  (int32_t)14, tmp858);

uint64_t* tmp867 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)240);

int64_t i1981;

int64_t i1980;

int64_t i1979;

int64_t i1978;

int64_t i1977;

int64_t i1976;

int64_t i1975;

int64_t i1974;
i1974 =  (int64_t)0;
i1975 =  (int64_t)0;
i1976 =  (int64_t)0;
i1977 =  (int64_t)0;
for (uint32_t i1978 =  (int32_t)0; i1978 <  (int32_t)1; i1978++){
for (uint32_t i1981 =  (int32_t)0; i1981 <  (int32_t)240; i1981++){
for (uint32_t i1979 =  (int32_t)0; i1979 <  (int32_t)14; i1979++){
for (uint32_t i1980 =  (int32_t)0; i1980 <  (int32_t)14; i1980++){
Arr4DIdxRowM(tmp867, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)240,i1978,i1979,i1980,i1981) = Arr4DIdxRowM(tmp863, (int32_t)1, (int32_t)240, (int32_t)14, (int32_t)14,i1974,i1975,i1976,i1977);
i1977 = (i1977 +  (int64_t)1);
if ((i1977 ==  (int64_t)14)) {
i1977 =  (int64_t)0;
i1976 = (i1976 +  (int64_t)1);
if ((i1976 ==  (int64_t)14)) {
i1976 =  (int64_t)0;
i1975 = (i1975 +  (int64_t)1);
if ((i1975 ==  (int64_t)240)) {
i1975 =  (int64_t)0;
i1974 = (i1974 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)240,  (int32_t)14,  (int32_t)14, tmp863);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)240, tmp865,  (int32_t)23);

uint64_t* tmp869 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)240);

uint64_t* tmp870 = make_array<uint64_t>( (int32_t)47040);

uint64_t* tmp871 = make_array<uint64_t>( (int32_t)47040);

uint64_t* tmp872 = make_array<uint64_t>( (int32_t)47040);

int32_t tmp873;
for (uint32_t i1982 =  (int32_t)0; i1982 <  (int32_t)1; i1982++){
for (uint32_t i1983 =  (int32_t)0; i1983 <  (int32_t)14; i1983++){
for (uint32_t i1984 =  (int32_t)0; i1984 <  (int32_t)14; i1984++){
for (uint32_t i1985 =  (int32_t)0; i1985 <  (int32_t)240; i1985++){
tmp873 = (((( (int32_t)0 + (i1982 *  (int32_t)47040)) + (i1983 *  (int32_t)3360)) + (i1984 *  (int32_t)240)) + (i1985 *  (int32_t)1));
Arr1DIdxRowM(tmp870, (int32_t)47040,tmp873) = Arr4DIdxRowM(tmp865, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)240,i1982,i1983,i1984,i1985);
Arr1DIdxRowM(tmp871, (int32_t)47040,tmp873) = Arr4DIdxRowM(tmp867, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)240,i1982,i1983,i1984,i1985);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)47040, tmp870, tmp871, tmp872);
ClearMemSecret1( (int32_t)47040, tmp870);
ClearMemSecret1( (int32_t)47040, tmp871);
for (uint32_t i1982 =  (int32_t)0; i1982 <  (int32_t)1; i1982++){
for (uint32_t i1983 =  (int32_t)0; i1983 <  (int32_t)14; i1983++){
for (uint32_t i1984 =  (int32_t)0; i1984 <  (int32_t)14; i1984++){
for (uint32_t i1985 =  (int32_t)0; i1985 <  (int32_t)240; i1985++){
tmp873 = (((( (int32_t)0 + (i1982 *  (int32_t)47040)) + (i1983 *  (int32_t)3360)) + (i1984 *  (int32_t)240)) + (i1985 *  (int32_t)1));
Arr4DIdxRowM(tmp869, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)240,i1982,i1983,i1984,i1985) = Arr1DIdxRowM(tmp872, (int32_t)47040,tmp873);
}
}
}
}
ClearMemSecret1( (int32_t)47040, tmp872);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)240, tmp867);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)240, tmp865);

uint64_t* tmp876 = make_array<uint64_t>( (int32_t)1,  (int32_t)240,  (int32_t)14,  (int32_t)14);

int64_t i1993;

int64_t i1992;

int64_t i1991;

int64_t i1990;

int64_t i1989;

int64_t i1988;

int64_t i1987;

int64_t i1986;
i1986 =  (int64_t)0;
i1987 =  (int64_t)0;
i1988 =  (int64_t)0;
i1989 =  (int64_t)0;
for (uint32_t i1990 =  (int32_t)0; i1990 <  (int32_t)1; i1990++){
for (uint32_t i1992 =  (int32_t)0; i1992 <  (int32_t)14; i1992++){
for (uint32_t i1993 =  (int32_t)0; i1993 <  (int32_t)14; i1993++){
for (uint32_t i1991 =  (int32_t)0; i1991 <  (int32_t)240; i1991++){
Arr4DIdxRowM(tmp876, (int32_t)1, (int32_t)240, (int32_t)14, (int32_t)14,i1990,i1991,i1992,i1993) = Arr4DIdxRowM(tmp869, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)240,i1986,i1987,i1988,i1989);
i1989 = (i1989 +  (int64_t)1);
if ((i1989 ==  (int64_t)240)) {
i1989 =  (int64_t)0;
i1988 = (i1988 +  (int64_t)1);
if ((i1988 ==  (int64_t)14)) {
i1988 =  (int64_t)0;
i1987 = (i1987 +  (int64_t)1);
if ((i1987 ==  (int64_t)14)) {
i1987 =  (int64_t)0;
i1986 = (i1986 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)240, tmp869);

uint64_t* tmp878 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)240);

int64_t i2001;

int64_t i2000;

int64_t i1999;

int64_t i1998;

int64_t i1997;

int64_t i1996;

int64_t i1995;

int64_t i1994;
i1994 =  (int64_t)0;
i1995 =  (int64_t)0;
i1996 =  (int64_t)0;
i1997 =  (int64_t)0;
for (uint32_t i1998 =  (int32_t)0; i1998 <  (int32_t)1; i1998++){
for (uint32_t i2001 =  (int32_t)0; i2001 <  (int32_t)240; i2001++){
for (uint32_t i1999 =  (int32_t)0; i1999 <  (int32_t)14; i1999++){
for (uint32_t i2000 =  (int32_t)0; i2000 <  (int32_t)14; i2000++){
Arr4DIdxRowM(tmp878, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)240,i1998,i1999,i2000,i2001) = Arr4DIdxRowM(tmp876, (int32_t)1, (int32_t)240, (int32_t)14, (int32_t)14,i1994,i1995,i1996,i1997);
i1997 = (i1997 +  (int64_t)1);
if ((i1997 ==  (int64_t)14)) {
i1997 =  (int64_t)0;
i1996 = (i1996 +  (int64_t)1);
if ((i1996 ==  (int64_t)14)) {
i1996 =  (int64_t)0;
i1995 = (i1995 +  (int64_t)1);
if ((i1995 ==  (int64_t)240)) {
i1995 =  (int64_t)0;
i1994 = (i1994 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)240,  (int32_t)14,  (int32_t)14, tmp876);

uint64_t* tmp880 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)240,  (int32_t)80);

int64_t i2009;

int64_t i2008;

int64_t i2007;

int64_t i2006;

int64_t i2005;

int64_t i2004;

int64_t i2003;

int64_t i2002;
i2002 =  (int64_t)0;
i2003 =  (int64_t)0;
i2004 =  (int64_t)0;
i2005 =  (int64_t)0;
for (uint32_t i2009 =  (int32_t)0; i2009 <  (int32_t)80; i2009++){
for (uint32_t i2008 =  (int32_t)0; i2008 <  (int32_t)240; i2008++){
for (uint32_t i2006 =  (int32_t)0; i2006 <  (int32_t)1; i2006++){
for (uint32_t i2007 =  (int32_t)0; i2007 <  (int32_t)1; i2007++){
Arr4DIdxRowM(tmp880, (int32_t)1, (int32_t)1, (int32_t)240, (int32_t)80,i2006,i2007,i2008,i2009) = Arr4DIdxRowM(tmp50, (int32_t)80, (int32_t)240, (int32_t)1, (int32_t)1,i2002,i2003,i2004,i2005);
i2005 = (i2005 +  (int64_t)1);
if ((i2005 ==  (int64_t)1)) {
i2005 =  (int64_t)0;
i2004 = (i2004 +  (int64_t)1);
if ((i2004 ==  (int64_t)1)) {
i2004 =  (int64_t)0;
i2003 = (i2003 +  (int64_t)1);
if ((i2003 ==  (int64_t)240)) {
i2003 =  (int64_t)0;
i2002 = (i2002 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)80,  (int32_t)240,  (int32_t)1,  (int32_t)1, tmp50);

uint64_t* tmp882 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)240, tmp878,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)240,  (int32_t)1,  (int32_t)1,  (int32_t)80,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp878, tmp880, tmp882);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)240, tmp878);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)240,  (int32_t)80, tmp880);

uint64_t* tmp885 = make_array<uint64_t>( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14);

int64_t i2017;

int64_t i2016;

int64_t i2015;

int64_t i2014;

int64_t i2013;

int64_t i2012;

int64_t i2011;

int64_t i2010;
i2010 =  (int64_t)0;
i2011 =  (int64_t)0;
i2012 =  (int64_t)0;
i2013 =  (int64_t)0;
for (uint32_t i2014 =  (int32_t)0; i2014 <  (int32_t)1; i2014++){
for (uint32_t i2016 =  (int32_t)0; i2016 <  (int32_t)14; i2016++){
for (uint32_t i2017 =  (int32_t)0; i2017 <  (int32_t)14; i2017++){
for (uint32_t i2015 =  (int32_t)0; i2015 <  (int32_t)80; i2015++){
Arr4DIdxRowM(tmp885, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2014,i2015,i2016,i2017) = Arr4DIdxRowM(tmp882, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2010,i2011,i2012,i2013);
i2013 = (i2013 +  (int64_t)1);
if ((i2013 ==  (int64_t)80)) {
i2013 =  (int64_t)0;
i2012 = (i2012 +  (int64_t)1);
if ((i2012 ==  (int64_t)14)) {
i2012 =  (int64_t)0;
i2011 = (i2011 +  (int64_t)1);
if ((i2011 ==  (int64_t)14)) {
i2011 =  (int64_t)0;
i2010 = (i2010 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp882);

uint64_t* tmp887 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);

int64_t i2025;

int64_t i2024;

int64_t i2023;

int64_t i2022;

int64_t i2021;

int64_t i2020;

int64_t i2019;

int64_t i2018;
i2018 =  (int64_t)0;
i2019 =  (int64_t)0;
i2020 =  (int64_t)0;
i2021 =  (int64_t)0;
for (uint32_t i2022 =  (int32_t)0; i2022 <  (int32_t)1; i2022++){
for (uint32_t i2025 =  (int32_t)0; i2025 <  (int32_t)80; i2025++){
for (uint32_t i2023 =  (int32_t)0; i2023 <  (int32_t)14; i2023++){
for (uint32_t i2024 =  (int32_t)0; i2024 <  (int32_t)14; i2024++){
Arr4DIdxRowM(tmp887, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2022,i2023,i2024,i2025) = Arr4DIdxRowM(tmp885, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2018,i2019,i2020,i2021);
i2021 = (i2021 +  (int64_t)1);
if ((i2021 ==  (int64_t)14)) {
i2021 =  (int64_t)0;
i2020 = (i2020 +  (int64_t)1);
if ((i2020 ==  (int64_t)14)) {
i2020 =  (int64_t)0;
i2019 = (i2019 +  (int64_t)1);
if ((i2019 ==  (int64_t)80)) {
i2019 =  (int64_t)0;
i2018 = (i2018 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14, tmp885);

uint64_t* tmp889 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp887,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp887, tmp51, tmp52,  (int32_t)0,  (int32_t)23, tmp889);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp887);

uint64_t* tmp891 = make_array<uint64_t>( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14);

int64_t i2033;

int64_t i2032;

int64_t i2031;

int64_t i2030;

int64_t i2029;

int64_t i2028;

int64_t i2027;

int64_t i2026;
i2026 =  (int64_t)0;
i2027 =  (int64_t)0;
i2028 =  (int64_t)0;
i2029 =  (int64_t)0;
for (uint32_t i2030 =  (int32_t)0; i2030 <  (int32_t)1; i2030++){
for (uint32_t i2032 =  (int32_t)0; i2032 <  (int32_t)14; i2032++){
for (uint32_t i2033 =  (int32_t)0; i2033 <  (int32_t)14; i2033++){
for (uint32_t i2031 =  (int32_t)0; i2031 <  (int32_t)80; i2031++){
Arr4DIdxRowM(tmp891, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2030,i2031,i2032,i2033) = Arr4DIdxRowM(tmp889, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2026,i2027,i2028,i2029);
i2029 = (i2029 +  (int64_t)1);
if ((i2029 ==  (int64_t)80)) {
i2029 =  (int64_t)0;
i2028 = (i2028 +  (int64_t)1);
if ((i2028 ==  (int64_t)14)) {
i2028 =  (int64_t)0;
i2027 = (i2027 +  (int64_t)1);
if ((i2027 ==  (int64_t)14)) {
i2027 =  (int64_t)0;
i2026 = (i2026 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp889);

uint64_t* tmp893 = make_array<uint64_t>( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40);

int64_t i2041;

int64_t i2040;

int64_t i2039;

int64_t i2038;

int64_t i2037;

int64_t i2036;

int64_t i2035;

int64_t i2034;
i2034 =  (int64_t)0;
i2035 =  (int64_t)0;
i2036 =  (int64_t)0;
i2037 =  (int64_t)0;
for (uint32_t i2038 =  (int32_t)0; i2038 <  (int32_t)1; i2038++){
for (uint32_t i2041 =  (int32_t)0; i2041 <  (int32_t)40; i2041++){
for (uint32_t i2039 =  (int32_t)0; i2039 <  (int32_t)28; i2039++){
for (uint32_t i2040 =  (int32_t)0; i2040 <  (int32_t)28; i2040++){
Arr4DIdxRowM(tmp893, (int32_t)1, (int32_t)28, (int32_t)28, (int32_t)40,i2038,i2039,i2040,i2041) = Arr4DIdxRowM(tmp811, (int32_t)1, (int32_t)40, (int32_t)28, (int32_t)28,i2034,i2035,i2036,i2037);
i2037 = (i2037 +  (int64_t)1);
if ((i2037 ==  (int64_t)28)) {
i2037 =  (int64_t)0;
i2036 = (i2036 +  (int64_t)1);
if ((i2036 ==  (int64_t)28)) {
i2036 =  (int64_t)0;
i2035 = (i2035 +  (int64_t)1);
if ((i2035 ==  (int64_t)40)) {
i2035 =  (int64_t)0;
i2034 = (i2034 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)40,  (int32_t)28,  (int32_t)28, tmp811);

uint64_t* tmp895 = make_array<uint64_t>( (int32_t)3,  (int32_t)3,  (int32_t)1,  (int32_t)40);

int64_t i2049;

int64_t i2048;

int64_t i2047;

int64_t i2046;

int64_t i2045;

int64_t i2044;

int64_t i2043;

int64_t i2042;
i2042 =  (int64_t)0;
i2043 =  (int64_t)0;
i2044 =  (int64_t)0;
i2045 =  (int64_t)0;
for (uint32_t i2049 =  (int32_t)0; i2049 <  (int32_t)40; i2049++){
for (uint32_t i2048 =  (int32_t)0; i2048 <  (int32_t)1; i2048++){
for (uint32_t i2046 =  (int32_t)0; i2046 <  (int32_t)3; i2046++){
for (uint32_t i2047 =  (int32_t)0; i2047 <  (int32_t)3; i2047++){
Arr4DIdxRowM(tmp895, (int32_t)3, (int32_t)3, (int32_t)1, (int32_t)40,i2046,i2047,i2048,i2049) = Arr4DIdxRowM(tmp53, (int32_t)40, (int32_t)1, (int32_t)3, (int32_t)3,i2042,i2043,i2044,i2045);
i2045 = (i2045 +  (int64_t)1);
if ((i2045 ==  (int64_t)3)) {
i2045 =  (int64_t)0;
i2044 = (i2044 +  (int64_t)1);
if ((i2044 ==  (int64_t)3)) {
i2044 =  (int64_t)0;
i2043 = (i2043 +  (int64_t)1);
if ((i2043 ==  (int64_t)1)) {
i2043 =  (int64_t)0;
i2042 = (i2042 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)40,  (int32_t)1,  (int32_t)3,  (int32_t)3, tmp53);

uint64_t* tmp897 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)40);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40,  (int32_t)3,  (int32_t)3,  (int32_t)40,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)2,  (int32_t)2,  (int32_t)40, tmp893, tmp895, tmp897);
ClearMemSecret4( (int32_t)1,  (int32_t)28,  (int32_t)28,  (int32_t)40, tmp893);
ClearMemSecret4( (int32_t)3,  (int32_t)3,  (int32_t)1,  (int32_t)40, tmp895);

uint64_t* tmp900 = make_array<uint64_t>( (int32_t)1,  (int32_t)40,  (int32_t)14,  (int32_t)14);

int64_t i2057;

int64_t i2056;

int64_t i2055;

int64_t i2054;

int64_t i2053;

int64_t i2052;

int64_t i2051;

int64_t i2050;
i2050 =  (int64_t)0;
i2051 =  (int64_t)0;
i2052 =  (int64_t)0;
i2053 =  (int64_t)0;
for (uint32_t i2054 =  (int32_t)0; i2054 <  (int32_t)1; i2054++){
for (uint32_t i2056 =  (int32_t)0; i2056 <  (int32_t)14; i2056++){
for (uint32_t i2057 =  (int32_t)0; i2057 <  (int32_t)14; i2057++){
for (uint32_t i2055 =  (int32_t)0; i2055 <  (int32_t)40; i2055++){
Arr4DIdxRowM(tmp900, (int32_t)1, (int32_t)40, (int32_t)14, (int32_t)14,i2054,i2055,i2056,i2057) = Arr4DIdxRowM(tmp897, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)40,i2050,i2051,i2052,i2053);
i2053 = (i2053 +  (int64_t)1);
if ((i2053 ==  (int64_t)40)) {
i2053 =  (int64_t)0;
i2052 = (i2052 +  (int64_t)1);
if ((i2052 ==  (int64_t)14)) {
i2052 =  (int64_t)0;
i2051 = (i2051 +  (int64_t)1);
if ((i2051 ==  (int64_t)14)) {
i2051 =  (int64_t)0;
i2050 = (i2050 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)40, tmp897);

uint64_t* tmp902 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)40);

int64_t i2065;

int64_t i2064;

int64_t i2063;

int64_t i2062;

int64_t i2061;

int64_t i2060;

int64_t i2059;

int64_t i2058;
i2058 =  (int64_t)0;
i2059 =  (int64_t)0;
i2060 =  (int64_t)0;
i2061 =  (int64_t)0;
for (uint32_t i2062 =  (int32_t)0; i2062 <  (int32_t)1; i2062++){
for (uint32_t i2065 =  (int32_t)0; i2065 <  (int32_t)40; i2065++){
for (uint32_t i2063 =  (int32_t)0; i2063 <  (int32_t)14; i2063++){
for (uint32_t i2064 =  (int32_t)0; i2064 <  (int32_t)14; i2064++){
Arr4DIdxRowM(tmp902, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)40,i2062,i2063,i2064,i2065) = Arr4DIdxRowM(tmp900, (int32_t)1, (int32_t)40, (int32_t)14, (int32_t)14,i2058,i2059,i2060,i2061);
i2061 = (i2061 +  (int64_t)1);
if ((i2061 ==  (int64_t)14)) {
i2061 =  (int64_t)0;
i2060 = (i2060 +  (int64_t)1);
if ((i2060 ==  (int64_t)14)) {
i2060 =  (int64_t)0;
i2059 = (i2059 +  (int64_t)1);
if ((i2059 ==  (int64_t)40)) {
i2059 =  (int64_t)0;
i2058 = (i2058 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)40,  (int32_t)14,  (int32_t)14, tmp900);

uint64_t* tmp904 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)40);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)40, tmp902,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)40, tmp902, tmp28, tmp29,  (int32_t)0,  (int32_t)0, tmp904);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)40, tmp902);
ClearMemSecret1( (int32_t)40, tmp28);
ClearMemSecret1( (int32_t)40, tmp29);

uint64_t* tmp908 = make_array<uint64_t>( (int32_t)1,  (int32_t)40,  (int32_t)14,  (int32_t)14);

int64_t i2073;

int64_t i2072;

int64_t i2071;

int64_t i2070;

int64_t i2069;

int64_t i2068;

int64_t i2067;

int64_t i2066;
i2066 =  (int64_t)0;
i2067 =  (int64_t)0;
i2068 =  (int64_t)0;
i2069 =  (int64_t)0;
for (uint32_t i2070 =  (int32_t)0; i2070 <  (int32_t)1; i2070++){
for (uint32_t i2072 =  (int32_t)0; i2072 <  (int32_t)14; i2072++){
for (uint32_t i2073 =  (int32_t)0; i2073 <  (int32_t)14; i2073++){
for (uint32_t i2071 =  (int32_t)0; i2071 <  (int32_t)40; i2071++){
Arr4DIdxRowM(tmp908, (int32_t)1, (int32_t)40, (int32_t)14, (int32_t)14,i2070,i2071,i2072,i2073) = Arr4DIdxRowM(tmp904, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)40,i2066,i2067,i2068,i2069);
i2069 = (i2069 +  (int64_t)1);
if ((i2069 ==  (int64_t)40)) {
i2069 =  (int64_t)0;
i2068 = (i2068 +  (int64_t)1);
if ((i2068 ==  (int64_t)14)) {
i2068 =  (int64_t)0;
i2067 = (i2067 +  (int64_t)1);
if ((i2067 ==  (int64_t)14)) {
i2067 =  (int64_t)0;
i2066 = (i2066 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)40, tmp904);

uint64_t* tmp910 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)40);

int64_t i2081;

int64_t i2080;

int64_t i2079;

int64_t i2078;

int64_t i2077;

int64_t i2076;

int64_t i2075;

int64_t i2074;
i2074 =  (int64_t)0;
i2075 =  (int64_t)0;
i2076 =  (int64_t)0;
i2077 =  (int64_t)0;
for (uint32_t i2078 =  (int32_t)0; i2078 <  (int32_t)1; i2078++){
for (uint32_t i2081 =  (int32_t)0; i2081 <  (int32_t)40; i2081++){
for (uint32_t i2079 =  (int32_t)0; i2079 <  (int32_t)14; i2079++){
for (uint32_t i2080 =  (int32_t)0; i2080 <  (int32_t)14; i2080++){
Arr4DIdxRowM(tmp910, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)40,i2078,i2079,i2080,i2081) = Arr4DIdxRowM(tmp908, (int32_t)1, (int32_t)40, (int32_t)14, (int32_t)14,i2074,i2075,i2076,i2077);
i2077 = (i2077 +  (int64_t)1);
if ((i2077 ==  (int64_t)14)) {
i2077 =  (int64_t)0;
i2076 = (i2076 +  (int64_t)1);
if ((i2076 ==  (int64_t)14)) {
i2076 =  (int64_t)0;
i2075 = (i2075 +  (int64_t)1);
if ((i2075 ==  (int64_t)40)) {
i2075 =  (int64_t)0;
i2074 = (i2074 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)40,  (int32_t)14,  (int32_t)14, tmp908);

uint64_t* tmp912 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)40,  (int32_t)80);

int64_t i2089;

int64_t i2088;

int64_t i2087;

int64_t i2086;

int64_t i2085;

int64_t i2084;

int64_t i2083;

int64_t i2082;
i2082 =  (int64_t)0;
i2083 =  (int64_t)0;
i2084 =  (int64_t)0;
i2085 =  (int64_t)0;
for (uint32_t i2089 =  (int32_t)0; i2089 <  (int32_t)80; i2089++){
for (uint32_t i2088 =  (int32_t)0; i2088 <  (int32_t)40; i2088++){
for (uint32_t i2086 =  (int32_t)0; i2086 <  (int32_t)1; i2086++){
for (uint32_t i2087 =  (int32_t)0; i2087 <  (int32_t)1; i2087++){
Arr4DIdxRowM(tmp912, (int32_t)1, (int32_t)1, (int32_t)40, (int32_t)80,i2086,i2087,i2088,i2089) = Arr4DIdxRowM(tmp54, (int32_t)80, (int32_t)40, (int32_t)1, (int32_t)1,i2082,i2083,i2084,i2085);
i2085 = (i2085 +  (int64_t)1);
if ((i2085 ==  (int64_t)1)) {
i2085 =  (int64_t)0;
i2084 = (i2084 +  (int64_t)1);
if ((i2084 ==  (int64_t)1)) {
i2084 =  (int64_t)0;
i2083 = (i2083 +  (int64_t)1);
if ((i2083 ==  (int64_t)40)) {
i2083 =  (int64_t)0;
i2082 = (i2082 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)80,  (int32_t)40,  (int32_t)1,  (int32_t)1, tmp54);

uint64_t* tmp914 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)40, tmp910,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)40,  (int32_t)1,  (int32_t)1,  (int32_t)80,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp910, tmp912, tmp914);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)40, tmp910);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)40,  (int32_t)80, tmp912);

uint64_t* tmp917 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)80);

int64_t i2094;

int64_t i2093;

int64_t i2092;

int64_t i2091;

int64_t i2090;
i2090 =  (int64_t)0;
for (uint32_t i2091 =  (int32_t)0; i2091 <  (int32_t)1; i2091++){
for (uint32_t i2092 =  (int32_t)0; i2092 <  (int32_t)1; i2092++){
for (uint32_t i2093 =  (int32_t)0; i2093 <  (int32_t)1; i2093++){
for (uint32_t i2094 =  (int32_t)0; i2094 <  (int32_t)80; i2094++){
Arr4DIdxRowM(tmp917, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)80,i2091,i2092,i2093,i2094) = Arr1DIdxRowM(tmp52, (int32_t)80,i2090);
i2090 = (i2090 +  (int64_t)1);
}
}
}
}

uint64_t* tmp918 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);
for (uint32_t i0 =  (int32_t)0; i0 <  (int32_t)1; i0++){
for (uint32_t i1 =  (int32_t)0; i1 <  (int32_t)14; i1++){
for (uint32_t i2 =  (int32_t)0; i2 <  (int32_t)14; i2++){
for (uint32_t i3 =  (int32_t)0; i3 <  (int32_t)80; i3++){
Arr4DIdxRowM(tmp918, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i0,i1,i2,i3) = SecretAdd(Arr4DIdxRowM(tmp914, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i0,i1,i2,i3), Arr4DIdxRowM(tmp917, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)80,i0, (int32_t)0, (int32_t)0,i3));
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)80, tmp917);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp914);

uint64_t* tmp921 = make_array<uint64_t>( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14);

int64_t i2102;

int64_t i2101;

int64_t i2100;

int64_t i2099;

int64_t i2098;

int64_t i2097;

int64_t i2096;

int64_t i2095;
i2095 =  (int64_t)0;
i2096 =  (int64_t)0;
i2097 =  (int64_t)0;
i2098 =  (int64_t)0;
for (uint32_t i2099 =  (int32_t)0; i2099 <  (int32_t)1; i2099++){
for (uint32_t i2101 =  (int32_t)0; i2101 <  (int32_t)14; i2101++){
for (uint32_t i2102 =  (int32_t)0; i2102 <  (int32_t)14; i2102++){
for (uint32_t i2100 =  (int32_t)0; i2100 <  (int32_t)80; i2100++){
Arr4DIdxRowM(tmp921, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2099,i2100,i2101,i2102) = Arr4DIdxRowM(tmp918, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2095,i2096,i2097,i2098);
i2098 = (i2098 +  (int64_t)1);
if ((i2098 ==  (int64_t)80)) {
i2098 =  (int64_t)0;
i2097 = (i2097 +  (int64_t)1);
if ((i2097 ==  (int64_t)14)) {
i2097 =  (int64_t)0;
i2096 = (i2096 +  (int64_t)1);
if ((i2096 ==  (int64_t)14)) {
i2096 =  (int64_t)0;
i2095 = (i2095 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp918);

uint64_t* tmp923 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);

int64_t i2110;

int64_t i2109;

int64_t i2108;

int64_t i2107;

int64_t i2106;

int64_t i2105;

int64_t i2104;

int64_t i2103;
i2103 =  (int64_t)0;
i2104 =  (int64_t)0;
i2105 =  (int64_t)0;
i2106 =  (int64_t)0;
for (uint32_t i2107 =  (int32_t)0; i2107 <  (int32_t)1; i2107++){
for (uint32_t i2110 =  (int32_t)0; i2110 <  (int32_t)80; i2110++){
for (uint32_t i2108 =  (int32_t)0; i2108 <  (int32_t)14; i2108++){
for (uint32_t i2109 =  (int32_t)0; i2109 <  (int32_t)14; i2109++){
Arr4DIdxRowM(tmp923, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2107,i2108,i2109,i2110) = Arr4DIdxRowM(tmp921, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2103,i2104,i2105,i2106);
i2106 = (i2106 +  (int64_t)1);
if ((i2106 ==  (int64_t)14)) {
i2106 =  (int64_t)0;
i2105 = (i2105 +  (int64_t)1);
if ((i2105 ==  (int64_t)14)) {
i2105 =  (int64_t)0;
i2104 = (i2104 +  (int64_t)1);
if ((i2104 ==  (int64_t)80)) {
i2104 =  (int64_t)0;
i2103 = (i2103 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14, tmp921);

uint64_t* tmp925 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp923,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp923, tmp51, tmp52,  (int32_t)0,  (int32_t)0, tmp925);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp923);

uint64_t* tmp927 = make_array<uint64_t>( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14);

int64_t i2118;

int64_t i2117;

int64_t i2116;

int64_t i2115;

int64_t i2114;

int64_t i2113;

int64_t i2112;

int64_t i2111;
i2111 =  (int64_t)0;
i2112 =  (int64_t)0;
i2113 =  (int64_t)0;
i2114 =  (int64_t)0;
for (uint32_t i2115 =  (int32_t)0; i2115 <  (int32_t)1; i2115++){
for (uint32_t i2117 =  (int32_t)0; i2117 <  (int32_t)14; i2117++){
for (uint32_t i2118 =  (int32_t)0; i2118 <  (int32_t)14; i2118++){
for (uint32_t i2116 =  (int32_t)0; i2116 <  (int32_t)80; i2116++){
Arr4DIdxRowM(tmp927, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2115,i2116,i2117,i2118) = Arr4DIdxRowM(tmp925, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2111,i2112,i2113,i2114);
i2114 = (i2114 +  (int64_t)1);
if ((i2114 ==  (int64_t)80)) {
i2114 =  (int64_t)0;
i2113 = (i2113 +  (int64_t)1);
if ((i2113 ==  (int64_t)14)) {
i2113 =  (int64_t)0;
i2112 = (i2112 +  (int64_t)1);
if ((i2112 ==  (int64_t)14)) {
i2112 =  (int64_t)0;
i2111 = (i2111 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp925);

uint64_t* tmp929 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);

int64_t i2126;

int64_t i2125;

int64_t i2124;

int64_t i2123;

int64_t i2122;

int64_t i2121;

int64_t i2120;

int64_t i2119;
i2119 =  (int64_t)0;
i2120 =  (int64_t)0;
i2121 =  (int64_t)0;
i2122 =  (int64_t)0;
for (uint32_t i2123 =  (int32_t)0; i2123 <  (int32_t)1; i2123++){
for (uint32_t i2126 =  (int32_t)0; i2126 <  (int32_t)80; i2126++){
for (uint32_t i2124 =  (int32_t)0; i2124 <  (int32_t)14; i2124++){
for (uint32_t i2125 =  (int32_t)0; i2125 <  (int32_t)14; i2125++){
Arr4DIdxRowM(tmp929, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2123,i2124,i2125,i2126) = Arr4DIdxRowM(tmp891, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2119,i2120,i2121,i2122);
i2122 = (i2122 +  (int64_t)1);
if ((i2122 ==  (int64_t)14)) {
i2122 =  (int64_t)0;
i2121 = (i2121 +  (int64_t)1);
if ((i2121 ==  (int64_t)14)) {
i2121 =  (int64_t)0;
i2120 = (i2120 +  (int64_t)1);
if ((i2120 ==  (int64_t)80)) {
i2120 =  (int64_t)0;
i2119 = (i2119 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14, tmp891);

uint64_t* tmp931 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);

int64_t i2134;

int64_t i2133;

int64_t i2132;

int64_t i2131;

int64_t i2130;

int64_t i2129;

int64_t i2128;

int64_t i2127;
i2127 =  (int64_t)0;
i2128 =  (int64_t)0;
i2129 =  (int64_t)0;
i2130 =  (int64_t)0;
for (uint32_t i2131 =  (int32_t)0; i2131 <  (int32_t)1; i2131++){
for (uint32_t i2134 =  (int32_t)0; i2134 <  (int32_t)80; i2134++){
for (uint32_t i2132 =  (int32_t)0; i2132 <  (int32_t)14; i2132++){
for (uint32_t i2133 =  (int32_t)0; i2133 <  (int32_t)14; i2133++){
Arr4DIdxRowM(tmp931, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2131,i2132,i2133,i2134) = Arr4DIdxRowM(tmp927, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2127,i2128,i2129,i2130);
i2130 = (i2130 +  (int64_t)1);
if ((i2130 ==  (int64_t)14)) {
i2130 =  (int64_t)0;
i2129 = (i2129 +  (int64_t)1);
if ((i2129 ==  (int64_t)14)) {
i2129 =  (int64_t)0;
i2128 = (i2128 +  (int64_t)1);
if ((i2128 ==  (int64_t)80)) {
i2128 =  (int64_t)0;
i2127 = (i2127 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14, tmp927);

uint64_t* tmp933 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);
for (uint32_t i0 =  (int32_t)0; i0 <  (int32_t)1; i0++){
for (uint32_t i1 =  (int32_t)0; i1 <  (int32_t)14; i1++){
for (uint32_t i2 =  (int32_t)0; i2 <  (int32_t)14; i2++){
for (uint32_t i3 =  (int32_t)0; i3 <  (int32_t)80; i3++){
Arr4DIdxRowM(tmp933, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i0,i1,i2,i3) = SecretAdd(Arr4DIdxRowM(tmp929, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i0,i1,i2,i3), Arr4DIdxRowM(tmp931, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i0,i1,i2,i3));
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp929);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp931);

uint64_t* tmp936 = make_array<uint64_t>( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14);

int64_t i2142;

int64_t i2141;

int64_t i2140;

int64_t i2139;

int64_t i2138;

int64_t i2137;

int64_t i2136;

int64_t i2135;
i2135 =  (int64_t)0;
i2136 =  (int64_t)0;
i2137 =  (int64_t)0;
i2138 =  (int64_t)0;
for (uint32_t i2139 =  (int32_t)0; i2139 <  (int32_t)1; i2139++){
for (uint32_t i2141 =  (int32_t)0; i2141 <  (int32_t)14; i2141++){
for (uint32_t i2142 =  (int32_t)0; i2142 <  (int32_t)14; i2142++){
for (uint32_t i2140 =  (int32_t)0; i2140 <  (int32_t)80; i2140++){
Arr4DIdxRowM(tmp936, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2139,i2140,i2141,i2142) = Arr4DIdxRowM(tmp933, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2135,i2136,i2137,i2138);
i2138 = (i2138 +  (int64_t)1);
if ((i2138 ==  (int64_t)80)) {
i2138 =  (int64_t)0;
i2137 = (i2137 +  (int64_t)1);
if ((i2137 ==  (int64_t)14)) {
i2137 =  (int64_t)0;
i2136 = (i2136 +  (int64_t)1);
if ((i2136 ==  (int64_t)14)) {
i2136 =  (int64_t)0;
i2135 = (i2135 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp933);

uint64_t* tmp938 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);

int64_t i2150;

int64_t i2149;

int64_t i2148;

int64_t i2147;

int64_t i2146;

int64_t i2145;

int64_t i2144;

int64_t i2143;
i2143 =  (int64_t)0;
i2144 =  (int64_t)0;
i2145 =  (int64_t)0;
i2146 =  (int64_t)0;
for (uint32_t i2147 =  (int32_t)0; i2147 <  (int32_t)1; i2147++){
for (uint32_t i2150 =  (int32_t)0; i2150 <  (int32_t)80; i2150++){
for (uint32_t i2148 =  (int32_t)0; i2148 <  (int32_t)14; i2148++){
for (uint32_t i2149 =  (int32_t)0; i2149 <  (int32_t)14; i2149++){
Arr4DIdxRowM(tmp938, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2147,i2148,i2149,i2150) = Arr4DIdxRowM(tmp936, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2143,i2144,i2145,i2146);
i2146 = (i2146 +  (int64_t)1);
if ((i2146 ==  (int64_t)14)) {
i2146 =  (int64_t)0;
i2145 = (i2145 +  (int64_t)1);
if ((i2145 ==  (int64_t)14)) {
i2145 =  (int64_t)0;
i2144 = (i2144 +  (int64_t)1);
if ((i2144 ==  (int64_t)80)) {
i2144 =  (int64_t)0;
i2143 = (i2143 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp939 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);
HardSigmoid4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp938, tmp939,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp938);

uint64_t* tmp941 = make_array<uint64_t>( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14);

int64_t i2158;

int64_t i2157;

int64_t i2156;

int64_t i2155;

int64_t i2154;

int64_t i2153;

int64_t i2152;

int64_t i2151;
i2151 =  (int64_t)0;
i2152 =  (int64_t)0;
i2153 =  (int64_t)0;
i2154 =  (int64_t)0;
for (uint32_t i2155 =  (int32_t)0; i2155 <  (int32_t)1; i2155++){
for (uint32_t i2157 =  (int32_t)0; i2157 <  (int32_t)14; i2157++){
for (uint32_t i2158 =  (int32_t)0; i2158 <  (int32_t)14; i2158++){
for (uint32_t i2156 =  (int32_t)0; i2156 <  (int32_t)80; i2156++){
Arr4DIdxRowM(tmp941, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2155,i2156,i2157,i2158) = Arr4DIdxRowM(tmp939, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2151,i2152,i2153,i2154);
i2154 = (i2154 +  (int64_t)1);
if ((i2154 ==  (int64_t)80)) {
i2154 =  (int64_t)0;
i2153 = (i2153 +  (int64_t)1);
if ((i2153 ==  (int64_t)14)) {
i2153 =  (int64_t)0;
i2152 = (i2152 +  (int64_t)1);
if ((i2152 ==  (int64_t)14)) {
i2152 =  (int64_t)0;
i2151 = (i2151 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp939);

uint64_t* tmp943 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);

int64_t i2166;

int64_t i2165;

int64_t i2164;

int64_t i2163;

int64_t i2162;

int64_t i2161;

int64_t i2160;

int64_t i2159;
i2159 =  (int64_t)0;
i2160 =  (int64_t)0;
i2161 =  (int64_t)0;
i2162 =  (int64_t)0;
for (uint32_t i2163 =  (int32_t)0; i2163 <  (int32_t)1; i2163++){
for (uint32_t i2166 =  (int32_t)0; i2166 <  (int32_t)80; i2166++){
for (uint32_t i2164 =  (int32_t)0; i2164 <  (int32_t)14; i2164++){
for (uint32_t i2165 =  (int32_t)0; i2165 <  (int32_t)14; i2165++){
Arr4DIdxRowM(tmp943, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2163,i2164,i2165,i2166) = Arr4DIdxRowM(tmp936, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2159,i2160,i2161,i2162);
i2162 = (i2162 +  (int64_t)1);
if ((i2162 ==  (int64_t)14)) {
i2162 =  (int64_t)0;
i2161 = (i2161 +  (int64_t)1);
if ((i2161 ==  (int64_t)14)) {
i2161 =  (int64_t)0;
i2160 = (i2160 +  (int64_t)1);
if ((i2160 ==  (int64_t)80)) {
i2160 =  (int64_t)0;
i2159 = (i2159 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14, tmp936);

uint64_t* tmp945 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);

int64_t i2174;

int64_t i2173;

int64_t i2172;

int64_t i2171;

int64_t i2170;

int64_t i2169;

int64_t i2168;

int64_t i2167;
i2167 =  (int64_t)0;
i2168 =  (int64_t)0;
i2169 =  (int64_t)0;
i2170 =  (int64_t)0;
for (uint32_t i2171 =  (int32_t)0; i2171 <  (int32_t)1; i2171++){
for (uint32_t i2174 =  (int32_t)0; i2174 <  (int32_t)80; i2174++){
for (uint32_t i2172 =  (int32_t)0; i2172 <  (int32_t)14; i2172++){
for (uint32_t i2173 =  (int32_t)0; i2173 <  (int32_t)14; i2173++){
Arr4DIdxRowM(tmp945, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2171,i2172,i2173,i2174) = Arr4DIdxRowM(tmp941, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2167,i2168,i2169,i2170);
i2170 = (i2170 +  (int64_t)1);
if ((i2170 ==  (int64_t)14)) {
i2170 =  (int64_t)0;
i2169 = (i2169 +  (int64_t)1);
if ((i2169 ==  (int64_t)14)) {
i2169 =  (int64_t)0;
i2168 = (i2168 +  (int64_t)1);
if ((i2168 ==  (int64_t)80)) {
i2168 =  (int64_t)0;
i2167 = (i2167 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14, tmp941);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp943,  (int32_t)23);

uint64_t* tmp947 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);

uint64_t* tmp948 = make_array<uint64_t>( (int32_t)15680);

uint64_t* tmp949 = make_array<uint64_t>( (int32_t)15680);

uint64_t* tmp950 = make_array<uint64_t>( (int32_t)15680);

int32_t tmp951;
for (uint32_t i2175 =  (int32_t)0; i2175 <  (int32_t)1; i2175++){
for (uint32_t i2176 =  (int32_t)0; i2176 <  (int32_t)14; i2176++){
for (uint32_t i2177 =  (int32_t)0; i2177 <  (int32_t)14; i2177++){
for (uint32_t i2178 =  (int32_t)0; i2178 <  (int32_t)80; i2178++){
tmp951 = (((( (int32_t)0 + (i2175 *  (int32_t)15680)) + (i2176 *  (int32_t)1120)) + (i2177 *  (int32_t)80)) + (i2178 *  (int32_t)1));
Arr1DIdxRowM(tmp948, (int32_t)15680,tmp951) = Arr4DIdxRowM(tmp943, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2175,i2176,i2177,i2178);
Arr1DIdxRowM(tmp949, (int32_t)15680,tmp951) = Arr4DIdxRowM(tmp945, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2175,i2176,i2177,i2178);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)15680, tmp948, tmp949, tmp950);
ClearMemSecret1( (int32_t)15680, tmp948);
ClearMemSecret1( (int32_t)15680, tmp949);
for (uint32_t i2175 =  (int32_t)0; i2175 <  (int32_t)1; i2175++){
for (uint32_t i2176 =  (int32_t)0; i2176 <  (int32_t)14; i2176++){
for (uint32_t i2177 =  (int32_t)0; i2177 <  (int32_t)14; i2177++){
for (uint32_t i2178 =  (int32_t)0; i2178 <  (int32_t)80; i2178++){
tmp951 = (((( (int32_t)0 + (i2175 *  (int32_t)15680)) + (i2176 *  (int32_t)1120)) + (i2177 *  (int32_t)80)) + (i2178 *  (int32_t)1));
Arr4DIdxRowM(tmp947, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2175,i2176,i2177,i2178) = Arr1DIdxRowM(tmp950, (int32_t)15680,tmp951);
}
}
}
}
ClearMemSecret1( (int32_t)15680, tmp950);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp943);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp945);

uint64_t* tmp954 = make_array<uint64_t>( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14);

int64_t i2186;

int64_t i2185;

int64_t i2184;

int64_t i2183;

int64_t i2182;

int64_t i2181;

int64_t i2180;

int64_t i2179;
i2179 =  (int64_t)0;
i2180 =  (int64_t)0;
i2181 =  (int64_t)0;
i2182 =  (int64_t)0;
for (uint32_t i2183 =  (int32_t)0; i2183 <  (int32_t)1; i2183++){
for (uint32_t i2185 =  (int32_t)0; i2185 <  (int32_t)14; i2185++){
for (uint32_t i2186 =  (int32_t)0; i2186 <  (int32_t)14; i2186++){
for (uint32_t i2184 =  (int32_t)0; i2184 <  (int32_t)80; i2184++){
Arr4DIdxRowM(tmp954, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2183,i2184,i2185,i2186) = Arr4DIdxRowM(tmp947, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2179,i2180,i2181,i2182);
i2182 = (i2182 +  (int64_t)1);
if ((i2182 ==  (int64_t)80)) {
i2182 =  (int64_t)0;
i2181 = (i2181 +  (int64_t)1);
if ((i2181 ==  (int64_t)14)) {
i2181 =  (int64_t)0;
i2180 = (i2180 +  (int64_t)1);
if ((i2180 ==  (int64_t)14)) {
i2180 =  (int64_t)0;
i2179 = (i2179 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp947);

uint64_t* tmp956 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);

int64_t i2194;

int64_t i2193;

int64_t i2192;

int64_t i2191;

int64_t i2190;

int64_t i2189;

int64_t i2188;

int64_t i2187;
i2187 =  (int64_t)0;
i2188 =  (int64_t)0;
i2189 =  (int64_t)0;
i2190 =  (int64_t)0;
for (uint32_t i2191 =  (int32_t)0; i2191 <  (int32_t)1; i2191++){
for (uint32_t i2194 =  (int32_t)0; i2194 <  (int32_t)80; i2194++){
for (uint32_t i2192 =  (int32_t)0; i2192 <  (int32_t)14; i2192++){
for (uint32_t i2193 =  (int32_t)0; i2193 <  (int32_t)14; i2193++){
Arr4DIdxRowM(tmp956, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2191,i2192,i2193,i2194) = Arr4DIdxRowM(tmp954, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2187,i2188,i2189,i2190);
i2190 = (i2190 +  (int64_t)1);
if ((i2190 ==  (int64_t)14)) {
i2190 =  (int64_t)0;
i2189 = (i2189 +  (int64_t)1);
if ((i2189 ==  (int64_t)14)) {
i2189 =  (int64_t)0;
i2188 = (i2188 +  (int64_t)1);
if ((i2188 ==  (int64_t)80)) {
i2188 =  (int64_t)0;
i2187 = (i2187 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp957 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)80,  (int32_t)200);

int64_t i2202;

int64_t i2201;

int64_t i2200;

int64_t i2199;

int64_t i2198;

int64_t i2197;

int64_t i2196;

int64_t i2195;
i2195 =  (int64_t)0;
i2196 =  (int64_t)0;
i2197 =  (int64_t)0;
i2198 =  (int64_t)0;
for (uint32_t i2202 =  (int32_t)0; i2202 <  (int32_t)200; i2202++){
for (uint32_t i2201 =  (int32_t)0; i2201 <  (int32_t)80; i2201++){
for (uint32_t i2199 =  (int32_t)0; i2199 <  (int32_t)1; i2199++){
for (uint32_t i2200 =  (int32_t)0; i2200 <  (int32_t)1; i2200++){
Arr4DIdxRowM(tmp957, (int32_t)1, (int32_t)1, (int32_t)80, (int32_t)200,i2199,i2200,i2201,i2202) = Arr4DIdxRowM(tmp55, (int32_t)200, (int32_t)80, (int32_t)1, (int32_t)1,i2195,i2196,i2197,i2198);
i2198 = (i2198 +  (int64_t)1);
if ((i2198 ==  (int64_t)1)) {
i2198 =  (int64_t)0;
i2197 = (i2197 +  (int64_t)1);
if ((i2197 ==  (int64_t)1)) {
i2197 =  (int64_t)0;
i2196 = (i2196 +  (int64_t)1);
if ((i2196 ==  (int64_t)80)) {
i2196 =  (int64_t)0;
i2195 = (i2195 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)200,  (int32_t)80,  (int32_t)1,  (int32_t)1, tmp55);

uint64_t* tmp959 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp956,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80,  (int32_t)1,  (int32_t)1,  (int32_t)200,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp956, tmp957, tmp959);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)80,  (int32_t)200, tmp957);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp956);

uint64_t* tmp962 = make_array<uint64_t>( (int32_t)1,  (int32_t)200,  (int32_t)14,  (int32_t)14);

int64_t i2210;

int64_t i2209;

int64_t i2208;

int64_t i2207;

int64_t i2206;

int64_t i2205;

int64_t i2204;

int64_t i2203;
i2203 =  (int64_t)0;
i2204 =  (int64_t)0;
i2205 =  (int64_t)0;
i2206 =  (int64_t)0;
for (uint32_t i2207 =  (int32_t)0; i2207 <  (int32_t)1; i2207++){
for (uint32_t i2209 =  (int32_t)0; i2209 <  (int32_t)14; i2209++){
for (uint32_t i2210 =  (int32_t)0; i2210 <  (int32_t)14; i2210++){
for (uint32_t i2208 =  (int32_t)0; i2208 <  (int32_t)200; i2208++){
Arr4DIdxRowM(tmp962, (int32_t)1, (int32_t)200, (int32_t)14, (int32_t)14,i2207,i2208,i2209,i2210) = Arr4DIdxRowM(tmp959, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)200,i2203,i2204,i2205,i2206);
i2206 = (i2206 +  (int64_t)1);
if ((i2206 ==  (int64_t)200)) {
i2206 =  (int64_t)0;
i2205 = (i2205 +  (int64_t)1);
if ((i2205 ==  (int64_t)14)) {
i2205 =  (int64_t)0;
i2204 = (i2204 +  (int64_t)1);
if ((i2204 ==  (int64_t)14)) {
i2204 =  (int64_t)0;
i2203 = (i2203 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200, tmp959);

uint64_t* tmp964 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200);

int64_t i2218;

int64_t i2217;

int64_t i2216;

int64_t i2215;

int64_t i2214;

int64_t i2213;

int64_t i2212;

int64_t i2211;
i2211 =  (int64_t)0;
i2212 =  (int64_t)0;
i2213 =  (int64_t)0;
i2214 =  (int64_t)0;
for (uint32_t i2215 =  (int32_t)0; i2215 <  (int32_t)1; i2215++){
for (uint32_t i2218 =  (int32_t)0; i2218 <  (int32_t)200; i2218++){
for (uint32_t i2216 =  (int32_t)0; i2216 <  (int32_t)14; i2216++){
for (uint32_t i2217 =  (int32_t)0; i2217 <  (int32_t)14; i2217++){
Arr4DIdxRowM(tmp964, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)200,i2215,i2216,i2217,i2218) = Arr4DIdxRowM(tmp962, (int32_t)1, (int32_t)200, (int32_t)14, (int32_t)14,i2211,i2212,i2213,i2214);
i2214 = (i2214 +  (int64_t)1);
if ((i2214 ==  (int64_t)14)) {
i2214 =  (int64_t)0;
i2213 = (i2213 +  (int64_t)1);
if ((i2213 ==  (int64_t)14)) {
i2213 =  (int64_t)0;
i2212 = (i2212 +  (int64_t)1);
if ((i2212 ==  (int64_t)200)) {
i2212 =  (int64_t)0;
i2211 = (i2211 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)200,  (int32_t)14,  (int32_t)14, tmp962);

uint64_t* tmp966 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200, tmp964,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200, tmp964, tmp56, tmp57,  (int32_t)0,  (int32_t)23, tmp966);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200, tmp964);

uint64_t* tmp968 = make_array<uint64_t>( (int32_t)1,  (int32_t)200,  (int32_t)14,  (int32_t)14);

int64_t i2226;

int64_t i2225;

int64_t i2224;

int64_t i2223;

int64_t i2222;

int64_t i2221;

int64_t i2220;

int64_t i2219;
i2219 =  (int64_t)0;
i2220 =  (int64_t)0;
i2221 =  (int64_t)0;
i2222 =  (int64_t)0;
for (uint32_t i2223 =  (int32_t)0; i2223 <  (int32_t)1; i2223++){
for (uint32_t i2225 =  (int32_t)0; i2225 <  (int32_t)14; i2225++){
for (uint32_t i2226 =  (int32_t)0; i2226 <  (int32_t)14; i2226++){
for (uint32_t i2224 =  (int32_t)0; i2224 <  (int32_t)200; i2224++){
Arr4DIdxRowM(tmp968, (int32_t)1, (int32_t)200, (int32_t)14, (int32_t)14,i2223,i2224,i2225,i2226) = Arr4DIdxRowM(tmp966, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)200,i2219,i2220,i2221,i2222);
i2222 = (i2222 +  (int64_t)1);
if ((i2222 ==  (int64_t)200)) {
i2222 =  (int64_t)0;
i2221 = (i2221 +  (int64_t)1);
if ((i2221 ==  (int64_t)14)) {
i2221 =  (int64_t)0;
i2220 = (i2220 +  (int64_t)1);
if ((i2220 ==  (int64_t)14)) {
i2220 =  (int64_t)0;
i2219 = (i2219 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200, tmp966);

uint64_t* tmp970 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200);

int64_t i2234;

int64_t i2233;

int64_t i2232;

int64_t i2231;

int64_t i2230;

int64_t i2229;

int64_t i2228;

int64_t i2227;
i2227 =  (int64_t)0;
i2228 =  (int64_t)0;
i2229 =  (int64_t)0;
i2230 =  (int64_t)0;
for (uint32_t i2231 =  (int32_t)0; i2231 <  (int32_t)1; i2231++){
for (uint32_t i2234 =  (int32_t)0; i2234 <  (int32_t)200; i2234++){
for (uint32_t i2232 =  (int32_t)0; i2232 <  (int32_t)14; i2232++){
for (uint32_t i2233 =  (int32_t)0; i2233 <  (int32_t)14; i2233++){
Arr4DIdxRowM(tmp970, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)200,i2231,i2232,i2233,i2234) = Arr4DIdxRowM(tmp968, (int32_t)1, (int32_t)200, (int32_t)14, (int32_t)14,i2227,i2228,i2229,i2230);
i2230 = (i2230 +  (int64_t)1);
if ((i2230 ==  (int64_t)14)) {
i2230 =  (int64_t)0;
i2229 = (i2229 +  (int64_t)1);
if ((i2229 ==  (int64_t)14)) {
i2229 =  (int64_t)0;
i2228 = (i2228 +  (int64_t)1);
if ((i2228 ==  (int64_t)200)) {
i2228 =  (int64_t)0;
i2227 = (i2227 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp971 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200);
HardSigmoid4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200, tmp970, tmp971,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200, tmp970);

uint64_t* tmp973 = make_array<uint64_t>( (int32_t)1,  (int32_t)200,  (int32_t)14,  (int32_t)14);

int64_t i2242;

int64_t i2241;

int64_t i2240;

int64_t i2239;

int64_t i2238;

int64_t i2237;

int64_t i2236;

int64_t i2235;
i2235 =  (int64_t)0;
i2236 =  (int64_t)0;
i2237 =  (int64_t)0;
i2238 =  (int64_t)0;
for (uint32_t i2239 =  (int32_t)0; i2239 <  (int32_t)1; i2239++){
for (uint32_t i2241 =  (int32_t)0; i2241 <  (int32_t)14; i2241++){
for (uint32_t i2242 =  (int32_t)0; i2242 <  (int32_t)14; i2242++){
for (uint32_t i2240 =  (int32_t)0; i2240 <  (int32_t)200; i2240++){
Arr4DIdxRowM(tmp973, (int32_t)1, (int32_t)200, (int32_t)14, (int32_t)14,i2239,i2240,i2241,i2242) = Arr4DIdxRowM(tmp971, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)200,i2235,i2236,i2237,i2238);
i2238 = (i2238 +  (int64_t)1);
if ((i2238 ==  (int64_t)200)) {
i2238 =  (int64_t)0;
i2237 = (i2237 +  (int64_t)1);
if ((i2237 ==  (int64_t)14)) {
i2237 =  (int64_t)0;
i2236 = (i2236 +  (int64_t)1);
if ((i2236 ==  (int64_t)14)) {
i2236 =  (int64_t)0;
i2235 = (i2235 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200, tmp971);

uint64_t* tmp975 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200);

int64_t i2250;

int64_t i2249;

int64_t i2248;

int64_t i2247;

int64_t i2246;

int64_t i2245;

int64_t i2244;

int64_t i2243;
i2243 =  (int64_t)0;
i2244 =  (int64_t)0;
i2245 =  (int64_t)0;
i2246 =  (int64_t)0;
for (uint32_t i2247 =  (int32_t)0; i2247 <  (int32_t)1; i2247++){
for (uint32_t i2250 =  (int32_t)0; i2250 <  (int32_t)200; i2250++){
for (uint32_t i2248 =  (int32_t)0; i2248 <  (int32_t)14; i2248++){
for (uint32_t i2249 =  (int32_t)0; i2249 <  (int32_t)14; i2249++){
Arr4DIdxRowM(tmp975, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)200,i2247,i2248,i2249,i2250) = Arr4DIdxRowM(tmp968, (int32_t)1, (int32_t)200, (int32_t)14, (int32_t)14,i2243,i2244,i2245,i2246);
i2246 = (i2246 +  (int64_t)1);
if ((i2246 ==  (int64_t)14)) {
i2246 =  (int64_t)0;
i2245 = (i2245 +  (int64_t)1);
if ((i2245 ==  (int64_t)14)) {
i2245 =  (int64_t)0;
i2244 = (i2244 +  (int64_t)1);
if ((i2244 ==  (int64_t)200)) {
i2244 =  (int64_t)0;
i2243 = (i2243 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)200,  (int32_t)14,  (int32_t)14, tmp968);

uint64_t* tmp977 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200);

int64_t i2258;

int64_t i2257;

int64_t i2256;

int64_t i2255;

int64_t i2254;

int64_t i2253;

int64_t i2252;

int64_t i2251;
i2251 =  (int64_t)0;
i2252 =  (int64_t)0;
i2253 =  (int64_t)0;
i2254 =  (int64_t)0;
for (uint32_t i2255 =  (int32_t)0; i2255 <  (int32_t)1; i2255++){
for (uint32_t i2258 =  (int32_t)0; i2258 <  (int32_t)200; i2258++){
for (uint32_t i2256 =  (int32_t)0; i2256 <  (int32_t)14; i2256++){
for (uint32_t i2257 =  (int32_t)0; i2257 <  (int32_t)14; i2257++){
Arr4DIdxRowM(tmp977, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)200,i2255,i2256,i2257,i2258) = Arr4DIdxRowM(tmp973, (int32_t)1, (int32_t)200, (int32_t)14, (int32_t)14,i2251,i2252,i2253,i2254);
i2254 = (i2254 +  (int64_t)1);
if ((i2254 ==  (int64_t)14)) {
i2254 =  (int64_t)0;
i2253 = (i2253 +  (int64_t)1);
if ((i2253 ==  (int64_t)14)) {
i2253 =  (int64_t)0;
i2252 = (i2252 +  (int64_t)1);
if ((i2252 ==  (int64_t)200)) {
i2252 =  (int64_t)0;
i2251 = (i2251 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)200,  (int32_t)14,  (int32_t)14, tmp973);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200, tmp975,  (int32_t)23);

uint64_t* tmp979 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200);

uint64_t* tmp980 = make_array<uint64_t>( (int32_t)39200);

uint64_t* tmp981 = make_array<uint64_t>( (int32_t)39200);

uint64_t* tmp982 = make_array<uint64_t>( (int32_t)39200);

int32_t tmp983;
for (uint32_t i2259 =  (int32_t)0; i2259 <  (int32_t)1; i2259++){
for (uint32_t i2260 =  (int32_t)0; i2260 <  (int32_t)14; i2260++){
for (uint32_t i2261 =  (int32_t)0; i2261 <  (int32_t)14; i2261++){
for (uint32_t i2262 =  (int32_t)0; i2262 <  (int32_t)200; i2262++){
tmp983 = (((( (int32_t)0 + (i2259 *  (int32_t)39200)) + (i2260 *  (int32_t)2800)) + (i2261 *  (int32_t)200)) + (i2262 *  (int32_t)1));
Arr1DIdxRowM(tmp980, (int32_t)39200,tmp983) = Arr4DIdxRowM(tmp975, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)200,i2259,i2260,i2261,i2262);
Arr1DIdxRowM(tmp981, (int32_t)39200,tmp983) = Arr4DIdxRowM(tmp977, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)200,i2259,i2260,i2261,i2262);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)39200, tmp980, tmp981, tmp982);
ClearMemSecret1( (int32_t)39200, tmp980);
ClearMemSecret1( (int32_t)39200, tmp981);
for (uint32_t i2259 =  (int32_t)0; i2259 <  (int32_t)1; i2259++){
for (uint32_t i2260 =  (int32_t)0; i2260 <  (int32_t)14; i2260++){
for (uint32_t i2261 =  (int32_t)0; i2261 <  (int32_t)14; i2261++){
for (uint32_t i2262 =  (int32_t)0; i2262 <  (int32_t)200; i2262++){
tmp983 = (((( (int32_t)0 + (i2259 *  (int32_t)39200)) + (i2260 *  (int32_t)2800)) + (i2261 *  (int32_t)200)) + (i2262 *  (int32_t)1));
Arr4DIdxRowM(tmp979, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)200,i2259,i2260,i2261,i2262) = Arr1DIdxRowM(tmp982, (int32_t)39200,tmp983);
}
}
}
}
ClearMemSecret1( (int32_t)39200, tmp982);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200, tmp975);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200, tmp977);

uint64_t* tmp986 = make_array<uint64_t>( (int32_t)1,  (int32_t)200,  (int32_t)14,  (int32_t)14);

int64_t i2270;

int64_t i2269;

int64_t i2268;

int64_t i2267;

int64_t i2266;

int64_t i2265;

int64_t i2264;

int64_t i2263;
i2263 =  (int64_t)0;
i2264 =  (int64_t)0;
i2265 =  (int64_t)0;
i2266 =  (int64_t)0;
for (uint32_t i2267 =  (int32_t)0; i2267 <  (int32_t)1; i2267++){
for (uint32_t i2269 =  (int32_t)0; i2269 <  (int32_t)14; i2269++){
for (uint32_t i2270 =  (int32_t)0; i2270 <  (int32_t)14; i2270++){
for (uint32_t i2268 =  (int32_t)0; i2268 <  (int32_t)200; i2268++){
Arr4DIdxRowM(tmp986, (int32_t)1, (int32_t)200, (int32_t)14, (int32_t)14,i2267,i2268,i2269,i2270) = Arr4DIdxRowM(tmp979, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)200,i2263,i2264,i2265,i2266);
i2266 = (i2266 +  (int64_t)1);
if ((i2266 ==  (int64_t)200)) {
i2266 =  (int64_t)0;
i2265 = (i2265 +  (int64_t)1);
if ((i2265 ==  (int64_t)14)) {
i2265 =  (int64_t)0;
i2264 = (i2264 +  (int64_t)1);
if ((i2264 ==  (int64_t)14)) {
i2264 =  (int64_t)0;
i2263 = (i2263 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200, tmp979);

uint64_t* tmp988 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200);

int64_t i2278;

int64_t i2277;

int64_t i2276;

int64_t i2275;

int64_t i2274;

int64_t i2273;

int64_t i2272;

int64_t i2271;
i2271 =  (int64_t)0;
i2272 =  (int64_t)0;
i2273 =  (int64_t)0;
i2274 =  (int64_t)0;
for (uint32_t i2275 =  (int32_t)0; i2275 <  (int32_t)1; i2275++){
for (uint32_t i2278 =  (int32_t)0; i2278 <  (int32_t)200; i2278++){
for (uint32_t i2276 =  (int32_t)0; i2276 <  (int32_t)14; i2276++){
for (uint32_t i2277 =  (int32_t)0; i2277 <  (int32_t)14; i2277++){
Arr4DIdxRowM(tmp988, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)200,i2275,i2276,i2277,i2278) = Arr4DIdxRowM(tmp986, (int32_t)1, (int32_t)200, (int32_t)14, (int32_t)14,i2271,i2272,i2273,i2274);
i2274 = (i2274 +  (int64_t)1);
if ((i2274 ==  (int64_t)14)) {
i2274 =  (int64_t)0;
i2273 = (i2273 +  (int64_t)1);
if ((i2273 ==  (int64_t)14)) {
i2273 =  (int64_t)0;
i2272 = (i2272 +  (int64_t)1);
if ((i2272 ==  (int64_t)200)) {
i2272 =  (int64_t)0;
i2271 = (i2271 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)200,  (int32_t)14,  (int32_t)14, tmp986);

uint64_t* tmp990 = make_array<uint64_t>( (int32_t)3,  (int32_t)3,  (int32_t)1,  (int32_t)200);

int64_t i2286;

int64_t i2285;

int64_t i2284;

int64_t i2283;

int64_t i2282;

int64_t i2281;

int64_t i2280;

int64_t i2279;
i2279 =  (int64_t)0;
i2280 =  (int64_t)0;
i2281 =  (int64_t)0;
i2282 =  (int64_t)0;
for (uint32_t i2286 =  (int32_t)0; i2286 <  (int32_t)200; i2286++){
for (uint32_t i2285 =  (int32_t)0; i2285 <  (int32_t)1; i2285++){
for (uint32_t i2283 =  (int32_t)0; i2283 <  (int32_t)3; i2283++){
for (uint32_t i2284 =  (int32_t)0; i2284 <  (int32_t)3; i2284++){
Arr4DIdxRowM(tmp990, (int32_t)3, (int32_t)3, (int32_t)1, (int32_t)200,i2283,i2284,i2285,i2286) = Arr4DIdxRowM(tmp58, (int32_t)200, (int32_t)1, (int32_t)3, (int32_t)3,i2279,i2280,i2281,i2282);
i2282 = (i2282 +  (int64_t)1);
if ((i2282 ==  (int64_t)3)) {
i2282 =  (int64_t)0;
i2281 = (i2281 +  (int64_t)1);
if ((i2281 ==  (int64_t)3)) {
i2281 =  (int64_t)0;
i2280 = (i2280 +  (int64_t)1);
if ((i2280 ==  (int64_t)1)) {
i2280 =  (int64_t)0;
i2279 = (i2279 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)200,  (int32_t)1,  (int32_t)3,  (int32_t)3, tmp58);

uint64_t* tmp992 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200, tmp988,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200,  (int32_t)3,  (int32_t)3,  (int32_t)200,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)200, tmp988, tmp990, tmp992);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200, tmp988);
ClearMemSecret4( (int32_t)3,  (int32_t)3,  (int32_t)1,  (int32_t)200, tmp990);

uint64_t* tmp995 = make_array<uint64_t>( (int32_t)1,  (int32_t)200,  (int32_t)14,  (int32_t)14);

int64_t i2294;

int64_t i2293;

int64_t i2292;

int64_t i2291;

int64_t i2290;

int64_t i2289;

int64_t i2288;

int64_t i2287;
i2287 =  (int64_t)0;
i2288 =  (int64_t)0;
i2289 =  (int64_t)0;
i2290 =  (int64_t)0;
for (uint32_t i2291 =  (int32_t)0; i2291 <  (int32_t)1; i2291++){
for (uint32_t i2293 =  (int32_t)0; i2293 <  (int32_t)14; i2293++){
for (uint32_t i2294 =  (int32_t)0; i2294 <  (int32_t)14; i2294++){
for (uint32_t i2292 =  (int32_t)0; i2292 <  (int32_t)200; i2292++){
Arr4DIdxRowM(tmp995, (int32_t)1, (int32_t)200, (int32_t)14, (int32_t)14,i2291,i2292,i2293,i2294) = Arr4DIdxRowM(tmp992, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)200,i2287,i2288,i2289,i2290);
i2290 = (i2290 +  (int64_t)1);
if ((i2290 ==  (int64_t)200)) {
i2290 =  (int64_t)0;
i2289 = (i2289 +  (int64_t)1);
if ((i2289 ==  (int64_t)14)) {
i2289 =  (int64_t)0;
i2288 = (i2288 +  (int64_t)1);
if ((i2288 ==  (int64_t)14)) {
i2288 =  (int64_t)0;
i2287 = (i2287 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200, tmp992);

uint64_t* tmp997 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200);

int64_t i2302;

int64_t i2301;

int64_t i2300;

int64_t i2299;

int64_t i2298;

int64_t i2297;

int64_t i2296;

int64_t i2295;
i2295 =  (int64_t)0;
i2296 =  (int64_t)0;
i2297 =  (int64_t)0;
i2298 =  (int64_t)0;
for (uint32_t i2299 =  (int32_t)0; i2299 <  (int32_t)1; i2299++){
for (uint32_t i2302 =  (int32_t)0; i2302 <  (int32_t)200; i2302++){
for (uint32_t i2300 =  (int32_t)0; i2300 <  (int32_t)14; i2300++){
for (uint32_t i2301 =  (int32_t)0; i2301 <  (int32_t)14; i2301++){
Arr4DIdxRowM(tmp997, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)200,i2299,i2300,i2301,i2302) = Arr4DIdxRowM(tmp995, (int32_t)1, (int32_t)200, (int32_t)14, (int32_t)14,i2295,i2296,i2297,i2298);
i2298 = (i2298 +  (int64_t)1);
if ((i2298 ==  (int64_t)14)) {
i2298 =  (int64_t)0;
i2297 = (i2297 +  (int64_t)1);
if ((i2297 ==  (int64_t)14)) {
i2297 =  (int64_t)0;
i2296 = (i2296 +  (int64_t)1);
if ((i2296 ==  (int64_t)200)) {
i2296 =  (int64_t)0;
i2295 = (i2295 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)200,  (int32_t)14,  (int32_t)14, tmp995);

uint64_t* tmp999 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200, tmp997,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200, tmp997, tmp56, tmp57,  (int32_t)0,  (int32_t)0, tmp999);
ClearMemSecret1( (int32_t)200, tmp56);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200, tmp997);
ClearMemSecret1( (int32_t)200, tmp57);

uint64_t* tmp1003 = make_array<uint64_t>( (int32_t)1,  (int32_t)200,  (int32_t)14,  (int32_t)14);

int64_t i2310;

int64_t i2309;

int64_t i2308;

int64_t i2307;

int64_t i2306;

int64_t i2305;

int64_t i2304;

int64_t i2303;
i2303 =  (int64_t)0;
i2304 =  (int64_t)0;
i2305 =  (int64_t)0;
i2306 =  (int64_t)0;
for (uint32_t i2307 =  (int32_t)0; i2307 <  (int32_t)1; i2307++){
for (uint32_t i2309 =  (int32_t)0; i2309 <  (int32_t)14; i2309++){
for (uint32_t i2310 =  (int32_t)0; i2310 <  (int32_t)14; i2310++){
for (uint32_t i2308 =  (int32_t)0; i2308 <  (int32_t)200; i2308++){
Arr4DIdxRowM(tmp1003, (int32_t)1, (int32_t)200, (int32_t)14, (int32_t)14,i2307,i2308,i2309,i2310) = Arr4DIdxRowM(tmp999, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)200,i2303,i2304,i2305,i2306);
i2306 = (i2306 +  (int64_t)1);
if ((i2306 ==  (int64_t)200)) {
i2306 =  (int64_t)0;
i2305 = (i2305 +  (int64_t)1);
if ((i2305 ==  (int64_t)14)) {
i2305 =  (int64_t)0;
i2304 = (i2304 +  (int64_t)1);
if ((i2304 ==  (int64_t)14)) {
i2304 =  (int64_t)0;
i2303 = (i2303 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200, tmp999);

uint64_t* tmp1005 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200);

int64_t i2318;

int64_t i2317;

int64_t i2316;

int64_t i2315;

int64_t i2314;

int64_t i2313;

int64_t i2312;

int64_t i2311;
i2311 =  (int64_t)0;
i2312 =  (int64_t)0;
i2313 =  (int64_t)0;
i2314 =  (int64_t)0;
for (uint32_t i2315 =  (int32_t)0; i2315 <  (int32_t)1; i2315++){
for (uint32_t i2318 =  (int32_t)0; i2318 <  (int32_t)200; i2318++){
for (uint32_t i2316 =  (int32_t)0; i2316 <  (int32_t)14; i2316++){
for (uint32_t i2317 =  (int32_t)0; i2317 <  (int32_t)14; i2317++){
Arr4DIdxRowM(tmp1005, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)200,i2315,i2316,i2317,i2318) = Arr4DIdxRowM(tmp1003, (int32_t)1, (int32_t)200, (int32_t)14, (int32_t)14,i2311,i2312,i2313,i2314);
i2314 = (i2314 +  (int64_t)1);
if ((i2314 ==  (int64_t)14)) {
i2314 =  (int64_t)0;
i2313 = (i2313 +  (int64_t)1);
if ((i2313 ==  (int64_t)14)) {
i2313 =  (int64_t)0;
i2312 = (i2312 +  (int64_t)1);
if ((i2312 ==  (int64_t)200)) {
i2312 =  (int64_t)0;
i2311 = (i2311 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp1006 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200);
HardSigmoid4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200, tmp1005, tmp1006,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200, tmp1005);

uint64_t* tmp1008 = make_array<uint64_t>( (int32_t)1,  (int32_t)200,  (int32_t)14,  (int32_t)14);

int64_t i2326;

int64_t i2325;

int64_t i2324;

int64_t i2323;

int64_t i2322;

int64_t i2321;

int64_t i2320;

int64_t i2319;
i2319 =  (int64_t)0;
i2320 =  (int64_t)0;
i2321 =  (int64_t)0;
i2322 =  (int64_t)0;
for (uint32_t i2323 =  (int32_t)0; i2323 <  (int32_t)1; i2323++){
for (uint32_t i2325 =  (int32_t)0; i2325 <  (int32_t)14; i2325++){
for (uint32_t i2326 =  (int32_t)0; i2326 <  (int32_t)14; i2326++){
for (uint32_t i2324 =  (int32_t)0; i2324 <  (int32_t)200; i2324++){
Arr4DIdxRowM(tmp1008, (int32_t)1, (int32_t)200, (int32_t)14, (int32_t)14,i2323,i2324,i2325,i2326) = Arr4DIdxRowM(tmp1006, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)200,i2319,i2320,i2321,i2322);
i2322 = (i2322 +  (int64_t)1);
if ((i2322 ==  (int64_t)200)) {
i2322 =  (int64_t)0;
i2321 = (i2321 +  (int64_t)1);
if ((i2321 ==  (int64_t)14)) {
i2321 =  (int64_t)0;
i2320 = (i2320 +  (int64_t)1);
if ((i2320 ==  (int64_t)14)) {
i2320 =  (int64_t)0;
i2319 = (i2319 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200, tmp1006);

uint64_t* tmp1010 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200);

int64_t i2334;

int64_t i2333;

int64_t i2332;

int64_t i2331;

int64_t i2330;

int64_t i2329;

int64_t i2328;

int64_t i2327;
i2327 =  (int64_t)0;
i2328 =  (int64_t)0;
i2329 =  (int64_t)0;
i2330 =  (int64_t)0;
for (uint32_t i2331 =  (int32_t)0; i2331 <  (int32_t)1; i2331++){
for (uint32_t i2334 =  (int32_t)0; i2334 <  (int32_t)200; i2334++){
for (uint32_t i2332 =  (int32_t)0; i2332 <  (int32_t)14; i2332++){
for (uint32_t i2333 =  (int32_t)0; i2333 <  (int32_t)14; i2333++){
Arr4DIdxRowM(tmp1010, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)200,i2331,i2332,i2333,i2334) = Arr4DIdxRowM(tmp1003, (int32_t)1, (int32_t)200, (int32_t)14, (int32_t)14,i2327,i2328,i2329,i2330);
i2330 = (i2330 +  (int64_t)1);
if ((i2330 ==  (int64_t)14)) {
i2330 =  (int64_t)0;
i2329 = (i2329 +  (int64_t)1);
if ((i2329 ==  (int64_t)14)) {
i2329 =  (int64_t)0;
i2328 = (i2328 +  (int64_t)1);
if ((i2328 ==  (int64_t)200)) {
i2328 =  (int64_t)0;
i2327 = (i2327 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)200,  (int32_t)14,  (int32_t)14, tmp1003);

uint64_t* tmp1012 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200);

int64_t i2342;

int64_t i2341;

int64_t i2340;

int64_t i2339;

int64_t i2338;

int64_t i2337;

int64_t i2336;

int64_t i2335;
i2335 =  (int64_t)0;
i2336 =  (int64_t)0;
i2337 =  (int64_t)0;
i2338 =  (int64_t)0;
for (uint32_t i2339 =  (int32_t)0; i2339 <  (int32_t)1; i2339++){
for (uint32_t i2342 =  (int32_t)0; i2342 <  (int32_t)200; i2342++){
for (uint32_t i2340 =  (int32_t)0; i2340 <  (int32_t)14; i2340++){
for (uint32_t i2341 =  (int32_t)0; i2341 <  (int32_t)14; i2341++){
Arr4DIdxRowM(tmp1012, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)200,i2339,i2340,i2341,i2342) = Arr4DIdxRowM(tmp1008, (int32_t)1, (int32_t)200, (int32_t)14, (int32_t)14,i2335,i2336,i2337,i2338);
i2338 = (i2338 +  (int64_t)1);
if ((i2338 ==  (int64_t)14)) {
i2338 =  (int64_t)0;
i2337 = (i2337 +  (int64_t)1);
if ((i2337 ==  (int64_t)14)) {
i2337 =  (int64_t)0;
i2336 = (i2336 +  (int64_t)1);
if ((i2336 ==  (int64_t)200)) {
i2336 =  (int64_t)0;
i2335 = (i2335 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)200,  (int32_t)14,  (int32_t)14, tmp1008);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200, tmp1010,  (int32_t)23);

uint64_t* tmp1014 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200);

uint64_t* tmp1015 = make_array<uint64_t>( (int32_t)39200);

uint64_t* tmp1016 = make_array<uint64_t>( (int32_t)39200);

uint64_t* tmp1017 = make_array<uint64_t>( (int32_t)39200);

int32_t tmp1018;
for (uint32_t i2343 =  (int32_t)0; i2343 <  (int32_t)1; i2343++){
for (uint32_t i2344 =  (int32_t)0; i2344 <  (int32_t)14; i2344++){
for (uint32_t i2345 =  (int32_t)0; i2345 <  (int32_t)14; i2345++){
for (uint32_t i2346 =  (int32_t)0; i2346 <  (int32_t)200; i2346++){
tmp1018 = (((( (int32_t)0 + (i2343 *  (int32_t)39200)) + (i2344 *  (int32_t)2800)) + (i2345 *  (int32_t)200)) + (i2346 *  (int32_t)1));
Arr1DIdxRowM(tmp1015, (int32_t)39200,tmp1018) = Arr4DIdxRowM(tmp1010, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)200,i2343,i2344,i2345,i2346);
Arr1DIdxRowM(tmp1016, (int32_t)39200,tmp1018) = Arr4DIdxRowM(tmp1012, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)200,i2343,i2344,i2345,i2346);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)39200, tmp1015, tmp1016, tmp1017);
ClearMemSecret1( (int32_t)39200, tmp1015);
ClearMemSecret1( (int32_t)39200, tmp1016);
for (uint32_t i2343 =  (int32_t)0; i2343 <  (int32_t)1; i2343++){
for (uint32_t i2344 =  (int32_t)0; i2344 <  (int32_t)14; i2344++){
for (uint32_t i2345 =  (int32_t)0; i2345 <  (int32_t)14; i2345++){
for (uint32_t i2346 =  (int32_t)0; i2346 <  (int32_t)200; i2346++){
tmp1018 = (((( (int32_t)0 + (i2343 *  (int32_t)39200)) + (i2344 *  (int32_t)2800)) + (i2345 *  (int32_t)200)) + (i2346 *  (int32_t)1));
Arr4DIdxRowM(tmp1014, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)200,i2343,i2344,i2345,i2346) = Arr1DIdxRowM(tmp1017, (int32_t)39200,tmp1018);
}
}
}
}
ClearMemSecret1( (int32_t)39200, tmp1017);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200, tmp1010);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200, tmp1012);

uint64_t* tmp1021 = make_array<uint64_t>( (int32_t)1,  (int32_t)200,  (int32_t)14,  (int32_t)14);

int64_t i2354;

int64_t i2353;

int64_t i2352;

int64_t i2351;

int64_t i2350;

int64_t i2349;

int64_t i2348;

int64_t i2347;
i2347 =  (int64_t)0;
i2348 =  (int64_t)0;
i2349 =  (int64_t)0;
i2350 =  (int64_t)0;
for (uint32_t i2351 =  (int32_t)0; i2351 <  (int32_t)1; i2351++){
for (uint32_t i2353 =  (int32_t)0; i2353 <  (int32_t)14; i2353++){
for (uint32_t i2354 =  (int32_t)0; i2354 <  (int32_t)14; i2354++){
for (uint32_t i2352 =  (int32_t)0; i2352 <  (int32_t)200; i2352++){
Arr4DIdxRowM(tmp1021, (int32_t)1, (int32_t)200, (int32_t)14, (int32_t)14,i2351,i2352,i2353,i2354) = Arr4DIdxRowM(tmp1014, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)200,i2347,i2348,i2349,i2350);
i2350 = (i2350 +  (int64_t)1);
if ((i2350 ==  (int64_t)200)) {
i2350 =  (int64_t)0;
i2349 = (i2349 +  (int64_t)1);
if ((i2349 ==  (int64_t)14)) {
i2349 =  (int64_t)0;
i2348 = (i2348 +  (int64_t)1);
if ((i2348 ==  (int64_t)14)) {
i2348 =  (int64_t)0;
i2347 = (i2347 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200, tmp1014);

uint64_t* tmp1023 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200);

int64_t i2362;

int64_t i2361;

int64_t i2360;

int64_t i2359;

int64_t i2358;

int64_t i2357;

int64_t i2356;

int64_t i2355;
i2355 =  (int64_t)0;
i2356 =  (int64_t)0;
i2357 =  (int64_t)0;
i2358 =  (int64_t)0;
for (uint32_t i2359 =  (int32_t)0; i2359 <  (int32_t)1; i2359++){
for (uint32_t i2362 =  (int32_t)0; i2362 <  (int32_t)200; i2362++){
for (uint32_t i2360 =  (int32_t)0; i2360 <  (int32_t)14; i2360++){
for (uint32_t i2361 =  (int32_t)0; i2361 <  (int32_t)14; i2361++){
Arr4DIdxRowM(tmp1023, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)200,i2359,i2360,i2361,i2362) = Arr4DIdxRowM(tmp1021, (int32_t)1, (int32_t)200, (int32_t)14, (int32_t)14,i2355,i2356,i2357,i2358);
i2358 = (i2358 +  (int64_t)1);
if ((i2358 ==  (int64_t)14)) {
i2358 =  (int64_t)0;
i2357 = (i2357 +  (int64_t)1);
if ((i2357 ==  (int64_t)14)) {
i2357 =  (int64_t)0;
i2356 = (i2356 +  (int64_t)1);
if ((i2356 ==  (int64_t)200)) {
i2356 =  (int64_t)0;
i2355 = (i2355 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)200,  (int32_t)14,  (int32_t)14, tmp1021);

uint64_t* tmp1025 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)200,  (int32_t)80);

int64_t i2370;

int64_t i2369;

int64_t i2368;

int64_t i2367;

int64_t i2366;

int64_t i2365;

int64_t i2364;

int64_t i2363;
i2363 =  (int64_t)0;
i2364 =  (int64_t)0;
i2365 =  (int64_t)0;
i2366 =  (int64_t)0;
for (uint32_t i2370 =  (int32_t)0; i2370 <  (int32_t)80; i2370++){
for (uint32_t i2369 =  (int32_t)0; i2369 <  (int32_t)200; i2369++){
for (uint32_t i2367 =  (int32_t)0; i2367 <  (int32_t)1; i2367++){
for (uint32_t i2368 =  (int32_t)0; i2368 <  (int32_t)1; i2368++){
Arr4DIdxRowM(tmp1025, (int32_t)1, (int32_t)1, (int32_t)200, (int32_t)80,i2367,i2368,i2369,i2370) = Arr4DIdxRowM(tmp59, (int32_t)80, (int32_t)200, (int32_t)1, (int32_t)1,i2363,i2364,i2365,i2366);
i2366 = (i2366 +  (int64_t)1);
if ((i2366 ==  (int64_t)1)) {
i2366 =  (int64_t)0;
i2365 = (i2365 +  (int64_t)1);
if ((i2365 ==  (int64_t)1)) {
i2365 =  (int64_t)0;
i2364 = (i2364 +  (int64_t)1);
if ((i2364 ==  (int64_t)200)) {
i2364 =  (int64_t)0;
i2363 = (i2363 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)80,  (int32_t)200,  (int32_t)1,  (int32_t)1, tmp59);

uint64_t* tmp1027 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200, tmp1023,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200,  (int32_t)1,  (int32_t)1,  (int32_t)80,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp1023, tmp1025, tmp1027);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)200, tmp1023);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)200,  (int32_t)80, tmp1025);

uint64_t* tmp1030 = make_array<uint64_t>( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14);

int64_t i2378;

int64_t i2377;

int64_t i2376;

int64_t i2375;

int64_t i2374;

int64_t i2373;

int64_t i2372;

int64_t i2371;
i2371 =  (int64_t)0;
i2372 =  (int64_t)0;
i2373 =  (int64_t)0;
i2374 =  (int64_t)0;
for (uint32_t i2375 =  (int32_t)0; i2375 <  (int32_t)1; i2375++){
for (uint32_t i2377 =  (int32_t)0; i2377 <  (int32_t)14; i2377++){
for (uint32_t i2378 =  (int32_t)0; i2378 <  (int32_t)14; i2378++){
for (uint32_t i2376 =  (int32_t)0; i2376 <  (int32_t)80; i2376++){
Arr4DIdxRowM(tmp1030, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2375,i2376,i2377,i2378) = Arr4DIdxRowM(tmp1027, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2371,i2372,i2373,i2374);
i2374 = (i2374 +  (int64_t)1);
if ((i2374 ==  (int64_t)80)) {
i2374 =  (int64_t)0;
i2373 = (i2373 +  (int64_t)1);
if ((i2373 ==  (int64_t)14)) {
i2373 =  (int64_t)0;
i2372 = (i2372 +  (int64_t)1);
if ((i2372 ==  (int64_t)14)) {
i2372 =  (int64_t)0;
i2371 = (i2371 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1027);

uint64_t* tmp1032 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);

int64_t i2386;

int64_t i2385;

int64_t i2384;

int64_t i2383;

int64_t i2382;

int64_t i2381;

int64_t i2380;

int64_t i2379;
i2379 =  (int64_t)0;
i2380 =  (int64_t)0;
i2381 =  (int64_t)0;
i2382 =  (int64_t)0;
for (uint32_t i2383 =  (int32_t)0; i2383 <  (int32_t)1; i2383++){
for (uint32_t i2386 =  (int32_t)0; i2386 <  (int32_t)80; i2386++){
for (uint32_t i2384 =  (int32_t)0; i2384 <  (int32_t)14; i2384++){
for (uint32_t i2385 =  (int32_t)0; i2385 <  (int32_t)14; i2385++){
Arr4DIdxRowM(tmp1032, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2383,i2384,i2385,i2386) = Arr4DIdxRowM(tmp1030, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2379,i2380,i2381,i2382);
i2382 = (i2382 +  (int64_t)1);
if ((i2382 ==  (int64_t)14)) {
i2382 =  (int64_t)0;
i2381 = (i2381 +  (int64_t)1);
if ((i2381 ==  (int64_t)14)) {
i2381 =  (int64_t)0;
i2380 = (i2380 +  (int64_t)1);
if ((i2380 ==  (int64_t)80)) {
i2380 =  (int64_t)0;
i2379 = (i2379 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14, tmp1030);

uint64_t* tmp1034 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1032,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1032, tmp51, tmp52,  (int32_t)0,  (int32_t)0, tmp1034);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1032);

uint64_t* tmp1036 = make_array<uint64_t>( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14);

int64_t i2394;

int64_t i2393;

int64_t i2392;

int64_t i2391;

int64_t i2390;

int64_t i2389;

int64_t i2388;

int64_t i2387;
i2387 =  (int64_t)0;
i2388 =  (int64_t)0;
i2389 =  (int64_t)0;
i2390 =  (int64_t)0;
for (uint32_t i2391 =  (int32_t)0; i2391 <  (int32_t)1; i2391++){
for (uint32_t i2393 =  (int32_t)0; i2393 <  (int32_t)14; i2393++){
for (uint32_t i2394 =  (int32_t)0; i2394 <  (int32_t)14; i2394++){
for (uint32_t i2392 =  (int32_t)0; i2392 <  (int32_t)80; i2392++){
Arr4DIdxRowM(tmp1036, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2391,i2392,i2393,i2394) = Arr4DIdxRowM(tmp1034, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2387,i2388,i2389,i2390);
i2390 = (i2390 +  (int64_t)1);
if ((i2390 ==  (int64_t)80)) {
i2390 =  (int64_t)0;
i2389 = (i2389 +  (int64_t)1);
if ((i2389 ==  (int64_t)14)) {
i2389 =  (int64_t)0;
i2388 = (i2388 +  (int64_t)1);
if ((i2388 ==  (int64_t)14)) {
i2388 =  (int64_t)0;
i2387 = (i2387 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1034);

uint64_t* tmp1038 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);

int64_t i2402;

int64_t i2401;

int64_t i2400;

int64_t i2399;

int64_t i2398;

int64_t i2397;

int64_t i2396;

int64_t i2395;
i2395 =  (int64_t)0;
i2396 =  (int64_t)0;
i2397 =  (int64_t)0;
i2398 =  (int64_t)0;
for (uint32_t i2399 =  (int32_t)0; i2399 <  (int32_t)1; i2399++){
for (uint32_t i2402 =  (int32_t)0; i2402 <  (int32_t)80; i2402++){
for (uint32_t i2400 =  (int32_t)0; i2400 <  (int32_t)14; i2400++){
for (uint32_t i2401 =  (int32_t)0; i2401 <  (int32_t)14; i2401++){
Arr4DIdxRowM(tmp1038, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2399,i2400,i2401,i2402) = Arr4DIdxRowM(tmp1036, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2395,i2396,i2397,i2398);
i2398 = (i2398 +  (int64_t)1);
if ((i2398 ==  (int64_t)14)) {
i2398 =  (int64_t)0;
i2397 = (i2397 +  (int64_t)1);
if ((i2397 ==  (int64_t)14)) {
i2397 =  (int64_t)0;
i2396 = (i2396 +  (int64_t)1);
if ((i2396 ==  (int64_t)80)) {
i2396 =  (int64_t)0;
i2395 = (i2395 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14, tmp1036);

uint64_t* tmp1040 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);

int64_t i2410;

int64_t i2409;

int64_t i2408;

int64_t i2407;

int64_t i2406;

int64_t i2405;

int64_t i2404;

int64_t i2403;
i2403 =  (int64_t)0;
i2404 =  (int64_t)0;
i2405 =  (int64_t)0;
i2406 =  (int64_t)0;
for (uint32_t i2407 =  (int32_t)0; i2407 <  (int32_t)1; i2407++){
for (uint32_t i2410 =  (int32_t)0; i2410 <  (int32_t)80; i2410++){
for (uint32_t i2408 =  (int32_t)0; i2408 <  (int32_t)14; i2408++){
for (uint32_t i2409 =  (int32_t)0; i2409 <  (int32_t)14; i2409++){
Arr4DIdxRowM(tmp1040, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2407,i2408,i2409,i2410) = Arr4DIdxRowM(tmp954, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2403,i2404,i2405,i2406);
i2406 = (i2406 +  (int64_t)1);
if ((i2406 ==  (int64_t)14)) {
i2406 =  (int64_t)0;
i2405 = (i2405 +  (int64_t)1);
if ((i2405 ==  (int64_t)14)) {
i2405 =  (int64_t)0;
i2404 = (i2404 +  (int64_t)1);
if ((i2404 ==  (int64_t)80)) {
i2404 =  (int64_t)0;
i2403 = (i2403 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14, tmp954);

uint64_t* tmp1042 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);
for (uint32_t i0 =  (int32_t)0; i0 <  (int32_t)1; i0++){
for (uint32_t i1 =  (int32_t)0; i1 <  (int32_t)14; i1++){
for (uint32_t i2 =  (int32_t)0; i2 <  (int32_t)14; i2++){
for (uint32_t i3 =  (int32_t)0; i3 <  (int32_t)80; i3++){
Arr4DIdxRowM(tmp1042, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i0,i1,i2,i3) = SecretAdd(Arr4DIdxRowM(tmp1038, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i0,i1,i2,i3), Arr4DIdxRowM(tmp1040, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i0,i1,i2,i3));
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1040);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1038);

uint64_t* tmp1045 = make_array<uint64_t>( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14);

int64_t i2418;

int64_t i2417;

int64_t i2416;

int64_t i2415;

int64_t i2414;

int64_t i2413;

int64_t i2412;

int64_t i2411;
i2411 =  (int64_t)0;
i2412 =  (int64_t)0;
i2413 =  (int64_t)0;
i2414 =  (int64_t)0;
for (uint32_t i2415 =  (int32_t)0; i2415 <  (int32_t)1; i2415++){
for (uint32_t i2417 =  (int32_t)0; i2417 <  (int32_t)14; i2417++){
for (uint32_t i2418 =  (int32_t)0; i2418 <  (int32_t)14; i2418++){
for (uint32_t i2416 =  (int32_t)0; i2416 <  (int32_t)80; i2416++){
Arr4DIdxRowM(tmp1045, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2415,i2416,i2417,i2418) = Arr4DIdxRowM(tmp1042, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2411,i2412,i2413,i2414);
i2414 = (i2414 +  (int64_t)1);
if ((i2414 ==  (int64_t)80)) {
i2414 =  (int64_t)0;
i2413 = (i2413 +  (int64_t)1);
if ((i2413 ==  (int64_t)14)) {
i2413 =  (int64_t)0;
i2412 = (i2412 +  (int64_t)1);
if ((i2412 ==  (int64_t)14)) {
i2412 =  (int64_t)0;
i2411 = (i2411 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1042);

uint64_t* tmp1047 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);

int64_t i2426;

int64_t i2425;

int64_t i2424;

int64_t i2423;

int64_t i2422;

int64_t i2421;

int64_t i2420;

int64_t i2419;
i2419 =  (int64_t)0;
i2420 =  (int64_t)0;
i2421 =  (int64_t)0;
i2422 =  (int64_t)0;
for (uint32_t i2423 =  (int32_t)0; i2423 <  (int32_t)1; i2423++){
for (uint32_t i2426 =  (int32_t)0; i2426 <  (int32_t)80; i2426++){
for (uint32_t i2424 =  (int32_t)0; i2424 <  (int32_t)14; i2424++){
for (uint32_t i2425 =  (int32_t)0; i2425 <  (int32_t)14; i2425++){
Arr4DIdxRowM(tmp1047, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2423,i2424,i2425,i2426) = Arr4DIdxRowM(tmp1045, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2419,i2420,i2421,i2422);
i2422 = (i2422 +  (int64_t)1);
if ((i2422 ==  (int64_t)14)) {
i2422 =  (int64_t)0;
i2421 = (i2421 +  (int64_t)1);
if ((i2421 ==  (int64_t)14)) {
i2421 =  (int64_t)0;
i2420 = (i2420 +  (int64_t)1);
if ((i2420 ==  (int64_t)80)) {
i2420 =  (int64_t)0;
i2419 = (i2419 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp1048 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);
HardSigmoid4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1047, tmp1048,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1047);

uint64_t* tmp1050 = make_array<uint64_t>( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14);

int64_t i2434;

int64_t i2433;

int64_t i2432;

int64_t i2431;

int64_t i2430;

int64_t i2429;

int64_t i2428;

int64_t i2427;
i2427 =  (int64_t)0;
i2428 =  (int64_t)0;
i2429 =  (int64_t)0;
i2430 =  (int64_t)0;
for (uint32_t i2431 =  (int32_t)0; i2431 <  (int32_t)1; i2431++){
for (uint32_t i2433 =  (int32_t)0; i2433 <  (int32_t)14; i2433++){
for (uint32_t i2434 =  (int32_t)0; i2434 <  (int32_t)14; i2434++){
for (uint32_t i2432 =  (int32_t)0; i2432 <  (int32_t)80; i2432++){
Arr4DIdxRowM(tmp1050, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2431,i2432,i2433,i2434) = Arr4DIdxRowM(tmp1048, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2427,i2428,i2429,i2430);
i2430 = (i2430 +  (int64_t)1);
if ((i2430 ==  (int64_t)80)) {
i2430 =  (int64_t)0;
i2429 = (i2429 +  (int64_t)1);
if ((i2429 ==  (int64_t)14)) {
i2429 =  (int64_t)0;
i2428 = (i2428 +  (int64_t)1);
if ((i2428 ==  (int64_t)14)) {
i2428 =  (int64_t)0;
i2427 = (i2427 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1048);

uint64_t* tmp1052 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);

int64_t i2442;

int64_t i2441;

int64_t i2440;

int64_t i2439;

int64_t i2438;

int64_t i2437;

int64_t i2436;

int64_t i2435;
i2435 =  (int64_t)0;
i2436 =  (int64_t)0;
i2437 =  (int64_t)0;
i2438 =  (int64_t)0;
for (uint32_t i2439 =  (int32_t)0; i2439 <  (int32_t)1; i2439++){
for (uint32_t i2442 =  (int32_t)0; i2442 <  (int32_t)80; i2442++){
for (uint32_t i2440 =  (int32_t)0; i2440 <  (int32_t)14; i2440++){
for (uint32_t i2441 =  (int32_t)0; i2441 <  (int32_t)14; i2441++){
Arr4DIdxRowM(tmp1052, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2439,i2440,i2441,i2442) = Arr4DIdxRowM(tmp1045, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2435,i2436,i2437,i2438);
i2438 = (i2438 +  (int64_t)1);
if ((i2438 ==  (int64_t)14)) {
i2438 =  (int64_t)0;
i2437 = (i2437 +  (int64_t)1);
if ((i2437 ==  (int64_t)14)) {
i2437 =  (int64_t)0;
i2436 = (i2436 +  (int64_t)1);
if ((i2436 ==  (int64_t)80)) {
i2436 =  (int64_t)0;
i2435 = (i2435 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14, tmp1045);

uint64_t* tmp1054 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);

int64_t i2450;

int64_t i2449;

int64_t i2448;

int64_t i2447;

int64_t i2446;

int64_t i2445;

int64_t i2444;

int64_t i2443;
i2443 =  (int64_t)0;
i2444 =  (int64_t)0;
i2445 =  (int64_t)0;
i2446 =  (int64_t)0;
for (uint32_t i2447 =  (int32_t)0; i2447 <  (int32_t)1; i2447++){
for (uint32_t i2450 =  (int32_t)0; i2450 <  (int32_t)80; i2450++){
for (uint32_t i2448 =  (int32_t)0; i2448 <  (int32_t)14; i2448++){
for (uint32_t i2449 =  (int32_t)0; i2449 <  (int32_t)14; i2449++){
Arr4DIdxRowM(tmp1054, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2447,i2448,i2449,i2450) = Arr4DIdxRowM(tmp1050, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2443,i2444,i2445,i2446);
i2446 = (i2446 +  (int64_t)1);
if ((i2446 ==  (int64_t)14)) {
i2446 =  (int64_t)0;
i2445 = (i2445 +  (int64_t)1);
if ((i2445 ==  (int64_t)14)) {
i2445 =  (int64_t)0;
i2444 = (i2444 +  (int64_t)1);
if ((i2444 ==  (int64_t)80)) {
i2444 =  (int64_t)0;
i2443 = (i2443 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14, tmp1050);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1052,  (int32_t)23);

uint64_t* tmp1056 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);

uint64_t* tmp1057 = make_array<uint64_t>( (int32_t)15680);

uint64_t* tmp1058 = make_array<uint64_t>( (int32_t)15680);

uint64_t* tmp1059 = make_array<uint64_t>( (int32_t)15680);

int32_t tmp1060;
for (uint32_t i2451 =  (int32_t)0; i2451 <  (int32_t)1; i2451++){
for (uint32_t i2452 =  (int32_t)0; i2452 <  (int32_t)14; i2452++){
for (uint32_t i2453 =  (int32_t)0; i2453 <  (int32_t)14; i2453++){
for (uint32_t i2454 =  (int32_t)0; i2454 <  (int32_t)80; i2454++){
tmp1060 = (((( (int32_t)0 + (i2451 *  (int32_t)15680)) + (i2452 *  (int32_t)1120)) + (i2453 *  (int32_t)80)) + (i2454 *  (int32_t)1));
Arr1DIdxRowM(tmp1057, (int32_t)15680,tmp1060) = Arr4DIdxRowM(tmp1052, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2451,i2452,i2453,i2454);
Arr1DIdxRowM(tmp1058, (int32_t)15680,tmp1060) = Arr4DIdxRowM(tmp1054, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2451,i2452,i2453,i2454);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)15680, tmp1057, tmp1058, tmp1059);
ClearMemSecret1( (int32_t)15680, tmp1057);
ClearMemSecret1( (int32_t)15680, tmp1058);
for (uint32_t i2451 =  (int32_t)0; i2451 <  (int32_t)1; i2451++){
for (uint32_t i2452 =  (int32_t)0; i2452 <  (int32_t)14; i2452++){
for (uint32_t i2453 =  (int32_t)0; i2453 <  (int32_t)14; i2453++){
for (uint32_t i2454 =  (int32_t)0; i2454 <  (int32_t)80; i2454++){
tmp1060 = (((( (int32_t)0 + (i2451 *  (int32_t)15680)) + (i2452 *  (int32_t)1120)) + (i2453 *  (int32_t)80)) + (i2454 *  (int32_t)1));
Arr4DIdxRowM(tmp1056, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2451,i2452,i2453,i2454) = Arr1DIdxRowM(tmp1059, (int32_t)15680,tmp1060);
}
}
}
}
ClearMemSecret1( (int32_t)15680, tmp1059);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1052);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1054);

uint64_t* tmp1063 = make_array<uint64_t>( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14);

int64_t i2462;

int64_t i2461;

int64_t i2460;

int64_t i2459;

int64_t i2458;

int64_t i2457;

int64_t i2456;

int64_t i2455;
i2455 =  (int64_t)0;
i2456 =  (int64_t)0;
i2457 =  (int64_t)0;
i2458 =  (int64_t)0;
for (uint32_t i2459 =  (int32_t)0; i2459 <  (int32_t)1; i2459++){
for (uint32_t i2461 =  (int32_t)0; i2461 <  (int32_t)14; i2461++){
for (uint32_t i2462 =  (int32_t)0; i2462 <  (int32_t)14; i2462++){
for (uint32_t i2460 =  (int32_t)0; i2460 <  (int32_t)80; i2460++){
Arr4DIdxRowM(tmp1063, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2459,i2460,i2461,i2462) = Arr4DIdxRowM(tmp1056, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2455,i2456,i2457,i2458);
i2458 = (i2458 +  (int64_t)1);
if ((i2458 ==  (int64_t)80)) {
i2458 =  (int64_t)0;
i2457 = (i2457 +  (int64_t)1);
if ((i2457 ==  (int64_t)14)) {
i2457 =  (int64_t)0;
i2456 = (i2456 +  (int64_t)1);
if ((i2456 ==  (int64_t)14)) {
i2456 =  (int64_t)0;
i2455 = (i2455 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1056);

uint64_t* tmp1065 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);

int64_t i2470;

int64_t i2469;

int64_t i2468;

int64_t i2467;

int64_t i2466;

int64_t i2465;

int64_t i2464;

int64_t i2463;
i2463 =  (int64_t)0;
i2464 =  (int64_t)0;
i2465 =  (int64_t)0;
i2466 =  (int64_t)0;
for (uint32_t i2467 =  (int32_t)0; i2467 <  (int32_t)1; i2467++){
for (uint32_t i2470 =  (int32_t)0; i2470 <  (int32_t)80; i2470++){
for (uint32_t i2468 =  (int32_t)0; i2468 <  (int32_t)14; i2468++){
for (uint32_t i2469 =  (int32_t)0; i2469 <  (int32_t)14; i2469++){
Arr4DIdxRowM(tmp1065, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2467,i2468,i2469,i2470) = Arr4DIdxRowM(tmp1063, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2463,i2464,i2465,i2466);
i2466 = (i2466 +  (int64_t)1);
if ((i2466 ==  (int64_t)14)) {
i2466 =  (int64_t)0;
i2465 = (i2465 +  (int64_t)1);
if ((i2465 ==  (int64_t)14)) {
i2465 =  (int64_t)0;
i2464 = (i2464 +  (int64_t)1);
if ((i2464 ==  (int64_t)80)) {
i2464 =  (int64_t)0;
i2463 = (i2463 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp1066 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)80,  (int32_t)184);

int64_t i2478;

int64_t i2477;

int64_t i2476;

int64_t i2475;

int64_t i2474;

int64_t i2473;

int64_t i2472;

int64_t i2471;
i2471 =  (int64_t)0;
i2472 =  (int64_t)0;
i2473 =  (int64_t)0;
i2474 =  (int64_t)0;
for (uint32_t i2478 =  (int32_t)0; i2478 <  (int32_t)184; i2478++){
for (uint32_t i2477 =  (int32_t)0; i2477 <  (int32_t)80; i2477++){
for (uint32_t i2475 =  (int32_t)0; i2475 <  (int32_t)1; i2475++){
for (uint32_t i2476 =  (int32_t)0; i2476 <  (int32_t)1; i2476++){
Arr4DIdxRowM(tmp1066, (int32_t)1, (int32_t)1, (int32_t)80, (int32_t)184,i2475,i2476,i2477,i2478) = Arr4DIdxRowM(tmp60, (int32_t)184, (int32_t)80, (int32_t)1, (int32_t)1,i2471,i2472,i2473,i2474);
i2474 = (i2474 +  (int64_t)1);
if ((i2474 ==  (int64_t)1)) {
i2474 =  (int64_t)0;
i2473 = (i2473 +  (int64_t)1);
if ((i2473 ==  (int64_t)1)) {
i2473 =  (int64_t)0;
i2472 = (i2472 +  (int64_t)1);
if ((i2472 ==  (int64_t)80)) {
i2472 =  (int64_t)0;
i2471 = (i2471 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)184,  (int32_t)80,  (int32_t)1,  (int32_t)1, tmp60);

uint64_t* tmp1068 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1065,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80,  (int32_t)1,  (int32_t)1,  (int32_t)184,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp1065, tmp1066, tmp1068);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1065);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)80,  (int32_t)184, tmp1066);

uint64_t* tmp1071 = make_array<uint64_t>( (int32_t)1,  (int32_t)184,  (int32_t)14,  (int32_t)14);

int64_t i2486;

int64_t i2485;

int64_t i2484;

int64_t i2483;

int64_t i2482;

int64_t i2481;

int64_t i2480;

int64_t i2479;
i2479 =  (int64_t)0;
i2480 =  (int64_t)0;
i2481 =  (int64_t)0;
i2482 =  (int64_t)0;
for (uint32_t i2483 =  (int32_t)0; i2483 <  (int32_t)1; i2483++){
for (uint32_t i2485 =  (int32_t)0; i2485 <  (int32_t)14; i2485++){
for (uint32_t i2486 =  (int32_t)0; i2486 <  (int32_t)14; i2486++){
for (uint32_t i2484 =  (int32_t)0; i2484 <  (int32_t)184; i2484++){
Arr4DIdxRowM(tmp1071, (int32_t)1, (int32_t)184, (int32_t)14, (int32_t)14,i2483,i2484,i2485,i2486) = Arr4DIdxRowM(tmp1068, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2479,i2480,i2481,i2482);
i2482 = (i2482 +  (int64_t)1);
if ((i2482 ==  (int64_t)184)) {
i2482 =  (int64_t)0;
i2481 = (i2481 +  (int64_t)1);
if ((i2481 ==  (int64_t)14)) {
i2481 =  (int64_t)0;
i2480 = (i2480 +  (int64_t)1);
if ((i2480 ==  (int64_t)14)) {
i2480 =  (int64_t)0;
i2479 = (i2479 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1068);

uint64_t* tmp1073 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184);

int64_t i2494;

int64_t i2493;

int64_t i2492;

int64_t i2491;

int64_t i2490;

int64_t i2489;

int64_t i2488;

int64_t i2487;
i2487 =  (int64_t)0;
i2488 =  (int64_t)0;
i2489 =  (int64_t)0;
i2490 =  (int64_t)0;
for (uint32_t i2491 =  (int32_t)0; i2491 <  (int32_t)1; i2491++){
for (uint32_t i2494 =  (int32_t)0; i2494 <  (int32_t)184; i2494++){
for (uint32_t i2492 =  (int32_t)0; i2492 <  (int32_t)14; i2492++){
for (uint32_t i2493 =  (int32_t)0; i2493 <  (int32_t)14; i2493++){
Arr4DIdxRowM(tmp1073, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2491,i2492,i2493,i2494) = Arr4DIdxRowM(tmp1071, (int32_t)1, (int32_t)184, (int32_t)14, (int32_t)14,i2487,i2488,i2489,i2490);
i2490 = (i2490 +  (int64_t)1);
if ((i2490 ==  (int64_t)14)) {
i2490 =  (int64_t)0;
i2489 = (i2489 +  (int64_t)1);
if ((i2489 ==  (int64_t)14)) {
i2489 =  (int64_t)0;
i2488 = (i2488 +  (int64_t)1);
if ((i2488 ==  (int64_t)184)) {
i2488 =  (int64_t)0;
i2487 = (i2487 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)184,  (int32_t)14,  (int32_t)14, tmp1071);

uint64_t* tmp1075 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1073,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1073, tmp61, tmp62,  (int32_t)0,  (int32_t)23, tmp1075);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1073);

uint64_t* tmp1077 = make_array<uint64_t>( (int32_t)1,  (int32_t)184,  (int32_t)14,  (int32_t)14);

int64_t i2502;

int64_t i2501;

int64_t i2500;

int64_t i2499;

int64_t i2498;

int64_t i2497;

int64_t i2496;

int64_t i2495;
i2495 =  (int64_t)0;
i2496 =  (int64_t)0;
i2497 =  (int64_t)0;
i2498 =  (int64_t)0;
for (uint32_t i2499 =  (int32_t)0; i2499 <  (int32_t)1; i2499++){
for (uint32_t i2501 =  (int32_t)0; i2501 <  (int32_t)14; i2501++){
for (uint32_t i2502 =  (int32_t)0; i2502 <  (int32_t)14; i2502++){
for (uint32_t i2500 =  (int32_t)0; i2500 <  (int32_t)184; i2500++){
Arr4DIdxRowM(tmp1077, (int32_t)1, (int32_t)184, (int32_t)14, (int32_t)14,i2499,i2500,i2501,i2502) = Arr4DIdxRowM(tmp1075, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2495,i2496,i2497,i2498);
i2498 = (i2498 +  (int64_t)1);
if ((i2498 ==  (int64_t)184)) {
i2498 =  (int64_t)0;
i2497 = (i2497 +  (int64_t)1);
if ((i2497 ==  (int64_t)14)) {
i2497 =  (int64_t)0;
i2496 = (i2496 +  (int64_t)1);
if ((i2496 ==  (int64_t)14)) {
i2496 =  (int64_t)0;
i2495 = (i2495 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1075);

uint64_t* tmp1079 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184);

int64_t i2510;

int64_t i2509;

int64_t i2508;

int64_t i2507;

int64_t i2506;

int64_t i2505;

int64_t i2504;

int64_t i2503;
i2503 =  (int64_t)0;
i2504 =  (int64_t)0;
i2505 =  (int64_t)0;
i2506 =  (int64_t)0;
for (uint32_t i2507 =  (int32_t)0; i2507 <  (int32_t)1; i2507++){
for (uint32_t i2510 =  (int32_t)0; i2510 <  (int32_t)184; i2510++){
for (uint32_t i2508 =  (int32_t)0; i2508 <  (int32_t)14; i2508++){
for (uint32_t i2509 =  (int32_t)0; i2509 <  (int32_t)14; i2509++){
Arr4DIdxRowM(tmp1079, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2507,i2508,i2509,i2510) = Arr4DIdxRowM(tmp1077, (int32_t)1, (int32_t)184, (int32_t)14, (int32_t)14,i2503,i2504,i2505,i2506);
i2506 = (i2506 +  (int64_t)1);
if ((i2506 ==  (int64_t)14)) {
i2506 =  (int64_t)0;
i2505 = (i2505 +  (int64_t)1);
if ((i2505 ==  (int64_t)14)) {
i2505 =  (int64_t)0;
i2504 = (i2504 +  (int64_t)1);
if ((i2504 ==  (int64_t)184)) {
i2504 =  (int64_t)0;
i2503 = (i2503 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp1080 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184);
HardSigmoid4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1079, tmp1080,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1079);

uint64_t* tmp1082 = make_array<uint64_t>( (int32_t)1,  (int32_t)184,  (int32_t)14,  (int32_t)14);

int64_t i2518;

int64_t i2517;

int64_t i2516;

int64_t i2515;

int64_t i2514;

int64_t i2513;

int64_t i2512;

int64_t i2511;
i2511 =  (int64_t)0;
i2512 =  (int64_t)0;
i2513 =  (int64_t)0;
i2514 =  (int64_t)0;
for (uint32_t i2515 =  (int32_t)0; i2515 <  (int32_t)1; i2515++){
for (uint32_t i2517 =  (int32_t)0; i2517 <  (int32_t)14; i2517++){
for (uint32_t i2518 =  (int32_t)0; i2518 <  (int32_t)14; i2518++){
for (uint32_t i2516 =  (int32_t)0; i2516 <  (int32_t)184; i2516++){
Arr4DIdxRowM(tmp1082, (int32_t)1, (int32_t)184, (int32_t)14, (int32_t)14,i2515,i2516,i2517,i2518) = Arr4DIdxRowM(tmp1080, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2511,i2512,i2513,i2514);
i2514 = (i2514 +  (int64_t)1);
if ((i2514 ==  (int64_t)184)) {
i2514 =  (int64_t)0;
i2513 = (i2513 +  (int64_t)1);
if ((i2513 ==  (int64_t)14)) {
i2513 =  (int64_t)0;
i2512 = (i2512 +  (int64_t)1);
if ((i2512 ==  (int64_t)14)) {
i2512 =  (int64_t)0;
i2511 = (i2511 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1080);

uint64_t* tmp1084 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184);

int64_t i2526;

int64_t i2525;

int64_t i2524;

int64_t i2523;

int64_t i2522;

int64_t i2521;

int64_t i2520;

int64_t i2519;
i2519 =  (int64_t)0;
i2520 =  (int64_t)0;
i2521 =  (int64_t)0;
i2522 =  (int64_t)0;
for (uint32_t i2523 =  (int32_t)0; i2523 <  (int32_t)1; i2523++){
for (uint32_t i2526 =  (int32_t)0; i2526 <  (int32_t)184; i2526++){
for (uint32_t i2524 =  (int32_t)0; i2524 <  (int32_t)14; i2524++){
for (uint32_t i2525 =  (int32_t)0; i2525 <  (int32_t)14; i2525++){
Arr4DIdxRowM(tmp1084, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2523,i2524,i2525,i2526) = Arr4DIdxRowM(tmp1077, (int32_t)1, (int32_t)184, (int32_t)14, (int32_t)14,i2519,i2520,i2521,i2522);
i2522 = (i2522 +  (int64_t)1);
if ((i2522 ==  (int64_t)14)) {
i2522 =  (int64_t)0;
i2521 = (i2521 +  (int64_t)1);
if ((i2521 ==  (int64_t)14)) {
i2521 =  (int64_t)0;
i2520 = (i2520 +  (int64_t)1);
if ((i2520 ==  (int64_t)184)) {
i2520 =  (int64_t)0;
i2519 = (i2519 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)184,  (int32_t)14,  (int32_t)14, tmp1077);

uint64_t* tmp1086 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184);

int64_t i2534;

int64_t i2533;

int64_t i2532;

int64_t i2531;

int64_t i2530;

int64_t i2529;

int64_t i2528;

int64_t i2527;
i2527 =  (int64_t)0;
i2528 =  (int64_t)0;
i2529 =  (int64_t)0;
i2530 =  (int64_t)0;
for (uint32_t i2531 =  (int32_t)0; i2531 <  (int32_t)1; i2531++){
for (uint32_t i2534 =  (int32_t)0; i2534 <  (int32_t)184; i2534++){
for (uint32_t i2532 =  (int32_t)0; i2532 <  (int32_t)14; i2532++){
for (uint32_t i2533 =  (int32_t)0; i2533 <  (int32_t)14; i2533++){
Arr4DIdxRowM(tmp1086, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2531,i2532,i2533,i2534) = Arr4DIdxRowM(tmp1082, (int32_t)1, (int32_t)184, (int32_t)14, (int32_t)14,i2527,i2528,i2529,i2530);
i2530 = (i2530 +  (int64_t)1);
if ((i2530 ==  (int64_t)14)) {
i2530 =  (int64_t)0;
i2529 = (i2529 +  (int64_t)1);
if ((i2529 ==  (int64_t)14)) {
i2529 =  (int64_t)0;
i2528 = (i2528 +  (int64_t)1);
if ((i2528 ==  (int64_t)184)) {
i2528 =  (int64_t)0;
i2527 = (i2527 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)184,  (int32_t)14,  (int32_t)14, tmp1082);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1084,  (int32_t)23);

uint64_t* tmp1088 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184);

uint64_t* tmp1089 = make_array<uint64_t>( (int32_t)36064);

uint64_t* tmp1090 = make_array<uint64_t>( (int32_t)36064);

uint64_t* tmp1091 = make_array<uint64_t>( (int32_t)36064);

int32_t tmp1092;
for (uint32_t i2535 =  (int32_t)0; i2535 <  (int32_t)1; i2535++){
for (uint32_t i2536 =  (int32_t)0; i2536 <  (int32_t)14; i2536++){
for (uint32_t i2537 =  (int32_t)0; i2537 <  (int32_t)14; i2537++){
for (uint32_t i2538 =  (int32_t)0; i2538 <  (int32_t)184; i2538++){
tmp1092 = (((( (int32_t)0 + (i2535 *  (int32_t)36064)) + (i2536 *  (int32_t)2576)) + (i2537 *  (int32_t)184)) + (i2538 *  (int32_t)1));
Arr1DIdxRowM(tmp1089, (int32_t)36064,tmp1092) = Arr4DIdxRowM(tmp1084, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2535,i2536,i2537,i2538);
Arr1DIdxRowM(tmp1090, (int32_t)36064,tmp1092) = Arr4DIdxRowM(tmp1086, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2535,i2536,i2537,i2538);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)36064, tmp1089, tmp1090, tmp1091);
ClearMemSecret1( (int32_t)36064, tmp1089);
ClearMemSecret1( (int32_t)36064, tmp1090);
for (uint32_t i2535 =  (int32_t)0; i2535 <  (int32_t)1; i2535++){
for (uint32_t i2536 =  (int32_t)0; i2536 <  (int32_t)14; i2536++){
for (uint32_t i2537 =  (int32_t)0; i2537 <  (int32_t)14; i2537++){
for (uint32_t i2538 =  (int32_t)0; i2538 <  (int32_t)184; i2538++){
tmp1092 = (((( (int32_t)0 + (i2535 *  (int32_t)36064)) + (i2536 *  (int32_t)2576)) + (i2537 *  (int32_t)184)) + (i2538 *  (int32_t)1));
Arr4DIdxRowM(tmp1088, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2535,i2536,i2537,i2538) = Arr1DIdxRowM(tmp1091, (int32_t)36064,tmp1092);
}
}
}
}
ClearMemSecret1( (int32_t)36064, tmp1091);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1086);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1084);

uint64_t* tmp1095 = make_array<uint64_t>( (int32_t)1,  (int32_t)184,  (int32_t)14,  (int32_t)14);

int64_t i2546;

int64_t i2545;

int64_t i2544;

int64_t i2543;

int64_t i2542;

int64_t i2541;

int64_t i2540;

int64_t i2539;
i2539 =  (int64_t)0;
i2540 =  (int64_t)0;
i2541 =  (int64_t)0;
i2542 =  (int64_t)0;
for (uint32_t i2543 =  (int32_t)0; i2543 <  (int32_t)1; i2543++){
for (uint32_t i2545 =  (int32_t)0; i2545 <  (int32_t)14; i2545++){
for (uint32_t i2546 =  (int32_t)0; i2546 <  (int32_t)14; i2546++){
for (uint32_t i2544 =  (int32_t)0; i2544 <  (int32_t)184; i2544++){
Arr4DIdxRowM(tmp1095, (int32_t)1, (int32_t)184, (int32_t)14, (int32_t)14,i2543,i2544,i2545,i2546) = Arr4DIdxRowM(tmp1088, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2539,i2540,i2541,i2542);
i2542 = (i2542 +  (int64_t)1);
if ((i2542 ==  (int64_t)184)) {
i2542 =  (int64_t)0;
i2541 = (i2541 +  (int64_t)1);
if ((i2541 ==  (int64_t)14)) {
i2541 =  (int64_t)0;
i2540 = (i2540 +  (int64_t)1);
if ((i2540 ==  (int64_t)14)) {
i2540 =  (int64_t)0;
i2539 = (i2539 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1088);

uint64_t* tmp1097 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184);

int64_t i2554;

int64_t i2553;

int64_t i2552;

int64_t i2551;

int64_t i2550;

int64_t i2549;

int64_t i2548;

int64_t i2547;
i2547 =  (int64_t)0;
i2548 =  (int64_t)0;
i2549 =  (int64_t)0;
i2550 =  (int64_t)0;
for (uint32_t i2551 =  (int32_t)0; i2551 <  (int32_t)1; i2551++){
for (uint32_t i2554 =  (int32_t)0; i2554 <  (int32_t)184; i2554++){
for (uint32_t i2552 =  (int32_t)0; i2552 <  (int32_t)14; i2552++){
for (uint32_t i2553 =  (int32_t)0; i2553 <  (int32_t)14; i2553++){
Arr4DIdxRowM(tmp1097, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2551,i2552,i2553,i2554) = Arr4DIdxRowM(tmp1095, (int32_t)1, (int32_t)184, (int32_t)14, (int32_t)14,i2547,i2548,i2549,i2550);
i2550 = (i2550 +  (int64_t)1);
if ((i2550 ==  (int64_t)14)) {
i2550 =  (int64_t)0;
i2549 = (i2549 +  (int64_t)1);
if ((i2549 ==  (int64_t)14)) {
i2549 =  (int64_t)0;
i2548 = (i2548 +  (int64_t)1);
if ((i2548 ==  (int64_t)184)) {
i2548 =  (int64_t)0;
i2547 = (i2547 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)184,  (int32_t)14,  (int32_t)14, tmp1095);

uint64_t* tmp1099 = make_array<uint64_t>( (int32_t)3,  (int32_t)3,  (int32_t)1,  (int32_t)184);

int64_t i2562;

int64_t i2561;

int64_t i2560;

int64_t i2559;

int64_t i2558;

int64_t i2557;

int64_t i2556;

int64_t i2555;
i2555 =  (int64_t)0;
i2556 =  (int64_t)0;
i2557 =  (int64_t)0;
i2558 =  (int64_t)0;
for (uint32_t i2562 =  (int32_t)0; i2562 <  (int32_t)184; i2562++){
for (uint32_t i2561 =  (int32_t)0; i2561 <  (int32_t)1; i2561++){
for (uint32_t i2559 =  (int32_t)0; i2559 <  (int32_t)3; i2559++){
for (uint32_t i2560 =  (int32_t)0; i2560 <  (int32_t)3; i2560++){
Arr4DIdxRowM(tmp1099, (int32_t)3, (int32_t)3, (int32_t)1, (int32_t)184,i2559,i2560,i2561,i2562) = Arr4DIdxRowM(tmp63, (int32_t)184, (int32_t)1, (int32_t)3, (int32_t)3,i2555,i2556,i2557,i2558);
i2558 = (i2558 +  (int64_t)1);
if ((i2558 ==  (int64_t)3)) {
i2558 =  (int64_t)0;
i2557 = (i2557 +  (int64_t)1);
if ((i2557 ==  (int64_t)3)) {
i2557 =  (int64_t)0;
i2556 = (i2556 +  (int64_t)1);
if ((i2556 ==  (int64_t)1)) {
i2556 =  (int64_t)0;
i2555 = (i2555 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)184,  (int32_t)1,  (int32_t)3,  (int32_t)3, tmp63);

uint64_t* tmp1101 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1097,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184,  (int32_t)3,  (int32_t)3,  (int32_t)184,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)184, tmp1097, tmp1099, tmp1101);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1097);
ClearMemSecret4( (int32_t)3,  (int32_t)3,  (int32_t)1,  (int32_t)184, tmp1099);

uint64_t* tmp1104 = make_array<uint64_t>( (int32_t)1,  (int32_t)184,  (int32_t)14,  (int32_t)14);

int64_t i2570;

int64_t i2569;

int64_t i2568;

int64_t i2567;

int64_t i2566;

int64_t i2565;

int64_t i2564;

int64_t i2563;
i2563 =  (int64_t)0;
i2564 =  (int64_t)0;
i2565 =  (int64_t)0;
i2566 =  (int64_t)0;
for (uint32_t i2567 =  (int32_t)0; i2567 <  (int32_t)1; i2567++){
for (uint32_t i2569 =  (int32_t)0; i2569 <  (int32_t)14; i2569++){
for (uint32_t i2570 =  (int32_t)0; i2570 <  (int32_t)14; i2570++){
for (uint32_t i2568 =  (int32_t)0; i2568 <  (int32_t)184; i2568++){
Arr4DIdxRowM(tmp1104, (int32_t)1, (int32_t)184, (int32_t)14, (int32_t)14,i2567,i2568,i2569,i2570) = Arr4DIdxRowM(tmp1101, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2563,i2564,i2565,i2566);
i2566 = (i2566 +  (int64_t)1);
if ((i2566 ==  (int64_t)184)) {
i2566 =  (int64_t)0;
i2565 = (i2565 +  (int64_t)1);
if ((i2565 ==  (int64_t)14)) {
i2565 =  (int64_t)0;
i2564 = (i2564 +  (int64_t)1);
if ((i2564 ==  (int64_t)14)) {
i2564 =  (int64_t)0;
i2563 = (i2563 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1101);

uint64_t* tmp1106 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184);

int64_t i2578;

int64_t i2577;

int64_t i2576;

int64_t i2575;

int64_t i2574;

int64_t i2573;

int64_t i2572;

int64_t i2571;
i2571 =  (int64_t)0;
i2572 =  (int64_t)0;
i2573 =  (int64_t)0;
i2574 =  (int64_t)0;
for (uint32_t i2575 =  (int32_t)0; i2575 <  (int32_t)1; i2575++){
for (uint32_t i2578 =  (int32_t)0; i2578 <  (int32_t)184; i2578++){
for (uint32_t i2576 =  (int32_t)0; i2576 <  (int32_t)14; i2576++){
for (uint32_t i2577 =  (int32_t)0; i2577 <  (int32_t)14; i2577++){
Arr4DIdxRowM(tmp1106, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2575,i2576,i2577,i2578) = Arr4DIdxRowM(tmp1104, (int32_t)1, (int32_t)184, (int32_t)14, (int32_t)14,i2571,i2572,i2573,i2574);
i2574 = (i2574 +  (int64_t)1);
if ((i2574 ==  (int64_t)14)) {
i2574 =  (int64_t)0;
i2573 = (i2573 +  (int64_t)1);
if ((i2573 ==  (int64_t)14)) {
i2573 =  (int64_t)0;
i2572 = (i2572 +  (int64_t)1);
if ((i2572 ==  (int64_t)184)) {
i2572 =  (int64_t)0;
i2571 = (i2571 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)184,  (int32_t)14,  (int32_t)14, tmp1104);

uint64_t* tmp1108 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1106,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1106, tmp61, tmp62,  (int32_t)0,  (int32_t)0, tmp1108);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1106);

uint64_t* tmp1110 = make_array<uint64_t>( (int32_t)1,  (int32_t)184,  (int32_t)14,  (int32_t)14);

int64_t i2586;

int64_t i2585;

int64_t i2584;

int64_t i2583;

int64_t i2582;

int64_t i2581;

int64_t i2580;

int64_t i2579;
i2579 =  (int64_t)0;
i2580 =  (int64_t)0;
i2581 =  (int64_t)0;
i2582 =  (int64_t)0;
for (uint32_t i2583 =  (int32_t)0; i2583 <  (int32_t)1; i2583++){
for (uint32_t i2585 =  (int32_t)0; i2585 <  (int32_t)14; i2585++){
for (uint32_t i2586 =  (int32_t)0; i2586 <  (int32_t)14; i2586++){
for (uint32_t i2584 =  (int32_t)0; i2584 <  (int32_t)184; i2584++){
Arr4DIdxRowM(tmp1110, (int32_t)1, (int32_t)184, (int32_t)14, (int32_t)14,i2583,i2584,i2585,i2586) = Arr4DIdxRowM(tmp1108, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2579,i2580,i2581,i2582);
i2582 = (i2582 +  (int64_t)1);
if ((i2582 ==  (int64_t)184)) {
i2582 =  (int64_t)0;
i2581 = (i2581 +  (int64_t)1);
if ((i2581 ==  (int64_t)14)) {
i2581 =  (int64_t)0;
i2580 = (i2580 +  (int64_t)1);
if ((i2580 ==  (int64_t)14)) {
i2580 =  (int64_t)0;
i2579 = (i2579 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1108);

uint64_t* tmp1112 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184);

int64_t i2594;

int64_t i2593;

int64_t i2592;

int64_t i2591;

int64_t i2590;

int64_t i2589;

int64_t i2588;

int64_t i2587;
i2587 =  (int64_t)0;
i2588 =  (int64_t)0;
i2589 =  (int64_t)0;
i2590 =  (int64_t)0;
for (uint32_t i2591 =  (int32_t)0; i2591 <  (int32_t)1; i2591++){
for (uint32_t i2594 =  (int32_t)0; i2594 <  (int32_t)184; i2594++){
for (uint32_t i2592 =  (int32_t)0; i2592 <  (int32_t)14; i2592++){
for (uint32_t i2593 =  (int32_t)0; i2593 <  (int32_t)14; i2593++){
Arr4DIdxRowM(tmp1112, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2591,i2592,i2593,i2594) = Arr4DIdxRowM(tmp1110, (int32_t)1, (int32_t)184, (int32_t)14, (int32_t)14,i2587,i2588,i2589,i2590);
i2590 = (i2590 +  (int64_t)1);
if ((i2590 ==  (int64_t)14)) {
i2590 =  (int64_t)0;
i2589 = (i2589 +  (int64_t)1);
if ((i2589 ==  (int64_t)14)) {
i2589 =  (int64_t)0;
i2588 = (i2588 +  (int64_t)1);
if ((i2588 ==  (int64_t)184)) {
i2588 =  (int64_t)0;
i2587 = (i2587 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp1113 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184);
HardSigmoid4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1112, tmp1113,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1112);

uint64_t* tmp1115 = make_array<uint64_t>( (int32_t)1,  (int32_t)184,  (int32_t)14,  (int32_t)14);

int64_t i2602;

int64_t i2601;

int64_t i2600;

int64_t i2599;

int64_t i2598;

int64_t i2597;

int64_t i2596;

int64_t i2595;
i2595 =  (int64_t)0;
i2596 =  (int64_t)0;
i2597 =  (int64_t)0;
i2598 =  (int64_t)0;
for (uint32_t i2599 =  (int32_t)0; i2599 <  (int32_t)1; i2599++){
for (uint32_t i2601 =  (int32_t)0; i2601 <  (int32_t)14; i2601++){
for (uint32_t i2602 =  (int32_t)0; i2602 <  (int32_t)14; i2602++){
for (uint32_t i2600 =  (int32_t)0; i2600 <  (int32_t)184; i2600++){
Arr4DIdxRowM(tmp1115, (int32_t)1, (int32_t)184, (int32_t)14, (int32_t)14,i2599,i2600,i2601,i2602) = Arr4DIdxRowM(tmp1113, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2595,i2596,i2597,i2598);
i2598 = (i2598 +  (int64_t)1);
if ((i2598 ==  (int64_t)184)) {
i2598 =  (int64_t)0;
i2597 = (i2597 +  (int64_t)1);
if ((i2597 ==  (int64_t)14)) {
i2597 =  (int64_t)0;
i2596 = (i2596 +  (int64_t)1);
if ((i2596 ==  (int64_t)14)) {
i2596 =  (int64_t)0;
i2595 = (i2595 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1113);

uint64_t* tmp1117 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184);

int64_t i2610;

int64_t i2609;

int64_t i2608;

int64_t i2607;

int64_t i2606;

int64_t i2605;

int64_t i2604;

int64_t i2603;
i2603 =  (int64_t)0;
i2604 =  (int64_t)0;
i2605 =  (int64_t)0;
i2606 =  (int64_t)0;
for (uint32_t i2607 =  (int32_t)0; i2607 <  (int32_t)1; i2607++){
for (uint32_t i2610 =  (int32_t)0; i2610 <  (int32_t)184; i2610++){
for (uint32_t i2608 =  (int32_t)0; i2608 <  (int32_t)14; i2608++){
for (uint32_t i2609 =  (int32_t)0; i2609 <  (int32_t)14; i2609++){
Arr4DIdxRowM(tmp1117, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2607,i2608,i2609,i2610) = Arr4DIdxRowM(tmp1110, (int32_t)1, (int32_t)184, (int32_t)14, (int32_t)14,i2603,i2604,i2605,i2606);
i2606 = (i2606 +  (int64_t)1);
if ((i2606 ==  (int64_t)14)) {
i2606 =  (int64_t)0;
i2605 = (i2605 +  (int64_t)1);
if ((i2605 ==  (int64_t)14)) {
i2605 =  (int64_t)0;
i2604 = (i2604 +  (int64_t)1);
if ((i2604 ==  (int64_t)184)) {
i2604 =  (int64_t)0;
i2603 = (i2603 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)184,  (int32_t)14,  (int32_t)14, tmp1110);

uint64_t* tmp1119 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184);

int64_t i2618;

int64_t i2617;

int64_t i2616;

int64_t i2615;

int64_t i2614;

int64_t i2613;

int64_t i2612;

int64_t i2611;
i2611 =  (int64_t)0;
i2612 =  (int64_t)0;
i2613 =  (int64_t)0;
i2614 =  (int64_t)0;
for (uint32_t i2615 =  (int32_t)0; i2615 <  (int32_t)1; i2615++){
for (uint32_t i2618 =  (int32_t)0; i2618 <  (int32_t)184; i2618++){
for (uint32_t i2616 =  (int32_t)0; i2616 <  (int32_t)14; i2616++){
for (uint32_t i2617 =  (int32_t)0; i2617 <  (int32_t)14; i2617++){
Arr4DIdxRowM(tmp1119, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2615,i2616,i2617,i2618) = Arr4DIdxRowM(tmp1115, (int32_t)1, (int32_t)184, (int32_t)14, (int32_t)14,i2611,i2612,i2613,i2614);
i2614 = (i2614 +  (int64_t)1);
if ((i2614 ==  (int64_t)14)) {
i2614 =  (int64_t)0;
i2613 = (i2613 +  (int64_t)1);
if ((i2613 ==  (int64_t)14)) {
i2613 =  (int64_t)0;
i2612 = (i2612 +  (int64_t)1);
if ((i2612 ==  (int64_t)184)) {
i2612 =  (int64_t)0;
i2611 = (i2611 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)184,  (int32_t)14,  (int32_t)14, tmp1115);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1117,  (int32_t)23);

uint64_t* tmp1121 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184);

uint64_t* tmp1122 = make_array<uint64_t>( (int32_t)36064);

uint64_t* tmp1123 = make_array<uint64_t>( (int32_t)36064);

uint64_t* tmp1124 = make_array<uint64_t>( (int32_t)36064);

int32_t tmp1125;
for (uint32_t i2619 =  (int32_t)0; i2619 <  (int32_t)1; i2619++){
for (uint32_t i2620 =  (int32_t)0; i2620 <  (int32_t)14; i2620++){
for (uint32_t i2621 =  (int32_t)0; i2621 <  (int32_t)14; i2621++){
for (uint32_t i2622 =  (int32_t)0; i2622 <  (int32_t)184; i2622++){
tmp1125 = (((( (int32_t)0 + (i2619 *  (int32_t)36064)) + (i2620 *  (int32_t)2576)) + (i2621 *  (int32_t)184)) + (i2622 *  (int32_t)1));
Arr1DIdxRowM(tmp1122, (int32_t)36064,tmp1125) = Arr4DIdxRowM(tmp1117, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2619,i2620,i2621,i2622);
Arr1DIdxRowM(tmp1123, (int32_t)36064,tmp1125) = Arr4DIdxRowM(tmp1119, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2619,i2620,i2621,i2622);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)36064, tmp1122, tmp1123, tmp1124);
ClearMemSecret1( (int32_t)36064, tmp1122);
ClearMemSecret1( (int32_t)36064, tmp1123);
for (uint32_t i2619 =  (int32_t)0; i2619 <  (int32_t)1; i2619++){
for (uint32_t i2620 =  (int32_t)0; i2620 <  (int32_t)14; i2620++){
for (uint32_t i2621 =  (int32_t)0; i2621 <  (int32_t)14; i2621++){
for (uint32_t i2622 =  (int32_t)0; i2622 <  (int32_t)184; i2622++){
tmp1125 = (((( (int32_t)0 + (i2619 *  (int32_t)36064)) + (i2620 *  (int32_t)2576)) + (i2621 *  (int32_t)184)) + (i2622 *  (int32_t)1));
Arr4DIdxRowM(tmp1121, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2619,i2620,i2621,i2622) = Arr1DIdxRowM(tmp1124, (int32_t)36064,tmp1125);
}
}
}
}
ClearMemSecret1( (int32_t)36064, tmp1124);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1117);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1119);

uint64_t* tmp1128 = make_array<uint64_t>( (int32_t)1,  (int32_t)184,  (int32_t)14,  (int32_t)14);

int64_t i2630;

int64_t i2629;

int64_t i2628;

int64_t i2627;

int64_t i2626;

int64_t i2625;

int64_t i2624;

int64_t i2623;
i2623 =  (int64_t)0;
i2624 =  (int64_t)0;
i2625 =  (int64_t)0;
i2626 =  (int64_t)0;
for (uint32_t i2627 =  (int32_t)0; i2627 <  (int32_t)1; i2627++){
for (uint32_t i2629 =  (int32_t)0; i2629 <  (int32_t)14; i2629++){
for (uint32_t i2630 =  (int32_t)0; i2630 <  (int32_t)14; i2630++){
for (uint32_t i2628 =  (int32_t)0; i2628 <  (int32_t)184; i2628++){
Arr4DIdxRowM(tmp1128, (int32_t)1, (int32_t)184, (int32_t)14, (int32_t)14,i2627,i2628,i2629,i2630) = Arr4DIdxRowM(tmp1121, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2623,i2624,i2625,i2626);
i2626 = (i2626 +  (int64_t)1);
if ((i2626 ==  (int64_t)184)) {
i2626 =  (int64_t)0;
i2625 = (i2625 +  (int64_t)1);
if ((i2625 ==  (int64_t)14)) {
i2625 =  (int64_t)0;
i2624 = (i2624 +  (int64_t)1);
if ((i2624 ==  (int64_t)14)) {
i2624 =  (int64_t)0;
i2623 = (i2623 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1121);

uint64_t* tmp1130 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184);

int64_t i2638;

int64_t i2637;

int64_t i2636;

int64_t i2635;

int64_t i2634;

int64_t i2633;

int64_t i2632;

int64_t i2631;
i2631 =  (int64_t)0;
i2632 =  (int64_t)0;
i2633 =  (int64_t)0;
i2634 =  (int64_t)0;
for (uint32_t i2635 =  (int32_t)0; i2635 <  (int32_t)1; i2635++){
for (uint32_t i2638 =  (int32_t)0; i2638 <  (int32_t)184; i2638++){
for (uint32_t i2636 =  (int32_t)0; i2636 <  (int32_t)14; i2636++){
for (uint32_t i2637 =  (int32_t)0; i2637 <  (int32_t)14; i2637++){
Arr4DIdxRowM(tmp1130, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2635,i2636,i2637,i2638) = Arr4DIdxRowM(tmp1128, (int32_t)1, (int32_t)184, (int32_t)14, (int32_t)14,i2631,i2632,i2633,i2634);
i2634 = (i2634 +  (int64_t)1);
if ((i2634 ==  (int64_t)14)) {
i2634 =  (int64_t)0;
i2633 = (i2633 +  (int64_t)1);
if ((i2633 ==  (int64_t)14)) {
i2633 =  (int64_t)0;
i2632 = (i2632 +  (int64_t)1);
if ((i2632 ==  (int64_t)184)) {
i2632 =  (int64_t)0;
i2631 = (i2631 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)184,  (int32_t)14,  (int32_t)14, tmp1128);

uint64_t* tmp1132 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)184,  (int32_t)80);

int64_t i2646;

int64_t i2645;

int64_t i2644;

int64_t i2643;

int64_t i2642;

int64_t i2641;

int64_t i2640;

int64_t i2639;
i2639 =  (int64_t)0;
i2640 =  (int64_t)0;
i2641 =  (int64_t)0;
i2642 =  (int64_t)0;
for (uint32_t i2646 =  (int32_t)0; i2646 <  (int32_t)80; i2646++){
for (uint32_t i2645 =  (int32_t)0; i2645 <  (int32_t)184; i2645++){
for (uint32_t i2643 =  (int32_t)0; i2643 <  (int32_t)1; i2643++){
for (uint32_t i2644 =  (int32_t)0; i2644 <  (int32_t)1; i2644++){
Arr4DIdxRowM(tmp1132, (int32_t)1, (int32_t)1, (int32_t)184, (int32_t)80,i2643,i2644,i2645,i2646) = Arr4DIdxRowM(tmp64, (int32_t)80, (int32_t)184, (int32_t)1, (int32_t)1,i2639,i2640,i2641,i2642);
i2642 = (i2642 +  (int64_t)1);
if ((i2642 ==  (int64_t)1)) {
i2642 =  (int64_t)0;
i2641 = (i2641 +  (int64_t)1);
if ((i2641 ==  (int64_t)1)) {
i2641 =  (int64_t)0;
i2640 = (i2640 +  (int64_t)1);
if ((i2640 ==  (int64_t)184)) {
i2640 =  (int64_t)0;
i2639 = (i2639 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)80,  (int32_t)184,  (int32_t)1,  (int32_t)1, tmp64);

uint64_t* tmp1134 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1130,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184,  (int32_t)1,  (int32_t)1,  (int32_t)80,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp1130, tmp1132, tmp1134);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1130);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)184,  (int32_t)80, tmp1132);

uint64_t* tmp1137 = make_array<uint64_t>( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14);

int64_t i2654;

int64_t i2653;

int64_t i2652;

int64_t i2651;

int64_t i2650;

int64_t i2649;

int64_t i2648;

int64_t i2647;
i2647 =  (int64_t)0;
i2648 =  (int64_t)0;
i2649 =  (int64_t)0;
i2650 =  (int64_t)0;
for (uint32_t i2651 =  (int32_t)0; i2651 <  (int32_t)1; i2651++){
for (uint32_t i2653 =  (int32_t)0; i2653 <  (int32_t)14; i2653++){
for (uint32_t i2654 =  (int32_t)0; i2654 <  (int32_t)14; i2654++){
for (uint32_t i2652 =  (int32_t)0; i2652 <  (int32_t)80; i2652++){
Arr4DIdxRowM(tmp1137, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2651,i2652,i2653,i2654) = Arr4DIdxRowM(tmp1134, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2647,i2648,i2649,i2650);
i2650 = (i2650 +  (int64_t)1);
if ((i2650 ==  (int64_t)80)) {
i2650 =  (int64_t)0;
i2649 = (i2649 +  (int64_t)1);
if ((i2649 ==  (int64_t)14)) {
i2649 =  (int64_t)0;
i2648 = (i2648 +  (int64_t)1);
if ((i2648 ==  (int64_t)14)) {
i2648 =  (int64_t)0;
i2647 = (i2647 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1134);

uint64_t* tmp1139 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);

int64_t i2662;

int64_t i2661;

int64_t i2660;

int64_t i2659;

int64_t i2658;

int64_t i2657;

int64_t i2656;

int64_t i2655;
i2655 =  (int64_t)0;
i2656 =  (int64_t)0;
i2657 =  (int64_t)0;
i2658 =  (int64_t)0;
for (uint32_t i2659 =  (int32_t)0; i2659 <  (int32_t)1; i2659++){
for (uint32_t i2662 =  (int32_t)0; i2662 <  (int32_t)80; i2662++){
for (uint32_t i2660 =  (int32_t)0; i2660 <  (int32_t)14; i2660++){
for (uint32_t i2661 =  (int32_t)0; i2661 <  (int32_t)14; i2661++){
Arr4DIdxRowM(tmp1139, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2659,i2660,i2661,i2662) = Arr4DIdxRowM(tmp1137, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2655,i2656,i2657,i2658);
i2658 = (i2658 +  (int64_t)1);
if ((i2658 ==  (int64_t)14)) {
i2658 =  (int64_t)0;
i2657 = (i2657 +  (int64_t)1);
if ((i2657 ==  (int64_t)14)) {
i2657 =  (int64_t)0;
i2656 = (i2656 +  (int64_t)1);
if ((i2656 ==  (int64_t)80)) {
i2656 =  (int64_t)0;
i2655 = (i2655 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14, tmp1137);

uint64_t* tmp1141 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1139,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1139, tmp51, tmp52,  (int32_t)0,  (int32_t)0, tmp1141);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1139);

uint64_t* tmp1143 = make_array<uint64_t>( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14);

int64_t i2670;

int64_t i2669;

int64_t i2668;

int64_t i2667;

int64_t i2666;

int64_t i2665;

int64_t i2664;

int64_t i2663;
i2663 =  (int64_t)0;
i2664 =  (int64_t)0;
i2665 =  (int64_t)0;
i2666 =  (int64_t)0;
for (uint32_t i2667 =  (int32_t)0; i2667 <  (int32_t)1; i2667++){
for (uint32_t i2669 =  (int32_t)0; i2669 <  (int32_t)14; i2669++){
for (uint32_t i2670 =  (int32_t)0; i2670 <  (int32_t)14; i2670++){
for (uint32_t i2668 =  (int32_t)0; i2668 <  (int32_t)80; i2668++){
Arr4DIdxRowM(tmp1143, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2667,i2668,i2669,i2670) = Arr4DIdxRowM(tmp1141, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2663,i2664,i2665,i2666);
i2666 = (i2666 +  (int64_t)1);
if ((i2666 ==  (int64_t)80)) {
i2666 =  (int64_t)0;
i2665 = (i2665 +  (int64_t)1);
if ((i2665 ==  (int64_t)14)) {
i2665 =  (int64_t)0;
i2664 = (i2664 +  (int64_t)1);
if ((i2664 ==  (int64_t)14)) {
i2664 =  (int64_t)0;
i2663 = (i2663 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1141);

uint64_t* tmp1145 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);

int64_t i2678;

int64_t i2677;

int64_t i2676;

int64_t i2675;

int64_t i2674;

int64_t i2673;

int64_t i2672;

int64_t i2671;
i2671 =  (int64_t)0;
i2672 =  (int64_t)0;
i2673 =  (int64_t)0;
i2674 =  (int64_t)0;
for (uint32_t i2675 =  (int32_t)0; i2675 <  (int32_t)1; i2675++){
for (uint32_t i2678 =  (int32_t)0; i2678 <  (int32_t)80; i2678++){
for (uint32_t i2676 =  (int32_t)0; i2676 <  (int32_t)14; i2676++){
for (uint32_t i2677 =  (int32_t)0; i2677 <  (int32_t)14; i2677++){
Arr4DIdxRowM(tmp1145, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2675,i2676,i2677,i2678) = Arr4DIdxRowM(tmp1143, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2671,i2672,i2673,i2674);
i2674 = (i2674 +  (int64_t)1);
if ((i2674 ==  (int64_t)14)) {
i2674 =  (int64_t)0;
i2673 = (i2673 +  (int64_t)1);
if ((i2673 ==  (int64_t)14)) {
i2673 =  (int64_t)0;
i2672 = (i2672 +  (int64_t)1);
if ((i2672 ==  (int64_t)80)) {
i2672 =  (int64_t)0;
i2671 = (i2671 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14, tmp1143);

uint64_t* tmp1147 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);

int64_t i2686;

int64_t i2685;

int64_t i2684;

int64_t i2683;

int64_t i2682;

int64_t i2681;

int64_t i2680;

int64_t i2679;
i2679 =  (int64_t)0;
i2680 =  (int64_t)0;
i2681 =  (int64_t)0;
i2682 =  (int64_t)0;
for (uint32_t i2683 =  (int32_t)0; i2683 <  (int32_t)1; i2683++){
for (uint32_t i2686 =  (int32_t)0; i2686 <  (int32_t)80; i2686++){
for (uint32_t i2684 =  (int32_t)0; i2684 <  (int32_t)14; i2684++){
for (uint32_t i2685 =  (int32_t)0; i2685 <  (int32_t)14; i2685++){
Arr4DIdxRowM(tmp1147, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2683,i2684,i2685,i2686) = Arr4DIdxRowM(tmp1063, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2679,i2680,i2681,i2682);
i2682 = (i2682 +  (int64_t)1);
if ((i2682 ==  (int64_t)14)) {
i2682 =  (int64_t)0;
i2681 = (i2681 +  (int64_t)1);
if ((i2681 ==  (int64_t)14)) {
i2681 =  (int64_t)0;
i2680 = (i2680 +  (int64_t)1);
if ((i2680 ==  (int64_t)80)) {
i2680 =  (int64_t)0;
i2679 = (i2679 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14, tmp1063);

uint64_t* tmp1149 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);
for (uint32_t i0 =  (int32_t)0; i0 <  (int32_t)1; i0++){
for (uint32_t i1 =  (int32_t)0; i1 <  (int32_t)14; i1++){
for (uint32_t i2 =  (int32_t)0; i2 <  (int32_t)14; i2++){
for (uint32_t i3 =  (int32_t)0; i3 <  (int32_t)80; i3++){
Arr4DIdxRowM(tmp1149, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i0,i1,i2,i3) = SecretAdd(Arr4DIdxRowM(tmp1145, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i0,i1,i2,i3), Arr4DIdxRowM(tmp1147, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i0,i1,i2,i3));
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1145);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1147);

uint64_t* tmp1152 = make_array<uint64_t>( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14);

int64_t i2694;

int64_t i2693;

int64_t i2692;

int64_t i2691;

int64_t i2690;

int64_t i2689;

int64_t i2688;

int64_t i2687;
i2687 =  (int64_t)0;
i2688 =  (int64_t)0;
i2689 =  (int64_t)0;
i2690 =  (int64_t)0;
for (uint32_t i2691 =  (int32_t)0; i2691 <  (int32_t)1; i2691++){
for (uint32_t i2693 =  (int32_t)0; i2693 <  (int32_t)14; i2693++){
for (uint32_t i2694 =  (int32_t)0; i2694 <  (int32_t)14; i2694++){
for (uint32_t i2692 =  (int32_t)0; i2692 <  (int32_t)80; i2692++){
Arr4DIdxRowM(tmp1152, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2691,i2692,i2693,i2694) = Arr4DIdxRowM(tmp1149, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2687,i2688,i2689,i2690);
i2690 = (i2690 +  (int64_t)1);
if ((i2690 ==  (int64_t)80)) {
i2690 =  (int64_t)0;
i2689 = (i2689 +  (int64_t)1);
if ((i2689 ==  (int64_t)14)) {
i2689 =  (int64_t)0;
i2688 = (i2688 +  (int64_t)1);
if ((i2688 ==  (int64_t)14)) {
i2688 =  (int64_t)0;
i2687 = (i2687 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1149);

uint64_t* tmp1154 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);

int64_t i2702;

int64_t i2701;

int64_t i2700;

int64_t i2699;

int64_t i2698;

int64_t i2697;

int64_t i2696;

int64_t i2695;
i2695 =  (int64_t)0;
i2696 =  (int64_t)0;
i2697 =  (int64_t)0;
i2698 =  (int64_t)0;
for (uint32_t i2699 =  (int32_t)0; i2699 <  (int32_t)1; i2699++){
for (uint32_t i2702 =  (int32_t)0; i2702 <  (int32_t)80; i2702++){
for (uint32_t i2700 =  (int32_t)0; i2700 <  (int32_t)14; i2700++){
for (uint32_t i2701 =  (int32_t)0; i2701 <  (int32_t)14; i2701++){
Arr4DIdxRowM(tmp1154, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2699,i2700,i2701,i2702) = Arr4DIdxRowM(tmp1152, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2695,i2696,i2697,i2698);
i2698 = (i2698 +  (int64_t)1);
if ((i2698 ==  (int64_t)14)) {
i2698 =  (int64_t)0;
i2697 = (i2697 +  (int64_t)1);
if ((i2697 ==  (int64_t)14)) {
i2697 =  (int64_t)0;
i2696 = (i2696 +  (int64_t)1);
if ((i2696 ==  (int64_t)80)) {
i2696 =  (int64_t)0;
i2695 = (i2695 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp1155 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);
HardSigmoid4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1154, tmp1155,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1154);

uint64_t* tmp1157 = make_array<uint64_t>( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14);

int64_t i2710;

int64_t i2709;

int64_t i2708;

int64_t i2707;

int64_t i2706;

int64_t i2705;

int64_t i2704;

int64_t i2703;
i2703 =  (int64_t)0;
i2704 =  (int64_t)0;
i2705 =  (int64_t)0;
i2706 =  (int64_t)0;
for (uint32_t i2707 =  (int32_t)0; i2707 <  (int32_t)1; i2707++){
for (uint32_t i2709 =  (int32_t)0; i2709 <  (int32_t)14; i2709++){
for (uint32_t i2710 =  (int32_t)0; i2710 <  (int32_t)14; i2710++){
for (uint32_t i2708 =  (int32_t)0; i2708 <  (int32_t)80; i2708++){
Arr4DIdxRowM(tmp1157, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2707,i2708,i2709,i2710) = Arr4DIdxRowM(tmp1155, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2703,i2704,i2705,i2706);
i2706 = (i2706 +  (int64_t)1);
if ((i2706 ==  (int64_t)80)) {
i2706 =  (int64_t)0;
i2705 = (i2705 +  (int64_t)1);
if ((i2705 ==  (int64_t)14)) {
i2705 =  (int64_t)0;
i2704 = (i2704 +  (int64_t)1);
if ((i2704 ==  (int64_t)14)) {
i2704 =  (int64_t)0;
i2703 = (i2703 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1155);

uint64_t* tmp1159 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);

int64_t i2718;

int64_t i2717;

int64_t i2716;

int64_t i2715;

int64_t i2714;

int64_t i2713;

int64_t i2712;

int64_t i2711;
i2711 =  (int64_t)0;
i2712 =  (int64_t)0;
i2713 =  (int64_t)0;
i2714 =  (int64_t)0;
for (uint32_t i2715 =  (int32_t)0; i2715 <  (int32_t)1; i2715++){
for (uint32_t i2718 =  (int32_t)0; i2718 <  (int32_t)80; i2718++){
for (uint32_t i2716 =  (int32_t)0; i2716 <  (int32_t)14; i2716++){
for (uint32_t i2717 =  (int32_t)0; i2717 <  (int32_t)14; i2717++){
Arr4DIdxRowM(tmp1159, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2715,i2716,i2717,i2718) = Arr4DIdxRowM(tmp1152, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2711,i2712,i2713,i2714);
i2714 = (i2714 +  (int64_t)1);
if ((i2714 ==  (int64_t)14)) {
i2714 =  (int64_t)0;
i2713 = (i2713 +  (int64_t)1);
if ((i2713 ==  (int64_t)14)) {
i2713 =  (int64_t)0;
i2712 = (i2712 +  (int64_t)1);
if ((i2712 ==  (int64_t)80)) {
i2712 =  (int64_t)0;
i2711 = (i2711 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14, tmp1152);

uint64_t* tmp1161 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);

int64_t i2726;

int64_t i2725;

int64_t i2724;

int64_t i2723;

int64_t i2722;

int64_t i2721;

int64_t i2720;

int64_t i2719;
i2719 =  (int64_t)0;
i2720 =  (int64_t)0;
i2721 =  (int64_t)0;
i2722 =  (int64_t)0;
for (uint32_t i2723 =  (int32_t)0; i2723 <  (int32_t)1; i2723++){
for (uint32_t i2726 =  (int32_t)0; i2726 <  (int32_t)80; i2726++){
for (uint32_t i2724 =  (int32_t)0; i2724 <  (int32_t)14; i2724++){
for (uint32_t i2725 =  (int32_t)0; i2725 <  (int32_t)14; i2725++){
Arr4DIdxRowM(tmp1161, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2723,i2724,i2725,i2726) = Arr4DIdxRowM(tmp1157, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2719,i2720,i2721,i2722);
i2722 = (i2722 +  (int64_t)1);
if ((i2722 ==  (int64_t)14)) {
i2722 =  (int64_t)0;
i2721 = (i2721 +  (int64_t)1);
if ((i2721 ==  (int64_t)14)) {
i2721 =  (int64_t)0;
i2720 = (i2720 +  (int64_t)1);
if ((i2720 ==  (int64_t)80)) {
i2720 =  (int64_t)0;
i2719 = (i2719 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14, tmp1157);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1159,  (int32_t)23);

uint64_t* tmp1163 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);

uint64_t* tmp1164 = make_array<uint64_t>( (int32_t)15680);

uint64_t* tmp1165 = make_array<uint64_t>( (int32_t)15680);

uint64_t* tmp1166 = make_array<uint64_t>( (int32_t)15680);

int32_t tmp1167;
for (uint32_t i2727 =  (int32_t)0; i2727 <  (int32_t)1; i2727++){
for (uint32_t i2728 =  (int32_t)0; i2728 <  (int32_t)14; i2728++){
for (uint32_t i2729 =  (int32_t)0; i2729 <  (int32_t)14; i2729++){
for (uint32_t i2730 =  (int32_t)0; i2730 <  (int32_t)80; i2730++){
tmp1167 = (((( (int32_t)0 + (i2727 *  (int32_t)15680)) + (i2728 *  (int32_t)1120)) + (i2729 *  (int32_t)80)) + (i2730 *  (int32_t)1));
Arr1DIdxRowM(tmp1164, (int32_t)15680,tmp1167) = Arr4DIdxRowM(tmp1159, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2727,i2728,i2729,i2730);
Arr1DIdxRowM(tmp1165, (int32_t)15680,tmp1167) = Arr4DIdxRowM(tmp1161, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2727,i2728,i2729,i2730);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)15680, tmp1164, tmp1165, tmp1166);
ClearMemSecret1( (int32_t)15680, tmp1164);
ClearMemSecret1( (int32_t)15680, tmp1165);
for (uint32_t i2727 =  (int32_t)0; i2727 <  (int32_t)1; i2727++){
for (uint32_t i2728 =  (int32_t)0; i2728 <  (int32_t)14; i2728++){
for (uint32_t i2729 =  (int32_t)0; i2729 <  (int32_t)14; i2729++){
for (uint32_t i2730 =  (int32_t)0; i2730 <  (int32_t)80; i2730++){
tmp1167 = (((( (int32_t)0 + (i2727 *  (int32_t)15680)) + (i2728 *  (int32_t)1120)) + (i2729 *  (int32_t)80)) + (i2730 *  (int32_t)1));
Arr4DIdxRowM(tmp1163, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2727,i2728,i2729,i2730) = Arr1DIdxRowM(tmp1166, (int32_t)15680,tmp1167);
}
}
}
}
ClearMemSecret1( (int32_t)15680, tmp1166);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1161);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1159);

uint64_t* tmp1170 = make_array<uint64_t>( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14);

int64_t i2738;

int64_t i2737;

int64_t i2736;

int64_t i2735;

int64_t i2734;

int64_t i2733;

int64_t i2732;

int64_t i2731;
i2731 =  (int64_t)0;
i2732 =  (int64_t)0;
i2733 =  (int64_t)0;
i2734 =  (int64_t)0;
for (uint32_t i2735 =  (int32_t)0; i2735 <  (int32_t)1; i2735++){
for (uint32_t i2737 =  (int32_t)0; i2737 <  (int32_t)14; i2737++){
for (uint32_t i2738 =  (int32_t)0; i2738 <  (int32_t)14; i2738++){
for (uint32_t i2736 =  (int32_t)0; i2736 <  (int32_t)80; i2736++){
Arr4DIdxRowM(tmp1170, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2735,i2736,i2737,i2738) = Arr4DIdxRowM(tmp1163, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2731,i2732,i2733,i2734);
i2734 = (i2734 +  (int64_t)1);
if ((i2734 ==  (int64_t)80)) {
i2734 =  (int64_t)0;
i2733 = (i2733 +  (int64_t)1);
if ((i2733 ==  (int64_t)14)) {
i2733 =  (int64_t)0;
i2732 = (i2732 +  (int64_t)1);
if ((i2732 ==  (int64_t)14)) {
i2732 =  (int64_t)0;
i2731 = (i2731 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1163);

uint64_t* tmp1172 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);

int64_t i2746;

int64_t i2745;

int64_t i2744;

int64_t i2743;

int64_t i2742;

int64_t i2741;

int64_t i2740;

int64_t i2739;
i2739 =  (int64_t)0;
i2740 =  (int64_t)0;
i2741 =  (int64_t)0;
i2742 =  (int64_t)0;
for (uint32_t i2743 =  (int32_t)0; i2743 <  (int32_t)1; i2743++){
for (uint32_t i2746 =  (int32_t)0; i2746 <  (int32_t)80; i2746++){
for (uint32_t i2744 =  (int32_t)0; i2744 <  (int32_t)14; i2744++){
for (uint32_t i2745 =  (int32_t)0; i2745 <  (int32_t)14; i2745++){
Arr4DIdxRowM(tmp1172, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2743,i2744,i2745,i2746) = Arr4DIdxRowM(tmp1170, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2739,i2740,i2741,i2742);
i2742 = (i2742 +  (int64_t)1);
if ((i2742 ==  (int64_t)14)) {
i2742 =  (int64_t)0;
i2741 = (i2741 +  (int64_t)1);
if ((i2741 ==  (int64_t)14)) {
i2741 =  (int64_t)0;
i2740 = (i2740 +  (int64_t)1);
if ((i2740 ==  (int64_t)80)) {
i2740 =  (int64_t)0;
i2739 = (i2739 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp1173 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)80,  (int32_t)184);

int64_t i2754;

int64_t i2753;

int64_t i2752;

int64_t i2751;

int64_t i2750;

int64_t i2749;

int64_t i2748;

int64_t i2747;
i2747 =  (int64_t)0;
i2748 =  (int64_t)0;
i2749 =  (int64_t)0;
i2750 =  (int64_t)0;
for (uint32_t i2754 =  (int32_t)0; i2754 <  (int32_t)184; i2754++){
for (uint32_t i2753 =  (int32_t)0; i2753 <  (int32_t)80; i2753++){
for (uint32_t i2751 =  (int32_t)0; i2751 <  (int32_t)1; i2751++){
for (uint32_t i2752 =  (int32_t)0; i2752 <  (int32_t)1; i2752++){
Arr4DIdxRowM(tmp1173, (int32_t)1, (int32_t)1, (int32_t)80, (int32_t)184,i2751,i2752,i2753,i2754) = Arr4DIdxRowM(tmp65, (int32_t)184, (int32_t)80, (int32_t)1, (int32_t)1,i2747,i2748,i2749,i2750);
i2750 = (i2750 +  (int64_t)1);
if ((i2750 ==  (int64_t)1)) {
i2750 =  (int64_t)0;
i2749 = (i2749 +  (int64_t)1);
if ((i2749 ==  (int64_t)1)) {
i2749 =  (int64_t)0;
i2748 = (i2748 +  (int64_t)1);
if ((i2748 ==  (int64_t)80)) {
i2748 =  (int64_t)0;
i2747 = (i2747 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)184,  (int32_t)80,  (int32_t)1,  (int32_t)1, tmp65);

uint64_t* tmp1175 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1172,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80,  (int32_t)1,  (int32_t)1,  (int32_t)184,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp1172, tmp1173, tmp1175);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1172);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)80,  (int32_t)184, tmp1173);

uint64_t* tmp1178 = make_array<uint64_t>( (int32_t)1,  (int32_t)184,  (int32_t)14,  (int32_t)14);

int64_t i2762;

int64_t i2761;

int64_t i2760;

int64_t i2759;

int64_t i2758;

int64_t i2757;

int64_t i2756;

int64_t i2755;
i2755 =  (int64_t)0;
i2756 =  (int64_t)0;
i2757 =  (int64_t)0;
i2758 =  (int64_t)0;
for (uint32_t i2759 =  (int32_t)0; i2759 <  (int32_t)1; i2759++){
for (uint32_t i2761 =  (int32_t)0; i2761 <  (int32_t)14; i2761++){
for (uint32_t i2762 =  (int32_t)0; i2762 <  (int32_t)14; i2762++){
for (uint32_t i2760 =  (int32_t)0; i2760 <  (int32_t)184; i2760++){
Arr4DIdxRowM(tmp1178, (int32_t)1, (int32_t)184, (int32_t)14, (int32_t)14,i2759,i2760,i2761,i2762) = Arr4DIdxRowM(tmp1175, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2755,i2756,i2757,i2758);
i2758 = (i2758 +  (int64_t)1);
if ((i2758 ==  (int64_t)184)) {
i2758 =  (int64_t)0;
i2757 = (i2757 +  (int64_t)1);
if ((i2757 ==  (int64_t)14)) {
i2757 =  (int64_t)0;
i2756 = (i2756 +  (int64_t)1);
if ((i2756 ==  (int64_t)14)) {
i2756 =  (int64_t)0;
i2755 = (i2755 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1175);

uint64_t* tmp1180 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184);

int64_t i2770;

int64_t i2769;

int64_t i2768;

int64_t i2767;

int64_t i2766;

int64_t i2765;

int64_t i2764;

int64_t i2763;
i2763 =  (int64_t)0;
i2764 =  (int64_t)0;
i2765 =  (int64_t)0;
i2766 =  (int64_t)0;
for (uint32_t i2767 =  (int32_t)0; i2767 <  (int32_t)1; i2767++){
for (uint32_t i2770 =  (int32_t)0; i2770 <  (int32_t)184; i2770++){
for (uint32_t i2768 =  (int32_t)0; i2768 <  (int32_t)14; i2768++){
for (uint32_t i2769 =  (int32_t)0; i2769 <  (int32_t)14; i2769++){
Arr4DIdxRowM(tmp1180, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2767,i2768,i2769,i2770) = Arr4DIdxRowM(tmp1178, (int32_t)1, (int32_t)184, (int32_t)14, (int32_t)14,i2763,i2764,i2765,i2766);
i2766 = (i2766 +  (int64_t)1);
if ((i2766 ==  (int64_t)14)) {
i2766 =  (int64_t)0;
i2765 = (i2765 +  (int64_t)1);
if ((i2765 ==  (int64_t)14)) {
i2765 =  (int64_t)0;
i2764 = (i2764 +  (int64_t)1);
if ((i2764 ==  (int64_t)184)) {
i2764 =  (int64_t)0;
i2763 = (i2763 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)184,  (int32_t)14,  (int32_t)14, tmp1178);

uint64_t* tmp1182 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1180,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1180, tmp61, tmp62,  (int32_t)0,  (int32_t)0, tmp1182);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1180);

uint64_t* tmp1184 = make_array<uint64_t>( (int32_t)1,  (int32_t)184,  (int32_t)14,  (int32_t)14);

int64_t i2778;

int64_t i2777;

int64_t i2776;

int64_t i2775;

int64_t i2774;

int64_t i2773;

int64_t i2772;

int64_t i2771;
i2771 =  (int64_t)0;
i2772 =  (int64_t)0;
i2773 =  (int64_t)0;
i2774 =  (int64_t)0;
for (uint32_t i2775 =  (int32_t)0; i2775 <  (int32_t)1; i2775++){
for (uint32_t i2777 =  (int32_t)0; i2777 <  (int32_t)14; i2777++){
for (uint32_t i2778 =  (int32_t)0; i2778 <  (int32_t)14; i2778++){
for (uint32_t i2776 =  (int32_t)0; i2776 <  (int32_t)184; i2776++){
Arr4DIdxRowM(tmp1184, (int32_t)1, (int32_t)184, (int32_t)14, (int32_t)14,i2775,i2776,i2777,i2778) = Arr4DIdxRowM(tmp1182, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2771,i2772,i2773,i2774);
i2774 = (i2774 +  (int64_t)1);
if ((i2774 ==  (int64_t)184)) {
i2774 =  (int64_t)0;
i2773 = (i2773 +  (int64_t)1);
if ((i2773 ==  (int64_t)14)) {
i2773 =  (int64_t)0;
i2772 = (i2772 +  (int64_t)1);
if ((i2772 ==  (int64_t)14)) {
i2772 =  (int64_t)0;
i2771 = (i2771 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1182);

uint64_t* tmp1186 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184);

int64_t i2786;

int64_t i2785;

int64_t i2784;

int64_t i2783;

int64_t i2782;

int64_t i2781;

int64_t i2780;

int64_t i2779;
i2779 =  (int64_t)0;
i2780 =  (int64_t)0;
i2781 =  (int64_t)0;
i2782 =  (int64_t)0;
for (uint32_t i2783 =  (int32_t)0; i2783 <  (int32_t)1; i2783++){
for (uint32_t i2786 =  (int32_t)0; i2786 <  (int32_t)184; i2786++){
for (uint32_t i2784 =  (int32_t)0; i2784 <  (int32_t)14; i2784++){
for (uint32_t i2785 =  (int32_t)0; i2785 <  (int32_t)14; i2785++){
Arr4DIdxRowM(tmp1186, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2783,i2784,i2785,i2786) = Arr4DIdxRowM(tmp1184, (int32_t)1, (int32_t)184, (int32_t)14, (int32_t)14,i2779,i2780,i2781,i2782);
i2782 = (i2782 +  (int64_t)1);
if ((i2782 ==  (int64_t)14)) {
i2782 =  (int64_t)0;
i2781 = (i2781 +  (int64_t)1);
if ((i2781 ==  (int64_t)14)) {
i2781 =  (int64_t)0;
i2780 = (i2780 +  (int64_t)1);
if ((i2780 ==  (int64_t)184)) {
i2780 =  (int64_t)0;
i2779 = (i2779 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp1187 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184);
HardSigmoid4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1186, tmp1187,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1186);

uint64_t* tmp1189 = make_array<uint64_t>( (int32_t)1,  (int32_t)184,  (int32_t)14,  (int32_t)14);

int64_t i2794;

int64_t i2793;

int64_t i2792;

int64_t i2791;

int64_t i2790;

int64_t i2789;

int64_t i2788;

int64_t i2787;
i2787 =  (int64_t)0;
i2788 =  (int64_t)0;
i2789 =  (int64_t)0;
i2790 =  (int64_t)0;
for (uint32_t i2791 =  (int32_t)0; i2791 <  (int32_t)1; i2791++){
for (uint32_t i2793 =  (int32_t)0; i2793 <  (int32_t)14; i2793++){
for (uint32_t i2794 =  (int32_t)0; i2794 <  (int32_t)14; i2794++){
for (uint32_t i2792 =  (int32_t)0; i2792 <  (int32_t)184; i2792++){
Arr4DIdxRowM(tmp1189, (int32_t)1, (int32_t)184, (int32_t)14, (int32_t)14,i2791,i2792,i2793,i2794) = Arr4DIdxRowM(tmp1187, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2787,i2788,i2789,i2790);
i2790 = (i2790 +  (int64_t)1);
if ((i2790 ==  (int64_t)184)) {
i2790 =  (int64_t)0;
i2789 = (i2789 +  (int64_t)1);
if ((i2789 ==  (int64_t)14)) {
i2789 =  (int64_t)0;
i2788 = (i2788 +  (int64_t)1);
if ((i2788 ==  (int64_t)14)) {
i2788 =  (int64_t)0;
i2787 = (i2787 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1187);

uint64_t* tmp1191 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184);

int64_t i2802;

int64_t i2801;

int64_t i2800;

int64_t i2799;

int64_t i2798;

int64_t i2797;

int64_t i2796;

int64_t i2795;
i2795 =  (int64_t)0;
i2796 =  (int64_t)0;
i2797 =  (int64_t)0;
i2798 =  (int64_t)0;
for (uint32_t i2799 =  (int32_t)0; i2799 <  (int32_t)1; i2799++){
for (uint32_t i2802 =  (int32_t)0; i2802 <  (int32_t)184; i2802++){
for (uint32_t i2800 =  (int32_t)0; i2800 <  (int32_t)14; i2800++){
for (uint32_t i2801 =  (int32_t)0; i2801 <  (int32_t)14; i2801++){
Arr4DIdxRowM(tmp1191, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2799,i2800,i2801,i2802) = Arr4DIdxRowM(tmp1184, (int32_t)1, (int32_t)184, (int32_t)14, (int32_t)14,i2795,i2796,i2797,i2798);
i2798 = (i2798 +  (int64_t)1);
if ((i2798 ==  (int64_t)14)) {
i2798 =  (int64_t)0;
i2797 = (i2797 +  (int64_t)1);
if ((i2797 ==  (int64_t)14)) {
i2797 =  (int64_t)0;
i2796 = (i2796 +  (int64_t)1);
if ((i2796 ==  (int64_t)184)) {
i2796 =  (int64_t)0;
i2795 = (i2795 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)184,  (int32_t)14,  (int32_t)14, tmp1184);

uint64_t* tmp1193 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184);

int64_t i2810;

int64_t i2809;

int64_t i2808;

int64_t i2807;

int64_t i2806;

int64_t i2805;

int64_t i2804;

int64_t i2803;
i2803 =  (int64_t)0;
i2804 =  (int64_t)0;
i2805 =  (int64_t)0;
i2806 =  (int64_t)0;
for (uint32_t i2807 =  (int32_t)0; i2807 <  (int32_t)1; i2807++){
for (uint32_t i2810 =  (int32_t)0; i2810 <  (int32_t)184; i2810++){
for (uint32_t i2808 =  (int32_t)0; i2808 <  (int32_t)14; i2808++){
for (uint32_t i2809 =  (int32_t)0; i2809 <  (int32_t)14; i2809++){
Arr4DIdxRowM(tmp1193, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2807,i2808,i2809,i2810) = Arr4DIdxRowM(tmp1189, (int32_t)1, (int32_t)184, (int32_t)14, (int32_t)14,i2803,i2804,i2805,i2806);
i2806 = (i2806 +  (int64_t)1);
if ((i2806 ==  (int64_t)14)) {
i2806 =  (int64_t)0;
i2805 = (i2805 +  (int64_t)1);
if ((i2805 ==  (int64_t)14)) {
i2805 =  (int64_t)0;
i2804 = (i2804 +  (int64_t)1);
if ((i2804 ==  (int64_t)184)) {
i2804 =  (int64_t)0;
i2803 = (i2803 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)184,  (int32_t)14,  (int32_t)14, tmp1189);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1191,  (int32_t)23);

uint64_t* tmp1195 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184);

uint64_t* tmp1196 = make_array<uint64_t>( (int32_t)36064);

uint64_t* tmp1197 = make_array<uint64_t>( (int32_t)36064);

uint64_t* tmp1198 = make_array<uint64_t>( (int32_t)36064);

int32_t tmp1199;
for (uint32_t i2811 =  (int32_t)0; i2811 <  (int32_t)1; i2811++){
for (uint32_t i2812 =  (int32_t)0; i2812 <  (int32_t)14; i2812++){
for (uint32_t i2813 =  (int32_t)0; i2813 <  (int32_t)14; i2813++){
for (uint32_t i2814 =  (int32_t)0; i2814 <  (int32_t)184; i2814++){
tmp1199 = (((( (int32_t)0 + (i2811 *  (int32_t)36064)) + (i2812 *  (int32_t)2576)) + (i2813 *  (int32_t)184)) + (i2814 *  (int32_t)1));
Arr1DIdxRowM(tmp1196, (int32_t)36064,tmp1199) = Arr4DIdxRowM(tmp1191, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2811,i2812,i2813,i2814);
Arr1DIdxRowM(tmp1197, (int32_t)36064,tmp1199) = Arr4DIdxRowM(tmp1193, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2811,i2812,i2813,i2814);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)36064, tmp1196, tmp1197, tmp1198);
ClearMemSecret1( (int32_t)36064, tmp1196);
ClearMemSecret1( (int32_t)36064, tmp1197);
for (uint32_t i2811 =  (int32_t)0; i2811 <  (int32_t)1; i2811++){
for (uint32_t i2812 =  (int32_t)0; i2812 <  (int32_t)14; i2812++){
for (uint32_t i2813 =  (int32_t)0; i2813 <  (int32_t)14; i2813++){
for (uint32_t i2814 =  (int32_t)0; i2814 <  (int32_t)184; i2814++){
tmp1199 = (((( (int32_t)0 + (i2811 *  (int32_t)36064)) + (i2812 *  (int32_t)2576)) + (i2813 *  (int32_t)184)) + (i2814 *  (int32_t)1));
Arr4DIdxRowM(tmp1195, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2811,i2812,i2813,i2814) = Arr1DIdxRowM(tmp1198, (int32_t)36064,tmp1199);
}
}
}
}
ClearMemSecret1( (int32_t)36064, tmp1198);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1193);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1191);

uint64_t* tmp1202 = make_array<uint64_t>( (int32_t)1,  (int32_t)184,  (int32_t)14,  (int32_t)14);

int64_t i2822;

int64_t i2821;

int64_t i2820;

int64_t i2819;

int64_t i2818;

int64_t i2817;

int64_t i2816;

int64_t i2815;
i2815 =  (int64_t)0;
i2816 =  (int64_t)0;
i2817 =  (int64_t)0;
i2818 =  (int64_t)0;
for (uint32_t i2819 =  (int32_t)0; i2819 <  (int32_t)1; i2819++){
for (uint32_t i2821 =  (int32_t)0; i2821 <  (int32_t)14; i2821++){
for (uint32_t i2822 =  (int32_t)0; i2822 <  (int32_t)14; i2822++){
for (uint32_t i2820 =  (int32_t)0; i2820 <  (int32_t)184; i2820++){
Arr4DIdxRowM(tmp1202, (int32_t)1, (int32_t)184, (int32_t)14, (int32_t)14,i2819,i2820,i2821,i2822) = Arr4DIdxRowM(tmp1195, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2815,i2816,i2817,i2818);
i2818 = (i2818 +  (int64_t)1);
if ((i2818 ==  (int64_t)184)) {
i2818 =  (int64_t)0;
i2817 = (i2817 +  (int64_t)1);
if ((i2817 ==  (int64_t)14)) {
i2817 =  (int64_t)0;
i2816 = (i2816 +  (int64_t)1);
if ((i2816 ==  (int64_t)14)) {
i2816 =  (int64_t)0;
i2815 = (i2815 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1195);

uint64_t* tmp1204 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184);

int64_t i2830;

int64_t i2829;

int64_t i2828;

int64_t i2827;

int64_t i2826;

int64_t i2825;

int64_t i2824;

int64_t i2823;
i2823 =  (int64_t)0;
i2824 =  (int64_t)0;
i2825 =  (int64_t)0;
i2826 =  (int64_t)0;
for (uint32_t i2827 =  (int32_t)0; i2827 <  (int32_t)1; i2827++){
for (uint32_t i2830 =  (int32_t)0; i2830 <  (int32_t)184; i2830++){
for (uint32_t i2828 =  (int32_t)0; i2828 <  (int32_t)14; i2828++){
for (uint32_t i2829 =  (int32_t)0; i2829 <  (int32_t)14; i2829++){
Arr4DIdxRowM(tmp1204, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2827,i2828,i2829,i2830) = Arr4DIdxRowM(tmp1202, (int32_t)1, (int32_t)184, (int32_t)14, (int32_t)14,i2823,i2824,i2825,i2826);
i2826 = (i2826 +  (int64_t)1);
if ((i2826 ==  (int64_t)14)) {
i2826 =  (int64_t)0;
i2825 = (i2825 +  (int64_t)1);
if ((i2825 ==  (int64_t)14)) {
i2825 =  (int64_t)0;
i2824 = (i2824 +  (int64_t)1);
if ((i2824 ==  (int64_t)184)) {
i2824 =  (int64_t)0;
i2823 = (i2823 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)184,  (int32_t)14,  (int32_t)14, tmp1202);

uint64_t* tmp1206 = make_array<uint64_t>( (int32_t)3,  (int32_t)3,  (int32_t)1,  (int32_t)184);

int64_t i2838;

int64_t i2837;

int64_t i2836;

int64_t i2835;

int64_t i2834;

int64_t i2833;

int64_t i2832;

int64_t i2831;
i2831 =  (int64_t)0;
i2832 =  (int64_t)0;
i2833 =  (int64_t)0;
i2834 =  (int64_t)0;
for (uint32_t i2838 =  (int32_t)0; i2838 <  (int32_t)184; i2838++){
for (uint32_t i2837 =  (int32_t)0; i2837 <  (int32_t)1; i2837++){
for (uint32_t i2835 =  (int32_t)0; i2835 <  (int32_t)3; i2835++){
for (uint32_t i2836 =  (int32_t)0; i2836 <  (int32_t)3; i2836++){
Arr4DIdxRowM(tmp1206, (int32_t)3, (int32_t)3, (int32_t)1, (int32_t)184,i2835,i2836,i2837,i2838) = Arr4DIdxRowM(tmp66, (int32_t)184, (int32_t)1, (int32_t)3, (int32_t)3,i2831,i2832,i2833,i2834);
i2834 = (i2834 +  (int64_t)1);
if ((i2834 ==  (int64_t)3)) {
i2834 =  (int64_t)0;
i2833 = (i2833 +  (int64_t)1);
if ((i2833 ==  (int64_t)3)) {
i2833 =  (int64_t)0;
i2832 = (i2832 +  (int64_t)1);
if ((i2832 ==  (int64_t)1)) {
i2832 =  (int64_t)0;
i2831 = (i2831 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)184,  (int32_t)1,  (int32_t)3,  (int32_t)3, tmp66);

uint64_t* tmp1208 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1204,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184,  (int32_t)3,  (int32_t)3,  (int32_t)184,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)184, tmp1204, tmp1206, tmp1208);
ClearMemSecret4( (int32_t)3,  (int32_t)3,  (int32_t)1,  (int32_t)184, tmp1206);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1204);

uint64_t* tmp1211 = make_array<uint64_t>( (int32_t)1,  (int32_t)184,  (int32_t)14,  (int32_t)14);

int64_t i2846;

int64_t i2845;

int64_t i2844;

int64_t i2843;

int64_t i2842;

int64_t i2841;

int64_t i2840;

int64_t i2839;
i2839 =  (int64_t)0;
i2840 =  (int64_t)0;
i2841 =  (int64_t)0;
i2842 =  (int64_t)0;
for (uint32_t i2843 =  (int32_t)0; i2843 <  (int32_t)1; i2843++){
for (uint32_t i2845 =  (int32_t)0; i2845 <  (int32_t)14; i2845++){
for (uint32_t i2846 =  (int32_t)0; i2846 <  (int32_t)14; i2846++){
for (uint32_t i2844 =  (int32_t)0; i2844 <  (int32_t)184; i2844++){
Arr4DIdxRowM(tmp1211, (int32_t)1, (int32_t)184, (int32_t)14, (int32_t)14,i2843,i2844,i2845,i2846) = Arr4DIdxRowM(tmp1208, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2839,i2840,i2841,i2842);
i2842 = (i2842 +  (int64_t)1);
if ((i2842 ==  (int64_t)184)) {
i2842 =  (int64_t)0;
i2841 = (i2841 +  (int64_t)1);
if ((i2841 ==  (int64_t)14)) {
i2841 =  (int64_t)0;
i2840 = (i2840 +  (int64_t)1);
if ((i2840 ==  (int64_t)14)) {
i2840 =  (int64_t)0;
i2839 = (i2839 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1208);

uint64_t* tmp1213 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184);

int64_t i2854;

int64_t i2853;

int64_t i2852;

int64_t i2851;

int64_t i2850;

int64_t i2849;

int64_t i2848;

int64_t i2847;
i2847 =  (int64_t)0;
i2848 =  (int64_t)0;
i2849 =  (int64_t)0;
i2850 =  (int64_t)0;
for (uint32_t i2851 =  (int32_t)0; i2851 <  (int32_t)1; i2851++){
for (uint32_t i2854 =  (int32_t)0; i2854 <  (int32_t)184; i2854++){
for (uint32_t i2852 =  (int32_t)0; i2852 <  (int32_t)14; i2852++){
for (uint32_t i2853 =  (int32_t)0; i2853 <  (int32_t)14; i2853++){
Arr4DIdxRowM(tmp1213, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2851,i2852,i2853,i2854) = Arr4DIdxRowM(tmp1211, (int32_t)1, (int32_t)184, (int32_t)14, (int32_t)14,i2847,i2848,i2849,i2850);
i2850 = (i2850 +  (int64_t)1);
if ((i2850 ==  (int64_t)14)) {
i2850 =  (int64_t)0;
i2849 = (i2849 +  (int64_t)1);
if ((i2849 ==  (int64_t)14)) {
i2849 =  (int64_t)0;
i2848 = (i2848 +  (int64_t)1);
if ((i2848 ==  (int64_t)184)) {
i2848 =  (int64_t)0;
i2847 = (i2847 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)184,  (int32_t)14,  (int32_t)14, tmp1211);

uint64_t* tmp1215 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1213,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1213, tmp61, tmp62,  (int32_t)0,  (int32_t)0, tmp1215);
ClearMemSecret1( (int32_t)184, tmp61);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1213);
ClearMemSecret1( (int32_t)184, tmp62);

uint64_t* tmp1219 = make_array<uint64_t>( (int32_t)1,  (int32_t)184,  (int32_t)14,  (int32_t)14);

int64_t i2862;

int64_t i2861;

int64_t i2860;

int64_t i2859;

int64_t i2858;

int64_t i2857;

int64_t i2856;

int64_t i2855;
i2855 =  (int64_t)0;
i2856 =  (int64_t)0;
i2857 =  (int64_t)0;
i2858 =  (int64_t)0;
for (uint32_t i2859 =  (int32_t)0; i2859 <  (int32_t)1; i2859++){
for (uint32_t i2861 =  (int32_t)0; i2861 <  (int32_t)14; i2861++){
for (uint32_t i2862 =  (int32_t)0; i2862 <  (int32_t)14; i2862++){
for (uint32_t i2860 =  (int32_t)0; i2860 <  (int32_t)184; i2860++){
Arr4DIdxRowM(tmp1219, (int32_t)1, (int32_t)184, (int32_t)14, (int32_t)14,i2859,i2860,i2861,i2862) = Arr4DIdxRowM(tmp1215, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2855,i2856,i2857,i2858);
i2858 = (i2858 +  (int64_t)1);
if ((i2858 ==  (int64_t)184)) {
i2858 =  (int64_t)0;
i2857 = (i2857 +  (int64_t)1);
if ((i2857 ==  (int64_t)14)) {
i2857 =  (int64_t)0;
i2856 = (i2856 +  (int64_t)1);
if ((i2856 ==  (int64_t)14)) {
i2856 =  (int64_t)0;
i2855 = (i2855 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1215);

uint64_t* tmp1221 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184);

int64_t i2870;

int64_t i2869;

int64_t i2868;

int64_t i2867;

int64_t i2866;

int64_t i2865;

int64_t i2864;

int64_t i2863;
i2863 =  (int64_t)0;
i2864 =  (int64_t)0;
i2865 =  (int64_t)0;
i2866 =  (int64_t)0;
for (uint32_t i2867 =  (int32_t)0; i2867 <  (int32_t)1; i2867++){
for (uint32_t i2870 =  (int32_t)0; i2870 <  (int32_t)184; i2870++){
for (uint32_t i2868 =  (int32_t)0; i2868 <  (int32_t)14; i2868++){
for (uint32_t i2869 =  (int32_t)0; i2869 <  (int32_t)14; i2869++){
Arr4DIdxRowM(tmp1221, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2867,i2868,i2869,i2870) = Arr4DIdxRowM(tmp1219, (int32_t)1, (int32_t)184, (int32_t)14, (int32_t)14,i2863,i2864,i2865,i2866);
i2866 = (i2866 +  (int64_t)1);
if ((i2866 ==  (int64_t)14)) {
i2866 =  (int64_t)0;
i2865 = (i2865 +  (int64_t)1);
if ((i2865 ==  (int64_t)14)) {
i2865 =  (int64_t)0;
i2864 = (i2864 +  (int64_t)1);
if ((i2864 ==  (int64_t)184)) {
i2864 =  (int64_t)0;
i2863 = (i2863 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp1222 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184);
HardSigmoid4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1221, tmp1222,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1221);

uint64_t* tmp1224 = make_array<uint64_t>( (int32_t)1,  (int32_t)184,  (int32_t)14,  (int32_t)14);

int64_t i2878;

int64_t i2877;

int64_t i2876;

int64_t i2875;

int64_t i2874;

int64_t i2873;

int64_t i2872;

int64_t i2871;
i2871 =  (int64_t)0;
i2872 =  (int64_t)0;
i2873 =  (int64_t)0;
i2874 =  (int64_t)0;
for (uint32_t i2875 =  (int32_t)0; i2875 <  (int32_t)1; i2875++){
for (uint32_t i2877 =  (int32_t)0; i2877 <  (int32_t)14; i2877++){
for (uint32_t i2878 =  (int32_t)0; i2878 <  (int32_t)14; i2878++){
for (uint32_t i2876 =  (int32_t)0; i2876 <  (int32_t)184; i2876++){
Arr4DIdxRowM(tmp1224, (int32_t)1, (int32_t)184, (int32_t)14, (int32_t)14,i2875,i2876,i2877,i2878) = Arr4DIdxRowM(tmp1222, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2871,i2872,i2873,i2874);
i2874 = (i2874 +  (int64_t)1);
if ((i2874 ==  (int64_t)184)) {
i2874 =  (int64_t)0;
i2873 = (i2873 +  (int64_t)1);
if ((i2873 ==  (int64_t)14)) {
i2873 =  (int64_t)0;
i2872 = (i2872 +  (int64_t)1);
if ((i2872 ==  (int64_t)14)) {
i2872 =  (int64_t)0;
i2871 = (i2871 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1222);

uint64_t* tmp1226 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184);

int64_t i2886;

int64_t i2885;

int64_t i2884;

int64_t i2883;

int64_t i2882;

int64_t i2881;

int64_t i2880;

int64_t i2879;
i2879 =  (int64_t)0;
i2880 =  (int64_t)0;
i2881 =  (int64_t)0;
i2882 =  (int64_t)0;
for (uint32_t i2883 =  (int32_t)0; i2883 <  (int32_t)1; i2883++){
for (uint32_t i2886 =  (int32_t)0; i2886 <  (int32_t)184; i2886++){
for (uint32_t i2884 =  (int32_t)0; i2884 <  (int32_t)14; i2884++){
for (uint32_t i2885 =  (int32_t)0; i2885 <  (int32_t)14; i2885++){
Arr4DIdxRowM(tmp1226, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2883,i2884,i2885,i2886) = Arr4DIdxRowM(tmp1219, (int32_t)1, (int32_t)184, (int32_t)14, (int32_t)14,i2879,i2880,i2881,i2882);
i2882 = (i2882 +  (int64_t)1);
if ((i2882 ==  (int64_t)14)) {
i2882 =  (int64_t)0;
i2881 = (i2881 +  (int64_t)1);
if ((i2881 ==  (int64_t)14)) {
i2881 =  (int64_t)0;
i2880 = (i2880 +  (int64_t)1);
if ((i2880 ==  (int64_t)184)) {
i2880 =  (int64_t)0;
i2879 = (i2879 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)184,  (int32_t)14,  (int32_t)14, tmp1219);

uint64_t* tmp1228 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184);

int64_t i2894;

int64_t i2893;

int64_t i2892;

int64_t i2891;

int64_t i2890;

int64_t i2889;

int64_t i2888;

int64_t i2887;
i2887 =  (int64_t)0;
i2888 =  (int64_t)0;
i2889 =  (int64_t)0;
i2890 =  (int64_t)0;
for (uint32_t i2891 =  (int32_t)0; i2891 <  (int32_t)1; i2891++){
for (uint32_t i2894 =  (int32_t)0; i2894 <  (int32_t)184; i2894++){
for (uint32_t i2892 =  (int32_t)0; i2892 <  (int32_t)14; i2892++){
for (uint32_t i2893 =  (int32_t)0; i2893 <  (int32_t)14; i2893++){
Arr4DIdxRowM(tmp1228, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2891,i2892,i2893,i2894) = Arr4DIdxRowM(tmp1224, (int32_t)1, (int32_t)184, (int32_t)14, (int32_t)14,i2887,i2888,i2889,i2890);
i2890 = (i2890 +  (int64_t)1);
if ((i2890 ==  (int64_t)14)) {
i2890 =  (int64_t)0;
i2889 = (i2889 +  (int64_t)1);
if ((i2889 ==  (int64_t)14)) {
i2889 =  (int64_t)0;
i2888 = (i2888 +  (int64_t)1);
if ((i2888 ==  (int64_t)184)) {
i2888 =  (int64_t)0;
i2887 = (i2887 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)184,  (int32_t)14,  (int32_t)14, tmp1224);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1226,  (int32_t)23);

uint64_t* tmp1230 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184);

uint64_t* tmp1231 = make_array<uint64_t>( (int32_t)36064);

uint64_t* tmp1232 = make_array<uint64_t>( (int32_t)36064);

uint64_t* tmp1233 = make_array<uint64_t>( (int32_t)36064);

int32_t tmp1234;
for (uint32_t i2895 =  (int32_t)0; i2895 <  (int32_t)1; i2895++){
for (uint32_t i2896 =  (int32_t)0; i2896 <  (int32_t)14; i2896++){
for (uint32_t i2897 =  (int32_t)0; i2897 <  (int32_t)14; i2897++){
for (uint32_t i2898 =  (int32_t)0; i2898 <  (int32_t)184; i2898++){
tmp1234 = (((( (int32_t)0 + (i2895 *  (int32_t)36064)) + (i2896 *  (int32_t)2576)) + (i2897 *  (int32_t)184)) + (i2898 *  (int32_t)1));
Arr1DIdxRowM(tmp1231, (int32_t)36064,tmp1234) = Arr4DIdxRowM(tmp1226, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2895,i2896,i2897,i2898);
Arr1DIdxRowM(tmp1232, (int32_t)36064,tmp1234) = Arr4DIdxRowM(tmp1228, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2895,i2896,i2897,i2898);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)36064, tmp1231, tmp1232, tmp1233);
ClearMemSecret1( (int32_t)36064, tmp1231);
ClearMemSecret1( (int32_t)36064, tmp1232);
for (uint32_t i2895 =  (int32_t)0; i2895 <  (int32_t)1; i2895++){
for (uint32_t i2896 =  (int32_t)0; i2896 <  (int32_t)14; i2896++){
for (uint32_t i2897 =  (int32_t)0; i2897 <  (int32_t)14; i2897++){
for (uint32_t i2898 =  (int32_t)0; i2898 <  (int32_t)184; i2898++){
tmp1234 = (((( (int32_t)0 + (i2895 *  (int32_t)36064)) + (i2896 *  (int32_t)2576)) + (i2897 *  (int32_t)184)) + (i2898 *  (int32_t)1));
Arr4DIdxRowM(tmp1230, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2895,i2896,i2897,i2898) = Arr1DIdxRowM(tmp1233, (int32_t)36064,tmp1234);
}
}
}
}
ClearMemSecret1( (int32_t)36064, tmp1233);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1228);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1226);

uint64_t* tmp1237 = make_array<uint64_t>( (int32_t)1,  (int32_t)184,  (int32_t)14,  (int32_t)14);

int64_t i2906;

int64_t i2905;

int64_t i2904;

int64_t i2903;

int64_t i2902;

int64_t i2901;

int64_t i2900;

int64_t i2899;
i2899 =  (int64_t)0;
i2900 =  (int64_t)0;
i2901 =  (int64_t)0;
i2902 =  (int64_t)0;
for (uint32_t i2903 =  (int32_t)0; i2903 <  (int32_t)1; i2903++){
for (uint32_t i2905 =  (int32_t)0; i2905 <  (int32_t)14; i2905++){
for (uint32_t i2906 =  (int32_t)0; i2906 <  (int32_t)14; i2906++){
for (uint32_t i2904 =  (int32_t)0; i2904 <  (int32_t)184; i2904++){
Arr4DIdxRowM(tmp1237, (int32_t)1, (int32_t)184, (int32_t)14, (int32_t)14,i2903,i2904,i2905,i2906) = Arr4DIdxRowM(tmp1230, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2899,i2900,i2901,i2902);
i2902 = (i2902 +  (int64_t)1);
if ((i2902 ==  (int64_t)184)) {
i2902 =  (int64_t)0;
i2901 = (i2901 +  (int64_t)1);
if ((i2901 ==  (int64_t)14)) {
i2901 =  (int64_t)0;
i2900 = (i2900 +  (int64_t)1);
if ((i2900 ==  (int64_t)14)) {
i2900 =  (int64_t)0;
i2899 = (i2899 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1230);

uint64_t* tmp1239 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184);

int64_t i2914;

int64_t i2913;

int64_t i2912;

int64_t i2911;

int64_t i2910;

int64_t i2909;

int64_t i2908;

int64_t i2907;
i2907 =  (int64_t)0;
i2908 =  (int64_t)0;
i2909 =  (int64_t)0;
i2910 =  (int64_t)0;
for (uint32_t i2911 =  (int32_t)0; i2911 <  (int32_t)1; i2911++){
for (uint32_t i2914 =  (int32_t)0; i2914 <  (int32_t)184; i2914++){
for (uint32_t i2912 =  (int32_t)0; i2912 <  (int32_t)14; i2912++){
for (uint32_t i2913 =  (int32_t)0; i2913 <  (int32_t)14; i2913++){
Arr4DIdxRowM(tmp1239, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)184,i2911,i2912,i2913,i2914) = Arr4DIdxRowM(tmp1237, (int32_t)1, (int32_t)184, (int32_t)14, (int32_t)14,i2907,i2908,i2909,i2910);
i2910 = (i2910 +  (int64_t)1);
if ((i2910 ==  (int64_t)14)) {
i2910 =  (int64_t)0;
i2909 = (i2909 +  (int64_t)1);
if ((i2909 ==  (int64_t)14)) {
i2909 =  (int64_t)0;
i2908 = (i2908 +  (int64_t)1);
if ((i2908 ==  (int64_t)184)) {
i2908 =  (int64_t)0;
i2907 = (i2907 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)184,  (int32_t)14,  (int32_t)14, tmp1237);

uint64_t* tmp1241 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)184,  (int32_t)80);

int64_t i2922;

int64_t i2921;

int64_t i2920;

int64_t i2919;

int64_t i2918;

int64_t i2917;

int64_t i2916;

int64_t i2915;
i2915 =  (int64_t)0;
i2916 =  (int64_t)0;
i2917 =  (int64_t)0;
i2918 =  (int64_t)0;
for (uint32_t i2922 =  (int32_t)0; i2922 <  (int32_t)80; i2922++){
for (uint32_t i2921 =  (int32_t)0; i2921 <  (int32_t)184; i2921++){
for (uint32_t i2919 =  (int32_t)0; i2919 <  (int32_t)1; i2919++){
for (uint32_t i2920 =  (int32_t)0; i2920 <  (int32_t)1; i2920++){
Arr4DIdxRowM(tmp1241, (int32_t)1, (int32_t)1, (int32_t)184, (int32_t)80,i2919,i2920,i2921,i2922) = Arr4DIdxRowM(tmp67, (int32_t)80, (int32_t)184, (int32_t)1, (int32_t)1,i2915,i2916,i2917,i2918);
i2918 = (i2918 +  (int64_t)1);
if ((i2918 ==  (int64_t)1)) {
i2918 =  (int64_t)0;
i2917 = (i2917 +  (int64_t)1);
if ((i2917 ==  (int64_t)1)) {
i2917 =  (int64_t)0;
i2916 = (i2916 +  (int64_t)1);
if ((i2916 ==  (int64_t)184)) {
i2916 =  (int64_t)0;
i2915 = (i2915 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)80,  (int32_t)184,  (int32_t)1,  (int32_t)1, tmp67);

uint64_t* tmp1243 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1239,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184,  (int32_t)1,  (int32_t)1,  (int32_t)80,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp1239, tmp1241, tmp1243);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)184, tmp1239);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)184,  (int32_t)80, tmp1241);

uint64_t* tmp1246 = make_array<uint64_t>( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14);

int64_t i2930;

int64_t i2929;

int64_t i2928;

int64_t i2927;

int64_t i2926;

int64_t i2925;

int64_t i2924;

int64_t i2923;
i2923 =  (int64_t)0;
i2924 =  (int64_t)0;
i2925 =  (int64_t)0;
i2926 =  (int64_t)0;
for (uint32_t i2927 =  (int32_t)0; i2927 <  (int32_t)1; i2927++){
for (uint32_t i2929 =  (int32_t)0; i2929 <  (int32_t)14; i2929++){
for (uint32_t i2930 =  (int32_t)0; i2930 <  (int32_t)14; i2930++){
for (uint32_t i2928 =  (int32_t)0; i2928 <  (int32_t)80; i2928++){
Arr4DIdxRowM(tmp1246, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2927,i2928,i2929,i2930) = Arr4DIdxRowM(tmp1243, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2923,i2924,i2925,i2926);
i2926 = (i2926 +  (int64_t)1);
if ((i2926 ==  (int64_t)80)) {
i2926 =  (int64_t)0;
i2925 = (i2925 +  (int64_t)1);
if ((i2925 ==  (int64_t)14)) {
i2925 =  (int64_t)0;
i2924 = (i2924 +  (int64_t)1);
if ((i2924 ==  (int64_t)14)) {
i2924 =  (int64_t)0;
i2923 = (i2923 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1243);

uint64_t* tmp1248 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);

int64_t i2938;

int64_t i2937;

int64_t i2936;

int64_t i2935;

int64_t i2934;

int64_t i2933;

int64_t i2932;

int64_t i2931;
i2931 =  (int64_t)0;
i2932 =  (int64_t)0;
i2933 =  (int64_t)0;
i2934 =  (int64_t)0;
for (uint32_t i2935 =  (int32_t)0; i2935 <  (int32_t)1; i2935++){
for (uint32_t i2938 =  (int32_t)0; i2938 <  (int32_t)80; i2938++){
for (uint32_t i2936 =  (int32_t)0; i2936 <  (int32_t)14; i2936++){
for (uint32_t i2937 =  (int32_t)0; i2937 <  (int32_t)14; i2937++){
Arr4DIdxRowM(tmp1248, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2935,i2936,i2937,i2938) = Arr4DIdxRowM(tmp1246, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2931,i2932,i2933,i2934);
i2934 = (i2934 +  (int64_t)1);
if ((i2934 ==  (int64_t)14)) {
i2934 =  (int64_t)0;
i2933 = (i2933 +  (int64_t)1);
if ((i2933 ==  (int64_t)14)) {
i2933 =  (int64_t)0;
i2932 = (i2932 +  (int64_t)1);
if ((i2932 ==  (int64_t)80)) {
i2932 =  (int64_t)0;
i2931 = (i2931 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14, tmp1246);

uint64_t* tmp1250 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1248,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1248, tmp51, tmp52,  (int32_t)0,  (int32_t)0, tmp1250);
ClearMemSecret1( (int32_t)80, tmp52);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1248);
ClearMemSecret1( (int32_t)80, tmp51);

uint64_t* tmp1254 = make_array<uint64_t>( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14);

int64_t i2946;

int64_t i2945;

int64_t i2944;

int64_t i2943;

int64_t i2942;

int64_t i2941;

int64_t i2940;

int64_t i2939;
i2939 =  (int64_t)0;
i2940 =  (int64_t)0;
i2941 =  (int64_t)0;
i2942 =  (int64_t)0;
for (uint32_t i2943 =  (int32_t)0; i2943 <  (int32_t)1; i2943++){
for (uint32_t i2945 =  (int32_t)0; i2945 <  (int32_t)14; i2945++){
for (uint32_t i2946 =  (int32_t)0; i2946 <  (int32_t)14; i2946++){
for (uint32_t i2944 =  (int32_t)0; i2944 <  (int32_t)80; i2944++){
Arr4DIdxRowM(tmp1254, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2943,i2944,i2945,i2946) = Arr4DIdxRowM(tmp1250, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2939,i2940,i2941,i2942);
i2942 = (i2942 +  (int64_t)1);
if ((i2942 ==  (int64_t)80)) {
i2942 =  (int64_t)0;
i2941 = (i2941 +  (int64_t)1);
if ((i2941 ==  (int64_t)14)) {
i2941 =  (int64_t)0;
i2940 = (i2940 +  (int64_t)1);
if ((i2940 ==  (int64_t)14)) {
i2940 =  (int64_t)0;
i2939 = (i2939 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1250);

uint64_t* tmp1256 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);

int64_t i2954;

int64_t i2953;

int64_t i2952;

int64_t i2951;

int64_t i2950;

int64_t i2949;

int64_t i2948;

int64_t i2947;
i2947 =  (int64_t)0;
i2948 =  (int64_t)0;
i2949 =  (int64_t)0;
i2950 =  (int64_t)0;
for (uint32_t i2951 =  (int32_t)0; i2951 <  (int32_t)1; i2951++){
for (uint32_t i2954 =  (int32_t)0; i2954 <  (int32_t)80; i2954++){
for (uint32_t i2952 =  (int32_t)0; i2952 <  (int32_t)14; i2952++){
for (uint32_t i2953 =  (int32_t)0; i2953 <  (int32_t)14; i2953++){
Arr4DIdxRowM(tmp1256, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2951,i2952,i2953,i2954) = Arr4DIdxRowM(tmp1254, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2947,i2948,i2949,i2950);
i2950 = (i2950 +  (int64_t)1);
if ((i2950 ==  (int64_t)14)) {
i2950 =  (int64_t)0;
i2949 = (i2949 +  (int64_t)1);
if ((i2949 ==  (int64_t)14)) {
i2949 =  (int64_t)0;
i2948 = (i2948 +  (int64_t)1);
if ((i2948 ==  (int64_t)80)) {
i2948 =  (int64_t)0;
i2947 = (i2947 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14, tmp1254);

uint64_t* tmp1258 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);

int64_t i2962;

int64_t i2961;

int64_t i2960;

int64_t i2959;

int64_t i2958;

int64_t i2957;

int64_t i2956;

int64_t i2955;
i2955 =  (int64_t)0;
i2956 =  (int64_t)0;
i2957 =  (int64_t)0;
i2958 =  (int64_t)0;
for (uint32_t i2959 =  (int32_t)0; i2959 <  (int32_t)1; i2959++){
for (uint32_t i2962 =  (int32_t)0; i2962 <  (int32_t)80; i2962++){
for (uint32_t i2960 =  (int32_t)0; i2960 <  (int32_t)14; i2960++){
for (uint32_t i2961 =  (int32_t)0; i2961 <  (int32_t)14; i2961++){
Arr4DIdxRowM(tmp1258, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2959,i2960,i2961,i2962) = Arr4DIdxRowM(tmp1170, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2955,i2956,i2957,i2958);
i2958 = (i2958 +  (int64_t)1);
if ((i2958 ==  (int64_t)14)) {
i2958 =  (int64_t)0;
i2957 = (i2957 +  (int64_t)1);
if ((i2957 ==  (int64_t)14)) {
i2957 =  (int64_t)0;
i2956 = (i2956 +  (int64_t)1);
if ((i2956 ==  (int64_t)80)) {
i2956 =  (int64_t)0;
i2955 = (i2955 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14, tmp1170);

uint64_t* tmp1260 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);
for (uint32_t i0 =  (int32_t)0; i0 <  (int32_t)1; i0++){
for (uint32_t i1 =  (int32_t)0; i1 <  (int32_t)14; i1++){
for (uint32_t i2 =  (int32_t)0; i2 <  (int32_t)14; i2++){
for (uint32_t i3 =  (int32_t)0; i3 <  (int32_t)80; i3++){
Arr4DIdxRowM(tmp1260, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i0,i1,i2,i3) = SecretAdd(Arr4DIdxRowM(tmp1256, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i0,i1,i2,i3), Arr4DIdxRowM(tmp1258, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i0,i1,i2,i3));
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1258);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1256);

uint64_t* tmp1263 = make_array<uint64_t>( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14);

int64_t i2970;

int64_t i2969;

int64_t i2968;

int64_t i2967;

int64_t i2966;

int64_t i2965;

int64_t i2964;

int64_t i2963;
i2963 =  (int64_t)0;
i2964 =  (int64_t)0;
i2965 =  (int64_t)0;
i2966 =  (int64_t)0;
for (uint32_t i2967 =  (int32_t)0; i2967 <  (int32_t)1; i2967++){
for (uint32_t i2969 =  (int32_t)0; i2969 <  (int32_t)14; i2969++){
for (uint32_t i2970 =  (int32_t)0; i2970 <  (int32_t)14; i2970++){
for (uint32_t i2968 =  (int32_t)0; i2968 <  (int32_t)80; i2968++){
Arr4DIdxRowM(tmp1263, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2967,i2968,i2969,i2970) = Arr4DIdxRowM(tmp1260, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2963,i2964,i2965,i2966);
i2966 = (i2966 +  (int64_t)1);
if ((i2966 ==  (int64_t)80)) {
i2966 =  (int64_t)0;
i2965 = (i2965 +  (int64_t)1);
if ((i2965 ==  (int64_t)14)) {
i2965 =  (int64_t)0;
i2964 = (i2964 +  (int64_t)1);
if ((i2964 ==  (int64_t)14)) {
i2964 =  (int64_t)0;
i2963 = (i2963 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1260);

uint64_t* tmp1265 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);

int64_t i2978;

int64_t i2977;

int64_t i2976;

int64_t i2975;

int64_t i2974;

int64_t i2973;

int64_t i2972;

int64_t i2971;
i2971 =  (int64_t)0;
i2972 =  (int64_t)0;
i2973 =  (int64_t)0;
i2974 =  (int64_t)0;
for (uint32_t i2975 =  (int32_t)0; i2975 <  (int32_t)1; i2975++){
for (uint32_t i2978 =  (int32_t)0; i2978 <  (int32_t)80; i2978++){
for (uint32_t i2976 =  (int32_t)0; i2976 <  (int32_t)14; i2976++){
for (uint32_t i2977 =  (int32_t)0; i2977 <  (int32_t)14; i2977++){
Arr4DIdxRowM(tmp1265, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2975,i2976,i2977,i2978) = Arr4DIdxRowM(tmp1263, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2971,i2972,i2973,i2974);
i2974 = (i2974 +  (int64_t)1);
if ((i2974 ==  (int64_t)14)) {
i2974 =  (int64_t)0;
i2973 = (i2973 +  (int64_t)1);
if ((i2973 ==  (int64_t)14)) {
i2973 =  (int64_t)0;
i2972 = (i2972 +  (int64_t)1);
if ((i2972 ==  (int64_t)80)) {
i2972 =  (int64_t)0;
i2971 = (i2971 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp1266 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);
HardSigmoid4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1265, tmp1266,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1265);

uint64_t* tmp1268 = make_array<uint64_t>( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14);

int64_t i2986;

int64_t i2985;

int64_t i2984;

int64_t i2983;

int64_t i2982;

int64_t i2981;

int64_t i2980;

int64_t i2979;
i2979 =  (int64_t)0;
i2980 =  (int64_t)0;
i2981 =  (int64_t)0;
i2982 =  (int64_t)0;
for (uint32_t i2983 =  (int32_t)0; i2983 <  (int32_t)1; i2983++){
for (uint32_t i2985 =  (int32_t)0; i2985 <  (int32_t)14; i2985++){
for (uint32_t i2986 =  (int32_t)0; i2986 <  (int32_t)14; i2986++){
for (uint32_t i2984 =  (int32_t)0; i2984 <  (int32_t)80; i2984++){
Arr4DIdxRowM(tmp1268, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2983,i2984,i2985,i2986) = Arr4DIdxRowM(tmp1266, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2979,i2980,i2981,i2982);
i2982 = (i2982 +  (int64_t)1);
if ((i2982 ==  (int64_t)80)) {
i2982 =  (int64_t)0;
i2981 = (i2981 +  (int64_t)1);
if ((i2981 ==  (int64_t)14)) {
i2981 =  (int64_t)0;
i2980 = (i2980 +  (int64_t)1);
if ((i2980 ==  (int64_t)14)) {
i2980 =  (int64_t)0;
i2979 = (i2979 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1266);

uint64_t* tmp1270 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);

int64_t i2994;

int64_t i2993;

int64_t i2992;

int64_t i2991;

int64_t i2990;

int64_t i2989;

int64_t i2988;

int64_t i2987;
i2987 =  (int64_t)0;
i2988 =  (int64_t)0;
i2989 =  (int64_t)0;
i2990 =  (int64_t)0;
for (uint32_t i2991 =  (int32_t)0; i2991 <  (int32_t)1; i2991++){
for (uint32_t i2994 =  (int32_t)0; i2994 <  (int32_t)80; i2994++){
for (uint32_t i2992 =  (int32_t)0; i2992 <  (int32_t)14; i2992++){
for (uint32_t i2993 =  (int32_t)0; i2993 <  (int32_t)14; i2993++){
Arr4DIdxRowM(tmp1270, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2991,i2992,i2993,i2994) = Arr4DIdxRowM(tmp1263, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2987,i2988,i2989,i2990);
i2990 = (i2990 +  (int64_t)1);
if ((i2990 ==  (int64_t)14)) {
i2990 =  (int64_t)0;
i2989 = (i2989 +  (int64_t)1);
if ((i2989 ==  (int64_t)14)) {
i2989 =  (int64_t)0;
i2988 = (i2988 +  (int64_t)1);
if ((i2988 ==  (int64_t)80)) {
i2988 =  (int64_t)0;
i2987 = (i2987 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14, tmp1263);

uint64_t* tmp1272 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);

int64_t i3002;

int64_t i3001;

int64_t i3000;

int64_t i2999;

int64_t i2998;

int64_t i2997;

int64_t i2996;

int64_t i2995;
i2995 =  (int64_t)0;
i2996 =  (int64_t)0;
i2997 =  (int64_t)0;
i2998 =  (int64_t)0;
for (uint32_t i2999 =  (int32_t)0; i2999 <  (int32_t)1; i2999++){
for (uint32_t i3002 =  (int32_t)0; i3002 <  (int32_t)80; i3002++){
for (uint32_t i3000 =  (int32_t)0; i3000 <  (int32_t)14; i3000++){
for (uint32_t i3001 =  (int32_t)0; i3001 <  (int32_t)14; i3001++){
Arr4DIdxRowM(tmp1272, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i2999,i3000,i3001,i3002) = Arr4DIdxRowM(tmp1268, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i2995,i2996,i2997,i2998);
i2998 = (i2998 +  (int64_t)1);
if ((i2998 ==  (int64_t)14)) {
i2998 =  (int64_t)0;
i2997 = (i2997 +  (int64_t)1);
if ((i2997 ==  (int64_t)14)) {
i2997 =  (int64_t)0;
i2996 = (i2996 +  (int64_t)1);
if ((i2996 ==  (int64_t)80)) {
i2996 =  (int64_t)0;
i2995 = (i2995 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14, tmp1268);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1270,  (int32_t)23);

uint64_t* tmp1274 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);

uint64_t* tmp1275 = make_array<uint64_t>( (int32_t)15680);

uint64_t* tmp1276 = make_array<uint64_t>( (int32_t)15680);

uint64_t* tmp1277 = make_array<uint64_t>( (int32_t)15680);

int32_t tmp1278;
for (uint32_t i3003 =  (int32_t)0; i3003 <  (int32_t)1; i3003++){
for (uint32_t i3004 =  (int32_t)0; i3004 <  (int32_t)14; i3004++){
for (uint32_t i3005 =  (int32_t)0; i3005 <  (int32_t)14; i3005++){
for (uint32_t i3006 =  (int32_t)0; i3006 <  (int32_t)80; i3006++){
tmp1278 = (((( (int32_t)0 + (i3003 *  (int32_t)15680)) + (i3004 *  (int32_t)1120)) + (i3005 *  (int32_t)80)) + (i3006 *  (int32_t)1));
Arr1DIdxRowM(tmp1275, (int32_t)15680,tmp1278) = Arr4DIdxRowM(tmp1270, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i3003,i3004,i3005,i3006);
Arr1DIdxRowM(tmp1276, (int32_t)15680,tmp1278) = Arr4DIdxRowM(tmp1272, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i3003,i3004,i3005,i3006);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)15680, tmp1275, tmp1276, tmp1277);
ClearMemSecret1( (int32_t)15680, tmp1275);
ClearMemSecret1( (int32_t)15680, tmp1276);
for (uint32_t i3003 =  (int32_t)0; i3003 <  (int32_t)1; i3003++){
for (uint32_t i3004 =  (int32_t)0; i3004 <  (int32_t)14; i3004++){
for (uint32_t i3005 =  (int32_t)0; i3005 <  (int32_t)14; i3005++){
for (uint32_t i3006 =  (int32_t)0; i3006 <  (int32_t)80; i3006++){
tmp1278 = (((( (int32_t)0 + (i3003 *  (int32_t)15680)) + (i3004 *  (int32_t)1120)) + (i3005 *  (int32_t)80)) + (i3006 *  (int32_t)1));
Arr4DIdxRowM(tmp1274, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i3003,i3004,i3005,i3006) = Arr1DIdxRowM(tmp1277, (int32_t)15680,tmp1278);
}
}
}
}
ClearMemSecret1( (int32_t)15680, tmp1277);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1272);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1270);

uint64_t* tmp1281 = make_array<uint64_t>( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14);

int64_t i3014;

int64_t i3013;

int64_t i3012;

int64_t i3011;

int64_t i3010;

int64_t i3009;

int64_t i3008;

int64_t i3007;
i3007 =  (int64_t)0;
i3008 =  (int64_t)0;
i3009 =  (int64_t)0;
i3010 =  (int64_t)0;
for (uint32_t i3011 =  (int32_t)0; i3011 <  (int32_t)1; i3011++){
for (uint32_t i3013 =  (int32_t)0; i3013 <  (int32_t)14; i3013++){
for (uint32_t i3014 =  (int32_t)0; i3014 <  (int32_t)14; i3014++){
for (uint32_t i3012 =  (int32_t)0; i3012 <  (int32_t)80; i3012++){
Arr4DIdxRowM(tmp1281, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i3011,i3012,i3013,i3014) = Arr4DIdxRowM(tmp1274, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i3007,i3008,i3009,i3010);
i3010 = (i3010 +  (int64_t)1);
if ((i3010 ==  (int64_t)80)) {
i3010 =  (int64_t)0;
i3009 = (i3009 +  (int64_t)1);
if ((i3009 ==  (int64_t)14)) {
i3009 =  (int64_t)0;
i3008 = (i3008 +  (int64_t)1);
if ((i3008 ==  (int64_t)14)) {
i3008 =  (int64_t)0;
i3007 = (i3007 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1274);

uint64_t* tmp1283 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);

int64_t i3022;

int64_t i3021;

int64_t i3020;

int64_t i3019;

int64_t i3018;

int64_t i3017;

int64_t i3016;

int64_t i3015;
i3015 =  (int64_t)0;
i3016 =  (int64_t)0;
i3017 =  (int64_t)0;
i3018 =  (int64_t)0;
for (uint32_t i3019 =  (int32_t)0; i3019 <  (int32_t)1; i3019++){
for (uint32_t i3022 =  (int32_t)0; i3022 <  (int32_t)80; i3022++){
for (uint32_t i3020 =  (int32_t)0; i3020 <  (int32_t)14; i3020++){
for (uint32_t i3021 =  (int32_t)0; i3021 <  (int32_t)14; i3021++){
Arr4DIdxRowM(tmp1283, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i3019,i3020,i3021,i3022) = Arr4DIdxRowM(tmp1281, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i3015,i3016,i3017,i3018);
i3018 = (i3018 +  (int64_t)1);
if ((i3018 ==  (int64_t)14)) {
i3018 =  (int64_t)0;
i3017 = (i3017 +  (int64_t)1);
if ((i3017 ==  (int64_t)14)) {
i3017 =  (int64_t)0;
i3016 = (i3016 +  (int64_t)1);
if ((i3016 ==  (int64_t)80)) {
i3016 =  (int64_t)0;
i3015 = (i3015 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp1284 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)80,  (int32_t)480);

int64_t i3030;

int64_t i3029;

int64_t i3028;

int64_t i3027;

int64_t i3026;

int64_t i3025;

int64_t i3024;

int64_t i3023;
i3023 =  (int64_t)0;
i3024 =  (int64_t)0;
i3025 =  (int64_t)0;
i3026 =  (int64_t)0;
for (uint32_t i3030 =  (int32_t)0; i3030 <  (int32_t)480; i3030++){
for (uint32_t i3029 =  (int32_t)0; i3029 <  (int32_t)80; i3029++){
for (uint32_t i3027 =  (int32_t)0; i3027 <  (int32_t)1; i3027++){
for (uint32_t i3028 =  (int32_t)0; i3028 <  (int32_t)1; i3028++){
Arr4DIdxRowM(tmp1284, (int32_t)1, (int32_t)1, (int32_t)80, (int32_t)480,i3027,i3028,i3029,i3030) = Arr4DIdxRowM(tmp68, (int32_t)480, (int32_t)80, (int32_t)1, (int32_t)1,i3023,i3024,i3025,i3026);
i3026 = (i3026 +  (int64_t)1);
if ((i3026 ==  (int64_t)1)) {
i3026 =  (int64_t)0;
i3025 = (i3025 +  (int64_t)1);
if ((i3025 ==  (int64_t)1)) {
i3025 =  (int64_t)0;
i3024 = (i3024 +  (int64_t)1);
if ((i3024 ==  (int64_t)80)) {
i3024 =  (int64_t)0;
i3023 = (i3023 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)480,  (int32_t)80,  (int32_t)1,  (int32_t)1, tmp68);

uint64_t* tmp1286 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1283,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80,  (int32_t)1,  (int32_t)1,  (int32_t)480,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp1283, tmp1284, tmp1286);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)80,  (int32_t)480, tmp1284);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1283);

uint64_t* tmp1289 = make_array<uint64_t>( (int32_t)1,  (int32_t)480,  (int32_t)14,  (int32_t)14);

int64_t i3038;

int64_t i3037;

int64_t i3036;

int64_t i3035;

int64_t i3034;

int64_t i3033;

int64_t i3032;

int64_t i3031;
i3031 =  (int64_t)0;
i3032 =  (int64_t)0;
i3033 =  (int64_t)0;
i3034 =  (int64_t)0;
for (uint32_t i3035 =  (int32_t)0; i3035 <  (int32_t)1; i3035++){
for (uint32_t i3037 =  (int32_t)0; i3037 <  (int32_t)14; i3037++){
for (uint32_t i3038 =  (int32_t)0; i3038 <  (int32_t)14; i3038++){
for (uint32_t i3036 =  (int32_t)0; i3036 <  (int32_t)480; i3036++){
Arr4DIdxRowM(tmp1289, (int32_t)1, (int32_t)480, (int32_t)14, (int32_t)14,i3035,i3036,i3037,i3038) = Arr4DIdxRowM(tmp1286, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)480,i3031,i3032,i3033,i3034);
i3034 = (i3034 +  (int64_t)1);
if ((i3034 ==  (int64_t)480)) {
i3034 =  (int64_t)0;
i3033 = (i3033 +  (int64_t)1);
if ((i3033 ==  (int64_t)14)) {
i3033 =  (int64_t)0;
i3032 = (i3032 +  (int64_t)1);
if ((i3032 ==  (int64_t)14)) {
i3032 =  (int64_t)0;
i3031 = (i3031 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480, tmp1286);

uint64_t* tmp1291 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480);

int64_t i3046;

int64_t i3045;

int64_t i3044;

int64_t i3043;

int64_t i3042;

int64_t i3041;

int64_t i3040;

int64_t i3039;
i3039 =  (int64_t)0;
i3040 =  (int64_t)0;
i3041 =  (int64_t)0;
i3042 =  (int64_t)0;
for (uint32_t i3043 =  (int32_t)0; i3043 <  (int32_t)1; i3043++){
for (uint32_t i3046 =  (int32_t)0; i3046 <  (int32_t)480; i3046++){
for (uint32_t i3044 =  (int32_t)0; i3044 <  (int32_t)14; i3044++){
for (uint32_t i3045 =  (int32_t)0; i3045 <  (int32_t)14; i3045++){
Arr4DIdxRowM(tmp1291, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)480,i3043,i3044,i3045,i3046) = Arr4DIdxRowM(tmp1289, (int32_t)1, (int32_t)480, (int32_t)14, (int32_t)14,i3039,i3040,i3041,i3042);
i3042 = (i3042 +  (int64_t)1);
if ((i3042 ==  (int64_t)14)) {
i3042 =  (int64_t)0;
i3041 = (i3041 +  (int64_t)1);
if ((i3041 ==  (int64_t)14)) {
i3041 =  (int64_t)0;
i3040 = (i3040 +  (int64_t)1);
if ((i3040 ==  (int64_t)480)) {
i3040 =  (int64_t)0;
i3039 = (i3039 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)480,  (int32_t)14,  (int32_t)14, tmp1289);

uint64_t* tmp1293 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480, tmp1291,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480, tmp1291, tmp69, tmp70,  (int32_t)0,  (int32_t)23, tmp1293);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480, tmp1291);

uint64_t* tmp1295 = make_array<uint64_t>( (int32_t)1,  (int32_t)480,  (int32_t)14,  (int32_t)14);

int64_t i3054;

int64_t i3053;

int64_t i3052;

int64_t i3051;

int64_t i3050;

int64_t i3049;

int64_t i3048;

int64_t i3047;
i3047 =  (int64_t)0;
i3048 =  (int64_t)0;
i3049 =  (int64_t)0;
i3050 =  (int64_t)0;
for (uint32_t i3051 =  (int32_t)0; i3051 <  (int32_t)1; i3051++){
for (uint32_t i3053 =  (int32_t)0; i3053 <  (int32_t)14; i3053++){
for (uint32_t i3054 =  (int32_t)0; i3054 <  (int32_t)14; i3054++){
for (uint32_t i3052 =  (int32_t)0; i3052 <  (int32_t)480; i3052++){
Arr4DIdxRowM(tmp1295, (int32_t)1, (int32_t)480, (int32_t)14, (int32_t)14,i3051,i3052,i3053,i3054) = Arr4DIdxRowM(tmp1293, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)480,i3047,i3048,i3049,i3050);
i3050 = (i3050 +  (int64_t)1);
if ((i3050 ==  (int64_t)480)) {
i3050 =  (int64_t)0;
i3049 = (i3049 +  (int64_t)1);
if ((i3049 ==  (int64_t)14)) {
i3049 =  (int64_t)0;
i3048 = (i3048 +  (int64_t)1);
if ((i3048 ==  (int64_t)14)) {
i3048 =  (int64_t)0;
i3047 = (i3047 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480, tmp1293);

uint64_t* tmp1297 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480);

int64_t i3062;

int64_t i3061;

int64_t i3060;

int64_t i3059;

int64_t i3058;

int64_t i3057;

int64_t i3056;

int64_t i3055;
i3055 =  (int64_t)0;
i3056 =  (int64_t)0;
i3057 =  (int64_t)0;
i3058 =  (int64_t)0;
for (uint32_t i3059 =  (int32_t)0; i3059 <  (int32_t)1; i3059++){
for (uint32_t i3062 =  (int32_t)0; i3062 <  (int32_t)480; i3062++){
for (uint32_t i3060 =  (int32_t)0; i3060 <  (int32_t)14; i3060++){
for (uint32_t i3061 =  (int32_t)0; i3061 <  (int32_t)14; i3061++){
Arr4DIdxRowM(tmp1297, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)480,i3059,i3060,i3061,i3062) = Arr4DIdxRowM(tmp1295, (int32_t)1, (int32_t)480, (int32_t)14, (int32_t)14,i3055,i3056,i3057,i3058);
i3058 = (i3058 +  (int64_t)1);
if ((i3058 ==  (int64_t)14)) {
i3058 =  (int64_t)0;
i3057 = (i3057 +  (int64_t)1);
if ((i3057 ==  (int64_t)14)) {
i3057 =  (int64_t)0;
i3056 = (i3056 +  (int64_t)1);
if ((i3056 ==  (int64_t)480)) {
i3056 =  (int64_t)0;
i3055 = (i3055 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp1298 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480);
HardSigmoid4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480, tmp1297, tmp1298,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480, tmp1297);

uint64_t* tmp1300 = make_array<uint64_t>( (int32_t)1,  (int32_t)480,  (int32_t)14,  (int32_t)14);

int64_t i3070;

int64_t i3069;

int64_t i3068;

int64_t i3067;

int64_t i3066;

int64_t i3065;

int64_t i3064;

int64_t i3063;
i3063 =  (int64_t)0;
i3064 =  (int64_t)0;
i3065 =  (int64_t)0;
i3066 =  (int64_t)0;
for (uint32_t i3067 =  (int32_t)0; i3067 <  (int32_t)1; i3067++){
for (uint32_t i3069 =  (int32_t)0; i3069 <  (int32_t)14; i3069++){
for (uint32_t i3070 =  (int32_t)0; i3070 <  (int32_t)14; i3070++){
for (uint32_t i3068 =  (int32_t)0; i3068 <  (int32_t)480; i3068++){
Arr4DIdxRowM(tmp1300, (int32_t)1, (int32_t)480, (int32_t)14, (int32_t)14,i3067,i3068,i3069,i3070) = Arr4DIdxRowM(tmp1298, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)480,i3063,i3064,i3065,i3066);
i3066 = (i3066 +  (int64_t)1);
if ((i3066 ==  (int64_t)480)) {
i3066 =  (int64_t)0;
i3065 = (i3065 +  (int64_t)1);
if ((i3065 ==  (int64_t)14)) {
i3065 =  (int64_t)0;
i3064 = (i3064 +  (int64_t)1);
if ((i3064 ==  (int64_t)14)) {
i3064 =  (int64_t)0;
i3063 = (i3063 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480, tmp1298);

uint64_t* tmp1302 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480);

int64_t i3078;

int64_t i3077;

int64_t i3076;

int64_t i3075;

int64_t i3074;

int64_t i3073;

int64_t i3072;

int64_t i3071;
i3071 =  (int64_t)0;
i3072 =  (int64_t)0;
i3073 =  (int64_t)0;
i3074 =  (int64_t)0;
for (uint32_t i3075 =  (int32_t)0; i3075 <  (int32_t)1; i3075++){
for (uint32_t i3078 =  (int32_t)0; i3078 <  (int32_t)480; i3078++){
for (uint32_t i3076 =  (int32_t)0; i3076 <  (int32_t)14; i3076++){
for (uint32_t i3077 =  (int32_t)0; i3077 <  (int32_t)14; i3077++){
Arr4DIdxRowM(tmp1302, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)480,i3075,i3076,i3077,i3078) = Arr4DIdxRowM(tmp1295, (int32_t)1, (int32_t)480, (int32_t)14, (int32_t)14,i3071,i3072,i3073,i3074);
i3074 = (i3074 +  (int64_t)1);
if ((i3074 ==  (int64_t)14)) {
i3074 =  (int64_t)0;
i3073 = (i3073 +  (int64_t)1);
if ((i3073 ==  (int64_t)14)) {
i3073 =  (int64_t)0;
i3072 = (i3072 +  (int64_t)1);
if ((i3072 ==  (int64_t)480)) {
i3072 =  (int64_t)0;
i3071 = (i3071 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)480,  (int32_t)14,  (int32_t)14, tmp1295);

uint64_t* tmp1304 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480);

int64_t i3086;

int64_t i3085;

int64_t i3084;

int64_t i3083;

int64_t i3082;

int64_t i3081;

int64_t i3080;

int64_t i3079;
i3079 =  (int64_t)0;
i3080 =  (int64_t)0;
i3081 =  (int64_t)0;
i3082 =  (int64_t)0;
for (uint32_t i3083 =  (int32_t)0; i3083 <  (int32_t)1; i3083++){
for (uint32_t i3086 =  (int32_t)0; i3086 <  (int32_t)480; i3086++){
for (uint32_t i3084 =  (int32_t)0; i3084 <  (int32_t)14; i3084++){
for (uint32_t i3085 =  (int32_t)0; i3085 <  (int32_t)14; i3085++){
Arr4DIdxRowM(tmp1304, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)480,i3083,i3084,i3085,i3086) = Arr4DIdxRowM(tmp1300, (int32_t)1, (int32_t)480, (int32_t)14, (int32_t)14,i3079,i3080,i3081,i3082);
i3082 = (i3082 +  (int64_t)1);
if ((i3082 ==  (int64_t)14)) {
i3082 =  (int64_t)0;
i3081 = (i3081 +  (int64_t)1);
if ((i3081 ==  (int64_t)14)) {
i3081 =  (int64_t)0;
i3080 = (i3080 +  (int64_t)1);
if ((i3080 ==  (int64_t)480)) {
i3080 =  (int64_t)0;
i3079 = (i3079 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)480,  (int32_t)14,  (int32_t)14, tmp1300);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480, tmp1302,  (int32_t)23);

uint64_t* tmp1306 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480);

uint64_t* tmp1307 = make_array<uint64_t>( (int32_t)94080);

uint64_t* tmp1308 = make_array<uint64_t>( (int32_t)94080);

uint64_t* tmp1309 = make_array<uint64_t>( (int32_t)94080);

int32_t tmp1310;
for (uint32_t i3087 =  (int32_t)0; i3087 <  (int32_t)1; i3087++){
for (uint32_t i3088 =  (int32_t)0; i3088 <  (int32_t)14; i3088++){
for (uint32_t i3089 =  (int32_t)0; i3089 <  (int32_t)14; i3089++){
for (uint32_t i3090 =  (int32_t)0; i3090 <  (int32_t)480; i3090++){
tmp1310 = (((( (int32_t)0 + (i3087 *  (int32_t)94080)) + (i3088 *  (int32_t)6720)) + (i3089 *  (int32_t)480)) + (i3090 *  (int32_t)1));
Arr1DIdxRowM(tmp1307, (int32_t)94080,tmp1310) = Arr4DIdxRowM(tmp1302, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)480,i3087,i3088,i3089,i3090);
Arr1DIdxRowM(tmp1308, (int32_t)94080,tmp1310) = Arr4DIdxRowM(tmp1304, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)480,i3087,i3088,i3089,i3090);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)94080, tmp1307, tmp1308, tmp1309);
ClearMemSecret1( (int32_t)94080, tmp1307);
ClearMemSecret1( (int32_t)94080, tmp1308);
for (uint32_t i3087 =  (int32_t)0; i3087 <  (int32_t)1; i3087++){
for (uint32_t i3088 =  (int32_t)0; i3088 <  (int32_t)14; i3088++){
for (uint32_t i3089 =  (int32_t)0; i3089 <  (int32_t)14; i3089++){
for (uint32_t i3090 =  (int32_t)0; i3090 <  (int32_t)480; i3090++){
tmp1310 = (((( (int32_t)0 + (i3087 *  (int32_t)94080)) + (i3088 *  (int32_t)6720)) + (i3089 *  (int32_t)480)) + (i3090 *  (int32_t)1));
Arr4DIdxRowM(tmp1306, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)480,i3087,i3088,i3089,i3090) = Arr1DIdxRowM(tmp1309, (int32_t)94080,tmp1310);
}
}
}
}
ClearMemSecret1( (int32_t)94080, tmp1309);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480, tmp1302);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480, tmp1304);

uint64_t* tmp1313 = make_array<uint64_t>( (int32_t)1,  (int32_t)480,  (int32_t)14,  (int32_t)14);

int64_t i3098;

int64_t i3097;

int64_t i3096;

int64_t i3095;

int64_t i3094;

int64_t i3093;

int64_t i3092;

int64_t i3091;
i3091 =  (int64_t)0;
i3092 =  (int64_t)0;
i3093 =  (int64_t)0;
i3094 =  (int64_t)0;
for (uint32_t i3095 =  (int32_t)0; i3095 <  (int32_t)1; i3095++){
for (uint32_t i3097 =  (int32_t)0; i3097 <  (int32_t)14; i3097++){
for (uint32_t i3098 =  (int32_t)0; i3098 <  (int32_t)14; i3098++){
for (uint32_t i3096 =  (int32_t)0; i3096 <  (int32_t)480; i3096++){
Arr4DIdxRowM(tmp1313, (int32_t)1, (int32_t)480, (int32_t)14, (int32_t)14,i3095,i3096,i3097,i3098) = Arr4DIdxRowM(tmp1306, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)480,i3091,i3092,i3093,i3094);
i3094 = (i3094 +  (int64_t)1);
if ((i3094 ==  (int64_t)480)) {
i3094 =  (int64_t)0;
i3093 = (i3093 +  (int64_t)1);
if ((i3093 ==  (int64_t)14)) {
i3093 =  (int64_t)0;
i3092 = (i3092 +  (int64_t)1);
if ((i3092 ==  (int64_t)14)) {
i3092 =  (int64_t)0;
i3091 = (i3091 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480, tmp1306);

uint64_t* tmp1315 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480);

int64_t i3106;

int64_t i3105;

int64_t i3104;

int64_t i3103;

int64_t i3102;

int64_t i3101;

int64_t i3100;

int64_t i3099;
i3099 =  (int64_t)0;
i3100 =  (int64_t)0;
i3101 =  (int64_t)0;
i3102 =  (int64_t)0;
for (uint32_t i3103 =  (int32_t)0; i3103 <  (int32_t)1; i3103++){
for (uint32_t i3106 =  (int32_t)0; i3106 <  (int32_t)480; i3106++){
for (uint32_t i3104 =  (int32_t)0; i3104 <  (int32_t)14; i3104++){
for (uint32_t i3105 =  (int32_t)0; i3105 <  (int32_t)14; i3105++){
Arr4DIdxRowM(tmp1315, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)480,i3103,i3104,i3105,i3106) = Arr4DIdxRowM(tmp1313, (int32_t)1, (int32_t)480, (int32_t)14, (int32_t)14,i3099,i3100,i3101,i3102);
i3102 = (i3102 +  (int64_t)1);
if ((i3102 ==  (int64_t)14)) {
i3102 =  (int64_t)0;
i3101 = (i3101 +  (int64_t)1);
if ((i3101 ==  (int64_t)14)) {
i3101 =  (int64_t)0;
i3100 = (i3100 +  (int64_t)1);
if ((i3100 ==  (int64_t)480)) {
i3100 =  (int64_t)0;
i3099 = (i3099 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)480,  (int32_t)14,  (int32_t)14, tmp1313);

uint64_t* tmp1317 = make_array<uint64_t>( (int32_t)3,  (int32_t)3,  (int32_t)1,  (int32_t)480);

int64_t i3114;

int64_t i3113;

int64_t i3112;

int64_t i3111;

int64_t i3110;

int64_t i3109;

int64_t i3108;

int64_t i3107;
i3107 =  (int64_t)0;
i3108 =  (int64_t)0;
i3109 =  (int64_t)0;
i3110 =  (int64_t)0;
for (uint32_t i3114 =  (int32_t)0; i3114 <  (int32_t)480; i3114++){
for (uint32_t i3113 =  (int32_t)0; i3113 <  (int32_t)1; i3113++){
for (uint32_t i3111 =  (int32_t)0; i3111 <  (int32_t)3; i3111++){
for (uint32_t i3112 =  (int32_t)0; i3112 <  (int32_t)3; i3112++){
Arr4DIdxRowM(tmp1317, (int32_t)3, (int32_t)3, (int32_t)1, (int32_t)480,i3111,i3112,i3113,i3114) = Arr4DIdxRowM(tmp71, (int32_t)480, (int32_t)1, (int32_t)3, (int32_t)3,i3107,i3108,i3109,i3110);
i3110 = (i3110 +  (int64_t)1);
if ((i3110 ==  (int64_t)3)) {
i3110 =  (int64_t)0;
i3109 = (i3109 +  (int64_t)1);
if ((i3109 ==  (int64_t)3)) {
i3109 =  (int64_t)0;
i3108 = (i3108 +  (int64_t)1);
if ((i3108 ==  (int64_t)1)) {
i3108 =  (int64_t)0;
i3107 = (i3107 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)480,  (int32_t)1,  (int32_t)3,  (int32_t)3, tmp71);

uint64_t* tmp1319 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480, tmp1315,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480,  (int32_t)3,  (int32_t)3,  (int32_t)480,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)480, tmp1315, tmp1317, tmp1319);
ClearMemSecret4( (int32_t)3,  (int32_t)3,  (int32_t)1,  (int32_t)480, tmp1317);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480, tmp1315);

uint64_t* tmp1322 = make_array<uint64_t>( (int32_t)1,  (int32_t)480,  (int32_t)14,  (int32_t)14);

int64_t i3122;

int64_t i3121;

int64_t i3120;

int64_t i3119;

int64_t i3118;

int64_t i3117;

int64_t i3116;

int64_t i3115;
i3115 =  (int64_t)0;
i3116 =  (int64_t)0;
i3117 =  (int64_t)0;
i3118 =  (int64_t)0;
for (uint32_t i3119 =  (int32_t)0; i3119 <  (int32_t)1; i3119++){
for (uint32_t i3121 =  (int32_t)0; i3121 <  (int32_t)14; i3121++){
for (uint32_t i3122 =  (int32_t)0; i3122 <  (int32_t)14; i3122++){
for (uint32_t i3120 =  (int32_t)0; i3120 <  (int32_t)480; i3120++){
Arr4DIdxRowM(tmp1322, (int32_t)1, (int32_t)480, (int32_t)14, (int32_t)14,i3119,i3120,i3121,i3122) = Arr4DIdxRowM(tmp1319, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)480,i3115,i3116,i3117,i3118);
i3118 = (i3118 +  (int64_t)1);
if ((i3118 ==  (int64_t)480)) {
i3118 =  (int64_t)0;
i3117 = (i3117 +  (int64_t)1);
if ((i3117 ==  (int64_t)14)) {
i3117 =  (int64_t)0;
i3116 = (i3116 +  (int64_t)1);
if ((i3116 ==  (int64_t)14)) {
i3116 =  (int64_t)0;
i3115 = (i3115 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480, tmp1319);

uint64_t* tmp1324 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480);

int64_t i3130;

int64_t i3129;

int64_t i3128;

int64_t i3127;

int64_t i3126;

int64_t i3125;

int64_t i3124;

int64_t i3123;
i3123 =  (int64_t)0;
i3124 =  (int64_t)0;
i3125 =  (int64_t)0;
i3126 =  (int64_t)0;
for (uint32_t i3127 =  (int32_t)0; i3127 <  (int32_t)1; i3127++){
for (uint32_t i3130 =  (int32_t)0; i3130 <  (int32_t)480; i3130++){
for (uint32_t i3128 =  (int32_t)0; i3128 <  (int32_t)14; i3128++){
for (uint32_t i3129 =  (int32_t)0; i3129 <  (int32_t)14; i3129++){
Arr4DIdxRowM(tmp1324, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)480,i3127,i3128,i3129,i3130) = Arr4DIdxRowM(tmp1322, (int32_t)1, (int32_t)480, (int32_t)14, (int32_t)14,i3123,i3124,i3125,i3126);
i3126 = (i3126 +  (int64_t)1);
if ((i3126 ==  (int64_t)14)) {
i3126 =  (int64_t)0;
i3125 = (i3125 +  (int64_t)1);
if ((i3125 ==  (int64_t)14)) {
i3125 =  (int64_t)0;
i3124 = (i3124 +  (int64_t)1);
if ((i3124 ==  (int64_t)480)) {
i3124 =  (int64_t)0;
i3123 = (i3123 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)480,  (int32_t)14,  (int32_t)14, tmp1322);

uint64_t* tmp1326 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480, tmp1324,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480, tmp1324, tmp69, tmp70,  (int32_t)0,  (int32_t)0, tmp1326);
ClearMemSecret1( (int32_t)480, tmp70);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480, tmp1324);
ClearMemSecret1( (int32_t)480, tmp69);

uint64_t* tmp1330 = make_array<uint64_t>( (int32_t)1,  (int32_t)480,  (int32_t)14,  (int32_t)14);

int64_t i3138;

int64_t i3137;

int64_t i3136;

int64_t i3135;

int64_t i3134;

int64_t i3133;

int64_t i3132;

int64_t i3131;
i3131 =  (int64_t)0;
i3132 =  (int64_t)0;
i3133 =  (int64_t)0;
i3134 =  (int64_t)0;
for (uint32_t i3135 =  (int32_t)0; i3135 <  (int32_t)1; i3135++){
for (uint32_t i3137 =  (int32_t)0; i3137 <  (int32_t)14; i3137++){
for (uint32_t i3138 =  (int32_t)0; i3138 <  (int32_t)14; i3138++){
for (uint32_t i3136 =  (int32_t)0; i3136 <  (int32_t)480; i3136++){
Arr4DIdxRowM(tmp1330, (int32_t)1, (int32_t)480, (int32_t)14, (int32_t)14,i3135,i3136,i3137,i3138) = Arr4DIdxRowM(tmp1326, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)480,i3131,i3132,i3133,i3134);
i3134 = (i3134 +  (int64_t)1);
if ((i3134 ==  (int64_t)480)) {
i3134 =  (int64_t)0;
i3133 = (i3133 +  (int64_t)1);
if ((i3133 ==  (int64_t)14)) {
i3133 =  (int64_t)0;
i3132 = (i3132 +  (int64_t)1);
if ((i3132 ==  (int64_t)14)) {
i3132 =  (int64_t)0;
i3131 = (i3131 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480, tmp1326);

uint64_t* tmp1332 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480);

int64_t i3146;

int64_t i3145;

int64_t i3144;

int64_t i3143;

int64_t i3142;

int64_t i3141;

int64_t i3140;

int64_t i3139;
i3139 =  (int64_t)0;
i3140 =  (int64_t)0;
i3141 =  (int64_t)0;
i3142 =  (int64_t)0;
for (uint32_t i3143 =  (int32_t)0; i3143 <  (int32_t)1; i3143++){
for (uint32_t i3146 =  (int32_t)0; i3146 <  (int32_t)480; i3146++){
for (uint32_t i3144 =  (int32_t)0; i3144 <  (int32_t)14; i3144++){
for (uint32_t i3145 =  (int32_t)0; i3145 <  (int32_t)14; i3145++){
Arr4DIdxRowM(tmp1332, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)480,i3143,i3144,i3145,i3146) = Arr4DIdxRowM(tmp1330, (int32_t)1, (int32_t)480, (int32_t)14, (int32_t)14,i3139,i3140,i3141,i3142);
i3142 = (i3142 +  (int64_t)1);
if ((i3142 ==  (int64_t)14)) {
i3142 =  (int64_t)0;
i3141 = (i3141 +  (int64_t)1);
if ((i3141 ==  (int64_t)14)) {
i3141 =  (int64_t)0;
i3140 = (i3140 +  (int64_t)1);
if ((i3140 ==  (int64_t)480)) {
i3140 =  (int64_t)0;
i3139 = (i3139 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp1333 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480);
HardSigmoid4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480, tmp1332, tmp1333,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480, tmp1332);

uint64_t* tmp1335 = make_array<uint64_t>( (int32_t)1,  (int32_t)480,  (int32_t)14,  (int32_t)14);

int64_t i3154;

int64_t i3153;

int64_t i3152;

int64_t i3151;

int64_t i3150;

int64_t i3149;

int64_t i3148;

int64_t i3147;
i3147 =  (int64_t)0;
i3148 =  (int64_t)0;
i3149 =  (int64_t)0;
i3150 =  (int64_t)0;
for (uint32_t i3151 =  (int32_t)0; i3151 <  (int32_t)1; i3151++){
for (uint32_t i3153 =  (int32_t)0; i3153 <  (int32_t)14; i3153++){
for (uint32_t i3154 =  (int32_t)0; i3154 <  (int32_t)14; i3154++){
for (uint32_t i3152 =  (int32_t)0; i3152 <  (int32_t)480; i3152++){
Arr4DIdxRowM(tmp1335, (int32_t)1, (int32_t)480, (int32_t)14, (int32_t)14,i3151,i3152,i3153,i3154) = Arr4DIdxRowM(tmp1333, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)480,i3147,i3148,i3149,i3150);
i3150 = (i3150 +  (int64_t)1);
if ((i3150 ==  (int64_t)480)) {
i3150 =  (int64_t)0;
i3149 = (i3149 +  (int64_t)1);
if ((i3149 ==  (int64_t)14)) {
i3149 =  (int64_t)0;
i3148 = (i3148 +  (int64_t)1);
if ((i3148 ==  (int64_t)14)) {
i3148 =  (int64_t)0;
i3147 = (i3147 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480, tmp1333);

uint64_t* tmp1337 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480);

int64_t i3162;

int64_t i3161;

int64_t i3160;

int64_t i3159;

int64_t i3158;

int64_t i3157;

int64_t i3156;

int64_t i3155;
i3155 =  (int64_t)0;
i3156 =  (int64_t)0;
i3157 =  (int64_t)0;
i3158 =  (int64_t)0;
for (uint32_t i3159 =  (int32_t)0; i3159 <  (int32_t)1; i3159++){
for (uint32_t i3162 =  (int32_t)0; i3162 <  (int32_t)480; i3162++){
for (uint32_t i3160 =  (int32_t)0; i3160 <  (int32_t)14; i3160++){
for (uint32_t i3161 =  (int32_t)0; i3161 <  (int32_t)14; i3161++){
Arr4DIdxRowM(tmp1337, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)480,i3159,i3160,i3161,i3162) = Arr4DIdxRowM(tmp1330, (int32_t)1, (int32_t)480, (int32_t)14, (int32_t)14,i3155,i3156,i3157,i3158);
i3158 = (i3158 +  (int64_t)1);
if ((i3158 ==  (int64_t)14)) {
i3158 =  (int64_t)0;
i3157 = (i3157 +  (int64_t)1);
if ((i3157 ==  (int64_t)14)) {
i3157 =  (int64_t)0;
i3156 = (i3156 +  (int64_t)1);
if ((i3156 ==  (int64_t)480)) {
i3156 =  (int64_t)0;
i3155 = (i3155 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)480,  (int32_t)14,  (int32_t)14, tmp1330);

uint64_t* tmp1339 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480);

int64_t i3170;

int64_t i3169;

int64_t i3168;

int64_t i3167;

int64_t i3166;

int64_t i3165;

int64_t i3164;

int64_t i3163;
i3163 =  (int64_t)0;
i3164 =  (int64_t)0;
i3165 =  (int64_t)0;
i3166 =  (int64_t)0;
for (uint32_t i3167 =  (int32_t)0; i3167 <  (int32_t)1; i3167++){
for (uint32_t i3170 =  (int32_t)0; i3170 <  (int32_t)480; i3170++){
for (uint32_t i3168 =  (int32_t)0; i3168 <  (int32_t)14; i3168++){
for (uint32_t i3169 =  (int32_t)0; i3169 <  (int32_t)14; i3169++){
Arr4DIdxRowM(tmp1339, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)480,i3167,i3168,i3169,i3170) = Arr4DIdxRowM(tmp1335, (int32_t)1, (int32_t)480, (int32_t)14, (int32_t)14,i3163,i3164,i3165,i3166);
i3166 = (i3166 +  (int64_t)1);
if ((i3166 ==  (int64_t)14)) {
i3166 =  (int64_t)0;
i3165 = (i3165 +  (int64_t)1);
if ((i3165 ==  (int64_t)14)) {
i3165 =  (int64_t)0;
i3164 = (i3164 +  (int64_t)1);
if ((i3164 ==  (int64_t)480)) {
i3164 =  (int64_t)0;
i3163 = (i3163 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)480,  (int32_t)14,  (int32_t)14, tmp1335);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480, tmp1337,  (int32_t)23);

uint64_t* tmp1341 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480);

uint64_t* tmp1342 = make_array<uint64_t>( (int32_t)94080);

uint64_t* tmp1343 = make_array<uint64_t>( (int32_t)94080);

uint64_t* tmp1344 = make_array<uint64_t>( (int32_t)94080);

int32_t tmp1345;
for (uint32_t i3171 =  (int32_t)0; i3171 <  (int32_t)1; i3171++){
for (uint32_t i3172 =  (int32_t)0; i3172 <  (int32_t)14; i3172++){
for (uint32_t i3173 =  (int32_t)0; i3173 <  (int32_t)14; i3173++){
for (uint32_t i3174 =  (int32_t)0; i3174 <  (int32_t)480; i3174++){
tmp1345 = (((( (int32_t)0 + (i3171 *  (int32_t)94080)) + (i3172 *  (int32_t)6720)) + (i3173 *  (int32_t)480)) + (i3174 *  (int32_t)1));
Arr1DIdxRowM(tmp1342, (int32_t)94080,tmp1345) = Arr4DIdxRowM(tmp1337, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)480,i3171,i3172,i3173,i3174);
Arr1DIdxRowM(tmp1343, (int32_t)94080,tmp1345) = Arr4DIdxRowM(tmp1339, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)480,i3171,i3172,i3173,i3174);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)94080, tmp1342, tmp1343, tmp1344);
ClearMemSecret1( (int32_t)94080, tmp1342);
ClearMemSecret1( (int32_t)94080, tmp1343);
for (uint32_t i3171 =  (int32_t)0; i3171 <  (int32_t)1; i3171++){
for (uint32_t i3172 =  (int32_t)0; i3172 <  (int32_t)14; i3172++){
for (uint32_t i3173 =  (int32_t)0; i3173 <  (int32_t)14; i3173++){
for (uint32_t i3174 =  (int32_t)0; i3174 <  (int32_t)480; i3174++){
tmp1345 = (((( (int32_t)0 + (i3171 *  (int32_t)94080)) + (i3172 *  (int32_t)6720)) + (i3173 *  (int32_t)480)) + (i3174 *  (int32_t)1));
Arr4DIdxRowM(tmp1341, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)480,i3171,i3172,i3173,i3174) = Arr1DIdxRowM(tmp1344, (int32_t)94080,tmp1345);
}
}
}
}
ClearMemSecret1( (int32_t)94080, tmp1344);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480, tmp1339);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480, tmp1337);

uint64_t* tmp1348 = make_array<uint64_t>( (int32_t)1,  (int32_t)480,  (int32_t)14,  (int32_t)14);

int64_t i3182;

int64_t i3181;

int64_t i3180;

int64_t i3179;

int64_t i3178;

int64_t i3177;

int64_t i3176;

int64_t i3175;
i3175 =  (int64_t)0;
i3176 =  (int64_t)0;
i3177 =  (int64_t)0;
i3178 =  (int64_t)0;
for (uint32_t i3179 =  (int32_t)0; i3179 <  (int32_t)1; i3179++){
for (uint32_t i3181 =  (int32_t)0; i3181 <  (int32_t)14; i3181++){
for (uint32_t i3182 =  (int32_t)0; i3182 <  (int32_t)14; i3182++){
for (uint32_t i3180 =  (int32_t)0; i3180 <  (int32_t)480; i3180++){
Arr4DIdxRowM(tmp1348, (int32_t)1, (int32_t)480, (int32_t)14, (int32_t)14,i3179,i3180,i3181,i3182) = Arr4DIdxRowM(tmp1341, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)480,i3175,i3176,i3177,i3178);
i3178 = (i3178 +  (int64_t)1);
if ((i3178 ==  (int64_t)480)) {
i3178 =  (int64_t)0;
i3177 = (i3177 +  (int64_t)1);
if ((i3177 ==  (int64_t)14)) {
i3177 =  (int64_t)0;
i3176 = (i3176 +  (int64_t)1);
if ((i3176 ==  (int64_t)14)) {
i3176 =  (int64_t)0;
i3175 = (i3175 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480, tmp1341);

uint64_t* tmp1350 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480);

int64_t i3190;

int64_t i3189;

int64_t i3188;

int64_t i3187;

int64_t i3186;

int64_t i3185;

int64_t i3184;

int64_t i3183;
i3183 =  (int64_t)0;
i3184 =  (int64_t)0;
i3185 =  (int64_t)0;
i3186 =  (int64_t)0;
for (uint32_t i3187 =  (int32_t)0; i3187 <  (int32_t)1; i3187++){
for (uint32_t i3190 =  (int32_t)0; i3190 <  (int32_t)480; i3190++){
for (uint32_t i3188 =  (int32_t)0; i3188 <  (int32_t)14; i3188++){
for (uint32_t i3189 =  (int32_t)0; i3189 <  (int32_t)14; i3189++){
Arr4DIdxRowM(tmp1350, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)480,i3187,i3188,i3189,i3190) = Arr4DIdxRowM(tmp1348, (int32_t)1, (int32_t)480, (int32_t)14, (int32_t)14,i3183,i3184,i3185,i3186);
i3186 = (i3186 +  (int64_t)1);
if ((i3186 ==  (int64_t)14)) {
i3186 =  (int64_t)0;
i3185 = (i3185 +  (int64_t)1);
if ((i3185 ==  (int64_t)14)) {
i3185 =  (int64_t)0;
i3184 = (i3184 +  (int64_t)1);
if ((i3184 ==  (int64_t)480)) {
i3184 =  (int64_t)0;
i3183 = (i3183 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp1351 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)480);
AvgPool( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)480,  (int32_t)14,  (int32_t)14,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480, tmp1350, tmp1351);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480, tmp1350);

uint64_t* tmp1353 = make_array<uint64_t>( (int32_t)1,  (int32_t)480,  (int32_t)1,  (int32_t)1);

int64_t i3198;

int64_t i3197;

int64_t i3196;

int64_t i3195;

int64_t i3194;

int64_t i3193;

int64_t i3192;

int64_t i3191;
i3191 =  (int64_t)0;
i3192 =  (int64_t)0;
i3193 =  (int64_t)0;
i3194 =  (int64_t)0;
for (uint32_t i3195 =  (int32_t)0; i3195 <  (int32_t)1; i3195++){
for (uint32_t i3197 =  (int32_t)0; i3197 <  (int32_t)1; i3197++){
for (uint32_t i3198 =  (int32_t)0; i3198 <  (int32_t)1; i3198++){
for (uint32_t i3196 =  (int32_t)0; i3196 <  (int32_t)480; i3196++){
Arr4DIdxRowM(tmp1353, (int32_t)1, (int32_t)480, (int32_t)1, (int32_t)1,i3195,i3196,i3197,i3198) = Arr4DIdxRowM(tmp1351, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)480,i3191,i3192,i3193,i3194);
i3194 = (i3194 +  (int64_t)1);
if ((i3194 ==  (int64_t)480)) {
i3194 =  (int64_t)0;
i3193 = (i3193 +  (int64_t)1);
if ((i3193 ==  (int64_t)1)) {
i3193 =  (int64_t)0;
i3192 = (i3192 +  (int64_t)1);
if ((i3192 ==  (int64_t)1)) {
i3192 =  (int64_t)0;
i3191 = (i3191 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)480, tmp1351);

uint64_t* tmp1355 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)480);

int64_t i3206;

int64_t i3205;

int64_t i3204;

int64_t i3203;

int64_t i3202;

int64_t i3201;

int64_t i3200;

int64_t i3199;
i3199 =  (int64_t)0;
i3200 =  (int64_t)0;
i3201 =  (int64_t)0;
i3202 =  (int64_t)0;
for (uint32_t i3203 =  (int32_t)0; i3203 <  (int32_t)1; i3203++){
for (uint32_t i3206 =  (int32_t)0; i3206 <  (int32_t)480; i3206++){
for (uint32_t i3204 =  (int32_t)0; i3204 <  (int32_t)1; i3204++){
for (uint32_t i3205 =  (int32_t)0; i3205 <  (int32_t)1; i3205++){
Arr4DIdxRowM(tmp1355, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)480,i3203,i3204,i3205,i3206) = Arr4DIdxRowM(tmp1353, (int32_t)1, (int32_t)480, (int32_t)1, (int32_t)1,i3199,i3200,i3201,i3202);
i3202 = (i3202 +  (int64_t)1);
if ((i3202 ==  (int64_t)1)) {
i3202 =  (int64_t)0;
i3201 = (i3201 +  (int64_t)1);
if ((i3201 ==  (int64_t)1)) {
i3201 =  (int64_t)0;
i3200 = (i3200 +  (int64_t)1);
if ((i3200 ==  (int64_t)480)) {
i3200 =  (int64_t)0;
i3199 = (i3199 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)480,  (int32_t)1,  (int32_t)1, tmp1353);

uint64_t* tmp1357 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)480,  (int32_t)120);

int64_t i3214;

int64_t i3213;

int64_t i3212;

int64_t i3211;

int64_t i3210;

int64_t i3209;

int64_t i3208;

int64_t i3207;
i3207 =  (int64_t)0;
i3208 =  (int64_t)0;
i3209 =  (int64_t)0;
i3210 =  (int64_t)0;
for (uint32_t i3214 =  (int32_t)0; i3214 <  (int32_t)120; i3214++){
for (uint32_t i3213 =  (int32_t)0; i3213 <  (int32_t)480; i3213++){
for (uint32_t i3211 =  (int32_t)0; i3211 <  (int32_t)1; i3211++){
for (uint32_t i3212 =  (int32_t)0; i3212 <  (int32_t)1; i3212++){
Arr4DIdxRowM(tmp1357, (int32_t)1, (int32_t)1, (int32_t)480, (int32_t)120,i3211,i3212,i3213,i3214) = Arr4DIdxRowM(tmp72, (int32_t)120, (int32_t)480, (int32_t)1, (int32_t)1,i3207,i3208,i3209,i3210);
i3210 = (i3210 +  (int64_t)1);
if ((i3210 ==  (int64_t)1)) {
i3210 =  (int64_t)0;
i3209 = (i3209 +  (int64_t)1);
if ((i3209 ==  (int64_t)1)) {
i3209 =  (int64_t)0;
i3208 = (i3208 +  (int64_t)1);
if ((i3208 ==  (int64_t)480)) {
i3208 =  (int64_t)0;
i3207 = (i3207 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)120,  (int32_t)480,  (int32_t)1,  (int32_t)1, tmp72);

uint64_t* tmp1359 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120);
ScaleDown4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)480, tmp1355,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)480,  (int32_t)1,  (int32_t)1,  (int32_t)120,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp1355, tmp1357, tmp1359);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)480, tmp1355);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)480,  (int32_t)120, tmp1357);

uint64_t* tmp1362 = make_array<uint64_t>( (int32_t)1,  (int32_t)120,  (int32_t)1,  (int32_t)1);

int64_t i3222;

int64_t i3221;

int64_t i3220;

int64_t i3219;

int64_t i3218;

int64_t i3217;

int64_t i3216;

int64_t i3215;
i3215 =  (int64_t)0;
i3216 =  (int64_t)0;
i3217 =  (int64_t)0;
i3218 =  (int64_t)0;
for (uint32_t i3219 =  (int32_t)0; i3219 <  (int32_t)1; i3219++){
for (uint32_t i3221 =  (int32_t)0; i3221 <  (int32_t)1; i3221++){
for (uint32_t i3222 =  (int32_t)0; i3222 <  (int32_t)1; i3222++){
for (uint32_t i3220 =  (int32_t)0; i3220 <  (int32_t)120; i3220++){
Arr4DIdxRowM(tmp1362, (int32_t)1, (int32_t)120, (int32_t)1, (int32_t)1,i3219,i3220,i3221,i3222) = Arr4DIdxRowM(tmp1359, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)120,i3215,i3216,i3217,i3218);
i3218 = (i3218 +  (int64_t)1);
if ((i3218 ==  (int64_t)120)) {
i3218 =  (int64_t)0;
i3217 = (i3217 +  (int64_t)1);
if ((i3217 ==  (int64_t)1)) {
i3217 =  (int64_t)0;
i3216 = (i3216 +  (int64_t)1);
if ((i3216 ==  (int64_t)1)) {
i3216 =  (int64_t)0;
i3215 = (i3215 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120, tmp1359);

uint64_t* tmp1364 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120);

int64_t i3230;

int64_t i3229;

int64_t i3228;

int64_t i3227;

int64_t i3226;

int64_t i3225;

int64_t i3224;

int64_t i3223;
i3223 =  (int64_t)0;
i3224 =  (int64_t)0;
i3225 =  (int64_t)0;
i3226 =  (int64_t)0;
for (uint32_t i3227 =  (int32_t)0; i3227 <  (int32_t)1; i3227++){
for (uint32_t i3230 =  (int32_t)0; i3230 <  (int32_t)120; i3230++){
for (uint32_t i3228 =  (int32_t)0; i3228 <  (int32_t)1; i3228++){
for (uint32_t i3229 =  (int32_t)0; i3229 <  (int32_t)1; i3229++){
Arr4DIdxRowM(tmp1364, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)120,i3227,i3228,i3229,i3230) = Arr4DIdxRowM(tmp1362, (int32_t)1, (int32_t)120, (int32_t)1, (int32_t)1,i3223,i3224,i3225,i3226);
i3226 = (i3226 +  (int64_t)1);
if ((i3226 ==  (int64_t)1)) {
i3226 =  (int64_t)0;
i3225 = (i3225 +  (int64_t)1);
if ((i3225 ==  (int64_t)1)) {
i3225 =  (int64_t)0;
i3224 = (i3224 +  (int64_t)1);
if ((i3224 ==  (int64_t)120)) {
i3224 =  (int64_t)0;
i3223 = (i3223 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)120,  (int32_t)1,  (int32_t)1, tmp1362);

uint64_t* tmp1366 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120);
ScaleDown4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120, tmp1364,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120, tmp1364, tmp33, tmp34,  (int32_t)0,  (int32_t)0, tmp1366);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120, tmp1364);
ClearMemSecret1( (int32_t)120, tmp33);
ClearMemSecret1( (int32_t)120, tmp34);

uint64_t* tmp1370 = make_array<uint64_t>( (int32_t)1,  (int32_t)120,  (int32_t)1,  (int32_t)1);

int64_t i3238;

int64_t i3237;

int64_t i3236;

int64_t i3235;

int64_t i3234;

int64_t i3233;

int64_t i3232;

int64_t i3231;
i3231 =  (int64_t)0;
i3232 =  (int64_t)0;
i3233 =  (int64_t)0;
i3234 =  (int64_t)0;
for (uint32_t i3235 =  (int32_t)0; i3235 <  (int32_t)1; i3235++){
for (uint32_t i3237 =  (int32_t)0; i3237 <  (int32_t)1; i3237++){
for (uint32_t i3238 =  (int32_t)0; i3238 <  (int32_t)1; i3238++){
for (uint32_t i3236 =  (int32_t)0; i3236 <  (int32_t)120; i3236++){
Arr4DIdxRowM(tmp1370, (int32_t)1, (int32_t)120, (int32_t)1, (int32_t)1,i3235,i3236,i3237,i3238) = Arr4DIdxRowM(tmp1366, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)120,i3231,i3232,i3233,i3234);
i3234 = (i3234 +  (int64_t)1);
if ((i3234 ==  (int64_t)120)) {
i3234 =  (int64_t)0;
i3233 = (i3233 +  (int64_t)1);
if ((i3233 ==  (int64_t)1)) {
i3233 =  (int64_t)0;
i3232 = (i3232 +  (int64_t)1);
if ((i3232 ==  (int64_t)1)) {
i3232 =  (int64_t)0;
i3231 = (i3231 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120, tmp1366);

uint64_t* tmp1372 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120);

int64_t i3246;

int64_t i3245;

int64_t i3244;

int64_t i3243;

int64_t i3242;

int64_t i3241;

int64_t i3240;

int64_t i3239;
i3239 =  (int64_t)0;
i3240 =  (int64_t)0;
i3241 =  (int64_t)0;
i3242 =  (int64_t)0;
for (uint32_t i3243 =  (int32_t)0; i3243 <  (int32_t)1; i3243++){
for (uint32_t i3246 =  (int32_t)0; i3246 <  (int32_t)120; i3246++){
for (uint32_t i3244 =  (int32_t)0; i3244 <  (int32_t)1; i3244++){
for (uint32_t i3245 =  (int32_t)0; i3245 <  (int32_t)1; i3245++){
Arr4DIdxRowM(tmp1372, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)120,i3243,i3244,i3245,i3246) = Arr4DIdxRowM(tmp1370, (int32_t)1, (int32_t)120, (int32_t)1, (int32_t)1,i3239,i3240,i3241,i3242);
i3242 = (i3242 +  (int64_t)1);
if ((i3242 ==  (int64_t)1)) {
i3242 =  (int64_t)0;
i3241 = (i3241 +  (int64_t)1);
if ((i3241 ==  (int64_t)1)) {
i3241 =  (int64_t)0;
i3240 = (i3240 +  (int64_t)1);
if ((i3240 ==  (int64_t)120)) {
i3240 =  (int64_t)0;
i3239 = (i3239 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)120,  (int32_t)1,  (int32_t)1, tmp1370);

uint64_t* tmp1374 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120);
Relu4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120, tmp1372, tmp1374,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120, tmp1372);

uint64_t* tmp1376 = make_array<uint64_t>( (int32_t)1,  (int32_t)120,  (int32_t)1,  (int32_t)1);

int64_t i3254;

int64_t i3253;

int64_t i3252;

int64_t i3251;

int64_t i3250;

int64_t i3249;

int64_t i3248;

int64_t i3247;
i3247 =  (int64_t)0;
i3248 =  (int64_t)0;
i3249 =  (int64_t)0;
i3250 =  (int64_t)0;
for (uint32_t i3251 =  (int32_t)0; i3251 <  (int32_t)1; i3251++){
for (uint32_t i3253 =  (int32_t)0; i3253 <  (int32_t)1; i3253++){
for (uint32_t i3254 =  (int32_t)0; i3254 <  (int32_t)1; i3254++){
for (uint32_t i3252 =  (int32_t)0; i3252 <  (int32_t)120; i3252++){
Arr4DIdxRowM(tmp1376, (int32_t)1, (int32_t)120, (int32_t)1, (int32_t)1,i3251,i3252,i3253,i3254) = Arr4DIdxRowM(tmp1374, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)120,i3247,i3248,i3249,i3250);
i3250 = (i3250 +  (int64_t)1);
if ((i3250 ==  (int64_t)120)) {
i3250 =  (int64_t)0;
i3249 = (i3249 +  (int64_t)1);
if ((i3249 ==  (int64_t)1)) {
i3249 =  (int64_t)0;
i3248 = (i3248 +  (int64_t)1);
if ((i3248 ==  (int64_t)1)) {
i3248 =  (int64_t)0;
i3247 = (i3247 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120, tmp1374);

uint64_t* tmp1378 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120);

int64_t i3262;

int64_t i3261;

int64_t i3260;

int64_t i3259;

int64_t i3258;

int64_t i3257;

int64_t i3256;

int64_t i3255;
i3255 =  (int64_t)0;
i3256 =  (int64_t)0;
i3257 =  (int64_t)0;
i3258 =  (int64_t)0;
for (uint32_t i3259 =  (int32_t)0; i3259 <  (int32_t)1; i3259++){
for (uint32_t i3262 =  (int32_t)0; i3262 <  (int32_t)120; i3262++){
for (uint32_t i3260 =  (int32_t)0; i3260 <  (int32_t)1; i3260++){
for (uint32_t i3261 =  (int32_t)0; i3261 <  (int32_t)1; i3261++){
Arr4DIdxRowM(tmp1378, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)120,i3259,i3260,i3261,i3262) = Arr4DIdxRowM(tmp1376, (int32_t)1, (int32_t)120, (int32_t)1, (int32_t)1,i3255,i3256,i3257,i3258);
i3258 = (i3258 +  (int64_t)1);
if ((i3258 ==  (int64_t)1)) {
i3258 =  (int64_t)0;
i3257 = (i3257 +  (int64_t)1);
if ((i3257 ==  (int64_t)1)) {
i3257 =  (int64_t)0;
i3256 = (i3256 +  (int64_t)1);
if ((i3256 ==  (int64_t)120)) {
i3256 =  (int64_t)0;
i3255 = (i3255 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)120,  (int32_t)1,  (int32_t)1, tmp1376);

uint64_t* tmp1380 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)120,  (int32_t)480);

int64_t i3270;

int64_t i3269;

int64_t i3268;

int64_t i3267;

int64_t i3266;

int64_t i3265;

int64_t i3264;

int64_t i3263;
i3263 =  (int64_t)0;
i3264 =  (int64_t)0;
i3265 =  (int64_t)0;
i3266 =  (int64_t)0;
for (uint32_t i3270 =  (int32_t)0; i3270 <  (int32_t)480; i3270++){
for (uint32_t i3269 =  (int32_t)0; i3269 <  (int32_t)120; i3269++){
for (uint32_t i3267 =  (int32_t)0; i3267 <  (int32_t)1; i3267++){
for (uint32_t i3268 =  (int32_t)0; i3268 <  (int32_t)1; i3268++){
Arr4DIdxRowM(tmp1380, (int32_t)1, (int32_t)1, (int32_t)120, (int32_t)480,i3267,i3268,i3269,i3270) = Arr4DIdxRowM(tmp73, (int32_t)480, (int32_t)120, (int32_t)1, (int32_t)1,i3263,i3264,i3265,i3266);
i3266 = (i3266 +  (int64_t)1);
if ((i3266 ==  (int64_t)1)) {
i3266 =  (int64_t)0;
i3265 = (i3265 +  (int64_t)1);
if ((i3265 ==  (int64_t)1)) {
i3265 =  (int64_t)0;
i3264 = (i3264 +  (int64_t)1);
if ((i3264 ==  (int64_t)120)) {
i3264 =  (int64_t)0;
i3263 = (i3263 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)480,  (int32_t)120,  (int32_t)1,  (int32_t)1, tmp73);

uint64_t* tmp1382 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)480);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120,  (int32_t)1,  (int32_t)1,  (int32_t)480,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp1378, tmp1380, tmp1382);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)120, tmp1378);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)120,  (int32_t)480, tmp1380);

uint64_t* tmp1385 = make_array<uint64_t>( (int32_t)1,  (int32_t)480,  (int32_t)1,  (int32_t)1);

int64_t i3278;

int64_t i3277;

int64_t i3276;

int64_t i3275;

int64_t i3274;

int64_t i3273;

int64_t i3272;

int64_t i3271;
i3271 =  (int64_t)0;
i3272 =  (int64_t)0;
i3273 =  (int64_t)0;
i3274 =  (int64_t)0;
for (uint32_t i3275 =  (int32_t)0; i3275 <  (int32_t)1; i3275++){
for (uint32_t i3277 =  (int32_t)0; i3277 <  (int32_t)1; i3277++){
for (uint32_t i3278 =  (int32_t)0; i3278 <  (int32_t)1; i3278++){
for (uint32_t i3276 =  (int32_t)0; i3276 <  (int32_t)480; i3276++){
Arr4DIdxRowM(tmp1385, (int32_t)1, (int32_t)480, (int32_t)1, (int32_t)1,i3275,i3276,i3277,i3278) = Arr4DIdxRowM(tmp1382, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)480,i3271,i3272,i3273,i3274);
i3274 = (i3274 +  (int64_t)1);
if ((i3274 ==  (int64_t)480)) {
i3274 =  (int64_t)0;
i3273 = (i3273 +  (int64_t)1);
if ((i3273 ==  (int64_t)1)) {
i3273 =  (int64_t)0;
i3272 = (i3272 +  (int64_t)1);
if ((i3272 ==  (int64_t)1)) {
i3272 =  (int64_t)0;
i3271 = (i3271 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)480, tmp1382);

uint64_t* tmp1387 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)480);

int64_t i3286;

int64_t i3285;

int64_t i3284;

int64_t i3283;

int64_t i3282;

int64_t i3281;

int64_t i3280;

int64_t i3279;
i3279 =  (int64_t)0;
i3280 =  (int64_t)0;
i3281 =  (int64_t)0;
i3282 =  (int64_t)0;
for (uint32_t i3283 =  (int32_t)0; i3283 <  (int32_t)1; i3283++){
for (uint32_t i3286 =  (int32_t)0; i3286 <  (int32_t)480; i3286++){
for (uint32_t i3284 =  (int32_t)0; i3284 <  (int32_t)1; i3284++){
for (uint32_t i3285 =  (int32_t)0; i3285 <  (int32_t)1; i3285++){
Arr4DIdxRowM(tmp1387, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)480,i3283,i3284,i3285,i3286) = Arr4DIdxRowM(tmp1385, (int32_t)1, (int32_t)480, (int32_t)1, (int32_t)1,i3279,i3280,i3281,i3282);
i3282 = (i3282 +  (int64_t)1);
if ((i3282 ==  (int64_t)1)) {
i3282 =  (int64_t)0;
i3281 = (i3281 +  (int64_t)1);
if ((i3281 ==  (int64_t)1)) {
i3281 =  (int64_t)0;
i3280 = (i3280 +  (int64_t)1);
if ((i3280 ==  (int64_t)480)) {
i3280 =  (int64_t)0;
i3279 = (i3279 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)480,  (int32_t)1,  (int32_t)1, tmp1385);

uint64_t* tmp1389 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)480);
HardSigmoid4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)480, tmp1387, tmp1389,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)480, tmp1387);

uint64_t* tmp1391 = make_array<uint64_t>( (int32_t)1,  (int32_t)480,  (int32_t)1,  (int32_t)1);

int64_t i3294;

int64_t i3293;

int64_t i3292;

int64_t i3291;

int64_t i3290;

int64_t i3289;

int64_t i3288;

int64_t i3287;
i3287 =  (int64_t)0;
i3288 =  (int64_t)0;
i3289 =  (int64_t)0;
i3290 =  (int64_t)0;
for (uint32_t i3291 =  (int32_t)0; i3291 <  (int32_t)1; i3291++){
for (uint32_t i3293 =  (int32_t)0; i3293 <  (int32_t)1; i3293++){
for (uint32_t i3294 =  (int32_t)0; i3294 <  (int32_t)1; i3294++){
for (uint32_t i3292 =  (int32_t)0; i3292 <  (int32_t)480; i3292++){
Arr4DIdxRowM(tmp1391, (int32_t)1, (int32_t)480, (int32_t)1, (int32_t)1,i3291,i3292,i3293,i3294) = Arr4DIdxRowM(tmp1389, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)480,i3287,i3288,i3289,i3290);
i3290 = (i3290 +  (int64_t)1);
if ((i3290 ==  (int64_t)480)) {
i3290 =  (int64_t)0;
i3289 = (i3289 +  (int64_t)1);
if ((i3289 ==  (int64_t)1)) {
i3289 =  (int64_t)0;
i3288 = (i3288 +  (int64_t)1);
if ((i3288 ==  (int64_t)1)) {
i3288 =  (int64_t)0;
i3287 = (i3287 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)480, tmp1389);

uint64_t* tmp1393 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480);

int64_t i3302;

int64_t i3301;

int64_t i3300;

int64_t i3299;

int64_t i3298;

int64_t i3297;

int64_t i3296;

int64_t i3295;
i3295 =  (int64_t)0;
i3296 =  (int64_t)0;
i3297 =  (int64_t)0;
i3298 =  (int64_t)0;
for (uint32_t i3299 =  (int32_t)0; i3299 <  (int32_t)1; i3299++){
for (uint32_t i3302 =  (int32_t)0; i3302 <  (int32_t)480; i3302++){
for (uint32_t i3300 =  (int32_t)0; i3300 <  (int32_t)14; i3300++){
for (uint32_t i3301 =  (int32_t)0; i3301 <  (int32_t)14; i3301++){
Arr4DIdxRowM(tmp1393, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)480,i3299,i3300,i3301,i3302) = Arr4DIdxRowM(tmp1348, (int32_t)1, (int32_t)480, (int32_t)14, (int32_t)14,i3295,i3296,i3297,i3298);
i3298 = (i3298 +  (int64_t)1);
if ((i3298 ==  (int64_t)14)) {
i3298 =  (int64_t)0;
i3297 = (i3297 +  (int64_t)1);
if ((i3297 ==  (int64_t)14)) {
i3297 =  (int64_t)0;
i3296 = (i3296 +  (int64_t)1);
if ((i3296 ==  (int64_t)480)) {
i3296 =  (int64_t)0;
i3295 = (i3295 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)480,  (int32_t)14,  (int32_t)14, tmp1348);

uint64_t* tmp1395 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)480);

int64_t i3310;

int64_t i3309;

int64_t i3308;

int64_t i3307;

int64_t i3306;

int64_t i3305;

int64_t i3304;

int64_t i3303;
i3303 =  (int64_t)0;
i3304 =  (int64_t)0;
i3305 =  (int64_t)0;
i3306 =  (int64_t)0;
for (uint32_t i3307 =  (int32_t)0; i3307 <  (int32_t)1; i3307++){
for (uint32_t i3310 =  (int32_t)0; i3310 <  (int32_t)480; i3310++){
for (uint32_t i3308 =  (int32_t)0; i3308 <  (int32_t)1; i3308++){
for (uint32_t i3309 =  (int32_t)0; i3309 <  (int32_t)1; i3309++){
Arr4DIdxRowM(tmp1395, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)480,i3307,i3308,i3309,i3310) = Arr4DIdxRowM(tmp1391, (int32_t)1, (int32_t)480, (int32_t)1, (int32_t)1,i3303,i3304,i3305,i3306);
i3306 = (i3306 +  (int64_t)1);
if ((i3306 ==  (int64_t)1)) {
i3306 =  (int64_t)0;
i3305 = (i3305 +  (int64_t)1);
if ((i3305 ==  (int64_t)1)) {
i3305 =  (int64_t)0;
i3304 = (i3304 +  (int64_t)1);
if ((i3304 ==  (int64_t)480)) {
i3304 =  (int64_t)0;
i3303 = (i3303 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)480,  (int32_t)1,  (int32_t)1, tmp1391);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480, tmp1393,  (int32_t)23);

uint64_t* tmp1397 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480);

uint64_t* tmp1398 = make_array<uint64_t>( (int32_t)94080);

uint64_t* tmp1399 = make_array<uint64_t>( (int32_t)94080);

uint64_t* tmp1400 = make_array<uint64_t>( (int32_t)94080);

int32_t tmp1401;
for (uint32_t i3311 =  (int32_t)0; i3311 <  (int32_t)1; i3311++){
for (uint32_t i3312 =  (int32_t)0; i3312 <  (int32_t)14; i3312++){
for (uint32_t i3313 =  (int32_t)0; i3313 <  (int32_t)14; i3313++){
for (uint32_t i3314 =  (int32_t)0; i3314 <  (int32_t)480; i3314++){
tmp1401 = (((( (int32_t)0 + (i3311 *  (int32_t)94080)) + (i3312 *  (int32_t)6720)) + (i3313 *  (int32_t)480)) + (i3314 *  (int32_t)1));
Arr1DIdxRowM(tmp1398, (int32_t)94080,tmp1401) = Arr4DIdxRowM(tmp1393, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)480,i3311,i3312,i3313,i3314);
Arr1DIdxRowM(tmp1399, (int32_t)94080,tmp1401) = Arr4DIdxRowM(tmp1395, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)480,i3311, (int32_t)0, (int32_t)0,i3314);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)94080, tmp1398, tmp1399, tmp1400);
ClearMemSecret1( (int32_t)94080, tmp1398);
ClearMemSecret1( (int32_t)94080, tmp1399);
for (uint32_t i3311 =  (int32_t)0; i3311 <  (int32_t)1; i3311++){
for (uint32_t i3312 =  (int32_t)0; i3312 <  (int32_t)14; i3312++){
for (uint32_t i3313 =  (int32_t)0; i3313 <  (int32_t)14; i3313++){
for (uint32_t i3314 =  (int32_t)0; i3314 <  (int32_t)480; i3314++){
tmp1401 = (((( (int32_t)0 + (i3311 *  (int32_t)94080)) + (i3312 *  (int32_t)6720)) + (i3313 *  (int32_t)480)) + (i3314 *  (int32_t)1));
Arr4DIdxRowM(tmp1397, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)480,i3311,i3312,i3313,i3314) = Arr1DIdxRowM(tmp1400, (int32_t)94080,tmp1401);
}
}
}
}
ClearMemSecret1( (int32_t)94080, tmp1400);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480, tmp1393);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)480, tmp1395);

uint64_t* tmp1404 = make_array<uint64_t>( (int32_t)1,  (int32_t)480,  (int32_t)14,  (int32_t)14);

int64_t i3322;

int64_t i3321;

int64_t i3320;

int64_t i3319;

int64_t i3318;

int64_t i3317;

int64_t i3316;

int64_t i3315;
i3315 =  (int64_t)0;
i3316 =  (int64_t)0;
i3317 =  (int64_t)0;
i3318 =  (int64_t)0;
for (uint32_t i3319 =  (int32_t)0; i3319 <  (int32_t)1; i3319++){
for (uint32_t i3321 =  (int32_t)0; i3321 <  (int32_t)14; i3321++){
for (uint32_t i3322 =  (int32_t)0; i3322 <  (int32_t)14; i3322++){
for (uint32_t i3320 =  (int32_t)0; i3320 <  (int32_t)480; i3320++){
Arr4DIdxRowM(tmp1404, (int32_t)1, (int32_t)480, (int32_t)14, (int32_t)14,i3319,i3320,i3321,i3322) = Arr4DIdxRowM(tmp1397, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)480,i3315,i3316,i3317,i3318);
i3318 = (i3318 +  (int64_t)1);
if ((i3318 ==  (int64_t)480)) {
i3318 =  (int64_t)0;
i3317 = (i3317 +  (int64_t)1);
if ((i3317 ==  (int64_t)14)) {
i3317 =  (int64_t)0;
i3316 = (i3316 +  (int64_t)1);
if ((i3316 ==  (int64_t)14)) {
i3316 =  (int64_t)0;
i3315 = (i3315 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480, tmp1397);

uint64_t* tmp1406 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480);

int64_t i3330;

int64_t i3329;

int64_t i3328;

int64_t i3327;

int64_t i3326;

int64_t i3325;

int64_t i3324;

int64_t i3323;
i3323 =  (int64_t)0;
i3324 =  (int64_t)0;
i3325 =  (int64_t)0;
i3326 =  (int64_t)0;
for (uint32_t i3327 =  (int32_t)0; i3327 <  (int32_t)1; i3327++){
for (uint32_t i3330 =  (int32_t)0; i3330 <  (int32_t)480; i3330++){
for (uint32_t i3328 =  (int32_t)0; i3328 <  (int32_t)14; i3328++){
for (uint32_t i3329 =  (int32_t)0; i3329 <  (int32_t)14; i3329++){
Arr4DIdxRowM(tmp1406, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)480,i3327,i3328,i3329,i3330) = Arr4DIdxRowM(tmp1404, (int32_t)1, (int32_t)480, (int32_t)14, (int32_t)14,i3323,i3324,i3325,i3326);
i3326 = (i3326 +  (int64_t)1);
if ((i3326 ==  (int64_t)14)) {
i3326 =  (int64_t)0;
i3325 = (i3325 +  (int64_t)1);
if ((i3325 ==  (int64_t)14)) {
i3325 =  (int64_t)0;
i3324 = (i3324 +  (int64_t)1);
if ((i3324 ==  (int64_t)480)) {
i3324 =  (int64_t)0;
i3323 = (i3323 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)480,  (int32_t)14,  (int32_t)14, tmp1404);

uint64_t* tmp1408 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)480,  (int32_t)112);

int64_t i3338;

int64_t i3337;

int64_t i3336;

int64_t i3335;

int64_t i3334;

int64_t i3333;

int64_t i3332;

int64_t i3331;
i3331 =  (int64_t)0;
i3332 =  (int64_t)0;
i3333 =  (int64_t)0;
i3334 =  (int64_t)0;
for (uint32_t i3338 =  (int32_t)0; i3338 <  (int32_t)112; i3338++){
for (uint32_t i3337 =  (int32_t)0; i3337 <  (int32_t)480; i3337++){
for (uint32_t i3335 =  (int32_t)0; i3335 <  (int32_t)1; i3335++){
for (uint32_t i3336 =  (int32_t)0; i3336 <  (int32_t)1; i3336++){
Arr4DIdxRowM(tmp1408, (int32_t)1, (int32_t)1, (int32_t)480, (int32_t)112,i3335,i3336,i3337,i3338) = Arr4DIdxRowM(tmp74, (int32_t)112, (int32_t)480, (int32_t)1, (int32_t)1,i3331,i3332,i3333,i3334);
i3334 = (i3334 +  (int64_t)1);
if ((i3334 ==  (int64_t)1)) {
i3334 =  (int64_t)0;
i3333 = (i3333 +  (int64_t)1);
if ((i3333 ==  (int64_t)1)) {
i3333 =  (int64_t)0;
i3332 = (i3332 +  (int64_t)1);
if ((i3332 ==  (int64_t)480)) {
i3332 =  (int64_t)0;
i3331 = (i3331 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)112,  (int32_t)480,  (int32_t)1,  (int32_t)1, tmp74);

uint64_t* tmp1410 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480, tmp1406,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480,  (int32_t)1,  (int32_t)1,  (int32_t)112,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp1406, tmp1408, tmp1410);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)480, tmp1406);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)480,  (int32_t)112, tmp1408);

uint64_t* tmp1413 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)14,  (int32_t)14);

int64_t i3346;

int64_t i3345;

int64_t i3344;

int64_t i3343;

int64_t i3342;

int64_t i3341;

int64_t i3340;

int64_t i3339;
i3339 =  (int64_t)0;
i3340 =  (int64_t)0;
i3341 =  (int64_t)0;
i3342 =  (int64_t)0;
for (uint32_t i3343 =  (int32_t)0; i3343 <  (int32_t)1; i3343++){
for (uint32_t i3345 =  (int32_t)0; i3345 <  (int32_t)14; i3345++){
for (uint32_t i3346 =  (int32_t)0; i3346 <  (int32_t)14; i3346++){
for (uint32_t i3344 =  (int32_t)0; i3344 <  (int32_t)112; i3344++){
Arr4DIdxRowM(tmp1413, (int32_t)1, (int32_t)112, (int32_t)14, (int32_t)14,i3343,i3344,i3345,i3346) = Arr4DIdxRowM(tmp1410, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i3339,i3340,i3341,i3342);
i3342 = (i3342 +  (int64_t)1);
if ((i3342 ==  (int64_t)112)) {
i3342 =  (int64_t)0;
i3341 = (i3341 +  (int64_t)1);
if ((i3341 ==  (int64_t)14)) {
i3341 =  (int64_t)0;
i3340 = (i3340 +  (int64_t)1);
if ((i3340 ==  (int64_t)14)) {
i3340 =  (int64_t)0;
i3339 = (i3339 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1410);

uint64_t* tmp1415 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112);

int64_t i3354;

int64_t i3353;

int64_t i3352;

int64_t i3351;

int64_t i3350;

int64_t i3349;

int64_t i3348;

int64_t i3347;
i3347 =  (int64_t)0;
i3348 =  (int64_t)0;
i3349 =  (int64_t)0;
i3350 =  (int64_t)0;
for (uint32_t i3351 =  (int32_t)0; i3351 <  (int32_t)1; i3351++){
for (uint32_t i3354 =  (int32_t)0; i3354 <  (int32_t)112; i3354++){
for (uint32_t i3352 =  (int32_t)0; i3352 <  (int32_t)14; i3352++){
for (uint32_t i3353 =  (int32_t)0; i3353 <  (int32_t)14; i3353++){
Arr4DIdxRowM(tmp1415, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i3351,i3352,i3353,i3354) = Arr4DIdxRowM(tmp1413, (int32_t)1, (int32_t)112, (int32_t)14, (int32_t)14,i3347,i3348,i3349,i3350);
i3350 = (i3350 +  (int64_t)1);
if ((i3350 ==  (int64_t)14)) {
i3350 =  (int64_t)0;
i3349 = (i3349 +  (int64_t)1);
if ((i3349 ==  (int64_t)14)) {
i3349 =  (int64_t)0;
i3348 = (i3348 +  (int64_t)1);
if ((i3348 ==  (int64_t)112)) {
i3348 =  (int64_t)0;
i3347 = (i3347 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)14,  (int32_t)14, tmp1413);

uint64_t* tmp1417 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1415,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1415, tmp75, tmp76,  (int32_t)0,  (int32_t)23, tmp1417);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1415);

uint64_t* tmp1419 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)14,  (int32_t)14);

int64_t i3362;

int64_t i3361;

int64_t i3360;

int64_t i3359;

int64_t i3358;

int64_t i3357;

int64_t i3356;

int64_t i3355;
i3355 =  (int64_t)0;
i3356 =  (int64_t)0;
i3357 =  (int64_t)0;
i3358 =  (int64_t)0;
for (uint32_t i3359 =  (int32_t)0; i3359 <  (int32_t)1; i3359++){
for (uint32_t i3361 =  (int32_t)0; i3361 <  (int32_t)14; i3361++){
for (uint32_t i3362 =  (int32_t)0; i3362 <  (int32_t)14; i3362++){
for (uint32_t i3360 =  (int32_t)0; i3360 <  (int32_t)112; i3360++){
Arr4DIdxRowM(tmp1419, (int32_t)1, (int32_t)112, (int32_t)14, (int32_t)14,i3359,i3360,i3361,i3362) = Arr4DIdxRowM(tmp1417, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i3355,i3356,i3357,i3358);
i3358 = (i3358 +  (int64_t)1);
if ((i3358 ==  (int64_t)112)) {
i3358 =  (int64_t)0;
i3357 = (i3357 +  (int64_t)1);
if ((i3357 ==  (int64_t)14)) {
i3357 =  (int64_t)0;
i3356 = (i3356 +  (int64_t)1);
if ((i3356 ==  (int64_t)14)) {
i3356 =  (int64_t)0;
i3355 = (i3355 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1417);

uint64_t* tmp1421 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80);

int64_t i3370;

int64_t i3369;

int64_t i3368;

int64_t i3367;

int64_t i3366;

int64_t i3365;

int64_t i3364;

int64_t i3363;
i3363 =  (int64_t)0;
i3364 =  (int64_t)0;
i3365 =  (int64_t)0;
i3366 =  (int64_t)0;
for (uint32_t i3367 =  (int32_t)0; i3367 <  (int32_t)1; i3367++){
for (uint32_t i3370 =  (int32_t)0; i3370 <  (int32_t)80; i3370++){
for (uint32_t i3368 =  (int32_t)0; i3368 <  (int32_t)14; i3368++){
for (uint32_t i3369 =  (int32_t)0; i3369 <  (int32_t)14; i3369++){
Arr4DIdxRowM(tmp1421, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)80,i3367,i3368,i3369,i3370) = Arr4DIdxRowM(tmp1281, (int32_t)1, (int32_t)80, (int32_t)14, (int32_t)14,i3363,i3364,i3365,i3366);
i3366 = (i3366 +  (int64_t)1);
if ((i3366 ==  (int64_t)14)) {
i3366 =  (int64_t)0;
i3365 = (i3365 +  (int64_t)1);
if ((i3365 ==  (int64_t)14)) {
i3365 =  (int64_t)0;
i3364 = (i3364 +  (int64_t)1);
if ((i3364 ==  (int64_t)80)) {
i3364 =  (int64_t)0;
i3363 = (i3363 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)80,  (int32_t)14,  (int32_t)14, tmp1281);

uint64_t* tmp1423 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)80,  (int32_t)112);

int64_t i3378;

int64_t i3377;

int64_t i3376;

int64_t i3375;

int64_t i3374;

int64_t i3373;

int64_t i3372;

int64_t i3371;
i3371 =  (int64_t)0;
i3372 =  (int64_t)0;
i3373 =  (int64_t)0;
i3374 =  (int64_t)0;
for (uint32_t i3378 =  (int32_t)0; i3378 <  (int32_t)112; i3378++){
for (uint32_t i3377 =  (int32_t)0; i3377 <  (int32_t)80; i3377++){
for (uint32_t i3375 =  (int32_t)0; i3375 <  (int32_t)1; i3375++){
for (uint32_t i3376 =  (int32_t)0; i3376 <  (int32_t)1; i3376++){
Arr4DIdxRowM(tmp1423, (int32_t)1, (int32_t)1, (int32_t)80, (int32_t)112,i3375,i3376,i3377,i3378) = Arr4DIdxRowM(tmp77, (int32_t)112, (int32_t)80, (int32_t)1, (int32_t)1,i3371,i3372,i3373,i3374);
i3374 = (i3374 +  (int64_t)1);
if ((i3374 ==  (int64_t)1)) {
i3374 =  (int64_t)0;
i3373 = (i3373 +  (int64_t)1);
if ((i3373 ==  (int64_t)1)) {
i3373 =  (int64_t)0;
i3372 = (i3372 +  (int64_t)1);
if ((i3372 ==  (int64_t)80)) {
i3372 =  (int64_t)0;
i3371 = (i3371 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)112,  (int32_t)80,  (int32_t)1,  (int32_t)1, tmp77);

uint64_t* tmp1425 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1421,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80,  (int32_t)1,  (int32_t)1,  (int32_t)112,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp1421, tmp1423, tmp1425);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)80, tmp1421);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)80,  (int32_t)112, tmp1423);

uint64_t* tmp1428 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)14,  (int32_t)14);

int64_t i3386;

int64_t i3385;

int64_t i3384;

int64_t i3383;

int64_t i3382;

int64_t i3381;

int64_t i3380;

int64_t i3379;
i3379 =  (int64_t)0;
i3380 =  (int64_t)0;
i3381 =  (int64_t)0;
i3382 =  (int64_t)0;
for (uint32_t i3383 =  (int32_t)0; i3383 <  (int32_t)1; i3383++){
for (uint32_t i3385 =  (int32_t)0; i3385 <  (int32_t)14; i3385++){
for (uint32_t i3386 =  (int32_t)0; i3386 <  (int32_t)14; i3386++){
for (uint32_t i3384 =  (int32_t)0; i3384 <  (int32_t)112; i3384++){
Arr4DIdxRowM(tmp1428, (int32_t)1, (int32_t)112, (int32_t)14, (int32_t)14,i3383,i3384,i3385,i3386) = Arr4DIdxRowM(tmp1425, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i3379,i3380,i3381,i3382);
i3382 = (i3382 +  (int64_t)1);
if ((i3382 ==  (int64_t)112)) {
i3382 =  (int64_t)0;
i3381 = (i3381 +  (int64_t)1);
if ((i3381 ==  (int64_t)14)) {
i3381 =  (int64_t)0;
i3380 = (i3380 +  (int64_t)1);
if ((i3380 ==  (int64_t)14)) {
i3380 =  (int64_t)0;
i3379 = (i3379 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1425);

uint64_t* tmp1430 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112);

int64_t i3394;

int64_t i3393;

int64_t i3392;

int64_t i3391;

int64_t i3390;

int64_t i3389;

int64_t i3388;

int64_t i3387;
i3387 =  (int64_t)0;
i3388 =  (int64_t)0;
i3389 =  (int64_t)0;
i3390 =  (int64_t)0;
for (uint32_t i3391 =  (int32_t)0; i3391 <  (int32_t)1; i3391++){
for (uint32_t i3394 =  (int32_t)0; i3394 <  (int32_t)112; i3394++){
for (uint32_t i3392 =  (int32_t)0; i3392 <  (int32_t)14; i3392++){
for (uint32_t i3393 =  (int32_t)0; i3393 <  (int32_t)14; i3393++){
Arr4DIdxRowM(tmp1430, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i3391,i3392,i3393,i3394) = Arr4DIdxRowM(tmp1428, (int32_t)1, (int32_t)112, (int32_t)14, (int32_t)14,i3387,i3388,i3389,i3390);
i3390 = (i3390 +  (int64_t)1);
if ((i3390 ==  (int64_t)14)) {
i3390 =  (int64_t)0;
i3389 = (i3389 +  (int64_t)1);
if ((i3389 ==  (int64_t)14)) {
i3389 =  (int64_t)0;
i3388 = (i3388 +  (int64_t)1);
if ((i3388 ==  (int64_t)112)) {
i3388 =  (int64_t)0;
i3387 = (i3387 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)14,  (int32_t)14, tmp1428);

uint64_t* tmp1432 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1430,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1430, tmp75, tmp76,  (int32_t)0,  (int32_t)0, tmp1432);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1430);

uint64_t* tmp1434 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)14,  (int32_t)14);

int64_t i3402;

int64_t i3401;

int64_t i3400;

int64_t i3399;

int64_t i3398;

int64_t i3397;

int64_t i3396;

int64_t i3395;
i3395 =  (int64_t)0;
i3396 =  (int64_t)0;
i3397 =  (int64_t)0;
i3398 =  (int64_t)0;
for (uint32_t i3399 =  (int32_t)0; i3399 <  (int32_t)1; i3399++){
for (uint32_t i3401 =  (int32_t)0; i3401 <  (int32_t)14; i3401++){
for (uint32_t i3402 =  (int32_t)0; i3402 <  (int32_t)14; i3402++){
for (uint32_t i3400 =  (int32_t)0; i3400 <  (int32_t)112; i3400++){
Arr4DIdxRowM(tmp1434, (int32_t)1, (int32_t)112, (int32_t)14, (int32_t)14,i3399,i3400,i3401,i3402) = Arr4DIdxRowM(tmp1432, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i3395,i3396,i3397,i3398);
i3398 = (i3398 +  (int64_t)1);
if ((i3398 ==  (int64_t)112)) {
i3398 =  (int64_t)0;
i3397 = (i3397 +  (int64_t)1);
if ((i3397 ==  (int64_t)14)) {
i3397 =  (int64_t)0;
i3396 = (i3396 +  (int64_t)1);
if ((i3396 ==  (int64_t)14)) {
i3396 =  (int64_t)0;
i3395 = (i3395 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1432);

uint64_t* tmp1436 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112);

int64_t i3410;

int64_t i3409;

int64_t i3408;

int64_t i3407;

int64_t i3406;

int64_t i3405;

int64_t i3404;

int64_t i3403;
i3403 =  (int64_t)0;
i3404 =  (int64_t)0;
i3405 =  (int64_t)0;
i3406 =  (int64_t)0;
for (uint32_t i3407 =  (int32_t)0; i3407 <  (int32_t)1; i3407++){
for (uint32_t i3410 =  (int32_t)0; i3410 <  (int32_t)112; i3410++){
for (uint32_t i3408 =  (int32_t)0; i3408 <  (int32_t)14; i3408++){
for (uint32_t i3409 =  (int32_t)0; i3409 <  (int32_t)14; i3409++){
Arr4DIdxRowM(tmp1436, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i3407,i3408,i3409,i3410) = Arr4DIdxRowM(tmp1419, (int32_t)1, (int32_t)112, (int32_t)14, (int32_t)14,i3403,i3404,i3405,i3406);
i3406 = (i3406 +  (int64_t)1);
if ((i3406 ==  (int64_t)14)) {
i3406 =  (int64_t)0;
i3405 = (i3405 +  (int64_t)1);
if ((i3405 ==  (int64_t)14)) {
i3405 =  (int64_t)0;
i3404 = (i3404 +  (int64_t)1);
if ((i3404 ==  (int64_t)112)) {
i3404 =  (int64_t)0;
i3403 = (i3403 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)14,  (int32_t)14, tmp1419);

uint64_t* tmp1438 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112);

int64_t i3418;

int64_t i3417;

int64_t i3416;

int64_t i3415;

int64_t i3414;

int64_t i3413;

int64_t i3412;

int64_t i3411;
i3411 =  (int64_t)0;
i3412 =  (int64_t)0;
i3413 =  (int64_t)0;
i3414 =  (int64_t)0;
for (uint32_t i3415 =  (int32_t)0; i3415 <  (int32_t)1; i3415++){
for (uint32_t i3418 =  (int32_t)0; i3418 <  (int32_t)112; i3418++){
for (uint32_t i3416 =  (int32_t)0; i3416 <  (int32_t)14; i3416++){
for (uint32_t i3417 =  (int32_t)0; i3417 <  (int32_t)14; i3417++){
Arr4DIdxRowM(tmp1438, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i3415,i3416,i3417,i3418) = Arr4DIdxRowM(tmp1434, (int32_t)1, (int32_t)112, (int32_t)14, (int32_t)14,i3411,i3412,i3413,i3414);
i3414 = (i3414 +  (int64_t)1);
if ((i3414 ==  (int64_t)14)) {
i3414 =  (int64_t)0;
i3413 = (i3413 +  (int64_t)1);
if ((i3413 ==  (int64_t)14)) {
i3413 =  (int64_t)0;
i3412 = (i3412 +  (int64_t)1);
if ((i3412 ==  (int64_t)112)) {
i3412 =  (int64_t)0;
i3411 = (i3411 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)14,  (int32_t)14, tmp1434);

uint64_t* tmp1440 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112);
for (uint32_t i0 =  (int32_t)0; i0 <  (int32_t)1; i0++){
for (uint32_t i1 =  (int32_t)0; i1 <  (int32_t)14; i1++){
for (uint32_t i2 =  (int32_t)0; i2 <  (int32_t)14; i2++){
for (uint32_t i3 =  (int32_t)0; i3 <  (int32_t)112; i3++){
Arr4DIdxRowM(tmp1440, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i0,i1,i2,i3) = SecretAdd(Arr4DIdxRowM(tmp1436, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i0,i1,i2,i3), Arr4DIdxRowM(tmp1438, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i0,i1,i2,i3));
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1438);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1436);

uint64_t* tmp1443 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)14,  (int32_t)14);

int64_t i3426;

int64_t i3425;

int64_t i3424;

int64_t i3423;

int64_t i3422;

int64_t i3421;

int64_t i3420;

int64_t i3419;
i3419 =  (int64_t)0;
i3420 =  (int64_t)0;
i3421 =  (int64_t)0;
i3422 =  (int64_t)0;
for (uint32_t i3423 =  (int32_t)0; i3423 <  (int32_t)1; i3423++){
for (uint32_t i3425 =  (int32_t)0; i3425 <  (int32_t)14; i3425++){
for (uint32_t i3426 =  (int32_t)0; i3426 <  (int32_t)14; i3426++){
for (uint32_t i3424 =  (int32_t)0; i3424 <  (int32_t)112; i3424++){
Arr4DIdxRowM(tmp1443, (int32_t)1, (int32_t)112, (int32_t)14, (int32_t)14,i3423,i3424,i3425,i3426) = Arr4DIdxRowM(tmp1440, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i3419,i3420,i3421,i3422);
i3422 = (i3422 +  (int64_t)1);
if ((i3422 ==  (int64_t)112)) {
i3422 =  (int64_t)0;
i3421 = (i3421 +  (int64_t)1);
if ((i3421 ==  (int64_t)14)) {
i3421 =  (int64_t)0;
i3420 = (i3420 +  (int64_t)1);
if ((i3420 ==  (int64_t)14)) {
i3420 =  (int64_t)0;
i3419 = (i3419 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1440);

uint64_t* tmp1445 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112);

int64_t i3434;

int64_t i3433;

int64_t i3432;

int64_t i3431;

int64_t i3430;

int64_t i3429;

int64_t i3428;

int64_t i3427;
i3427 =  (int64_t)0;
i3428 =  (int64_t)0;
i3429 =  (int64_t)0;
i3430 =  (int64_t)0;
for (uint32_t i3431 =  (int32_t)0; i3431 <  (int32_t)1; i3431++){
for (uint32_t i3434 =  (int32_t)0; i3434 <  (int32_t)112; i3434++){
for (uint32_t i3432 =  (int32_t)0; i3432 <  (int32_t)14; i3432++){
for (uint32_t i3433 =  (int32_t)0; i3433 <  (int32_t)14; i3433++){
Arr4DIdxRowM(tmp1445, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i3431,i3432,i3433,i3434) = Arr4DIdxRowM(tmp1443, (int32_t)1, (int32_t)112, (int32_t)14, (int32_t)14,i3427,i3428,i3429,i3430);
i3430 = (i3430 +  (int64_t)1);
if ((i3430 ==  (int64_t)14)) {
i3430 =  (int64_t)0;
i3429 = (i3429 +  (int64_t)1);
if ((i3429 ==  (int64_t)14)) {
i3429 =  (int64_t)0;
i3428 = (i3428 +  (int64_t)1);
if ((i3428 ==  (int64_t)112)) {
i3428 =  (int64_t)0;
i3427 = (i3427 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp1446 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112);
HardSigmoid4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1445, tmp1446,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1445);

uint64_t* tmp1448 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)14,  (int32_t)14);

int64_t i3442;

int64_t i3441;

int64_t i3440;

int64_t i3439;

int64_t i3438;

int64_t i3437;

int64_t i3436;

int64_t i3435;
i3435 =  (int64_t)0;
i3436 =  (int64_t)0;
i3437 =  (int64_t)0;
i3438 =  (int64_t)0;
for (uint32_t i3439 =  (int32_t)0; i3439 <  (int32_t)1; i3439++){
for (uint32_t i3441 =  (int32_t)0; i3441 <  (int32_t)14; i3441++){
for (uint32_t i3442 =  (int32_t)0; i3442 <  (int32_t)14; i3442++){
for (uint32_t i3440 =  (int32_t)0; i3440 <  (int32_t)112; i3440++){
Arr4DIdxRowM(tmp1448, (int32_t)1, (int32_t)112, (int32_t)14, (int32_t)14,i3439,i3440,i3441,i3442) = Arr4DIdxRowM(tmp1446, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i3435,i3436,i3437,i3438);
i3438 = (i3438 +  (int64_t)1);
if ((i3438 ==  (int64_t)112)) {
i3438 =  (int64_t)0;
i3437 = (i3437 +  (int64_t)1);
if ((i3437 ==  (int64_t)14)) {
i3437 =  (int64_t)0;
i3436 = (i3436 +  (int64_t)1);
if ((i3436 ==  (int64_t)14)) {
i3436 =  (int64_t)0;
i3435 = (i3435 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1446);

uint64_t* tmp1450 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112);

int64_t i3450;

int64_t i3449;

int64_t i3448;

int64_t i3447;

int64_t i3446;

int64_t i3445;

int64_t i3444;

int64_t i3443;
i3443 =  (int64_t)0;
i3444 =  (int64_t)0;
i3445 =  (int64_t)0;
i3446 =  (int64_t)0;
for (uint32_t i3447 =  (int32_t)0; i3447 <  (int32_t)1; i3447++){
for (uint32_t i3450 =  (int32_t)0; i3450 <  (int32_t)112; i3450++){
for (uint32_t i3448 =  (int32_t)0; i3448 <  (int32_t)14; i3448++){
for (uint32_t i3449 =  (int32_t)0; i3449 <  (int32_t)14; i3449++){
Arr4DIdxRowM(tmp1450, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i3447,i3448,i3449,i3450) = Arr4DIdxRowM(tmp1443, (int32_t)1, (int32_t)112, (int32_t)14, (int32_t)14,i3443,i3444,i3445,i3446);
i3446 = (i3446 +  (int64_t)1);
if ((i3446 ==  (int64_t)14)) {
i3446 =  (int64_t)0;
i3445 = (i3445 +  (int64_t)1);
if ((i3445 ==  (int64_t)14)) {
i3445 =  (int64_t)0;
i3444 = (i3444 +  (int64_t)1);
if ((i3444 ==  (int64_t)112)) {
i3444 =  (int64_t)0;
i3443 = (i3443 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)14,  (int32_t)14, tmp1443);

uint64_t* tmp1452 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112);

int64_t i3458;

int64_t i3457;

int64_t i3456;

int64_t i3455;

int64_t i3454;

int64_t i3453;

int64_t i3452;

int64_t i3451;
i3451 =  (int64_t)0;
i3452 =  (int64_t)0;
i3453 =  (int64_t)0;
i3454 =  (int64_t)0;
for (uint32_t i3455 =  (int32_t)0; i3455 <  (int32_t)1; i3455++){
for (uint32_t i3458 =  (int32_t)0; i3458 <  (int32_t)112; i3458++){
for (uint32_t i3456 =  (int32_t)0; i3456 <  (int32_t)14; i3456++){
for (uint32_t i3457 =  (int32_t)0; i3457 <  (int32_t)14; i3457++){
Arr4DIdxRowM(tmp1452, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i3455,i3456,i3457,i3458) = Arr4DIdxRowM(tmp1448, (int32_t)1, (int32_t)112, (int32_t)14, (int32_t)14,i3451,i3452,i3453,i3454);
i3454 = (i3454 +  (int64_t)1);
if ((i3454 ==  (int64_t)14)) {
i3454 =  (int64_t)0;
i3453 = (i3453 +  (int64_t)1);
if ((i3453 ==  (int64_t)14)) {
i3453 =  (int64_t)0;
i3452 = (i3452 +  (int64_t)1);
if ((i3452 ==  (int64_t)112)) {
i3452 =  (int64_t)0;
i3451 = (i3451 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)14,  (int32_t)14, tmp1448);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1450,  (int32_t)23);

uint64_t* tmp1454 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112);

uint64_t* tmp1455 = make_array<uint64_t>( (int32_t)21952);

uint64_t* tmp1456 = make_array<uint64_t>( (int32_t)21952);

uint64_t* tmp1457 = make_array<uint64_t>( (int32_t)21952);

int32_t tmp1458;
for (uint32_t i3459 =  (int32_t)0; i3459 <  (int32_t)1; i3459++){
for (uint32_t i3460 =  (int32_t)0; i3460 <  (int32_t)14; i3460++){
for (uint32_t i3461 =  (int32_t)0; i3461 <  (int32_t)14; i3461++){
for (uint32_t i3462 =  (int32_t)0; i3462 <  (int32_t)112; i3462++){
tmp1458 = (((( (int32_t)0 + (i3459 *  (int32_t)21952)) + (i3460 *  (int32_t)1568)) + (i3461 *  (int32_t)112)) + (i3462 *  (int32_t)1));
Arr1DIdxRowM(tmp1455, (int32_t)21952,tmp1458) = Arr4DIdxRowM(tmp1450, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i3459,i3460,i3461,i3462);
Arr1DIdxRowM(tmp1456, (int32_t)21952,tmp1458) = Arr4DIdxRowM(tmp1452, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i3459,i3460,i3461,i3462);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)21952, tmp1455, tmp1456, tmp1457);
ClearMemSecret1( (int32_t)21952, tmp1455);
ClearMemSecret1( (int32_t)21952, tmp1456);
for (uint32_t i3459 =  (int32_t)0; i3459 <  (int32_t)1; i3459++){
for (uint32_t i3460 =  (int32_t)0; i3460 <  (int32_t)14; i3460++){
for (uint32_t i3461 =  (int32_t)0; i3461 <  (int32_t)14; i3461++){
for (uint32_t i3462 =  (int32_t)0; i3462 <  (int32_t)112; i3462++){
tmp1458 = (((( (int32_t)0 + (i3459 *  (int32_t)21952)) + (i3460 *  (int32_t)1568)) + (i3461 *  (int32_t)112)) + (i3462 *  (int32_t)1));
Arr4DIdxRowM(tmp1454, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i3459,i3460,i3461,i3462) = Arr1DIdxRowM(tmp1457, (int32_t)21952,tmp1458);
}
}
}
}
ClearMemSecret1( (int32_t)21952, tmp1457);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1450);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1452);

uint64_t* tmp1461 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)14,  (int32_t)14);

int64_t i3470;

int64_t i3469;

int64_t i3468;

int64_t i3467;

int64_t i3466;

int64_t i3465;

int64_t i3464;

int64_t i3463;
i3463 =  (int64_t)0;
i3464 =  (int64_t)0;
i3465 =  (int64_t)0;
i3466 =  (int64_t)0;
for (uint32_t i3467 =  (int32_t)0; i3467 <  (int32_t)1; i3467++){
for (uint32_t i3469 =  (int32_t)0; i3469 <  (int32_t)14; i3469++){
for (uint32_t i3470 =  (int32_t)0; i3470 <  (int32_t)14; i3470++){
for (uint32_t i3468 =  (int32_t)0; i3468 <  (int32_t)112; i3468++){
Arr4DIdxRowM(tmp1461, (int32_t)1, (int32_t)112, (int32_t)14, (int32_t)14,i3467,i3468,i3469,i3470) = Arr4DIdxRowM(tmp1454, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i3463,i3464,i3465,i3466);
i3466 = (i3466 +  (int64_t)1);
if ((i3466 ==  (int64_t)112)) {
i3466 =  (int64_t)0;
i3465 = (i3465 +  (int64_t)1);
if ((i3465 ==  (int64_t)14)) {
i3465 =  (int64_t)0;
i3464 = (i3464 +  (int64_t)1);
if ((i3464 ==  (int64_t)14)) {
i3464 =  (int64_t)0;
i3463 = (i3463 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1454);

uint64_t* tmp1463 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112);

int64_t i3478;

int64_t i3477;

int64_t i3476;

int64_t i3475;

int64_t i3474;

int64_t i3473;

int64_t i3472;

int64_t i3471;
i3471 =  (int64_t)0;
i3472 =  (int64_t)0;
i3473 =  (int64_t)0;
i3474 =  (int64_t)0;
for (uint32_t i3475 =  (int32_t)0; i3475 <  (int32_t)1; i3475++){
for (uint32_t i3478 =  (int32_t)0; i3478 <  (int32_t)112; i3478++){
for (uint32_t i3476 =  (int32_t)0; i3476 <  (int32_t)14; i3476++){
for (uint32_t i3477 =  (int32_t)0; i3477 <  (int32_t)14; i3477++){
Arr4DIdxRowM(tmp1463, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i3475,i3476,i3477,i3478) = Arr4DIdxRowM(tmp1461, (int32_t)1, (int32_t)112, (int32_t)14, (int32_t)14,i3471,i3472,i3473,i3474);
i3474 = (i3474 +  (int64_t)1);
if ((i3474 ==  (int64_t)14)) {
i3474 =  (int64_t)0;
i3473 = (i3473 +  (int64_t)1);
if ((i3473 ==  (int64_t)14)) {
i3473 =  (int64_t)0;
i3472 = (i3472 +  (int64_t)1);
if ((i3472 ==  (int64_t)112)) {
i3472 =  (int64_t)0;
i3471 = (i3471 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp1464 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)112,  (int32_t)672);

int64_t i3486;

int64_t i3485;

int64_t i3484;

int64_t i3483;

int64_t i3482;

int64_t i3481;

int64_t i3480;

int64_t i3479;
i3479 =  (int64_t)0;
i3480 =  (int64_t)0;
i3481 =  (int64_t)0;
i3482 =  (int64_t)0;
for (uint32_t i3486 =  (int32_t)0; i3486 <  (int32_t)672; i3486++){
for (uint32_t i3485 =  (int32_t)0; i3485 <  (int32_t)112; i3485++){
for (uint32_t i3483 =  (int32_t)0; i3483 <  (int32_t)1; i3483++){
for (uint32_t i3484 =  (int32_t)0; i3484 <  (int32_t)1; i3484++){
Arr4DIdxRowM(tmp1464, (int32_t)1, (int32_t)1, (int32_t)112, (int32_t)672,i3483,i3484,i3485,i3486) = Arr4DIdxRowM(tmp78, (int32_t)672, (int32_t)112, (int32_t)1, (int32_t)1,i3479,i3480,i3481,i3482);
i3482 = (i3482 +  (int64_t)1);
if ((i3482 ==  (int64_t)1)) {
i3482 =  (int64_t)0;
i3481 = (i3481 +  (int64_t)1);
if ((i3481 ==  (int64_t)1)) {
i3481 =  (int64_t)0;
i3480 = (i3480 +  (int64_t)1);
if ((i3480 ==  (int64_t)112)) {
i3480 =  (int64_t)0;
i3479 = (i3479 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)672,  (int32_t)112,  (int32_t)1,  (int32_t)1, tmp78);

uint64_t* tmp1466 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1463,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112,  (int32_t)1,  (int32_t)1,  (int32_t)672,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp1463, tmp1464, tmp1466);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1463);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)112,  (int32_t)672, tmp1464);

uint64_t* tmp1469 = make_array<uint64_t>( (int32_t)1,  (int32_t)672,  (int32_t)14,  (int32_t)14);

int64_t i3494;

int64_t i3493;

int64_t i3492;

int64_t i3491;

int64_t i3490;

int64_t i3489;

int64_t i3488;

int64_t i3487;
i3487 =  (int64_t)0;
i3488 =  (int64_t)0;
i3489 =  (int64_t)0;
i3490 =  (int64_t)0;
for (uint32_t i3491 =  (int32_t)0; i3491 <  (int32_t)1; i3491++){
for (uint32_t i3493 =  (int32_t)0; i3493 <  (int32_t)14; i3493++){
for (uint32_t i3494 =  (int32_t)0; i3494 <  (int32_t)14; i3494++){
for (uint32_t i3492 =  (int32_t)0; i3492 <  (int32_t)672; i3492++){
Arr4DIdxRowM(tmp1469, (int32_t)1, (int32_t)672, (int32_t)14, (int32_t)14,i3491,i3492,i3493,i3494) = Arr4DIdxRowM(tmp1466, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3487,i3488,i3489,i3490);
i3490 = (i3490 +  (int64_t)1);
if ((i3490 ==  (int64_t)672)) {
i3490 =  (int64_t)0;
i3489 = (i3489 +  (int64_t)1);
if ((i3489 ==  (int64_t)14)) {
i3489 =  (int64_t)0;
i3488 = (i3488 +  (int64_t)1);
if ((i3488 ==  (int64_t)14)) {
i3488 =  (int64_t)0;
i3487 = (i3487 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1466);

uint64_t* tmp1471 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672);

int64_t i3502;

int64_t i3501;

int64_t i3500;

int64_t i3499;

int64_t i3498;

int64_t i3497;

int64_t i3496;

int64_t i3495;
i3495 =  (int64_t)0;
i3496 =  (int64_t)0;
i3497 =  (int64_t)0;
i3498 =  (int64_t)0;
for (uint32_t i3499 =  (int32_t)0; i3499 <  (int32_t)1; i3499++){
for (uint32_t i3502 =  (int32_t)0; i3502 <  (int32_t)672; i3502++){
for (uint32_t i3500 =  (int32_t)0; i3500 <  (int32_t)14; i3500++){
for (uint32_t i3501 =  (int32_t)0; i3501 <  (int32_t)14; i3501++){
Arr4DIdxRowM(tmp1471, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3499,i3500,i3501,i3502) = Arr4DIdxRowM(tmp1469, (int32_t)1, (int32_t)672, (int32_t)14, (int32_t)14,i3495,i3496,i3497,i3498);
i3498 = (i3498 +  (int64_t)1);
if ((i3498 ==  (int64_t)14)) {
i3498 =  (int64_t)0;
i3497 = (i3497 +  (int64_t)1);
if ((i3497 ==  (int64_t)14)) {
i3497 =  (int64_t)0;
i3496 = (i3496 +  (int64_t)1);
if ((i3496 ==  (int64_t)672)) {
i3496 =  (int64_t)0;
i3495 = (i3495 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)672,  (int32_t)14,  (int32_t)14, tmp1469);

uint64_t* tmp1473 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1471,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1471, tmp79, tmp80,  (int32_t)0,  (int32_t)23, tmp1473);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1471);

uint64_t* tmp1475 = make_array<uint64_t>( (int32_t)1,  (int32_t)672,  (int32_t)14,  (int32_t)14);

int64_t i3510;

int64_t i3509;

int64_t i3508;

int64_t i3507;

int64_t i3506;

int64_t i3505;

int64_t i3504;

int64_t i3503;
i3503 =  (int64_t)0;
i3504 =  (int64_t)0;
i3505 =  (int64_t)0;
i3506 =  (int64_t)0;
for (uint32_t i3507 =  (int32_t)0; i3507 <  (int32_t)1; i3507++){
for (uint32_t i3509 =  (int32_t)0; i3509 <  (int32_t)14; i3509++){
for (uint32_t i3510 =  (int32_t)0; i3510 <  (int32_t)14; i3510++){
for (uint32_t i3508 =  (int32_t)0; i3508 <  (int32_t)672; i3508++){
Arr4DIdxRowM(tmp1475, (int32_t)1, (int32_t)672, (int32_t)14, (int32_t)14,i3507,i3508,i3509,i3510) = Arr4DIdxRowM(tmp1473, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3503,i3504,i3505,i3506);
i3506 = (i3506 +  (int64_t)1);
if ((i3506 ==  (int64_t)672)) {
i3506 =  (int64_t)0;
i3505 = (i3505 +  (int64_t)1);
if ((i3505 ==  (int64_t)14)) {
i3505 =  (int64_t)0;
i3504 = (i3504 +  (int64_t)1);
if ((i3504 ==  (int64_t)14)) {
i3504 =  (int64_t)0;
i3503 = (i3503 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1473);

uint64_t* tmp1477 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672);

int64_t i3518;

int64_t i3517;

int64_t i3516;

int64_t i3515;

int64_t i3514;

int64_t i3513;

int64_t i3512;

int64_t i3511;
i3511 =  (int64_t)0;
i3512 =  (int64_t)0;
i3513 =  (int64_t)0;
i3514 =  (int64_t)0;
for (uint32_t i3515 =  (int32_t)0; i3515 <  (int32_t)1; i3515++){
for (uint32_t i3518 =  (int32_t)0; i3518 <  (int32_t)672; i3518++){
for (uint32_t i3516 =  (int32_t)0; i3516 <  (int32_t)14; i3516++){
for (uint32_t i3517 =  (int32_t)0; i3517 <  (int32_t)14; i3517++){
Arr4DIdxRowM(tmp1477, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3515,i3516,i3517,i3518) = Arr4DIdxRowM(tmp1475, (int32_t)1, (int32_t)672, (int32_t)14, (int32_t)14,i3511,i3512,i3513,i3514);
i3514 = (i3514 +  (int64_t)1);
if ((i3514 ==  (int64_t)14)) {
i3514 =  (int64_t)0;
i3513 = (i3513 +  (int64_t)1);
if ((i3513 ==  (int64_t)14)) {
i3513 =  (int64_t)0;
i3512 = (i3512 +  (int64_t)1);
if ((i3512 ==  (int64_t)672)) {
i3512 =  (int64_t)0;
i3511 = (i3511 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp1478 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672);
HardSigmoid4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1477, tmp1478,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1477);

uint64_t* tmp1480 = make_array<uint64_t>( (int32_t)1,  (int32_t)672,  (int32_t)14,  (int32_t)14);

int64_t i3526;

int64_t i3525;

int64_t i3524;

int64_t i3523;

int64_t i3522;

int64_t i3521;

int64_t i3520;

int64_t i3519;
i3519 =  (int64_t)0;
i3520 =  (int64_t)0;
i3521 =  (int64_t)0;
i3522 =  (int64_t)0;
for (uint32_t i3523 =  (int32_t)0; i3523 <  (int32_t)1; i3523++){
for (uint32_t i3525 =  (int32_t)0; i3525 <  (int32_t)14; i3525++){
for (uint32_t i3526 =  (int32_t)0; i3526 <  (int32_t)14; i3526++){
for (uint32_t i3524 =  (int32_t)0; i3524 <  (int32_t)672; i3524++){
Arr4DIdxRowM(tmp1480, (int32_t)1, (int32_t)672, (int32_t)14, (int32_t)14,i3523,i3524,i3525,i3526) = Arr4DIdxRowM(tmp1478, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3519,i3520,i3521,i3522);
i3522 = (i3522 +  (int64_t)1);
if ((i3522 ==  (int64_t)672)) {
i3522 =  (int64_t)0;
i3521 = (i3521 +  (int64_t)1);
if ((i3521 ==  (int64_t)14)) {
i3521 =  (int64_t)0;
i3520 = (i3520 +  (int64_t)1);
if ((i3520 ==  (int64_t)14)) {
i3520 =  (int64_t)0;
i3519 = (i3519 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1478);

uint64_t* tmp1482 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672);

int64_t i3534;

int64_t i3533;

int64_t i3532;

int64_t i3531;

int64_t i3530;

int64_t i3529;

int64_t i3528;

int64_t i3527;
i3527 =  (int64_t)0;
i3528 =  (int64_t)0;
i3529 =  (int64_t)0;
i3530 =  (int64_t)0;
for (uint32_t i3531 =  (int32_t)0; i3531 <  (int32_t)1; i3531++){
for (uint32_t i3534 =  (int32_t)0; i3534 <  (int32_t)672; i3534++){
for (uint32_t i3532 =  (int32_t)0; i3532 <  (int32_t)14; i3532++){
for (uint32_t i3533 =  (int32_t)0; i3533 <  (int32_t)14; i3533++){
Arr4DIdxRowM(tmp1482, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3531,i3532,i3533,i3534) = Arr4DIdxRowM(tmp1475, (int32_t)1, (int32_t)672, (int32_t)14, (int32_t)14,i3527,i3528,i3529,i3530);
i3530 = (i3530 +  (int64_t)1);
if ((i3530 ==  (int64_t)14)) {
i3530 =  (int64_t)0;
i3529 = (i3529 +  (int64_t)1);
if ((i3529 ==  (int64_t)14)) {
i3529 =  (int64_t)0;
i3528 = (i3528 +  (int64_t)1);
if ((i3528 ==  (int64_t)672)) {
i3528 =  (int64_t)0;
i3527 = (i3527 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)672,  (int32_t)14,  (int32_t)14, tmp1475);

uint64_t* tmp1484 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672);

int64_t i3542;

int64_t i3541;

int64_t i3540;

int64_t i3539;

int64_t i3538;

int64_t i3537;

int64_t i3536;

int64_t i3535;
i3535 =  (int64_t)0;
i3536 =  (int64_t)0;
i3537 =  (int64_t)0;
i3538 =  (int64_t)0;
for (uint32_t i3539 =  (int32_t)0; i3539 <  (int32_t)1; i3539++){
for (uint32_t i3542 =  (int32_t)0; i3542 <  (int32_t)672; i3542++){
for (uint32_t i3540 =  (int32_t)0; i3540 <  (int32_t)14; i3540++){
for (uint32_t i3541 =  (int32_t)0; i3541 <  (int32_t)14; i3541++){
Arr4DIdxRowM(tmp1484, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3539,i3540,i3541,i3542) = Arr4DIdxRowM(tmp1480, (int32_t)1, (int32_t)672, (int32_t)14, (int32_t)14,i3535,i3536,i3537,i3538);
i3538 = (i3538 +  (int64_t)1);
if ((i3538 ==  (int64_t)14)) {
i3538 =  (int64_t)0;
i3537 = (i3537 +  (int64_t)1);
if ((i3537 ==  (int64_t)14)) {
i3537 =  (int64_t)0;
i3536 = (i3536 +  (int64_t)1);
if ((i3536 ==  (int64_t)672)) {
i3536 =  (int64_t)0;
i3535 = (i3535 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)672,  (int32_t)14,  (int32_t)14, tmp1480);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1482,  (int32_t)23);

uint64_t* tmp1486 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672);

uint64_t* tmp1487 = make_array<uint64_t>( (int32_t)131712);

uint64_t* tmp1488 = make_array<uint64_t>( (int32_t)131712);

uint64_t* tmp1489 = make_array<uint64_t>( (int32_t)131712);

int32_t tmp1490;
for (uint32_t i3543 =  (int32_t)0; i3543 <  (int32_t)1; i3543++){
for (uint32_t i3544 =  (int32_t)0; i3544 <  (int32_t)14; i3544++){
for (uint32_t i3545 =  (int32_t)0; i3545 <  (int32_t)14; i3545++){
for (uint32_t i3546 =  (int32_t)0; i3546 <  (int32_t)672; i3546++){
tmp1490 = (((( (int32_t)0 + (i3543 *  (int32_t)131712)) + (i3544 *  (int32_t)9408)) + (i3545 *  (int32_t)672)) + (i3546 *  (int32_t)1));
Arr1DIdxRowM(tmp1487, (int32_t)131712,tmp1490) = Arr4DIdxRowM(tmp1482, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3543,i3544,i3545,i3546);
Arr1DIdxRowM(tmp1488, (int32_t)131712,tmp1490) = Arr4DIdxRowM(tmp1484, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3543,i3544,i3545,i3546);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)131712, tmp1487, tmp1488, tmp1489);
ClearMemSecret1( (int32_t)131712, tmp1487);
ClearMemSecret1( (int32_t)131712, tmp1488);
for (uint32_t i3543 =  (int32_t)0; i3543 <  (int32_t)1; i3543++){
for (uint32_t i3544 =  (int32_t)0; i3544 <  (int32_t)14; i3544++){
for (uint32_t i3545 =  (int32_t)0; i3545 <  (int32_t)14; i3545++){
for (uint32_t i3546 =  (int32_t)0; i3546 <  (int32_t)672; i3546++){
tmp1490 = (((( (int32_t)0 + (i3543 *  (int32_t)131712)) + (i3544 *  (int32_t)9408)) + (i3545 *  (int32_t)672)) + (i3546 *  (int32_t)1));
Arr4DIdxRowM(tmp1486, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3543,i3544,i3545,i3546) = Arr1DIdxRowM(tmp1489, (int32_t)131712,tmp1490);
}
}
}
}
ClearMemSecret1( (int32_t)131712, tmp1489);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1484);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1482);

uint64_t* tmp1493 = make_array<uint64_t>( (int32_t)1,  (int32_t)672,  (int32_t)14,  (int32_t)14);

int64_t i3554;

int64_t i3553;

int64_t i3552;

int64_t i3551;

int64_t i3550;

int64_t i3549;

int64_t i3548;

int64_t i3547;
i3547 =  (int64_t)0;
i3548 =  (int64_t)0;
i3549 =  (int64_t)0;
i3550 =  (int64_t)0;
for (uint32_t i3551 =  (int32_t)0; i3551 <  (int32_t)1; i3551++){
for (uint32_t i3553 =  (int32_t)0; i3553 <  (int32_t)14; i3553++){
for (uint32_t i3554 =  (int32_t)0; i3554 <  (int32_t)14; i3554++){
for (uint32_t i3552 =  (int32_t)0; i3552 <  (int32_t)672; i3552++){
Arr4DIdxRowM(tmp1493, (int32_t)1, (int32_t)672, (int32_t)14, (int32_t)14,i3551,i3552,i3553,i3554) = Arr4DIdxRowM(tmp1486, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3547,i3548,i3549,i3550);
i3550 = (i3550 +  (int64_t)1);
if ((i3550 ==  (int64_t)672)) {
i3550 =  (int64_t)0;
i3549 = (i3549 +  (int64_t)1);
if ((i3549 ==  (int64_t)14)) {
i3549 =  (int64_t)0;
i3548 = (i3548 +  (int64_t)1);
if ((i3548 ==  (int64_t)14)) {
i3548 =  (int64_t)0;
i3547 = (i3547 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1486);

uint64_t* tmp1495 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672);

int64_t i3562;

int64_t i3561;

int64_t i3560;

int64_t i3559;

int64_t i3558;

int64_t i3557;

int64_t i3556;

int64_t i3555;
i3555 =  (int64_t)0;
i3556 =  (int64_t)0;
i3557 =  (int64_t)0;
i3558 =  (int64_t)0;
for (uint32_t i3559 =  (int32_t)0; i3559 <  (int32_t)1; i3559++){
for (uint32_t i3562 =  (int32_t)0; i3562 <  (int32_t)672; i3562++){
for (uint32_t i3560 =  (int32_t)0; i3560 <  (int32_t)14; i3560++){
for (uint32_t i3561 =  (int32_t)0; i3561 <  (int32_t)14; i3561++){
Arr4DIdxRowM(tmp1495, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3559,i3560,i3561,i3562) = Arr4DIdxRowM(tmp1493, (int32_t)1, (int32_t)672, (int32_t)14, (int32_t)14,i3555,i3556,i3557,i3558);
i3558 = (i3558 +  (int64_t)1);
if ((i3558 ==  (int64_t)14)) {
i3558 =  (int64_t)0;
i3557 = (i3557 +  (int64_t)1);
if ((i3557 ==  (int64_t)14)) {
i3557 =  (int64_t)0;
i3556 = (i3556 +  (int64_t)1);
if ((i3556 ==  (int64_t)672)) {
i3556 =  (int64_t)0;
i3555 = (i3555 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)672,  (int32_t)14,  (int32_t)14, tmp1493);

uint64_t* tmp1497 = make_array<uint64_t>( (int32_t)3,  (int32_t)3,  (int32_t)1,  (int32_t)672);

int64_t i3570;

int64_t i3569;

int64_t i3568;

int64_t i3567;

int64_t i3566;

int64_t i3565;

int64_t i3564;

int64_t i3563;
i3563 =  (int64_t)0;
i3564 =  (int64_t)0;
i3565 =  (int64_t)0;
i3566 =  (int64_t)0;
for (uint32_t i3570 =  (int32_t)0; i3570 <  (int32_t)672; i3570++){
for (uint32_t i3569 =  (int32_t)0; i3569 <  (int32_t)1; i3569++){
for (uint32_t i3567 =  (int32_t)0; i3567 <  (int32_t)3; i3567++){
for (uint32_t i3568 =  (int32_t)0; i3568 <  (int32_t)3; i3568++){
Arr4DIdxRowM(tmp1497, (int32_t)3, (int32_t)3, (int32_t)1, (int32_t)672,i3567,i3568,i3569,i3570) = Arr4DIdxRowM(tmp81, (int32_t)672, (int32_t)1, (int32_t)3, (int32_t)3,i3563,i3564,i3565,i3566);
i3566 = (i3566 +  (int64_t)1);
if ((i3566 ==  (int64_t)3)) {
i3566 =  (int64_t)0;
i3565 = (i3565 +  (int64_t)1);
if ((i3565 ==  (int64_t)3)) {
i3565 =  (int64_t)0;
i3564 = (i3564 +  (int64_t)1);
if ((i3564 ==  (int64_t)1)) {
i3564 =  (int64_t)0;
i3563 = (i3563 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)672,  (int32_t)1,  (int32_t)3,  (int32_t)3, tmp81);

uint64_t* tmp1499 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1495,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672,  (int32_t)3,  (int32_t)3,  (int32_t)672,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672, tmp1495, tmp1497, tmp1499);
ClearMemSecret4( (int32_t)3,  (int32_t)3,  (int32_t)1,  (int32_t)672, tmp1497);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1495);

uint64_t* tmp1502 = make_array<uint64_t>( (int32_t)1,  (int32_t)672,  (int32_t)14,  (int32_t)14);

int64_t i3578;

int64_t i3577;

int64_t i3576;

int64_t i3575;

int64_t i3574;

int64_t i3573;

int64_t i3572;

int64_t i3571;
i3571 =  (int64_t)0;
i3572 =  (int64_t)0;
i3573 =  (int64_t)0;
i3574 =  (int64_t)0;
for (uint32_t i3575 =  (int32_t)0; i3575 <  (int32_t)1; i3575++){
for (uint32_t i3577 =  (int32_t)0; i3577 <  (int32_t)14; i3577++){
for (uint32_t i3578 =  (int32_t)0; i3578 <  (int32_t)14; i3578++){
for (uint32_t i3576 =  (int32_t)0; i3576 <  (int32_t)672; i3576++){
Arr4DIdxRowM(tmp1502, (int32_t)1, (int32_t)672, (int32_t)14, (int32_t)14,i3575,i3576,i3577,i3578) = Arr4DIdxRowM(tmp1499, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3571,i3572,i3573,i3574);
i3574 = (i3574 +  (int64_t)1);
if ((i3574 ==  (int64_t)672)) {
i3574 =  (int64_t)0;
i3573 = (i3573 +  (int64_t)1);
if ((i3573 ==  (int64_t)14)) {
i3573 =  (int64_t)0;
i3572 = (i3572 +  (int64_t)1);
if ((i3572 ==  (int64_t)14)) {
i3572 =  (int64_t)0;
i3571 = (i3571 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1499);

uint64_t* tmp1504 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672);

int64_t i3586;

int64_t i3585;

int64_t i3584;

int64_t i3583;

int64_t i3582;

int64_t i3581;

int64_t i3580;

int64_t i3579;
i3579 =  (int64_t)0;
i3580 =  (int64_t)0;
i3581 =  (int64_t)0;
i3582 =  (int64_t)0;
for (uint32_t i3583 =  (int32_t)0; i3583 <  (int32_t)1; i3583++){
for (uint32_t i3586 =  (int32_t)0; i3586 <  (int32_t)672; i3586++){
for (uint32_t i3584 =  (int32_t)0; i3584 <  (int32_t)14; i3584++){
for (uint32_t i3585 =  (int32_t)0; i3585 <  (int32_t)14; i3585++){
Arr4DIdxRowM(tmp1504, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3583,i3584,i3585,i3586) = Arr4DIdxRowM(tmp1502, (int32_t)1, (int32_t)672, (int32_t)14, (int32_t)14,i3579,i3580,i3581,i3582);
i3582 = (i3582 +  (int64_t)1);
if ((i3582 ==  (int64_t)14)) {
i3582 =  (int64_t)0;
i3581 = (i3581 +  (int64_t)1);
if ((i3581 ==  (int64_t)14)) {
i3581 =  (int64_t)0;
i3580 = (i3580 +  (int64_t)1);
if ((i3580 ==  (int64_t)672)) {
i3580 =  (int64_t)0;
i3579 = (i3579 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)672,  (int32_t)14,  (int32_t)14, tmp1502);

uint64_t* tmp1506 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1504,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1504, tmp79, tmp80,  (int32_t)0,  (int32_t)0, tmp1506);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1504);

uint64_t* tmp1508 = make_array<uint64_t>( (int32_t)1,  (int32_t)672,  (int32_t)14,  (int32_t)14);

int64_t i3594;

int64_t i3593;

int64_t i3592;

int64_t i3591;

int64_t i3590;

int64_t i3589;

int64_t i3588;

int64_t i3587;
i3587 =  (int64_t)0;
i3588 =  (int64_t)0;
i3589 =  (int64_t)0;
i3590 =  (int64_t)0;
for (uint32_t i3591 =  (int32_t)0; i3591 <  (int32_t)1; i3591++){
for (uint32_t i3593 =  (int32_t)0; i3593 <  (int32_t)14; i3593++){
for (uint32_t i3594 =  (int32_t)0; i3594 <  (int32_t)14; i3594++){
for (uint32_t i3592 =  (int32_t)0; i3592 <  (int32_t)672; i3592++){
Arr4DIdxRowM(tmp1508, (int32_t)1, (int32_t)672, (int32_t)14, (int32_t)14,i3591,i3592,i3593,i3594) = Arr4DIdxRowM(tmp1506, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3587,i3588,i3589,i3590);
i3590 = (i3590 +  (int64_t)1);
if ((i3590 ==  (int64_t)672)) {
i3590 =  (int64_t)0;
i3589 = (i3589 +  (int64_t)1);
if ((i3589 ==  (int64_t)14)) {
i3589 =  (int64_t)0;
i3588 = (i3588 +  (int64_t)1);
if ((i3588 ==  (int64_t)14)) {
i3588 =  (int64_t)0;
i3587 = (i3587 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1506);

uint64_t* tmp1510 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672);

int64_t i3602;

int64_t i3601;

int64_t i3600;

int64_t i3599;

int64_t i3598;

int64_t i3597;

int64_t i3596;

int64_t i3595;
i3595 =  (int64_t)0;
i3596 =  (int64_t)0;
i3597 =  (int64_t)0;
i3598 =  (int64_t)0;
for (uint32_t i3599 =  (int32_t)0; i3599 <  (int32_t)1; i3599++){
for (uint32_t i3602 =  (int32_t)0; i3602 <  (int32_t)672; i3602++){
for (uint32_t i3600 =  (int32_t)0; i3600 <  (int32_t)14; i3600++){
for (uint32_t i3601 =  (int32_t)0; i3601 <  (int32_t)14; i3601++){
Arr4DIdxRowM(tmp1510, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3599,i3600,i3601,i3602) = Arr4DIdxRowM(tmp1508, (int32_t)1, (int32_t)672, (int32_t)14, (int32_t)14,i3595,i3596,i3597,i3598);
i3598 = (i3598 +  (int64_t)1);
if ((i3598 ==  (int64_t)14)) {
i3598 =  (int64_t)0;
i3597 = (i3597 +  (int64_t)1);
if ((i3597 ==  (int64_t)14)) {
i3597 =  (int64_t)0;
i3596 = (i3596 +  (int64_t)1);
if ((i3596 ==  (int64_t)672)) {
i3596 =  (int64_t)0;
i3595 = (i3595 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp1511 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672);
HardSigmoid4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1510, tmp1511,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1510);

uint64_t* tmp1513 = make_array<uint64_t>( (int32_t)1,  (int32_t)672,  (int32_t)14,  (int32_t)14);

int64_t i3610;

int64_t i3609;

int64_t i3608;

int64_t i3607;

int64_t i3606;

int64_t i3605;

int64_t i3604;

int64_t i3603;
i3603 =  (int64_t)0;
i3604 =  (int64_t)0;
i3605 =  (int64_t)0;
i3606 =  (int64_t)0;
for (uint32_t i3607 =  (int32_t)0; i3607 <  (int32_t)1; i3607++){
for (uint32_t i3609 =  (int32_t)0; i3609 <  (int32_t)14; i3609++){
for (uint32_t i3610 =  (int32_t)0; i3610 <  (int32_t)14; i3610++){
for (uint32_t i3608 =  (int32_t)0; i3608 <  (int32_t)672; i3608++){
Arr4DIdxRowM(tmp1513, (int32_t)1, (int32_t)672, (int32_t)14, (int32_t)14,i3607,i3608,i3609,i3610) = Arr4DIdxRowM(tmp1511, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3603,i3604,i3605,i3606);
i3606 = (i3606 +  (int64_t)1);
if ((i3606 ==  (int64_t)672)) {
i3606 =  (int64_t)0;
i3605 = (i3605 +  (int64_t)1);
if ((i3605 ==  (int64_t)14)) {
i3605 =  (int64_t)0;
i3604 = (i3604 +  (int64_t)1);
if ((i3604 ==  (int64_t)14)) {
i3604 =  (int64_t)0;
i3603 = (i3603 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1511);

uint64_t* tmp1515 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672);

int64_t i3618;

int64_t i3617;

int64_t i3616;

int64_t i3615;

int64_t i3614;

int64_t i3613;

int64_t i3612;

int64_t i3611;
i3611 =  (int64_t)0;
i3612 =  (int64_t)0;
i3613 =  (int64_t)0;
i3614 =  (int64_t)0;
for (uint32_t i3615 =  (int32_t)0; i3615 <  (int32_t)1; i3615++){
for (uint32_t i3618 =  (int32_t)0; i3618 <  (int32_t)672; i3618++){
for (uint32_t i3616 =  (int32_t)0; i3616 <  (int32_t)14; i3616++){
for (uint32_t i3617 =  (int32_t)0; i3617 <  (int32_t)14; i3617++){
Arr4DIdxRowM(tmp1515, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3615,i3616,i3617,i3618) = Arr4DIdxRowM(tmp1508, (int32_t)1, (int32_t)672, (int32_t)14, (int32_t)14,i3611,i3612,i3613,i3614);
i3614 = (i3614 +  (int64_t)1);
if ((i3614 ==  (int64_t)14)) {
i3614 =  (int64_t)0;
i3613 = (i3613 +  (int64_t)1);
if ((i3613 ==  (int64_t)14)) {
i3613 =  (int64_t)0;
i3612 = (i3612 +  (int64_t)1);
if ((i3612 ==  (int64_t)672)) {
i3612 =  (int64_t)0;
i3611 = (i3611 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)672,  (int32_t)14,  (int32_t)14, tmp1508);

uint64_t* tmp1517 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672);

int64_t i3626;

int64_t i3625;

int64_t i3624;

int64_t i3623;

int64_t i3622;

int64_t i3621;

int64_t i3620;

int64_t i3619;
i3619 =  (int64_t)0;
i3620 =  (int64_t)0;
i3621 =  (int64_t)0;
i3622 =  (int64_t)0;
for (uint32_t i3623 =  (int32_t)0; i3623 <  (int32_t)1; i3623++){
for (uint32_t i3626 =  (int32_t)0; i3626 <  (int32_t)672; i3626++){
for (uint32_t i3624 =  (int32_t)0; i3624 <  (int32_t)14; i3624++){
for (uint32_t i3625 =  (int32_t)0; i3625 <  (int32_t)14; i3625++){
Arr4DIdxRowM(tmp1517, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3623,i3624,i3625,i3626) = Arr4DIdxRowM(tmp1513, (int32_t)1, (int32_t)672, (int32_t)14, (int32_t)14,i3619,i3620,i3621,i3622);
i3622 = (i3622 +  (int64_t)1);
if ((i3622 ==  (int64_t)14)) {
i3622 =  (int64_t)0;
i3621 = (i3621 +  (int64_t)1);
if ((i3621 ==  (int64_t)14)) {
i3621 =  (int64_t)0;
i3620 = (i3620 +  (int64_t)1);
if ((i3620 ==  (int64_t)672)) {
i3620 =  (int64_t)0;
i3619 = (i3619 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)672,  (int32_t)14,  (int32_t)14, tmp1513);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1515,  (int32_t)23);

uint64_t* tmp1519 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672);

uint64_t* tmp1520 = make_array<uint64_t>( (int32_t)131712);

uint64_t* tmp1521 = make_array<uint64_t>( (int32_t)131712);

uint64_t* tmp1522 = make_array<uint64_t>( (int32_t)131712);

int32_t tmp1523;
for (uint32_t i3627 =  (int32_t)0; i3627 <  (int32_t)1; i3627++){
for (uint32_t i3628 =  (int32_t)0; i3628 <  (int32_t)14; i3628++){
for (uint32_t i3629 =  (int32_t)0; i3629 <  (int32_t)14; i3629++){
for (uint32_t i3630 =  (int32_t)0; i3630 <  (int32_t)672; i3630++){
tmp1523 = (((( (int32_t)0 + (i3627 *  (int32_t)131712)) + (i3628 *  (int32_t)9408)) + (i3629 *  (int32_t)672)) + (i3630 *  (int32_t)1));
Arr1DIdxRowM(tmp1520, (int32_t)131712,tmp1523) = Arr4DIdxRowM(tmp1515, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3627,i3628,i3629,i3630);
Arr1DIdxRowM(tmp1521, (int32_t)131712,tmp1523) = Arr4DIdxRowM(tmp1517, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3627,i3628,i3629,i3630);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)131712, tmp1520, tmp1521, tmp1522);
ClearMemSecret1( (int32_t)131712, tmp1520);
ClearMemSecret1( (int32_t)131712, tmp1521);
for (uint32_t i3627 =  (int32_t)0; i3627 <  (int32_t)1; i3627++){
for (uint32_t i3628 =  (int32_t)0; i3628 <  (int32_t)14; i3628++){
for (uint32_t i3629 =  (int32_t)0; i3629 <  (int32_t)14; i3629++){
for (uint32_t i3630 =  (int32_t)0; i3630 <  (int32_t)672; i3630++){
tmp1523 = (((( (int32_t)0 + (i3627 *  (int32_t)131712)) + (i3628 *  (int32_t)9408)) + (i3629 *  (int32_t)672)) + (i3630 *  (int32_t)1));
Arr4DIdxRowM(tmp1519, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3627,i3628,i3629,i3630) = Arr1DIdxRowM(tmp1522, (int32_t)131712,tmp1523);
}
}
}
}
ClearMemSecret1( (int32_t)131712, tmp1522);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1515);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1517);

uint64_t* tmp1526 = make_array<uint64_t>( (int32_t)1,  (int32_t)672,  (int32_t)14,  (int32_t)14);

int64_t i3638;

int64_t i3637;

int64_t i3636;

int64_t i3635;

int64_t i3634;

int64_t i3633;

int64_t i3632;

int64_t i3631;
i3631 =  (int64_t)0;
i3632 =  (int64_t)0;
i3633 =  (int64_t)0;
i3634 =  (int64_t)0;
for (uint32_t i3635 =  (int32_t)0; i3635 <  (int32_t)1; i3635++){
for (uint32_t i3637 =  (int32_t)0; i3637 <  (int32_t)14; i3637++){
for (uint32_t i3638 =  (int32_t)0; i3638 <  (int32_t)14; i3638++){
for (uint32_t i3636 =  (int32_t)0; i3636 <  (int32_t)672; i3636++){
Arr4DIdxRowM(tmp1526, (int32_t)1, (int32_t)672, (int32_t)14, (int32_t)14,i3635,i3636,i3637,i3638) = Arr4DIdxRowM(tmp1519, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3631,i3632,i3633,i3634);
i3634 = (i3634 +  (int64_t)1);
if ((i3634 ==  (int64_t)672)) {
i3634 =  (int64_t)0;
i3633 = (i3633 +  (int64_t)1);
if ((i3633 ==  (int64_t)14)) {
i3633 =  (int64_t)0;
i3632 = (i3632 +  (int64_t)1);
if ((i3632 ==  (int64_t)14)) {
i3632 =  (int64_t)0;
i3631 = (i3631 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1519);

uint64_t* tmp1528 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672);

int64_t i3646;

int64_t i3645;

int64_t i3644;

int64_t i3643;

int64_t i3642;

int64_t i3641;

int64_t i3640;

int64_t i3639;
i3639 =  (int64_t)0;
i3640 =  (int64_t)0;
i3641 =  (int64_t)0;
i3642 =  (int64_t)0;
for (uint32_t i3643 =  (int32_t)0; i3643 <  (int32_t)1; i3643++){
for (uint32_t i3646 =  (int32_t)0; i3646 <  (int32_t)672; i3646++){
for (uint32_t i3644 =  (int32_t)0; i3644 <  (int32_t)14; i3644++){
for (uint32_t i3645 =  (int32_t)0; i3645 <  (int32_t)14; i3645++){
Arr4DIdxRowM(tmp1528, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3643,i3644,i3645,i3646) = Arr4DIdxRowM(tmp1526, (int32_t)1, (int32_t)672, (int32_t)14, (int32_t)14,i3639,i3640,i3641,i3642);
i3642 = (i3642 +  (int64_t)1);
if ((i3642 ==  (int64_t)14)) {
i3642 =  (int64_t)0;
i3641 = (i3641 +  (int64_t)1);
if ((i3641 ==  (int64_t)14)) {
i3641 =  (int64_t)0;
i3640 = (i3640 +  (int64_t)1);
if ((i3640 ==  (int64_t)672)) {
i3640 =  (int64_t)0;
i3639 = (i3639 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp1529 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672);
AvgPool( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672,  (int32_t)14,  (int32_t)14,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1528, tmp1529);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1528);

uint64_t* tmp1531 = make_array<uint64_t>( (int32_t)1,  (int32_t)672,  (int32_t)1,  (int32_t)1);

int64_t i3654;

int64_t i3653;

int64_t i3652;

int64_t i3651;

int64_t i3650;

int64_t i3649;

int64_t i3648;

int64_t i3647;
i3647 =  (int64_t)0;
i3648 =  (int64_t)0;
i3649 =  (int64_t)0;
i3650 =  (int64_t)0;
for (uint32_t i3651 =  (int32_t)0; i3651 <  (int32_t)1; i3651++){
for (uint32_t i3653 =  (int32_t)0; i3653 <  (int32_t)1; i3653++){
for (uint32_t i3654 =  (int32_t)0; i3654 <  (int32_t)1; i3654++){
for (uint32_t i3652 =  (int32_t)0; i3652 <  (int32_t)672; i3652++){
Arr4DIdxRowM(tmp1531, (int32_t)1, (int32_t)672, (int32_t)1, (int32_t)1,i3651,i3652,i3653,i3654) = Arr4DIdxRowM(tmp1529, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)672,i3647,i3648,i3649,i3650);
i3650 = (i3650 +  (int64_t)1);
if ((i3650 ==  (int64_t)672)) {
i3650 =  (int64_t)0;
i3649 = (i3649 +  (int64_t)1);
if ((i3649 ==  (int64_t)1)) {
i3649 =  (int64_t)0;
i3648 = (i3648 +  (int64_t)1);
if ((i3648 ==  (int64_t)1)) {
i3648 =  (int64_t)0;
i3647 = (i3647 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672, tmp1529);

uint64_t* tmp1533 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672);

int64_t i3662;

int64_t i3661;

int64_t i3660;

int64_t i3659;

int64_t i3658;

int64_t i3657;

int64_t i3656;

int64_t i3655;
i3655 =  (int64_t)0;
i3656 =  (int64_t)0;
i3657 =  (int64_t)0;
i3658 =  (int64_t)0;
for (uint32_t i3659 =  (int32_t)0; i3659 <  (int32_t)1; i3659++){
for (uint32_t i3662 =  (int32_t)0; i3662 <  (int32_t)672; i3662++){
for (uint32_t i3660 =  (int32_t)0; i3660 <  (int32_t)1; i3660++){
for (uint32_t i3661 =  (int32_t)0; i3661 <  (int32_t)1; i3661++){
Arr4DIdxRowM(tmp1533, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)672,i3659,i3660,i3661,i3662) = Arr4DIdxRowM(tmp1531, (int32_t)1, (int32_t)672, (int32_t)1, (int32_t)1,i3655,i3656,i3657,i3658);
i3658 = (i3658 +  (int64_t)1);
if ((i3658 ==  (int64_t)1)) {
i3658 =  (int64_t)0;
i3657 = (i3657 +  (int64_t)1);
if ((i3657 ==  (int64_t)1)) {
i3657 =  (int64_t)0;
i3656 = (i3656 +  (int64_t)1);
if ((i3656 ==  (int64_t)672)) {
i3656 =  (int64_t)0;
i3655 = (i3655 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)672,  (int32_t)1,  (int32_t)1, tmp1531);

uint64_t* tmp1535 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)672,  (int32_t)168);

int64_t i3670;

int64_t i3669;

int64_t i3668;

int64_t i3667;

int64_t i3666;

int64_t i3665;

int64_t i3664;

int64_t i3663;
i3663 =  (int64_t)0;
i3664 =  (int64_t)0;
i3665 =  (int64_t)0;
i3666 =  (int64_t)0;
for (uint32_t i3670 =  (int32_t)0; i3670 <  (int32_t)168; i3670++){
for (uint32_t i3669 =  (int32_t)0; i3669 <  (int32_t)672; i3669++){
for (uint32_t i3667 =  (int32_t)0; i3667 <  (int32_t)1; i3667++){
for (uint32_t i3668 =  (int32_t)0; i3668 <  (int32_t)1; i3668++){
Arr4DIdxRowM(tmp1535, (int32_t)1, (int32_t)1, (int32_t)672, (int32_t)168,i3667,i3668,i3669,i3670) = Arr4DIdxRowM(tmp82, (int32_t)168, (int32_t)672, (int32_t)1, (int32_t)1,i3663,i3664,i3665,i3666);
i3666 = (i3666 +  (int64_t)1);
if ((i3666 ==  (int64_t)1)) {
i3666 =  (int64_t)0;
i3665 = (i3665 +  (int64_t)1);
if ((i3665 ==  (int64_t)1)) {
i3665 =  (int64_t)0;
i3664 = (i3664 +  (int64_t)1);
if ((i3664 ==  (int64_t)672)) {
i3664 =  (int64_t)0;
i3663 = (i3663 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)168,  (int32_t)672,  (int32_t)1,  (int32_t)1, tmp82);

uint64_t* tmp1537 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168);
ScaleDown4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672, tmp1533,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672,  (int32_t)1,  (int32_t)1,  (int32_t)168,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp1533, tmp1535, tmp1537);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)672,  (int32_t)168, tmp1535);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672, tmp1533);

uint64_t* tmp1540 = make_array<uint64_t>( (int32_t)1,  (int32_t)168,  (int32_t)1,  (int32_t)1);

int64_t i3678;

int64_t i3677;

int64_t i3676;

int64_t i3675;

int64_t i3674;

int64_t i3673;

int64_t i3672;

int64_t i3671;
i3671 =  (int64_t)0;
i3672 =  (int64_t)0;
i3673 =  (int64_t)0;
i3674 =  (int64_t)0;
for (uint32_t i3675 =  (int32_t)0; i3675 <  (int32_t)1; i3675++){
for (uint32_t i3677 =  (int32_t)0; i3677 <  (int32_t)1; i3677++){
for (uint32_t i3678 =  (int32_t)0; i3678 <  (int32_t)1; i3678++){
for (uint32_t i3676 =  (int32_t)0; i3676 <  (int32_t)168; i3676++){
Arr4DIdxRowM(tmp1540, (int32_t)1, (int32_t)168, (int32_t)1, (int32_t)1,i3675,i3676,i3677,i3678) = Arr4DIdxRowM(tmp1537, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)168,i3671,i3672,i3673,i3674);
i3674 = (i3674 +  (int64_t)1);
if ((i3674 ==  (int64_t)168)) {
i3674 =  (int64_t)0;
i3673 = (i3673 +  (int64_t)1);
if ((i3673 ==  (int64_t)1)) {
i3673 =  (int64_t)0;
i3672 = (i3672 +  (int64_t)1);
if ((i3672 ==  (int64_t)1)) {
i3672 =  (int64_t)0;
i3671 = (i3671 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168, tmp1537);

uint64_t* tmp1542 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168);

int64_t i3686;

int64_t i3685;

int64_t i3684;

int64_t i3683;

int64_t i3682;

int64_t i3681;

int64_t i3680;

int64_t i3679;
i3679 =  (int64_t)0;
i3680 =  (int64_t)0;
i3681 =  (int64_t)0;
i3682 =  (int64_t)0;
for (uint32_t i3683 =  (int32_t)0; i3683 <  (int32_t)1; i3683++){
for (uint32_t i3686 =  (int32_t)0; i3686 <  (int32_t)168; i3686++){
for (uint32_t i3684 =  (int32_t)0; i3684 <  (int32_t)1; i3684++){
for (uint32_t i3685 =  (int32_t)0; i3685 <  (int32_t)1; i3685++){
Arr4DIdxRowM(tmp1542, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)168,i3683,i3684,i3685,i3686) = Arr4DIdxRowM(tmp1540, (int32_t)1, (int32_t)168, (int32_t)1, (int32_t)1,i3679,i3680,i3681,i3682);
i3682 = (i3682 +  (int64_t)1);
if ((i3682 ==  (int64_t)1)) {
i3682 =  (int64_t)0;
i3681 = (i3681 +  (int64_t)1);
if ((i3681 ==  (int64_t)1)) {
i3681 =  (int64_t)0;
i3680 = (i3680 +  (int64_t)1);
if ((i3680 ==  (int64_t)168)) {
i3680 =  (int64_t)0;
i3679 = (i3679 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)168,  (int32_t)1,  (int32_t)1, tmp1540);

uint64_t* tmp1544 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168);
ScaleDown4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168, tmp1542,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168, tmp1542, tmp83, tmp84,  (int32_t)0,  (int32_t)23, tmp1544);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168, tmp1542);

uint64_t* tmp1546 = make_array<uint64_t>( (int32_t)1,  (int32_t)168,  (int32_t)1,  (int32_t)1);

int64_t i3694;

int64_t i3693;

int64_t i3692;

int64_t i3691;

int64_t i3690;

int64_t i3689;

int64_t i3688;

int64_t i3687;
i3687 =  (int64_t)0;
i3688 =  (int64_t)0;
i3689 =  (int64_t)0;
i3690 =  (int64_t)0;
for (uint32_t i3691 =  (int32_t)0; i3691 <  (int32_t)1; i3691++){
for (uint32_t i3693 =  (int32_t)0; i3693 <  (int32_t)1; i3693++){
for (uint32_t i3694 =  (int32_t)0; i3694 <  (int32_t)1; i3694++){
for (uint32_t i3692 =  (int32_t)0; i3692 <  (int32_t)168; i3692++){
Arr4DIdxRowM(tmp1546, (int32_t)1, (int32_t)168, (int32_t)1, (int32_t)1,i3691,i3692,i3693,i3694) = Arr4DIdxRowM(tmp1544, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)168,i3687,i3688,i3689,i3690);
i3690 = (i3690 +  (int64_t)1);
if ((i3690 ==  (int64_t)168)) {
i3690 =  (int64_t)0;
i3689 = (i3689 +  (int64_t)1);
if ((i3689 ==  (int64_t)1)) {
i3689 =  (int64_t)0;
i3688 = (i3688 +  (int64_t)1);
if ((i3688 ==  (int64_t)1)) {
i3688 =  (int64_t)0;
i3687 = (i3687 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168, tmp1544);

uint64_t* tmp1548 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168);

int64_t i3702;

int64_t i3701;

int64_t i3700;

int64_t i3699;

int64_t i3698;

int64_t i3697;

int64_t i3696;

int64_t i3695;
i3695 =  (int64_t)0;
i3696 =  (int64_t)0;
i3697 =  (int64_t)0;
i3698 =  (int64_t)0;
for (uint32_t i3699 =  (int32_t)0; i3699 <  (int32_t)1; i3699++){
for (uint32_t i3702 =  (int32_t)0; i3702 <  (int32_t)168; i3702++){
for (uint32_t i3700 =  (int32_t)0; i3700 <  (int32_t)1; i3700++){
for (uint32_t i3701 =  (int32_t)0; i3701 <  (int32_t)1; i3701++){
Arr4DIdxRowM(tmp1548, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)168,i3699,i3700,i3701,i3702) = Arr4DIdxRowM(tmp1546, (int32_t)1, (int32_t)168, (int32_t)1, (int32_t)1,i3695,i3696,i3697,i3698);
i3698 = (i3698 +  (int64_t)1);
if ((i3698 ==  (int64_t)1)) {
i3698 =  (int64_t)0;
i3697 = (i3697 +  (int64_t)1);
if ((i3697 ==  (int64_t)1)) {
i3697 =  (int64_t)0;
i3696 = (i3696 +  (int64_t)1);
if ((i3696 ==  (int64_t)168)) {
i3696 =  (int64_t)0;
i3695 = (i3695 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)168,  (int32_t)1,  (int32_t)1, tmp1546);

uint64_t* tmp1550 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168);
Relu4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168, tmp1548, tmp1550,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168, tmp1548);

uint64_t* tmp1552 = make_array<uint64_t>( (int32_t)1,  (int32_t)168,  (int32_t)1,  (int32_t)1);

int64_t i3710;

int64_t i3709;

int64_t i3708;

int64_t i3707;

int64_t i3706;

int64_t i3705;

int64_t i3704;

int64_t i3703;
i3703 =  (int64_t)0;
i3704 =  (int64_t)0;
i3705 =  (int64_t)0;
i3706 =  (int64_t)0;
for (uint32_t i3707 =  (int32_t)0; i3707 <  (int32_t)1; i3707++){
for (uint32_t i3709 =  (int32_t)0; i3709 <  (int32_t)1; i3709++){
for (uint32_t i3710 =  (int32_t)0; i3710 <  (int32_t)1; i3710++){
for (uint32_t i3708 =  (int32_t)0; i3708 <  (int32_t)168; i3708++){
Arr4DIdxRowM(tmp1552, (int32_t)1, (int32_t)168, (int32_t)1, (int32_t)1,i3707,i3708,i3709,i3710) = Arr4DIdxRowM(tmp1550, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)168,i3703,i3704,i3705,i3706);
i3706 = (i3706 +  (int64_t)1);
if ((i3706 ==  (int64_t)168)) {
i3706 =  (int64_t)0;
i3705 = (i3705 +  (int64_t)1);
if ((i3705 ==  (int64_t)1)) {
i3705 =  (int64_t)0;
i3704 = (i3704 +  (int64_t)1);
if ((i3704 ==  (int64_t)1)) {
i3704 =  (int64_t)0;
i3703 = (i3703 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168, tmp1550);

uint64_t* tmp1554 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168);

int64_t i3718;

int64_t i3717;

int64_t i3716;

int64_t i3715;

int64_t i3714;

int64_t i3713;

int64_t i3712;

int64_t i3711;
i3711 =  (int64_t)0;
i3712 =  (int64_t)0;
i3713 =  (int64_t)0;
i3714 =  (int64_t)0;
for (uint32_t i3715 =  (int32_t)0; i3715 <  (int32_t)1; i3715++){
for (uint32_t i3718 =  (int32_t)0; i3718 <  (int32_t)168; i3718++){
for (uint32_t i3716 =  (int32_t)0; i3716 <  (int32_t)1; i3716++){
for (uint32_t i3717 =  (int32_t)0; i3717 <  (int32_t)1; i3717++){
Arr4DIdxRowM(tmp1554, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)168,i3715,i3716,i3717,i3718) = Arr4DIdxRowM(tmp1552, (int32_t)1, (int32_t)168, (int32_t)1, (int32_t)1,i3711,i3712,i3713,i3714);
i3714 = (i3714 +  (int64_t)1);
if ((i3714 ==  (int64_t)1)) {
i3714 =  (int64_t)0;
i3713 = (i3713 +  (int64_t)1);
if ((i3713 ==  (int64_t)1)) {
i3713 =  (int64_t)0;
i3712 = (i3712 +  (int64_t)1);
if ((i3712 ==  (int64_t)168)) {
i3712 =  (int64_t)0;
i3711 = (i3711 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)168,  (int32_t)1,  (int32_t)1, tmp1552);

uint64_t* tmp1556 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)168,  (int32_t)672);

int64_t i3726;

int64_t i3725;

int64_t i3724;

int64_t i3723;

int64_t i3722;

int64_t i3721;

int64_t i3720;

int64_t i3719;
i3719 =  (int64_t)0;
i3720 =  (int64_t)0;
i3721 =  (int64_t)0;
i3722 =  (int64_t)0;
for (uint32_t i3726 =  (int32_t)0; i3726 <  (int32_t)672; i3726++){
for (uint32_t i3725 =  (int32_t)0; i3725 <  (int32_t)168; i3725++){
for (uint32_t i3723 =  (int32_t)0; i3723 <  (int32_t)1; i3723++){
for (uint32_t i3724 =  (int32_t)0; i3724 <  (int32_t)1; i3724++){
Arr4DIdxRowM(tmp1556, (int32_t)1, (int32_t)1, (int32_t)168, (int32_t)672,i3723,i3724,i3725,i3726) = Arr4DIdxRowM(tmp85, (int32_t)672, (int32_t)168, (int32_t)1, (int32_t)1,i3719,i3720,i3721,i3722);
i3722 = (i3722 +  (int64_t)1);
if ((i3722 ==  (int64_t)1)) {
i3722 =  (int64_t)0;
i3721 = (i3721 +  (int64_t)1);
if ((i3721 ==  (int64_t)1)) {
i3721 =  (int64_t)0;
i3720 = (i3720 +  (int64_t)1);
if ((i3720 ==  (int64_t)168)) {
i3720 =  (int64_t)0;
i3719 = (i3719 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)672,  (int32_t)168,  (int32_t)1,  (int32_t)1, tmp85);

uint64_t* tmp1558 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168,  (int32_t)1,  (int32_t)1,  (int32_t)672,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp1554, tmp1556, tmp1558);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)168,  (int32_t)672, tmp1556);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168, tmp1554);

uint64_t* tmp1561 = make_array<uint64_t>( (int32_t)1,  (int32_t)672,  (int32_t)1,  (int32_t)1);

int64_t i3734;

int64_t i3733;

int64_t i3732;

int64_t i3731;

int64_t i3730;

int64_t i3729;

int64_t i3728;

int64_t i3727;
i3727 =  (int64_t)0;
i3728 =  (int64_t)0;
i3729 =  (int64_t)0;
i3730 =  (int64_t)0;
for (uint32_t i3731 =  (int32_t)0; i3731 <  (int32_t)1; i3731++){
for (uint32_t i3733 =  (int32_t)0; i3733 <  (int32_t)1; i3733++){
for (uint32_t i3734 =  (int32_t)0; i3734 <  (int32_t)1; i3734++){
for (uint32_t i3732 =  (int32_t)0; i3732 <  (int32_t)672; i3732++){
Arr4DIdxRowM(tmp1561, (int32_t)1, (int32_t)672, (int32_t)1, (int32_t)1,i3731,i3732,i3733,i3734) = Arr4DIdxRowM(tmp1558, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)672,i3727,i3728,i3729,i3730);
i3730 = (i3730 +  (int64_t)1);
if ((i3730 ==  (int64_t)672)) {
i3730 =  (int64_t)0;
i3729 = (i3729 +  (int64_t)1);
if ((i3729 ==  (int64_t)1)) {
i3729 =  (int64_t)0;
i3728 = (i3728 +  (int64_t)1);
if ((i3728 ==  (int64_t)1)) {
i3728 =  (int64_t)0;
i3727 = (i3727 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672, tmp1558);

uint64_t* tmp1563 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672);

int64_t i3742;

int64_t i3741;

int64_t i3740;

int64_t i3739;

int64_t i3738;

int64_t i3737;

int64_t i3736;

int64_t i3735;
i3735 =  (int64_t)0;
i3736 =  (int64_t)0;
i3737 =  (int64_t)0;
i3738 =  (int64_t)0;
for (uint32_t i3739 =  (int32_t)0; i3739 <  (int32_t)1; i3739++){
for (uint32_t i3742 =  (int32_t)0; i3742 <  (int32_t)672; i3742++){
for (uint32_t i3740 =  (int32_t)0; i3740 <  (int32_t)1; i3740++){
for (uint32_t i3741 =  (int32_t)0; i3741 <  (int32_t)1; i3741++){
Arr4DIdxRowM(tmp1563, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)672,i3739,i3740,i3741,i3742) = Arr4DIdxRowM(tmp1561, (int32_t)1, (int32_t)672, (int32_t)1, (int32_t)1,i3735,i3736,i3737,i3738);
i3738 = (i3738 +  (int64_t)1);
if ((i3738 ==  (int64_t)1)) {
i3738 =  (int64_t)0;
i3737 = (i3737 +  (int64_t)1);
if ((i3737 ==  (int64_t)1)) {
i3737 =  (int64_t)0;
i3736 = (i3736 +  (int64_t)1);
if ((i3736 ==  (int64_t)672)) {
i3736 =  (int64_t)0;
i3735 = (i3735 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)672,  (int32_t)1,  (int32_t)1, tmp1561);

uint64_t* tmp1565 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672);
HardSigmoid4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672, tmp1563, tmp1565,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672, tmp1563);

uint64_t* tmp1567 = make_array<uint64_t>( (int32_t)1,  (int32_t)672,  (int32_t)1,  (int32_t)1);

int64_t i3750;

int64_t i3749;

int64_t i3748;

int64_t i3747;

int64_t i3746;

int64_t i3745;

int64_t i3744;

int64_t i3743;
i3743 =  (int64_t)0;
i3744 =  (int64_t)0;
i3745 =  (int64_t)0;
i3746 =  (int64_t)0;
for (uint32_t i3747 =  (int32_t)0; i3747 <  (int32_t)1; i3747++){
for (uint32_t i3749 =  (int32_t)0; i3749 <  (int32_t)1; i3749++){
for (uint32_t i3750 =  (int32_t)0; i3750 <  (int32_t)1; i3750++){
for (uint32_t i3748 =  (int32_t)0; i3748 <  (int32_t)672; i3748++){
Arr4DIdxRowM(tmp1567, (int32_t)1, (int32_t)672, (int32_t)1, (int32_t)1,i3747,i3748,i3749,i3750) = Arr4DIdxRowM(tmp1565, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)672,i3743,i3744,i3745,i3746);
i3746 = (i3746 +  (int64_t)1);
if ((i3746 ==  (int64_t)672)) {
i3746 =  (int64_t)0;
i3745 = (i3745 +  (int64_t)1);
if ((i3745 ==  (int64_t)1)) {
i3745 =  (int64_t)0;
i3744 = (i3744 +  (int64_t)1);
if ((i3744 ==  (int64_t)1)) {
i3744 =  (int64_t)0;
i3743 = (i3743 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672, tmp1565);

uint64_t* tmp1569 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672);

int64_t i3758;

int64_t i3757;

int64_t i3756;

int64_t i3755;

int64_t i3754;

int64_t i3753;

int64_t i3752;

int64_t i3751;
i3751 =  (int64_t)0;
i3752 =  (int64_t)0;
i3753 =  (int64_t)0;
i3754 =  (int64_t)0;
for (uint32_t i3755 =  (int32_t)0; i3755 <  (int32_t)1; i3755++){
for (uint32_t i3758 =  (int32_t)0; i3758 <  (int32_t)672; i3758++){
for (uint32_t i3756 =  (int32_t)0; i3756 <  (int32_t)14; i3756++){
for (uint32_t i3757 =  (int32_t)0; i3757 <  (int32_t)14; i3757++){
Arr4DIdxRowM(tmp1569, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3755,i3756,i3757,i3758) = Arr4DIdxRowM(tmp1526, (int32_t)1, (int32_t)672, (int32_t)14, (int32_t)14,i3751,i3752,i3753,i3754);
i3754 = (i3754 +  (int64_t)1);
if ((i3754 ==  (int64_t)14)) {
i3754 =  (int64_t)0;
i3753 = (i3753 +  (int64_t)1);
if ((i3753 ==  (int64_t)14)) {
i3753 =  (int64_t)0;
i3752 = (i3752 +  (int64_t)1);
if ((i3752 ==  (int64_t)672)) {
i3752 =  (int64_t)0;
i3751 = (i3751 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)672,  (int32_t)14,  (int32_t)14, tmp1526);

uint64_t* tmp1571 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672);

int64_t i3766;

int64_t i3765;

int64_t i3764;

int64_t i3763;

int64_t i3762;

int64_t i3761;

int64_t i3760;

int64_t i3759;
i3759 =  (int64_t)0;
i3760 =  (int64_t)0;
i3761 =  (int64_t)0;
i3762 =  (int64_t)0;
for (uint32_t i3763 =  (int32_t)0; i3763 <  (int32_t)1; i3763++){
for (uint32_t i3766 =  (int32_t)0; i3766 <  (int32_t)672; i3766++){
for (uint32_t i3764 =  (int32_t)0; i3764 <  (int32_t)1; i3764++){
for (uint32_t i3765 =  (int32_t)0; i3765 <  (int32_t)1; i3765++){
Arr4DIdxRowM(tmp1571, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)672,i3763,i3764,i3765,i3766) = Arr4DIdxRowM(tmp1567, (int32_t)1, (int32_t)672, (int32_t)1, (int32_t)1,i3759,i3760,i3761,i3762);
i3762 = (i3762 +  (int64_t)1);
if ((i3762 ==  (int64_t)1)) {
i3762 =  (int64_t)0;
i3761 = (i3761 +  (int64_t)1);
if ((i3761 ==  (int64_t)1)) {
i3761 =  (int64_t)0;
i3760 = (i3760 +  (int64_t)1);
if ((i3760 ==  (int64_t)672)) {
i3760 =  (int64_t)0;
i3759 = (i3759 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)672,  (int32_t)1,  (int32_t)1, tmp1567);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1569,  (int32_t)23);

uint64_t* tmp1573 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672);

uint64_t* tmp1574 = make_array<uint64_t>( (int32_t)131712);

uint64_t* tmp1575 = make_array<uint64_t>( (int32_t)131712);

uint64_t* tmp1576 = make_array<uint64_t>( (int32_t)131712);

int32_t tmp1577;
for (uint32_t i3767 =  (int32_t)0; i3767 <  (int32_t)1; i3767++){
for (uint32_t i3768 =  (int32_t)0; i3768 <  (int32_t)14; i3768++){
for (uint32_t i3769 =  (int32_t)0; i3769 <  (int32_t)14; i3769++){
for (uint32_t i3770 =  (int32_t)0; i3770 <  (int32_t)672; i3770++){
tmp1577 = (((( (int32_t)0 + (i3767 *  (int32_t)131712)) + (i3768 *  (int32_t)9408)) + (i3769 *  (int32_t)672)) + (i3770 *  (int32_t)1));
Arr1DIdxRowM(tmp1574, (int32_t)131712,tmp1577) = Arr4DIdxRowM(tmp1569, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3767,i3768,i3769,i3770);
Arr1DIdxRowM(tmp1575, (int32_t)131712,tmp1577) = Arr4DIdxRowM(tmp1571, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)672,i3767, (int32_t)0, (int32_t)0,i3770);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)131712, tmp1574, tmp1575, tmp1576);
ClearMemSecret1( (int32_t)131712, tmp1574);
ClearMemSecret1( (int32_t)131712, tmp1575);
for (uint32_t i3767 =  (int32_t)0; i3767 <  (int32_t)1; i3767++){
for (uint32_t i3768 =  (int32_t)0; i3768 <  (int32_t)14; i3768++){
for (uint32_t i3769 =  (int32_t)0; i3769 <  (int32_t)14; i3769++){
for (uint32_t i3770 =  (int32_t)0; i3770 <  (int32_t)672; i3770++){
tmp1577 = (((( (int32_t)0 + (i3767 *  (int32_t)131712)) + (i3768 *  (int32_t)9408)) + (i3769 *  (int32_t)672)) + (i3770 *  (int32_t)1));
Arr4DIdxRowM(tmp1573, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3767,i3768,i3769,i3770) = Arr1DIdxRowM(tmp1576, (int32_t)131712,tmp1577);
}
}
}
}
ClearMemSecret1( (int32_t)131712, tmp1576);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1569);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672, tmp1571);

uint64_t* tmp1580 = make_array<uint64_t>( (int32_t)1,  (int32_t)672,  (int32_t)14,  (int32_t)14);

int64_t i3778;

int64_t i3777;

int64_t i3776;

int64_t i3775;

int64_t i3774;

int64_t i3773;

int64_t i3772;

int64_t i3771;
i3771 =  (int64_t)0;
i3772 =  (int64_t)0;
i3773 =  (int64_t)0;
i3774 =  (int64_t)0;
for (uint32_t i3775 =  (int32_t)0; i3775 <  (int32_t)1; i3775++){
for (uint32_t i3777 =  (int32_t)0; i3777 <  (int32_t)14; i3777++){
for (uint32_t i3778 =  (int32_t)0; i3778 <  (int32_t)14; i3778++){
for (uint32_t i3776 =  (int32_t)0; i3776 <  (int32_t)672; i3776++){
Arr4DIdxRowM(tmp1580, (int32_t)1, (int32_t)672, (int32_t)14, (int32_t)14,i3775,i3776,i3777,i3778) = Arr4DIdxRowM(tmp1573, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3771,i3772,i3773,i3774);
i3774 = (i3774 +  (int64_t)1);
if ((i3774 ==  (int64_t)672)) {
i3774 =  (int64_t)0;
i3773 = (i3773 +  (int64_t)1);
if ((i3773 ==  (int64_t)14)) {
i3773 =  (int64_t)0;
i3772 = (i3772 +  (int64_t)1);
if ((i3772 ==  (int64_t)14)) {
i3772 =  (int64_t)0;
i3771 = (i3771 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1573);

uint64_t* tmp1582 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672);

int64_t i3786;

int64_t i3785;

int64_t i3784;

int64_t i3783;

int64_t i3782;

int64_t i3781;

int64_t i3780;

int64_t i3779;
i3779 =  (int64_t)0;
i3780 =  (int64_t)0;
i3781 =  (int64_t)0;
i3782 =  (int64_t)0;
for (uint32_t i3783 =  (int32_t)0; i3783 <  (int32_t)1; i3783++){
for (uint32_t i3786 =  (int32_t)0; i3786 <  (int32_t)672; i3786++){
for (uint32_t i3784 =  (int32_t)0; i3784 <  (int32_t)14; i3784++){
for (uint32_t i3785 =  (int32_t)0; i3785 <  (int32_t)14; i3785++){
Arr4DIdxRowM(tmp1582, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3783,i3784,i3785,i3786) = Arr4DIdxRowM(tmp1580, (int32_t)1, (int32_t)672, (int32_t)14, (int32_t)14,i3779,i3780,i3781,i3782);
i3782 = (i3782 +  (int64_t)1);
if ((i3782 ==  (int64_t)14)) {
i3782 =  (int64_t)0;
i3781 = (i3781 +  (int64_t)1);
if ((i3781 ==  (int64_t)14)) {
i3781 =  (int64_t)0;
i3780 = (i3780 +  (int64_t)1);
if ((i3780 ==  (int64_t)672)) {
i3780 =  (int64_t)0;
i3779 = (i3779 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)672,  (int32_t)14,  (int32_t)14, tmp1580);

uint64_t* tmp1584 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)672,  (int32_t)112);

int64_t i3794;

int64_t i3793;

int64_t i3792;

int64_t i3791;

int64_t i3790;

int64_t i3789;

int64_t i3788;

int64_t i3787;
i3787 =  (int64_t)0;
i3788 =  (int64_t)0;
i3789 =  (int64_t)0;
i3790 =  (int64_t)0;
for (uint32_t i3794 =  (int32_t)0; i3794 <  (int32_t)112; i3794++){
for (uint32_t i3793 =  (int32_t)0; i3793 <  (int32_t)672; i3793++){
for (uint32_t i3791 =  (int32_t)0; i3791 <  (int32_t)1; i3791++){
for (uint32_t i3792 =  (int32_t)0; i3792 <  (int32_t)1; i3792++){
Arr4DIdxRowM(tmp1584, (int32_t)1, (int32_t)1, (int32_t)672, (int32_t)112,i3791,i3792,i3793,i3794) = Arr4DIdxRowM(tmp86, (int32_t)112, (int32_t)672, (int32_t)1, (int32_t)1,i3787,i3788,i3789,i3790);
i3790 = (i3790 +  (int64_t)1);
if ((i3790 ==  (int64_t)1)) {
i3790 =  (int64_t)0;
i3789 = (i3789 +  (int64_t)1);
if ((i3789 ==  (int64_t)1)) {
i3789 =  (int64_t)0;
i3788 = (i3788 +  (int64_t)1);
if ((i3788 ==  (int64_t)672)) {
i3788 =  (int64_t)0;
i3787 = (i3787 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)112,  (int32_t)672,  (int32_t)1,  (int32_t)1, tmp86);

uint64_t* tmp1586 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1582,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672,  (int32_t)1,  (int32_t)1,  (int32_t)112,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp1582, tmp1584, tmp1586);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1582);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)672,  (int32_t)112, tmp1584);

uint64_t* tmp1589 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)14,  (int32_t)14);

int64_t i3802;

int64_t i3801;

int64_t i3800;

int64_t i3799;

int64_t i3798;

int64_t i3797;

int64_t i3796;

int64_t i3795;
i3795 =  (int64_t)0;
i3796 =  (int64_t)0;
i3797 =  (int64_t)0;
i3798 =  (int64_t)0;
for (uint32_t i3799 =  (int32_t)0; i3799 <  (int32_t)1; i3799++){
for (uint32_t i3801 =  (int32_t)0; i3801 <  (int32_t)14; i3801++){
for (uint32_t i3802 =  (int32_t)0; i3802 <  (int32_t)14; i3802++){
for (uint32_t i3800 =  (int32_t)0; i3800 <  (int32_t)112; i3800++){
Arr4DIdxRowM(tmp1589, (int32_t)1, (int32_t)112, (int32_t)14, (int32_t)14,i3799,i3800,i3801,i3802) = Arr4DIdxRowM(tmp1586, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i3795,i3796,i3797,i3798);
i3798 = (i3798 +  (int64_t)1);
if ((i3798 ==  (int64_t)112)) {
i3798 =  (int64_t)0;
i3797 = (i3797 +  (int64_t)1);
if ((i3797 ==  (int64_t)14)) {
i3797 =  (int64_t)0;
i3796 = (i3796 +  (int64_t)1);
if ((i3796 ==  (int64_t)14)) {
i3796 =  (int64_t)0;
i3795 = (i3795 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1586);

uint64_t* tmp1591 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112);

int64_t i3810;

int64_t i3809;

int64_t i3808;

int64_t i3807;

int64_t i3806;

int64_t i3805;

int64_t i3804;

int64_t i3803;
i3803 =  (int64_t)0;
i3804 =  (int64_t)0;
i3805 =  (int64_t)0;
i3806 =  (int64_t)0;
for (uint32_t i3807 =  (int32_t)0; i3807 <  (int32_t)1; i3807++){
for (uint32_t i3810 =  (int32_t)0; i3810 <  (int32_t)112; i3810++){
for (uint32_t i3808 =  (int32_t)0; i3808 <  (int32_t)14; i3808++){
for (uint32_t i3809 =  (int32_t)0; i3809 <  (int32_t)14; i3809++){
Arr4DIdxRowM(tmp1591, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i3807,i3808,i3809,i3810) = Arr4DIdxRowM(tmp1589, (int32_t)1, (int32_t)112, (int32_t)14, (int32_t)14,i3803,i3804,i3805,i3806);
i3806 = (i3806 +  (int64_t)1);
if ((i3806 ==  (int64_t)14)) {
i3806 =  (int64_t)0;
i3805 = (i3805 +  (int64_t)1);
if ((i3805 ==  (int64_t)14)) {
i3805 =  (int64_t)0;
i3804 = (i3804 +  (int64_t)1);
if ((i3804 ==  (int64_t)112)) {
i3804 =  (int64_t)0;
i3803 = (i3803 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)14,  (int32_t)14, tmp1589);

uint64_t* tmp1593 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1591,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1591, tmp75, tmp76,  (int32_t)0,  (int32_t)0, tmp1593);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1591);

uint64_t* tmp1595 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)14,  (int32_t)14);

int64_t i3818;

int64_t i3817;

int64_t i3816;

int64_t i3815;

int64_t i3814;

int64_t i3813;

int64_t i3812;

int64_t i3811;
i3811 =  (int64_t)0;
i3812 =  (int64_t)0;
i3813 =  (int64_t)0;
i3814 =  (int64_t)0;
for (uint32_t i3815 =  (int32_t)0; i3815 <  (int32_t)1; i3815++){
for (uint32_t i3817 =  (int32_t)0; i3817 <  (int32_t)14; i3817++){
for (uint32_t i3818 =  (int32_t)0; i3818 <  (int32_t)14; i3818++){
for (uint32_t i3816 =  (int32_t)0; i3816 <  (int32_t)112; i3816++){
Arr4DIdxRowM(tmp1595, (int32_t)1, (int32_t)112, (int32_t)14, (int32_t)14,i3815,i3816,i3817,i3818) = Arr4DIdxRowM(tmp1593, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i3811,i3812,i3813,i3814);
i3814 = (i3814 +  (int64_t)1);
if ((i3814 ==  (int64_t)112)) {
i3814 =  (int64_t)0;
i3813 = (i3813 +  (int64_t)1);
if ((i3813 ==  (int64_t)14)) {
i3813 =  (int64_t)0;
i3812 = (i3812 +  (int64_t)1);
if ((i3812 ==  (int64_t)14)) {
i3812 =  (int64_t)0;
i3811 = (i3811 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1593);

uint64_t* tmp1597 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112);

int64_t i3826;

int64_t i3825;

int64_t i3824;

int64_t i3823;

int64_t i3822;

int64_t i3821;

int64_t i3820;

int64_t i3819;
i3819 =  (int64_t)0;
i3820 =  (int64_t)0;
i3821 =  (int64_t)0;
i3822 =  (int64_t)0;
for (uint32_t i3823 =  (int32_t)0; i3823 <  (int32_t)1; i3823++){
for (uint32_t i3826 =  (int32_t)0; i3826 <  (int32_t)112; i3826++){
for (uint32_t i3824 =  (int32_t)0; i3824 <  (int32_t)14; i3824++){
for (uint32_t i3825 =  (int32_t)0; i3825 <  (int32_t)14; i3825++){
Arr4DIdxRowM(tmp1597, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i3823,i3824,i3825,i3826) = Arr4DIdxRowM(tmp1595, (int32_t)1, (int32_t)112, (int32_t)14, (int32_t)14,i3819,i3820,i3821,i3822);
i3822 = (i3822 +  (int64_t)1);
if ((i3822 ==  (int64_t)14)) {
i3822 =  (int64_t)0;
i3821 = (i3821 +  (int64_t)1);
if ((i3821 ==  (int64_t)14)) {
i3821 =  (int64_t)0;
i3820 = (i3820 +  (int64_t)1);
if ((i3820 ==  (int64_t)112)) {
i3820 =  (int64_t)0;
i3819 = (i3819 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)14,  (int32_t)14, tmp1595);

uint64_t* tmp1599 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112);

int64_t i3834;

int64_t i3833;

int64_t i3832;

int64_t i3831;

int64_t i3830;

int64_t i3829;

int64_t i3828;

int64_t i3827;
i3827 =  (int64_t)0;
i3828 =  (int64_t)0;
i3829 =  (int64_t)0;
i3830 =  (int64_t)0;
for (uint32_t i3831 =  (int32_t)0; i3831 <  (int32_t)1; i3831++){
for (uint32_t i3834 =  (int32_t)0; i3834 <  (int32_t)112; i3834++){
for (uint32_t i3832 =  (int32_t)0; i3832 <  (int32_t)14; i3832++){
for (uint32_t i3833 =  (int32_t)0; i3833 <  (int32_t)14; i3833++){
Arr4DIdxRowM(tmp1599, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i3831,i3832,i3833,i3834) = Arr4DIdxRowM(tmp1461, (int32_t)1, (int32_t)112, (int32_t)14, (int32_t)14,i3827,i3828,i3829,i3830);
i3830 = (i3830 +  (int64_t)1);
if ((i3830 ==  (int64_t)14)) {
i3830 =  (int64_t)0;
i3829 = (i3829 +  (int64_t)1);
if ((i3829 ==  (int64_t)14)) {
i3829 =  (int64_t)0;
i3828 = (i3828 +  (int64_t)1);
if ((i3828 ==  (int64_t)112)) {
i3828 =  (int64_t)0;
i3827 = (i3827 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)14,  (int32_t)14, tmp1461);

uint64_t* tmp1601 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112);
for (uint32_t i0 =  (int32_t)0; i0 <  (int32_t)1; i0++){
for (uint32_t i1 =  (int32_t)0; i1 <  (int32_t)14; i1++){
for (uint32_t i2 =  (int32_t)0; i2 <  (int32_t)14; i2++){
for (uint32_t i3 =  (int32_t)0; i3 <  (int32_t)112; i3++){
Arr4DIdxRowM(tmp1601, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i0,i1,i2,i3) = SecretAdd(Arr4DIdxRowM(tmp1597, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i0,i1,i2,i3), Arr4DIdxRowM(tmp1599, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i0,i1,i2,i3));
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1599);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1597);

uint64_t* tmp1604 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)14,  (int32_t)14);

int64_t i3842;

int64_t i3841;

int64_t i3840;

int64_t i3839;

int64_t i3838;

int64_t i3837;

int64_t i3836;

int64_t i3835;
i3835 =  (int64_t)0;
i3836 =  (int64_t)0;
i3837 =  (int64_t)0;
i3838 =  (int64_t)0;
for (uint32_t i3839 =  (int32_t)0; i3839 <  (int32_t)1; i3839++){
for (uint32_t i3841 =  (int32_t)0; i3841 <  (int32_t)14; i3841++){
for (uint32_t i3842 =  (int32_t)0; i3842 <  (int32_t)14; i3842++){
for (uint32_t i3840 =  (int32_t)0; i3840 <  (int32_t)112; i3840++){
Arr4DIdxRowM(tmp1604, (int32_t)1, (int32_t)112, (int32_t)14, (int32_t)14,i3839,i3840,i3841,i3842) = Arr4DIdxRowM(tmp1601, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i3835,i3836,i3837,i3838);
i3838 = (i3838 +  (int64_t)1);
if ((i3838 ==  (int64_t)112)) {
i3838 =  (int64_t)0;
i3837 = (i3837 +  (int64_t)1);
if ((i3837 ==  (int64_t)14)) {
i3837 =  (int64_t)0;
i3836 = (i3836 +  (int64_t)1);
if ((i3836 ==  (int64_t)14)) {
i3836 =  (int64_t)0;
i3835 = (i3835 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1601);

uint64_t* tmp1606 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112);

int64_t i3850;

int64_t i3849;

int64_t i3848;

int64_t i3847;

int64_t i3846;

int64_t i3845;

int64_t i3844;

int64_t i3843;
i3843 =  (int64_t)0;
i3844 =  (int64_t)0;
i3845 =  (int64_t)0;
i3846 =  (int64_t)0;
for (uint32_t i3847 =  (int32_t)0; i3847 <  (int32_t)1; i3847++){
for (uint32_t i3850 =  (int32_t)0; i3850 <  (int32_t)112; i3850++){
for (uint32_t i3848 =  (int32_t)0; i3848 <  (int32_t)14; i3848++){
for (uint32_t i3849 =  (int32_t)0; i3849 <  (int32_t)14; i3849++){
Arr4DIdxRowM(tmp1606, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i3847,i3848,i3849,i3850) = Arr4DIdxRowM(tmp1604, (int32_t)1, (int32_t)112, (int32_t)14, (int32_t)14,i3843,i3844,i3845,i3846);
i3846 = (i3846 +  (int64_t)1);
if ((i3846 ==  (int64_t)14)) {
i3846 =  (int64_t)0;
i3845 = (i3845 +  (int64_t)1);
if ((i3845 ==  (int64_t)14)) {
i3845 =  (int64_t)0;
i3844 = (i3844 +  (int64_t)1);
if ((i3844 ==  (int64_t)112)) {
i3844 =  (int64_t)0;
i3843 = (i3843 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp1607 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112);
HardSigmoid4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1606, tmp1607,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1606);

uint64_t* tmp1609 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)14,  (int32_t)14);

int64_t i3858;

int64_t i3857;

int64_t i3856;

int64_t i3855;

int64_t i3854;

int64_t i3853;

int64_t i3852;

int64_t i3851;
i3851 =  (int64_t)0;
i3852 =  (int64_t)0;
i3853 =  (int64_t)0;
i3854 =  (int64_t)0;
for (uint32_t i3855 =  (int32_t)0; i3855 <  (int32_t)1; i3855++){
for (uint32_t i3857 =  (int32_t)0; i3857 <  (int32_t)14; i3857++){
for (uint32_t i3858 =  (int32_t)0; i3858 <  (int32_t)14; i3858++){
for (uint32_t i3856 =  (int32_t)0; i3856 <  (int32_t)112; i3856++){
Arr4DIdxRowM(tmp1609, (int32_t)1, (int32_t)112, (int32_t)14, (int32_t)14,i3855,i3856,i3857,i3858) = Arr4DIdxRowM(tmp1607, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i3851,i3852,i3853,i3854);
i3854 = (i3854 +  (int64_t)1);
if ((i3854 ==  (int64_t)112)) {
i3854 =  (int64_t)0;
i3853 = (i3853 +  (int64_t)1);
if ((i3853 ==  (int64_t)14)) {
i3853 =  (int64_t)0;
i3852 = (i3852 +  (int64_t)1);
if ((i3852 ==  (int64_t)14)) {
i3852 =  (int64_t)0;
i3851 = (i3851 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1607);

uint64_t* tmp1611 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112);

int64_t i3866;

int64_t i3865;

int64_t i3864;

int64_t i3863;

int64_t i3862;

int64_t i3861;

int64_t i3860;

int64_t i3859;
i3859 =  (int64_t)0;
i3860 =  (int64_t)0;
i3861 =  (int64_t)0;
i3862 =  (int64_t)0;
for (uint32_t i3863 =  (int32_t)0; i3863 <  (int32_t)1; i3863++){
for (uint32_t i3866 =  (int32_t)0; i3866 <  (int32_t)112; i3866++){
for (uint32_t i3864 =  (int32_t)0; i3864 <  (int32_t)14; i3864++){
for (uint32_t i3865 =  (int32_t)0; i3865 <  (int32_t)14; i3865++){
Arr4DIdxRowM(tmp1611, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i3863,i3864,i3865,i3866) = Arr4DIdxRowM(tmp1604, (int32_t)1, (int32_t)112, (int32_t)14, (int32_t)14,i3859,i3860,i3861,i3862);
i3862 = (i3862 +  (int64_t)1);
if ((i3862 ==  (int64_t)14)) {
i3862 =  (int64_t)0;
i3861 = (i3861 +  (int64_t)1);
if ((i3861 ==  (int64_t)14)) {
i3861 =  (int64_t)0;
i3860 = (i3860 +  (int64_t)1);
if ((i3860 ==  (int64_t)112)) {
i3860 =  (int64_t)0;
i3859 = (i3859 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)14,  (int32_t)14, tmp1604);

uint64_t* tmp1613 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112);

int64_t i3874;

int64_t i3873;

int64_t i3872;

int64_t i3871;

int64_t i3870;

int64_t i3869;

int64_t i3868;

int64_t i3867;
i3867 =  (int64_t)0;
i3868 =  (int64_t)0;
i3869 =  (int64_t)0;
i3870 =  (int64_t)0;
for (uint32_t i3871 =  (int32_t)0; i3871 <  (int32_t)1; i3871++){
for (uint32_t i3874 =  (int32_t)0; i3874 <  (int32_t)112; i3874++){
for (uint32_t i3872 =  (int32_t)0; i3872 <  (int32_t)14; i3872++){
for (uint32_t i3873 =  (int32_t)0; i3873 <  (int32_t)14; i3873++){
Arr4DIdxRowM(tmp1613, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i3871,i3872,i3873,i3874) = Arr4DIdxRowM(tmp1609, (int32_t)1, (int32_t)112, (int32_t)14, (int32_t)14,i3867,i3868,i3869,i3870);
i3870 = (i3870 +  (int64_t)1);
if ((i3870 ==  (int64_t)14)) {
i3870 =  (int64_t)0;
i3869 = (i3869 +  (int64_t)1);
if ((i3869 ==  (int64_t)14)) {
i3869 =  (int64_t)0;
i3868 = (i3868 +  (int64_t)1);
if ((i3868 ==  (int64_t)112)) {
i3868 =  (int64_t)0;
i3867 = (i3867 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)14,  (int32_t)14, tmp1609);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1611,  (int32_t)23);

uint64_t* tmp1615 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112);

uint64_t* tmp1616 = make_array<uint64_t>( (int32_t)21952);

uint64_t* tmp1617 = make_array<uint64_t>( (int32_t)21952);

uint64_t* tmp1618 = make_array<uint64_t>( (int32_t)21952);

int32_t tmp1619;
for (uint32_t i3875 =  (int32_t)0; i3875 <  (int32_t)1; i3875++){
for (uint32_t i3876 =  (int32_t)0; i3876 <  (int32_t)14; i3876++){
for (uint32_t i3877 =  (int32_t)0; i3877 <  (int32_t)14; i3877++){
for (uint32_t i3878 =  (int32_t)0; i3878 <  (int32_t)112; i3878++){
tmp1619 = (((( (int32_t)0 + (i3875 *  (int32_t)21952)) + (i3876 *  (int32_t)1568)) + (i3877 *  (int32_t)112)) + (i3878 *  (int32_t)1));
Arr1DIdxRowM(tmp1616, (int32_t)21952,tmp1619) = Arr4DIdxRowM(tmp1611, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i3875,i3876,i3877,i3878);
Arr1DIdxRowM(tmp1617, (int32_t)21952,tmp1619) = Arr4DIdxRowM(tmp1613, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i3875,i3876,i3877,i3878);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)21952, tmp1616, tmp1617, tmp1618);
ClearMemSecret1( (int32_t)21952, tmp1616);
ClearMemSecret1( (int32_t)21952, tmp1617);
for (uint32_t i3875 =  (int32_t)0; i3875 <  (int32_t)1; i3875++){
for (uint32_t i3876 =  (int32_t)0; i3876 <  (int32_t)14; i3876++){
for (uint32_t i3877 =  (int32_t)0; i3877 <  (int32_t)14; i3877++){
for (uint32_t i3878 =  (int32_t)0; i3878 <  (int32_t)112; i3878++){
tmp1619 = (((( (int32_t)0 + (i3875 *  (int32_t)21952)) + (i3876 *  (int32_t)1568)) + (i3877 *  (int32_t)112)) + (i3878 *  (int32_t)1));
Arr4DIdxRowM(tmp1615, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i3875,i3876,i3877,i3878) = Arr1DIdxRowM(tmp1618, (int32_t)21952,tmp1619);
}
}
}
}
ClearMemSecret1( (int32_t)21952, tmp1618);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1613);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1611);

uint64_t* tmp1622 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)14,  (int32_t)14);

int64_t i3886;

int64_t i3885;

int64_t i3884;

int64_t i3883;

int64_t i3882;

int64_t i3881;

int64_t i3880;

int64_t i3879;
i3879 =  (int64_t)0;
i3880 =  (int64_t)0;
i3881 =  (int64_t)0;
i3882 =  (int64_t)0;
for (uint32_t i3883 =  (int32_t)0; i3883 <  (int32_t)1; i3883++){
for (uint32_t i3885 =  (int32_t)0; i3885 <  (int32_t)14; i3885++){
for (uint32_t i3886 =  (int32_t)0; i3886 <  (int32_t)14; i3886++){
for (uint32_t i3884 =  (int32_t)0; i3884 <  (int32_t)112; i3884++){
Arr4DIdxRowM(tmp1622, (int32_t)1, (int32_t)112, (int32_t)14, (int32_t)14,i3883,i3884,i3885,i3886) = Arr4DIdxRowM(tmp1615, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i3879,i3880,i3881,i3882);
i3882 = (i3882 +  (int64_t)1);
if ((i3882 ==  (int64_t)112)) {
i3882 =  (int64_t)0;
i3881 = (i3881 +  (int64_t)1);
if ((i3881 ==  (int64_t)14)) {
i3881 =  (int64_t)0;
i3880 = (i3880 +  (int64_t)1);
if ((i3880 ==  (int64_t)14)) {
i3880 =  (int64_t)0;
i3879 = (i3879 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1615);

uint64_t* tmp1624 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112);

int64_t i3894;

int64_t i3893;

int64_t i3892;

int64_t i3891;

int64_t i3890;

int64_t i3889;

int64_t i3888;

int64_t i3887;
i3887 =  (int64_t)0;
i3888 =  (int64_t)0;
i3889 =  (int64_t)0;
i3890 =  (int64_t)0;
for (uint32_t i3891 =  (int32_t)0; i3891 <  (int32_t)1; i3891++){
for (uint32_t i3894 =  (int32_t)0; i3894 <  (int32_t)112; i3894++){
for (uint32_t i3892 =  (int32_t)0; i3892 <  (int32_t)14; i3892++){
for (uint32_t i3893 =  (int32_t)0; i3893 <  (int32_t)14; i3893++){
Arr4DIdxRowM(tmp1624, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i3891,i3892,i3893,i3894) = Arr4DIdxRowM(tmp1622, (int32_t)1, (int32_t)112, (int32_t)14, (int32_t)14,i3887,i3888,i3889,i3890);
i3890 = (i3890 +  (int64_t)1);
if ((i3890 ==  (int64_t)14)) {
i3890 =  (int64_t)0;
i3889 = (i3889 +  (int64_t)1);
if ((i3889 ==  (int64_t)14)) {
i3889 =  (int64_t)0;
i3888 = (i3888 +  (int64_t)1);
if ((i3888 ==  (int64_t)112)) {
i3888 =  (int64_t)0;
i3887 = (i3887 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp1625 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)112,  (int32_t)672);

int64_t i3902;

int64_t i3901;

int64_t i3900;

int64_t i3899;

int64_t i3898;

int64_t i3897;

int64_t i3896;

int64_t i3895;
i3895 =  (int64_t)0;
i3896 =  (int64_t)0;
i3897 =  (int64_t)0;
i3898 =  (int64_t)0;
for (uint32_t i3902 =  (int32_t)0; i3902 <  (int32_t)672; i3902++){
for (uint32_t i3901 =  (int32_t)0; i3901 <  (int32_t)112; i3901++){
for (uint32_t i3899 =  (int32_t)0; i3899 <  (int32_t)1; i3899++){
for (uint32_t i3900 =  (int32_t)0; i3900 <  (int32_t)1; i3900++){
Arr4DIdxRowM(tmp1625, (int32_t)1, (int32_t)1, (int32_t)112, (int32_t)672,i3899,i3900,i3901,i3902) = Arr4DIdxRowM(tmp87, (int32_t)672, (int32_t)112, (int32_t)1, (int32_t)1,i3895,i3896,i3897,i3898);
i3898 = (i3898 +  (int64_t)1);
if ((i3898 ==  (int64_t)1)) {
i3898 =  (int64_t)0;
i3897 = (i3897 +  (int64_t)1);
if ((i3897 ==  (int64_t)1)) {
i3897 =  (int64_t)0;
i3896 = (i3896 +  (int64_t)1);
if ((i3896 ==  (int64_t)112)) {
i3896 =  (int64_t)0;
i3895 = (i3895 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)672,  (int32_t)112,  (int32_t)1,  (int32_t)1, tmp87);

uint64_t* tmp1627 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1624,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112,  (int32_t)1,  (int32_t)1,  (int32_t)672,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp1624, tmp1625, tmp1627);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1624);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)112,  (int32_t)672, tmp1625);

uint64_t* tmp1630 = make_array<uint64_t>( (int32_t)1,  (int32_t)672,  (int32_t)14,  (int32_t)14);

int64_t i3910;

int64_t i3909;

int64_t i3908;

int64_t i3907;

int64_t i3906;

int64_t i3905;

int64_t i3904;

int64_t i3903;
i3903 =  (int64_t)0;
i3904 =  (int64_t)0;
i3905 =  (int64_t)0;
i3906 =  (int64_t)0;
for (uint32_t i3907 =  (int32_t)0; i3907 <  (int32_t)1; i3907++){
for (uint32_t i3909 =  (int32_t)0; i3909 <  (int32_t)14; i3909++){
for (uint32_t i3910 =  (int32_t)0; i3910 <  (int32_t)14; i3910++){
for (uint32_t i3908 =  (int32_t)0; i3908 <  (int32_t)672; i3908++){
Arr4DIdxRowM(tmp1630, (int32_t)1, (int32_t)672, (int32_t)14, (int32_t)14,i3907,i3908,i3909,i3910) = Arr4DIdxRowM(tmp1627, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3903,i3904,i3905,i3906);
i3906 = (i3906 +  (int64_t)1);
if ((i3906 ==  (int64_t)672)) {
i3906 =  (int64_t)0;
i3905 = (i3905 +  (int64_t)1);
if ((i3905 ==  (int64_t)14)) {
i3905 =  (int64_t)0;
i3904 = (i3904 +  (int64_t)1);
if ((i3904 ==  (int64_t)14)) {
i3904 =  (int64_t)0;
i3903 = (i3903 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1627);

uint64_t* tmp1632 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672);

int64_t i3918;

int64_t i3917;

int64_t i3916;

int64_t i3915;

int64_t i3914;

int64_t i3913;

int64_t i3912;

int64_t i3911;
i3911 =  (int64_t)0;
i3912 =  (int64_t)0;
i3913 =  (int64_t)0;
i3914 =  (int64_t)0;
for (uint32_t i3915 =  (int32_t)0; i3915 <  (int32_t)1; i3915++){
for (uint32_t i3918 =  (int32_t)0; i3918 <  (int32_t)672; i3918++){
for (uint32_t i3916 =  (int32_t)0; i3916 <  (int32_t)14; i3916++){
for (uint32_t i3917 =  (int32_t)0; i3917 <  (int32_t)14; i3917++){
Arr4DIdxRowM(tmp1632, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3915,i3916,i3917,i3918) = Arr4DIdxRowM(tmp1630, (int32_t)1, (int32_t)672, (int32_t)14, (int32_t)14,i3911,i3912,i3913,i3914);
i3914 = (i3914 +  (int64_t)1);
if ((i3914 ==  (int64_t)14)) {
i3914 =  (int64_t)0;
i3913 = (i3913 +  (int64_t)1);
if ((i3913 ==  (int64_t)14)) {
i3913 =  (int64_t)0;
i3912 = (i3912 +  (int64_t)1);
if ((i3912 ==  (int64_t)672)) {
i3912 =  (int64_t)0;
i3911 = (i3911 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)672,  (int32_t)14,  (int32_t)14, tmp1630);

uint64_t* tmp1634 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1632,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1632, tmp79, tmp80,  (int32_t)0,  (int32_t)0, tmp1634);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1632);

uint64_t* tmp1636 = make_array<uint64_t>( (int32_t)1,  (int32_t)672,  (int32_t)14,  (int32_t)14);

int64_t i3926;

int64_t i3925;

int64_t i3924;

int64_t i3923;

int64_t i3922;

int64_t i3921;

int64_t i3920;

int64_t i3919;
i3919 =  (int64_t)0;
i3920 =  (int64_t)0;
i3921 =  (int64_t)0;
i3922 =  (int64_t)0;
for (uint32_t i3923 =  (int32_t)0; i3923 <  (int32_t)1; i3923++){
for (uint32_t i3925 =  (int32_t)0; i3925 <  (int32_t)14; i3925++){
for (uint32_t i3926 =  (int32_t)0; i3926 <  (int32_t)14; i3926++){
for (uint32_t i3924 =  (int32_t)0; i3924 <  (int32_t)672; i3924++){
Arr4DIdxRowM(tmp1636, (int32_t)1, (int32_t)672, (int32_t)14, (int32_t)14,i3923,i3924,i3925,i3926) = Arr4DIdxRowM(tmp1634, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3919,i3920,i3921,i3922);
i3922 = (i3922 +  (int64_t)1);
if ((i3922 ==  (int64_t)672)) {
i3922 =  (int64_t)0;
i3921 = (i3921 +  (int64_t)1);
if ((i3921 ==  (int64_t)14)) {
i3921 =  (int64_t)0;
i3920 = (i3920 +  (int64_t)1);
if ((i3920 ==  (int64_t)14)) {
i3920 =  (int64_t)0;
i3919 = (i3919 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1634);

uint64_t* tmp1638 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672);

int64_t i3934;

int64_t i3933;

int64_t i3932;

int64_t i3931;

int64_t i3930;

int64_t i3929;

int64_t i3928;

int64_t i3927;
i3927 =  (int64_t)0;
i3928 =  (int64_t)0;
i3929 =  (int64_t)0;
i3930 =  (int64_t)0;
for (uint32_t i3931 =  (int32_t)0; i3931 <  (int32_t)1; i3931++){
for (uint32_t i3934 =  (int32_t)0; i3934 <  (int32_t)672; i3934++){
for (uint32_t i3932 =  (int32_t)0; i3932 <  (int32_t)14; i3932++){
for (uint32_t i3933 =  (int32_t)0; i3933 <  (int32_t)14; i3933++){
Arr4DIdxRowM(tmp1638, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3931,i3932,i3933,i3934) = Arr4DIdxRowM(tmp1636, (int32_t)1, (int32_t)672, (int32_t)14, (int32_t)14,i3927,i3928,i3929,i3930);
i3930 = (i3930 +  (int64_t)1);
if ((i3930 ==  (int64_t)14)) {
i3930 =  (int64_t)0;
i3929 = (i3929 +  (int64_t)1);
if ((i3929 ==  (int64_t)14)) {
i3929 =  (int64_t)0;
i3928 = (i3928 +  (int64_t)1);
if ((i3928 ==  (int64_t)672)) {
i3928 =  (int64_t)0;
i3927 = (i3927 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp1639 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672);
HardSigmoid4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1638, tmp1639,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1638);

uint64_t* tmp1641 = make_array<uint64_t>( (int32_t)1,  (int32_t)672,  (int32_t)14,  (int32_t)14);

int64_t i3942;

int64_t i3941;

int64_t i3940;

int64_t i3939;

int64_t i3938;

int64_t i3937;

int64_t i3936;

int64_t i3935;
i3935 =  (int64_t)0;
i3936 =  (int64_t)0;
i3937 =  (int64_t)0;
i3938 =  (int64_t)0;
for (uint32_t i3939 =  (int32_t)0; i3939 <  (int32_t)1; i3939++){
for (uint32_t i3941 =  (int32_t)0; i3941 <  (int32_t)14; i3941++){
for (uint32_t i3942 =  (int32_t)0; i3942 <  (int32_t)14; i3942++){
for (uint32_t i3940 =  (int32_t)0; i3940 <  (int32_t)672; i3940++){
Arr4DIdxRowM(tmp1641, (int32_t)1, (int32_t)672, (int32_t)14, (int32_t)14,i3939,i3940,i3941,i3942) = Arr4DIdxRowM(tmp1639, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3935,i3936,i3937,i3938);
i3938 = (i3938 +  (int64_t)1);
if ((i3938 ==  (int64_t)672)) {
i3938 =  (int64_t)0;
i3937 = (i3937 +  (int64_t)1);
if ((i3937 ==  (int64_t)14)) {
i3937 =  (int64_t)0;
i3936 = (i3936 +  (int64_t)1);
if ((i3936 ==  (int64_t)14)) {
i3936 =  (int64_t)0;
i3935 = (i3935 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1639);

uint64_t* tmp1643 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672);

int64_t i3950;

int64_t i3949;

int64_t i3948;

int64_t i3947;

int64_t i3946;

int64_t i3945;

int64_t i3944;

int64_t i3943;
i3943 =  (int64_t)0;
i3944 =  (int64_t)0;
i3945 =  (int64_t)0;
i3946 =  (int64_t)0;
for (uint32_t i3947 =  (int32_t)0; i3947 <  (int32_t)1; i3947++){
for (uint32_t i3950 =  (int32_t)0; i3950 <  (int32_t)672; i3950++){
for (uint32_t i3948 =  (int32_t)0; i3948 <  (int32_t)14; i3948++){
for (uint32_t i3949 =  (int32_t)0; i3949 <  (int32_t)14; i3949++){
Arr4DIdxRowM(tmp1643, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3947,i3948,i3949,i3950) = Arr4DIdxRowM(tmp1636, (int32_t)1, (int32_t)672, (int32_t)14, (int32_t)14,i3943,i3944,i3945,i3946);
i3946 = (i3946 +  (int64_t)1);
if ((i3946 ==  (int64_t)14)) {
i3946 =  (int64_t)0;
i3945 = (i3945 +  (int64_t)1);
if ((i3945 ==  (int64_t)14)) {
i3945 =  (int64_t)0;
i3944 = (i3944 +  (int64_t)1);
if ((i3944 ==  (int64_t)672)) {
i3944 =  (int64_t)0;
i3943 = (i3943 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)672,  (int32_t)14,  (int32_t)14, tmp1636);

uint64_t* tmp1645 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672);

int64_t i3958;

int64_t i3957;

int64_t i3956;

int64_t i3955;

int64_t i3954;

int64_t i3953;

int64_t i3952;

int64_t i3951;
i3951 =  (int64_t)0;
i3952 =  (int64_t)0;
i3953 =  (int64_t)0;
i3954 =  (int64_t)0;
for (uint32_t i3955 =  (int32_t)0; i3955 <  (int32_t)1; i3955++){
for (uint32_t i3958 =  (int32_t)0; i3958 <  (int32_t)672; i3958++){
for (uint32_t i3956 =  (int32_t)0; i3956 <  (int32_t)14; i3956++){
for (uint32_t i3957 =  (int32_t)0; i3957 <  (int32_t)14; i3957++){
Arr4DIdxRowM(tmp1645, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3955,i3956,i3957,i3958) = Arr4DIdxRowM(tmp1641, (int32_t)1, (int32_t)672, (int32_t)14, (int32_t)14,i3951,i3952,i3953,i3954);
i3954 = (i3954 +  (int64_t)1);
if ((i3954 ==  (int64_t)14)) {
i3954 =  (int64_t)0;
i3953 = (i3953 +  (int64_t)1);
if ((i3953 ==  (int64_t)14)) {
i3953 =  (int64_t)0;
i3952 = (i3952 +  (int64_t)1);
if ((i3952 ==  (int64_t)672)) {
i3952 =  (int64_t)0;
i3951 = (i3951 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)672,  (int32_t)14,  (int32_t)14, tmp1641);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1643,  (int32_t)23);

uint64_t* tmp1647 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672);

uint64_t* tmp1648 = make_array<uint64_t>( (int32_t)131712);

uint64_t* tmp1649 = make_array<uint64_t>( (int32_t)131712);

uint64_t* tmp1650 = make_array<uint64_t>( (int32_t)131712);

int32_t tmp1651;
for (uint32_t i3959 =  (int32_t)0; i3959 <  (int32_t)1; i3959++){
for (uint32_t i3960 =  (int32_t)0; i3960 <  (int32_t)14; i3960++){
for (uint32_t i3961 =  (int32_t)0; i3961 <  (int32_t)14; i3961++){
for (uint32_t i3962 =  (int32_t)0; i3962 <  (int32_t)672; i3962++){
tmp1651 = (((( (int32_t)0 + (i3959 *  (int32_t)131712)) + (i3960 *  (int32_t)9408)) + (i3961 *  (int32_t)672)) + (i3962 *  (int32_t)1));
Arr1DIdxRowM(tmp1648, (int32_t)131712,tmp1651) = Arr4DIdxRowM(tmp1643, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3959,i3960,i3961,i3962);
Arr1DIdxRowM(tmp1649, (int32_t)131712,tmp1651) = Arr4DIdxRowM(tmp1645, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3959,i3960,i3961,i3962);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)131712, tmp1648, tmp1649, tmp1650);
ClearMemSecret1( (int32_t)131712, tmp1648);
ClearMemSecret1( (int32_t)131712, tmp1649);
for (uint32_t i3959 =  (int32_t)0; i3959 <  (int32_t)1; i3959++){
for (uint32_t i3960 =  (int32_t)0; i3960 <  (int32_t)14; i3960++){
for (uint32_t i3961 =  (int32_t)0; i3961 <  (int32_t)14; i3961++){
for (uint32_t i3962 =  (int32_t)0; i3962 <  (int32_t)672; i3962++){
tmp1651 = (((( (int32_t)0 + (i3959 *  (int32_t)131712)) + (i3960 *  (int32_t)9408)) + (i3961 *  (int32_t)672)) + (i3962 *  (int32_t)1));
Arr4DIdxRowM(tmp1647, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3959,i3960,i3961,i3962) = Arr1DIdxRowM(tmp1650, (int32_t)131712,tmp1651);
}
}
}
}
ClearMemSecret1( (int32_t)131712, tmp1650);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1645);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1643);

uint64_t* tmp1654 = make_array<uint64_t>( (int32_t)1,  (int32_t)672,  (int32_t)14,  (int32_t)14);

int64_t i3970;

int64_t i3969;

int64_t i3968;

int64_t i3967;

int64_t i3966;

int64_t i3965;

int64_t i3964;

int64_t i3963;
i3963 =  (int64_t)0;
i3964 =  (int64_t)0;
i3965 =  (int64_t)0;
i3966 =  (int64_t)0;
for (uint32_t i3967 =  (int32_t)0; i3967 <  (int32_t)1; i3967++){
for (uint32_t i3969 =  (int32_t)0; i3969 <  (int32_t)14; i3969++){
for (uint32_t i3970 =  (int32_t)0; i3970 <  (int32_t)14; i3970++){
for (uint32_t i3968 =  (int32_t)0; i3968 <  (int32_t)672; i3968++){
Arr4DIdxRowM(tmp1654, (int32_t)1, (int32_t)672, (int32_t)14, (int32_t)14,i3967,i3968,i3969,i3970) = Arr4DIdxRowM(tmp1647, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3963,i3964,i3965,i3966);
i3966 = (i3966 +  (int64_t)1);
if ((i3966 ==  (int64_t)672)) {
i3966 =  (int64_t)0;
i3965 = (i3965 +  (int64_t)1);
if ((i3965 ==  (int64_t)14)) {
i3965 =  (int64_t)0;
i3964 = (i3964 +  (int64_t)1);
if ((i3964 ==  (int64_t)14)) {
i3964 =  (int64_t)0;
i3963 = (i3963 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1647);

uint64_t* tmp1656 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672);

int64_t i3978;

int64_t i3977;

int64_t i3976;

int64_t i3975;

int64_t i3974;

int64_t i3973;

int64_t i3972;

int64_t i3971;
i3971 =  (int64_t)0;
i3972 =  (int64_t)0;
i3973 =  (int64_t)0;
i3974 =  (int64_t)0;
for (uint32_t i3975 =  (int32_t)0; i3975 <  (int32_t)1; i3975++){
for (uint32_t i3978 =  (int32_t)0; i3978 <  (int32_t)672; i3978++){
for (uint32_t i3976 =  (int32_t)0; i3976 <  (int32_t)14; i3976++){
for (uint32_t i3977 =  (int32_t)0; i3977 <  (int32_t)14; i3977++){
Arr4DIdxRowM(tmp1656, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)672,i3975,i3976,i3977,i3978) = Arr4DIdxRowM(tmp1654, (int32_t)1, (int32_t)672, (int32_t)14, (int32_t)14,i3971,i3972,i3973,i3974);
i3974 = (i3974 +  (int64_t)1);
if ((i3974 ==  (int64_t)14)) {
i3974 =  (int64_t)0;
i3973 = (i3973 +  (int64_t)1);
if ((i3973 ==  (int64_t)14)) {
i3973 =  (int64_t)0;
i3972 = (i3972 +  (int64_t)1);
if ((i3972 ==  (int64_t)672)) {
i3972 =  (int64_t)0;
i3971 = (i3971 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)672,  (int32_t)14,  (int32_t)14, tmp1654);

uint64_t* tmp1658 = make_array<uint64_t>( (int32_t)5,  (int32_t)5,  (int32_t)1,  (int32_t)672);

int64_t i3986;

int64_t i3985;

int64_t i3984;

int64_t i3983;

int64_t i3982;

int64_t i3981;

int64_t i3980;

int64_t i3979;
i3979 =  (int64_t)0;
i3980 =  (int64_t)0;
i3981 =  (int64_t)0;
i3982 =  (int64_t)0;
for (uint32_t i3986 =  (int32_t)0; i3986 <  (int32_t)672; i3986++){
for (uint32_t i3985 =  (int32_t)0; i3985 <  (int32_t)1; i3985++){
for (uint32_t i3983 =  (int32_t)0; i3983 <  (int32_t)5; i3983++){
for (uint32_t i3984 =  (int32_t)0; i3984 <  (int32_t)5; i3984++){
Arr4DIdxRowM(tmp1658, (int32_t)5, (int32_t)5, (int32_t)1, (int32_t)672,i3983,i3984,i3985,i3986) = Arr4DIdxRowM(tmp88, (int32_t)672, (int32_t)1, (int32_t)5, (int32_t)5,i3979,i3980,i3981,i3982);
i3982 = (i3982 +  (int64_t)1);
if ((i3982 ==  (int64_t)5)) {
i3982 =  (int64_t)0;
i3981 = (i3981 +  (int64_t)1);
if ((i3981 ==  (int64_t)5)) {
i3981 =  (int64_t)0;
i3980 = (i3980 +  (int64_t)1);
if ((i3980 ==  (int64_t)1)) {
i3980 =  (int64_t)0;
i3979 = (i3979 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)672,  (int32_t)1,  (int32_t)5,  (int32_t)5, tmp88);

uint64_t* tmp1660 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1656,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672,  (int32_t)5,  (int32_t)5,  (int32_t)672,  (int32_t)2,  (int32_t)2,  (int32_t)2,  (int32_t)2,  (int32_t)2,  (int32_t)2,  (int32_t)672, tmp1656, tmp1658, tmp1660);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)672, tmp1656);
ClearMemSecret4( (int32_t)5,  (int32_t)5,  (int32_t)1,  (int32_t)672, tmp1658);

uint64_t* tmp1663 = make_array<uint64_t>( (int32_t)1,  (int32_t)672,  (int32_t)7,  (int32_t)7);

int64_t i3994;

int64_t i3993;

int64_t i3992;

int64_t i3991;

int64_t i3990;

int64_t i3989;

int64_t i3988;

int64_t i3987;
i3987 =  (int64_t)0;
i3988 =  (int64_t)0;
i3989 =  (int64_t)0;
i3990 =  (int64_t)0;
for (uint32_t i3991 =  (int32_t)0; i3991 <  (int32_t)1; i3991++){
for (uint32_t i3993 =  (int32_t)0; i3993 <  (int32_t)7; i3993++){
for (uint32_t i3994 =  (int32_t)0; i3994 <  (int32_t)7; i3994++){
for (uint32_t i3992 =  (int32_t)0; i3992 <  (int32_t)672; i3992++){
Arr4DIdxRowM(tmp1663, (int32_t)1, (int32_t)672, (int32_t)7, (int32_t)7,i3991,i3992,i3993,i3994) = Arr4DIdxRowM(tmp1660, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i3987,i3988,i3989,i3990);
i3990 = (i3990 +  (int64_t)1);
if ((i3990 ==  (int64_t)672)) {
i3990 =  (int64_t)0;
i3989 = (i3989 +  (int64_t)1);
if ((i3989 ==  (int64_t)7)) {
i3989 =  (int64_t)0;
i3988 = (i3988 +  (int64_t)1);
if ((i3988 ==  (int64_t)7)) {
i3988 =  (int64_t)0;
i3987 = (i3987 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1660);

uint64_t* tmp1665 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672);

int64_t i4002;

int64_t i4001;

int64_t i4000;

int64_t i3999;

int64_t i3998;

int64_t i3997;

int64_t i3996;

int64_t i3995;
i3995 =  (int64_t)0;
i3996 =  (int64_t)0;
i3997 =  (int64_t)0;
i3998 =  (int64_t)0;
for (uint32_t i3999 =  (int32_t)0; i3999 <  (int32_t)1; i3999++){
for (uint32_t i4002 =  (int32_t)0; i4002 <  (int32_t)672; i4002++){
for (uint32_t i4000 =  (int32_t)0; i4000 <  (int32_t)7; i4000++){
for (uint32_t i4001 =  (int32_t)0; i4001 <  (int32_t)7; i4001++){
Arr4DIdxRowM(tmp1665, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i3999,i4000,i4001,i4002) = Arr4DIdxRowM(tmp1663, (int32_t)1, (int32_t)672, (int32_t)7, (int32_t)7,i3995,i3996,i3997,i3998);
i3998 = (i3998 +  (int64_t)1);
if ((i3998 ==  (int64_t)7)) {
i3998 =  (int64_t)0;
i3997 = (i3997 +  (int64_t)1);
if ((i3997 ==  (int64_t)7)) {
i3997 =  (int64_t)0;
i3996 = (i3996 +  (int64_t)1);
if ((i3996 ==  (int64_t)672)) {
i3996 =  (int64_t)0;
i3995 = (i3995 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)672,  (int32_t)7,  (int32_t)7, tmp1663);

uint64_t* tmp1667 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672);
ScaleDown4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1665,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1665, tmp79, tmp80,  (int32_t)0,  (int32_t)0, tmp1667);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1665);

uint64_t* tmp1669 = make_array<uint64_t>( (int32_t)1,  (int32_t)672,  (int32_t)7,  (int32_t)7);

int64_t i4010;

int64_t i4009;

int64_t i4008;

int64_t i4007;

int64_t i4006;

int64_t i4005;

int64_t i4004;

int64_t i4003;
i4003 =  (int64_t)0;
i4004 =  (int64_t)0;
i4005 =  (int64_t)0;
i4006 =  (int64_t)0;
for (uint32_t i4007 =  (int32_t)0; i4007 <  (int32_t)1; i4007++){
for (uint32_t i4009 =  (int32_t)0; i4009 <  (int32_t)7; i4009++){
for (uint32_t i4010 =  (int32_t)0; i4010 <  (int32_t)7; i4010++){
for (uint32_t i4008 =  (int32_t)0; i4008 <  (int32_t)672; i4008++){
Arr4DIdxRowM(tmp1669, (int32_t)1, (int32_t)672, (int32_t)7, (int32_t)7,i4007,i4008,i4009,i4010) = Arr4DIdxRowM(tmp1667, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4003,i4004,i4005,i4006);
i4006 = (i4006 +  (int64_t)1);
if ((i4006 ==  (int64_t)672)) {
i4006 =  (int64_t)0;
i4005 = (i4005 +  (int64_t)1);
if ((i4005 ==  (int64_t)7)) {
i4005 =  (int64_t)0;
i4004 = (i4004 +  (int64_t)1);
if ((i4004 ==  (int64_t)7)) {
i4004 =  (int64_t)0;
i4003 = (i4003 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1667);

uint64_t* tmp1671 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672);

int64_t i4018;

int64_t i4017;

int64_t i4016;

int64_t i4015;

int64_t i4014;

int64_t i4013;

int64_t i4012;

int64_t i4011;
i4011 =  (int64_t)0;
i4012 =  (int64_t)0;
i4013 =  (int64_t)0;
i4014 =  (int64_t)0;
for (uint32_t i4015 =  (int32_t)0; i4015 <  (int32_t)1; i4015++){
for (uint32_t i4018 =  (int32_t)0; i4018 <  (int32_t)672; i4018++){
for (uint32_t i4016 =  (int32_t)0; i4016 <  (int32_t)7; i4016++){
for (uint32_t i4017 =  (int32_t)0; i4017 <  (int32_t)7; i4017++){
Arr4DIdxRowM(tmp1671, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4015,i4016,i4017,i4018) = Arr4DIdxRowM(tmp1669, (int32_t)1, (int32_t)672, (int32_t)7, (int32_t)7,i4011,i4012,i4013,i4014);
i4014 = (i4014 +  (int64_t)1);
if ((i4014 ==  (int64_t)7)) {
i4014 =  (int64_t)0;
i4013 = (i4013 +  (int64_t)1);
if ((i4013 ==  (int64_t)7)) {
i4013 =  (int64_t)0;
i4012 = (i4012 +  (int64_t)1);
if ((i4012 ==  (int64_t)672)) {
i4012 =  (int64_t)0;
i4011 = (i4011 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp1672 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672);
HardSigmoid4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1671, tmp1672,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1671);

uint64_t* tmp1674 = make_array<uint64_t>( (int32_t)1,  (int32_t)672,  (int32_t)7,  (int32_t)7);

int64_t i4026;

int64_t i4025;

int64_t i4024;

int64_t i4023;

int64_t i4022;

int64_t i4021;

int64_t i4020;

int64_t i4019;
i4019 =  (int64_t)0;
i4020 =  (int64_t)0;
i4021 =  (int64_t)0;
i4022 =  (int64_t)0;
for (uint32_t i4023 =  (int32_t)0; i4023 <  (int32_t)1; i4023++){
for (uint32_t i4025 =  (int32_t)0; i4025 <  (int32_t)7; i4025++){
for (uint32_t i4026 =  (int32_t)0; i4026 <  (int32_t)7; i4026++){
for (uint32_t i4024 =  (int32_t)0; i4024 <  (int32_t)672; i4024++){
Arr4DIdxRowM(tmp1674, (int32_t)1, (int32_t)672, (int32_t)7, (int32_t)7,i4023,i4024,i4025,i4026) = Arr4DIdxRowM(tmp1672, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4019,i4020,i4021,i4022);
i4022 = (i4022 +  (int64_t)1);
if ((i4022 ==  (int64_t)672)) {
i4022 =  (int64_t)0;
i4021 = (i4021 +  (int64_t)1);
if ((i4021 ==  (int64_t)7)) {
i4021 =  (int64_t)0;
i4020 = (i4020 +  (int64_t)1);
if ((i4020 ==  (int64_t)7)) {
i4020 =  (int64_t)0;
i4019 = (i4019 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1672);

uint64_t* tmp1676 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672);

int64_t i4034;

int64_t i4033;

int64_t i4032;

int64_t i4031;

int64_t i4030;

int64_t i4029;

int64_t i4028;

int64_t i4027;
i4027 =  (int64_t)0;
i4028 =  (int64_t)0;
i4029 =  (int64_t)0;
i4030 =  (int64_t)0;
for (uint32_t i4031 =  (int32_t)0; i4031 <  (int32_t)1; i4031++){
for (uint32_t i4034 =  (int32_t)0; i4034 <  (int32_t)672; i4034++){
for (uint32_t i4032 =  (int32_t)0; i4032 <  (int32_t)7; i4032++){
for (uint32_t i4033 =  (int32_t)0; i4033 <  (int32_t)7; i4033++){
Arr4DIdxRowM(tmp1676, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4031,i4032,i4033,i4034) = Arr4DIdxRowM(tmp1669, (int32_t)1, (int32_t)672, (int32_t)7, (int32_t)7,i4027,i4028,i4029,i4030);
i4030 = (i4030 +  (int64_t)1);
if ((i4030 ==  (int64_t)7)) {
i4030 =  (int64_t)0;
i4029 = (i4029 +  (int64_t)1);
if ((i4029 ==  (int64_t)7)) {
i4029 =  (int64_t)0;
i4028 = (i4028 +  (int64_t)1);
if ((i4028 ==  (int64_t)672)) {
i4028 =  (int64_t)0;
i4027 = (i4027 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)672,  (int32_t)7,  (int32_t)7, tmp1669);

uint64_t* tmp1678 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672);

int64_t i4042;

int64_t i4041;

int64_t i4040;

int64_t i4039;

int64_t i4038;

int64_t i4037;

int64_t i4036;

int64_t i4035;
i4035 =  (int64_t)0;
i4036 =  (int64_t)0;
i4037 =  (int64_t)0;
i4038 =  (int64_t)0;
for (uint32_t i4039 =  (int32_t)0; i4039 <  (int32_t)1; i4039++){
for (uint32_t i4042 =  (int32_t)0; i4042 <  (int32_t)672; i4042++){
for (uint32_t i4040 =  (int32_t)0; i4040 <  (int32_t)7; i4040++){
for (uint32_t i4041 =  (int32_t)0; i4041 <  (int32_t)7; i4041++){
Arr4DIdxRowM(tmp1678, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4039,i4040,i4041,i4042) = Arr4DIdxRowM(tmp1674, (int32_t)1, (int32_t)672, (int32_t)7, (int32_t)7,i4035,i4036,i4037,i4038);
i4038 = (i4038 +  (int64_t)1);
if ((i4038 ==  (int64_t)7)) {
i4038 =  (int64_t)0;
i4037 = (i4037 +  (int64_t)1);
if ((i4037 ==  (int64_t)7)) {
i4037 =  (int64_t)0;
i4036 = (i4036 +  (int64_t)1);
if ((i4036 ==  (int64_t)672)) {
i4036 =  (int64_t)0;
i4035 = (i4035 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)672,  (int32_t)7,  (int32_t)7, tmp1674);
ScaleDown4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1676,  (int32_t)23);

uint64_t* tmp1680 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672);

uint64_t* tmp1681 = make_array<uint64_t>( (int32_t)32928);

uint64_t* tmp1682 = make_array<uint64_t>( (int32_t)32928);

uint64_t* tmp1683 = make_array<uint64_t>( (int32_t)32928);

int32_t tmp1684;
for (uint32_t i4043 =  (int32_t)0; i4043 <  (int32_t)1; i4043++){
for (uint32_t i4044 =  (int32_t)0; i4044 <  (int32_t)7; i4044++){
for (uint32_t i4045 =  (int32_t)0; i4045 <  (int32_t)7; i4045++){
for (uint32_t i4046 =  (int32_t)0; i4046 <  (int32_t)672; i4046++){
tmp1684 = (((( (int32_t)0 + (i4043 *  (int32_t)32928)) + (i4044 *  (int32_t)4704)) + (i4045 *  (int32_t)672)) + (i4046 *  (int32_t)1));
Arr1DIdxRowM(tmp1681, (int32_t)32928,tmp1684) = Arr4DIdxRowM(tmp1676, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4043,i4044,i4045,i4046);
Arr1DIdxRowM(tmp1682, (int32_t)32928,tmp1684) = Arr4DIdxRowM(tmp1678, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4043,i4044,i4045,i4046);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)32928, tmp1681, tmp1682, tmp1683);
ClearMemSecret1( (int32_t)32928, tmp1681);
ClearMemSecret1( (int32_t)32928, tmp1682);
for (uint32_t i4043 =  (int32_t)0; i4043 <  (int32_t)1; i4043++){
for (uint32_t i4044 =  (int32_t)0; i4044 <  (int32_t)7; i4044++){
for (uint32_t i4045 =  (int32_t)0; i4045 <  (int32_t)7; i4045++){
for (uint32_t i4046 =  (int32_t)0; i4046 <  (int32_t)672; i4046++){
tmp1684 = (((( (int32_t)0 + (i4043 *  (int32_t)32928)) + (i4044 *  (int32_t)4704)) + (i4045 *  (int32_t)672)) + (i4046 *  (int32_t)1));
Arr4DIdxRowM(tmp1680, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4043,i4044,i4045,i4046) = Arr1DIdxRowM(tmp1683, (int32_t)32928,tmp1684);
}
}
}
}
ClearMemSecret1( (int32_t)32928, tmp1683);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1676);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1678);

uint64_t* tmp1687 = make_array<uint64_t>( (int32_t)1,  (int32_t)672,  (int32_t)7,  (int32_t)7);

int64_t i4054;

int64_t i4053;

int64_t i4052;

int64_t i4051;

int64_t i4050;

int64_t i4049;

int64_t i4048;

int64_t i4047;
i4047 =  (int64_t)0;
i4048 =  (int64_t)0;
i4049 =  (int64_t)0;
i4050 =  (int64_t)0;
for (uint32_t i4051 =  (int32_t)0; i4051 <  (int32_t)1; i4051++){
for (uint32_t i4053 =  (int32_t)0; i4053 <  (int32_t)7; i4053++){
for (uint32_t i4054 =  (int32_t)0; i4054 <  (int32_t)7; i4054++){
for (uint32_t i4052 =  (int32_t)0; i4052 <  (int32_t)672; i4052++){
Arr4DIdxRowM(tmp1687, (int32_t)1, (int32_t)672, (int32_t)7, (int32_t)7,i4051,i4052,i4053,i4054) = Arr4DIdxRowM(tmp1680, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4047,i4048,i4049,i4050);
i4050 = (i4050 +  (int64_t)1);
if ((i4050 ==  (int64_t)672)) {
i4050 =  (int64_t)0;
i4049 = (i4049 +  (int64_t)1);
if ((i4049 ==  (int64_t)7)) {
i4049 =  (int64_t)0;
i4048 = (i4048 +  (int64_t)1);
if ((i4048 ==  (int64_t)7)) {
i4048 =  (int64_t)0;
i4047 = (i4047 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1680);

uint64_t* tmp1689 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672);

int64_t i4062;

int64_t i4061;

int64_t i4060;

int64_t i4059;

int64_t i4058;

int64_t i4057;

int64_t i4056;

int64_t i4055;
i4055 =  (int64_t)0;
i4056 =  (int64_t)0;
i4057 =  (int64_t)0;
i4058 =  (int64_t)0;
for (uint32_t i4059 =  (int32_t)0; i4059 <  (int32_t)1; i4059++){
for (uint32_t i4062 =  (int32_t)0; i4062 <  (int32_t)672; i4062++){
for (uint32_t i4060 =  (int32_t)0; i4060 <  (int32_t)7; i4060++){
for (uint32_t i4061 =  (int32_t)0; i4061 <  (int32_t)7; i4061++){
Arr4DIdxRowM(tmp1689, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4059,i4060,i4061,i4062) = Arr4DIdxRowM(tmp1687, (int32_t)1, (int32_t)672, (int32_t)7, (int32_t)7,i4055,i4056,i4057,i4058);
i4058 = (i4058 +  (int64_t)1);
if ((i4058 ==  (int64_t)7)) {
i4058 =  (int64_t)0;
i4057 = (i4057 +  (int64_t)1);
if ((i4057 ==  (int64_t)7)) {
i4057 =  (int64_t)0;
i4056 = (i4056 +  (int64_t)1);
if ((i4056 ==  (int64_t)672)) {
i4056 =  (int64_t)0;
i4055 = (i4055 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp1690 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672);
AvgPool( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672,  (int32_t)7,  (int32_t)7,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1689, tmp1690);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1689);

uint64_t* tmp1692 = make_array<uint64_t>( (int32_t)1,  (int32_t)672,  (int32_t)1,  (int32_t)1);

int64_t i4070;

int64_t i4069;

int64_t i4068;

int64_t i4067;

int64_t i4066;

int64_t i4065;

int64_t i4064;

int64_t i4063;
i4063 =  (int64_t)0;
i4064 =  (int64_t)0;
i4065 =  (int64_t)0;
i4066 =  (int64_t)0;
for (uint32_t i4067 =  (int32_t)0; i4067 <  (int32_t)1; i4067++){
for (uint32_t i4069 =  (int32_t)0; i4069 <  (int32_t)1; i4069++){
for (uint32_t i4070 =  (int32_t)0; i4070 <  (int32_t)1; i4070++){
for (uint32_t i4068 =  (int32_t)0; i4068 <  (int32_t)672; i4068++){
Arr4DIdxRowM(tmp1692, (int32_t)1, (int32_t)672, (int32_t)1, (int32_t)1,i4067,i4068,i4069,i4070) = Arr4DIdxRowM(tmp1690, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)672,i4063,i4064,i4065,i4066);
i4066 = (i4066 +  (int64_t)1);
if ((i4066 ==  (int64_t)672)) {
i4066 =  (int64_t)0;
i4065 = (i4065 +  (int64_t)1);
if ((i4065 ==  (int64_t)1)) {
i4065 =  (int64_t)0;
i4064 = (i4064 +  (int64_t)1);
if ((i4064 ==  (int64_t)1)) {
i4064 =  (int64_t)0;
i4063 = (i4063 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672, tmp1690);

uint64_t* tmp1694 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672);

int64_t i4078;

int64_t i4077;

int64_t i4076;

int64_t i4075;

int64_t i4074;

int64_t i4073;

int64_t i4072;

int64_t i4071;
i4071 =  (int64_t)0;
i4072 =  (int64_t)0;
i4073 =  (int64_t)0;
i4074 =  (int64_t)0;
for (uint32_t i4075 =  (int32_t)0; i4075 <  (int32_t)1; i4075++){
for (uint32_t i4078 =  (int32_t)0; i4078 <  (int32_t)672; i4078++){
for (uint32_t i4076 =  (int32_t)0; i4076 <  (int32_t)1; i4076++){
for (uint32_t i4077 =  (int32_t)0; i4077 <  (int32_t)1; i4077++){
Arr4DIdxRowM(tmp1694, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)672,i4075,i4076,i4077,i4078) = Arr4DIdxRowM(tmp1692, (int32_t)1, (int32_t)672, (int32_t)1, (int32_t)1,i4071,i4072,i4073,i4074);
i4074 = (i4074 +  (int64_t)1);
if ((i4074 ==  (int64_t)1)) {
i4074 =  (int64_t)0;
i4073 = (i4073 +  (int64_t)1);
if ((i4073 ==  (int64_t)1)) {
i4073 =  (int64_t)0;
i4072 = (i4072 +  (int64_t)1);
if ((i4072 ==  (int64_t)672)) {
i4072 =  (int64_t)0;
i4071 = (i4071 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)672,  (int32_t)1,  (int32_t)1, tmp1692);

uint64_t* tmp1696 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)672,  (int32_t)168);

int64_t i4086;

int64_t i4085;

int64_t i4084;

int64_t i4083;

int64_t i4082;

int64_t i4081;

int64_t i4080;

int64_t i4079;
i4079 =  (int64_t)0;
i4080 =  (int64_t)0;
i4081 =  (int64_t)0;
i4082 =  (int64_t)0;
for (uint32_t i4086 =  (int32_t)0; i4086 <  (int32_t)168; i4086++){
for (uint32_t i4085 =  (int32_t)0; i4085 <  (int32_t)672; i4085++){
for (uint32_t i4083 =  (int32_t)0; i4083 <  (int32_t)1; i4083++){
for (uint32_t i4084 =  (int32_t)0; i4084 <  (int32_t)1; i4084++){
Arr4DIdxRowM(tmp1696, (int32_t)1, (int32_t)1, (int32_t)672, (int32_t)168,i4083,i4084,i4085,i4086) = Arr4DIdxRowM(tmp89, (int32_t)168, (int32_t)672, (int32_t)1, (int32_t)1,i4079,i4080,i4081,i4082);
i4082 = (i4082 +  (int64_t)1);
if ((i4082 ==  (int64_t)1)) {
i4082 =  (int64_t)0;
i4081 = (i4081 +  (int64_t)1);
if ((i4081 ==  (int64_t)1)) {
i4081 =  (int64_t)0;
i4080 = (i4080 +  (int64_t)1);
if ((i4080 ==  (int64_t)672)) {
i4080 =  (int64_t)0;
i4079 = (i4079 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)168,  (int32_t)672,  (int32_t)1,  (int32_t)1, tmp89);

uint64_t* tmp1698 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168);
ScaleDown4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672, tmp1694,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672,  (int32_t)1,  (int32_t)1,  (int32_t)168,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp1694, tmp1696, tmp1698);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)672,  (int32_t)168, tmp1696);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672, tmp1694);

uint64_t* tmp1701 = make_array<uint64_t>( (int32_t)1,  (int32_t)168,  (int32_t)1,  (int32_t)1);

int64_t i4094;

int64_t i4093;

int64_t i4092;

int64_t i4091;

int64_t i4090;

int64_t i4089;

int64_t i4088;

int64_t i4087;
i4087 =  (int64_t)0;
i4088 =  (int64_t)0;
i4089 =  (int64_t)0;
i4090 =  (int64_t)0;
for (uint32_t i4091 =  (int32_t)0; i4091 <  (int32_t)1; i4091++){
for (uint32_t i4093 =  (int32_t)0; i4093 <  (int32_t)1; i4093++){
for (uint32_t i4094 =  (int32_t)0; i4094 <  (int32_t)1; i4094++){
for (uint32_t i4092 =  (int32_t)0; i4092 <  (int32_t)168; i4092++){
Arr4DIdxRowM(tmp1701, (int32_t)1, (int32_t)168, (int32_t)1, (int32_t)1,i4091,i4092,i4093,i4094) = Arr4DIdxRowM(tmp1698, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)168,i4087,i4088,i4089,i4090);
i4090 = (i4090 +  (int64_t)1);
if ((i4090 ==  (int64_t)168)) {
i4090 =  (int64_t)0;
i4089 = (i4089 +  (int64_t)1);
if ((i4089 ==  (int64_t)1)) {
i4089 =  (int64_t)0;
i4088 = (i4088 +  (int64_t)1);
if ((i4088 ==  (int64_t)1)) {
i4088 =  (int64_t)0;
i4087 = (i4087 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168, tmp1698);

uint64_t* tmp1703 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168);

int64_t i4102;

int64_t i4101;

int64_t i4100;

int64_t i4099;

int64_t i4098;

int64_t i4097;

int64_t i4096;

int64_t i4095;
i4095 =  (int64_t)0;
i4096 =  (int64_t)0;
i4097 =  (int64_t)0;
i4098 =  (int64_t)0;
for (uint32_t i4099 =  (int32_t)0; i4099 <  (int32_t)1; i4099++){
for (uint32_t i4102 =  (int32_t)0; i4102 <  (int32_t)168; i4102++){
for (uint32_t i4100 =  (int32_t)0; i4100 <  (int32_t)1; i4100++){
for (uint32_t i4101 =  (int32_t)0; i4101 <  (int32_t)1; i4101++){
Arr4DIdxRowM(tmp1703, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)168,i4099,i4100,i4101,i4102) = Arr4DIdxRowM(tmp1701, (int32_t)1, (int32_t)168, (int32_t)1, (int32_t)1,i4095,i4096,i4097,i4098);
i4098 = (i4098 +  (int64_t)1);
if ((i4098 ==  (int64_t)1)) {
i4098 =  (int64_t)0;
i4097 = (i4097 +  (int64_t)1);
if ((i4097 ==  (int64_t)1)) {
i4097 =  (int64_t)0;
i4096 = (i4096 +  (int64_t)1);
if ((i4096 ==  (int64_t)168)) {
i4096 =  (int64_t)0;
i4095 = (i4095 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)168,  (int32_t)1,  (int32_t)1, tmp1701);

uint64_t* tmp1705 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168);
ScaleDown4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168, tmp1703,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168, tmp1703, tmp83, tmp84,  (int32_t)0,  (int32_t)0, tmp1705);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168, tmp1703);

uint64_t* tmp1707 = make_array<uint64_t>( (int32_t)1,  (int32_t)168,  (int32_t)1,  (int32_t)1);

int64_t i4110;

int64_t i4109;

int64_t i4108;

int64_t i4107;

int64_t i4106;

int64_t i4105;

int64_t i4104;

int64_t i4103;
i4103 =  (int64_t)0;
i4104 =  (int64_t)0;
i4105 =  (int64_t)0;
i4106 =  (int64_t)0;
for (uint32_t i4107 =  (int32_t)0; i4107 <  (int32_t)1; i4107++){
for (uint32_t i4109 =  (int32_t)0; i4109 <  (int32_t)1; i4109++){
for (uint32_t i4110 =  (int32_t)0; i4110 <  (int32_t)1; i4110++){
for (uint32_t i4108 =  (int32_t)0; i4108 <  (int32_t)168; i4108++){
Arr4DIdxRowM(tmp1707, (int32_t)1, (int32_t)168, (int32_t)1, (int32_t)1,i4107,i4108,i4109,i4110) = Arr4DIdxRowM(tmp1705, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)168,i4103,i4104,i4105,i4106);
i4106 = (i4106 +  (int64_t)1);
if ((i4106 ==  (int64_t)168)) {
i4106 =  (int64_t)0;
i4105 = (i4105 +  (int64_t)1);
if ((i4105 ==  (int64_t)1)) {
i4105 =  (int64_t)0;
i4104 = (i4104 +  (int64_t)1);
if ((i4104 ==  (int64_t)1)) {
i4104 =  (int64_t)0;
i4103 = (i4103 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168, tmp1705);

uint64_t* tmp1709 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168);

int64_t i4118;

int64_t i4117;

int64_t i4116;

int64_t i4115;

int64_t i4114;

int64_t i4113;

int64_t i4112;

int64_t i4111;
i4111 =  (int64_t)0;
i4112 =  (int64_t)0;
i4113 =  (int64_t)0;
i4114 =  (int64_t)0;
for (uint32_t i4115 =  (int32_t)0; i4115 <  (int32_t)1; i4115++){
for (uint32_t i4118 =  (int32_t)0; i4118 <  (int32_t)168; i4118++){
for (uint32_t i4116 =  (int32_t)0; i4116 <  (int32_t)1; i4116++){
for (uint32_t i4117 =  (int32_t)0; i4117 <  (int32_t)1; i4117++){
Arr4DIdxRowM(tmp1709, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)168,i4115,i4116,i4117,i4118) = Arr4DIdxRowM(tmp1707, (int32_t)1, (int32_t)168, (int32_t)1, (int32_t)1,i4111,i4112,i4113,i4114);
i4114 = (i4114 +  (int64_t)1);
if ((i4114 ==  (int64_t)1)) {
i4114 =  (int64_t)0;
i4113 = (i4113 +  (int64_t)1);
if ((i4113 ==  (int64_t)1)) {
i4113 =  (int64_t)0;
i4112 = (i4112 +  (int64_t)1);
if ((i4112 ==  (int64_t)168)) {
i4112 =  (int64_t)0;
i4111 = (i4111 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)168,  (int32_t)1,  (int32_t)1, tmp1707);

uint64_t* tmp1711 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168);
Relu4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168, tmp1709, tmp1711,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168, tmp1709);

uint64_t* tmp1713 = make_array<uint64_t>( (int32_t)1,  (int32_t)168,  (int32_t)1,  (int32_t)1);

int64_t i4126;

int64_t i4125;

int64_t i4124;

int64_t i4123;

int64_t i4122;

int64_t i4121;

int64_t i4120;

int64_t i4119;
i4119 =  (int64_t)0;
i4120 =  (int64_t)0;
i4121 =  (int64_t)0;
i4122 =  (int64_t)0;
for (uint32_t i4123 =  (int32_t)0; i4123 <  (int32_t)1; i4123++){
for (uint32_t i4125 =  (int32_t)0; i4125 <  (int32_t)1; i4125++){
for (uint32_t i4126 =  (int32_t)0; i4126 <  (int32_t)1; i4126++){
for (uint32_t i4124 =  (int32_t)0; i4124 <  (int32_t)168; i4124++){
Arr4DIdxRowM(tmp1713, (int32_t)1, (int32_t)168, (int32_t)1, (int32_t)1,i4123,i4124,i4125,i4126) = Arr4DIdxRowM(tmp1711, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)168,i4119,i4120,i4121,i4122);
i4122 = (i4122 +  (int64_t)1);
if ((i4122 ==  (int64_t)168)) {
i4122 =  (int64_t)0;
i4121 = (i4121 +  (int64_t)1);
if ((i4121 ==  (int64_t)1)) {
i4121 =  (int64_t)0;
i4120 = (i4120 +  (int64_t)1);
if ((i4120 ==  (int64_t)1)) {
i4120 =  (int64_t)0;
i4119 = (i4119 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168, tmp1711);

uint64_t* tmp1715 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168);

int64_t i4134;

int64_t i4133;

int64_t i4132;

int64_t i4131;

int64_t i4130;

int64_t i4129;

int64_t i4128;

int64_t i4127;
i4127 =  (int64_t)0;
i4128 =  (int64_t)0;
i4129 =  (int64_t)0;
i4130 =  (int64_t)0;
for (uint32_t i4131 =  (int32_t)0; i4131 <  (int32_t)1; i4131++){
for (uint32_t i4134 =  (int32_t)0; i4134 <  (int32_t)168; i4134++){
for (uint32_t i4132 =  (int32_t)0; i4132 <  (int32_t)1; i4132++){
for (uint32_t i4133 =  (int32_t)0; i4133 <  (int32_t)1; i4133++){
Arr4DIdxRowM(tmp1715, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)168,i4131,i4132,i4133,i4134) = Arr4DIdxRowM(tmp1713, (int32_t)1, (int32_t)168, (int32_t)1, (int32_t)1,i4127,i4128,i4129,i4130);
i4130 = (i4130 +  (int64_t)1);
if ((i4130 ==  (int64_t)1)) {
i4130 =  (int64_t)0;
i4129 = (i4129 +  (int64_t)1);
if ((i4129 ==  (int64_t)1)) {
i4129 =  (int64_t)0;
i4128 = (i4128 +  (int64_t)1);
if ((i4128 ==  (int64_t)168)) {
i4128 =  (int64_t)0;
i4127 = (i4127 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)168,  (int32_t)1,  (int32_t)1, tmp1713);

uint64_t* tmp1717 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)168,  (int32_t)672);

int64_t i4142;

int64_t i4141;

int64_t i4140;

int64_t i4139;

int64_t i4138;

int64_t i4137;

int64_t i4136;

int64_t i4135;
i4135 =  (int64_t)0;
i4136 =  (int64_t)0;
i4137 =  (int64_t)0;
i4138 =  (int64_t)0;
for (uint32_t i4142 =  (int32_t)0; i4142 <  (int32_t)672; i4142++){
for (uint32_t i4141 =  (int32_t)0; i4141 <  (int32_t)168; i4141++){
for (uint32_t i4139 =  (int32_t)0; i4139 <  (int32_t)1; i4139++){
for (uint32_t i4140 =  (int32_t)0; i4140 <  (int32_t)1; i4140++){
Arr4DIdxRowM(tmp1717, (int32_t)1, (int32_t)1, (int32_t)168, (int32_t)672,i4139,i4140,i4141,i4142) = Arr4DIdxRowM(tmp90, (int32_t)672, (int32_t)168, (int32_t)1, (int32_t)1,i4135,i4136,i4137,i4138);
i4138 = (i4138 +  (int64_t)1);
if ((i4138 ==  (int64_t)1)) {
i4138 =  (int64_t)0;
i4137 = (i4137 +  (int64_t)1);
if ((i4137 ==  (int64_t)1)) {
i4137 =  (int64_t)0;
i4136 = (i4136 +  (int64_t)1);
if ((i4136 ==  (int64_t)168)) {
i4136 =  (int64_t)0;
i4135 = (i4135 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)672,  (int32_t)168,  (int32_t)1,  (int32_t)1, tmp90);

uint64_t* tmp1719 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168,  (int32_t)1,  (int32_t)1,  (int32_t)672,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp1715, tmp1717, tmp1719);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)168,  (int32_t)672, tmp1717);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168, tmp1715);

uint64_t* tmp1722 = make_array<uint64_t>( (int32_t)1,  (int32_t)672,  (int32_t)1,  (int32_t)1);

int64_t i4150;

int64_t i4149;

int64_t i4148;

int64_t i4147;

int64_t i4146;

int64_t i4145;

int64_t i4144;

int64_t i4143;
i4143 =  (int64_t)0;
i4144 =  (int64_t)0;
i4145 =  (int64_t)0;
i4146 =  (int64_t)0;
for (uint32_t i4147 =  (int32_t)0; i4147 <  (int32_t)1; i4147++){
for (uint32_t i4149 =  (int32_t)0; i4149 <  (int32_t)1; i4149++){
for (uint32_t i4150 =  (int32_t)0; i4150 <  (int32_t)1; i4150++){
for (uint32_t i4148 =  (int32_t)0; i4148 <  (int32_t)672; i4148++){
Arr4DIdxRowM(tmp1722, (int32_t)1, (int32_t)672, (int32_t)1, (int32_t)1,i4147,i4148,i4149,i4150) = Arr4DIdxRowM(tmp1719, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)672,i4143,i4144,i4145,i4146);
i4146 = (i4146 +  (int64_t)1);
if ((i4146 ==  (int64_t)672)) {
i4146 =  (int64_t)0;
i4145 = (i4145 +  (int64_t)1);
if ((i4145 ==  (int64_t)1)) {
i4145 =  (int64_t)0;
i4144 = (i4144 +  (int64_t)1);
if ((i4144 ==  (int64_t)1)) {
i4144 =  (int64_t)0;
i4143 = (i4143 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672, tmp1719);

uint64_t* tmp1724 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672);

int64_t i4158;

int64_t i4157;

int64_t i4156;

int64_t i4155;

int64_t i4154;

int64_t i4153;

int64_t i4152;

int64_t i4151;
i4151 =  (int64_t)0;
i4152 =  (int64_t)0;
i4153 =  (int64_t)0;
i4154 =  (int64_t)0;
for (uint32_t i4155 =  (int32_t)0; i4155 <  (int32_t)1; i4155++){
for (uint32_t i4158 =  (int32_t)0; i4158 <  (int32_t)672; i4158++){
for (uint32_t i4156 =  (int32_t)0; i4156 <  (int32_t)1; i4156++){
for (uint32_t i4157 =  (int32_t)0; i4157 <  (int32_t)1; i4157++){
Arr4DIdxRowM(tmp1724, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)672,i4155,i4156,i4157,i4158) = Arr4DIdxRowM(tmp1722, (int32_t)1, (int32_t)672, (int32_t)1, (int32_t)1,i4151,i4152,i4153,i4154);
i4154 = (i4154 +  (int64_t)1);
if ((i4154 ==  (int64_t)1)) {
i4154 =  (int64_t)0;
i4153 = (i4153 +  (int64_t)1);
if ((i4153 ==  (int64_t)1)) {
i4153 =  (int64_t)0;
i4152 = (i4152 +  (int64_t)1);
if ((i4152 ==  (int64_t)672)) {
i4152 =  (int64_t)0;
i4151 = (i4151 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)672,  (int32_t)1,  (int32_t)1, tmp1722);

uint64_t* tmp1726 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672);
HardSigmoid4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672, tmp1724, tmp1726,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672, tmp1724);

uint64_t* tmp1728 = make_array<uint64_t>( (int32_t)1,  (int32_t)672,  (int32_t)1,  (int32_t)1);

int64_t i4166;

int64_t i4165;

int64_t i4164;

int64_t i4163;

int64_t i4162;

int64_t i4161;

int64_t i4160;

int64_t i4159;
i4159 =  (int64_t)0;
i4160 =  (int64_t)0;
i4161 =  (int64_t)0;
i4162 =  (int64_t)0;
for (uint32_t i4163 =  (int32_t)0; i4163 <  (int32_t)1; i4163++){
for (uint32_t i4165 =  (int32_t)0; i4165 <  (int32_t)1; i4165++){
for (uint32_t i4166 =  (int32_t)0; i4166 <  (int32_t)1; i4166++){
for (uint32_t i4164 =  (int32_t)0; i4164 <  (int32_t)672; i4164++){
Arr4DIdxRowM(tmp1728, (int32_t)1, (int32_t)672, (int32_t)1, (int32_t)1,i4163,i4164,i4165,i4166) = Arr4DIdxRowM(tmp1726, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)672,i4159,i4160,i4161,i4162);
i4162 = (i4162 +  (int64_t)1);
if ((i4162 ==  (int64_t)672)) {
i4162 =  (int64_t)0;
i4161 = (i4161 +  (int64_t)1);
if ((i4161 ==  (int64_t)1)) {
i4161 =  (int64_t)0;
i4160 = (i4160 +  (int64_t)1);
if ((i4160 ==  (int64_t)1)) {
i4160 =  (int64_t)0;
i4159 = (i4159 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672, tmp1726);

uint64_t* tmp1730 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672);

int64_t i4174;

int64_t i4173;

int64_t i4172;

int64_t i4171;

int64_t i4170;

int64_t i4169;

int64_t i4168;

int64_t i4167;
i4167 =  (int64_t)0;
i4168 =  (int64_t)0;
i4169 =  (int64_t)0;
i4170 =  (int64_t)0;
for (uint32_t i4171 =  (int32_t)0; i4171 <  (int32_t)1; i4171++){
for (uint32_t i4174 =  (int32_t)0; i4174 <  (int32_t)672; i4174++){
for (uint32_t i4172 =  (int32_t)0; i4172 <  (int32_t)7; i4172++){
for (uint32_t i4173 =  (int32_t)0; i4173 <  (int32_t)7; i4173++){
Arr4DIdxRowM(tmp1730, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4171,i4172,i4173,i4174) = Arr4DIdxRowM(tmp1687, (int32_t)1, (int32_t)672, (int32_t)7, (int32_t)7,i4167,i4168,i4169,i4170);
i4170 = (i4170 +  (int64_t)1);
if ((i4170 ==  (int64_t)7)) {
i4170 =  (int64_t)0;
i4169 = (i4169 +  (int64_t)1);
if ((i4169 ==  (int64_t)7)) {
i4169 =  (int64_t)0;
i4168 = (i4168 +  (int64_t)1);
if ((i4168 ==  (int64_t)672)) {
i4168 =  (int64_t)0;
i4167 = (i4167 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)672,  (int32_t)7,  (int32_t)7, tmp1687);

uint64_t* tmp1732 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672);

int64_t i4182;

int64_t i4181;

int64_t i4180;

int64_t i4179;

int64_t i4178;

int64_t i4177;

int64_t i4176;

int64_t i4175;
i4175 =  (int64_t)0;
i4176 =  (int64_t)0;
i4177 =  (int64_t)0;
i4178 =  (int64_t)0;
for (uint32_t i4179 =  (int32_t)0; i4179 <  (int32_t)1; i4179++){
for (uint32_t i4182 =  (int32_t)0; i4182 <  (int32_t)672; i4182++){
for (uint32_t i4180 =  (int32_t)0; i4180 <  (int32_t)1; i4180++){
for (uint32_t i4181 =  (int32_t)0; i4181 <  (int32_t)1; i4181++){
Arr4DIdxRowM(tmp1732, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)672,i4179,i4180,i4181,i4182) = Arr4DIdxRowM(tmp1728, (int32_t)1, (int32_t)672, (int32_t)1, (int32_t)1,i4175,i4176,i4177,i4178);
i4178 = (i4178 +  (int64_t)1);
if ((i4178 ==  (int64_t)1)) {
i4178 =  (int64_t)0;
i4177 = (i4177 +  (int64_t)1);
if ((i4177 ==  (int64_t)1)) {
i4177 =  (int64_t)0;
i4176 = (i4176 +  (int64_t)1);
if ((i4176 ==  (int64_t)672)) {
i4176 =  (int64_t)0;
i4175 = (i4175 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)672,  (int32_t)1,  (int32_t)1, tmp1728);
ScaleDown4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1730,  (int32_t)23);

uint64_t* tmp1734 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672);

uint64_t* tmp1735 = make_array<uint64_t>( (int32_t)32928);

uint64_t* tmp1736 = make_array<uint64_t>( (int32_t)32928);

uint64_t* tmp1737 = make_array<uint64_t>( (int32_t)32928);

int32_t tmp1738;
for (uint32_t i4183 =  (int32_t)0; i4183 <  (int32_t)1; i4183++){
for (uint32_t i4184 =  (int32_t)0; i4184 <  (int32_t)7; i4184++){
for (uint32_t i4185 =  (int32_t)0; i4185 <  (int32_t)7; i4185++){
for (uint32_t i4186 =  (int32_t)0; i4186 <  (int32_t)672; i4186++){
tmp1738 = (((( (int32_t)0 + (i4183 *  (int32_t)32928)) + (i4184 *  (int32_t)4704)) + (i4185 *  (int32_t)672)) + (i4186 *  (int32_t)1));
Arr1DIdxRowM(tmp1735, (int32_t)32928,tmp1738) = Arr4DIdxRowM(tmp1730, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4183,i4184,i4185,i4186);
Arr1DIdxRowM(tmp1736, (int32_t)32928,tmp1738) = Arr4DIdxRowM(tmp1732, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)672,i4183, (int32_t)0, (int32_t)0,i4186);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)32928, tmp1735, tmp1736, tmp1737);
ClearMemSecret1( (int32_t)32928, tmp1735);
ClearMemSecret1( (int32_t)32928, tmp1736);
for (uint32_t i4183 =  (int32_t)0; i4183 <  (int32_t)1; i4183++){
for (uint32_t i4184 =  (int32_t)0; i4184 <  (int32_t)7; i4184++){
for (uint32_t i4185 =  (int32_t)0; i4185 <  (int32_t)7; i4185++){
for (uint32_t i4186 =  (int32_t)0; i4186 <  (int32_t)672; i4186++){
tmp1738 = (((( (int32_t)0 + (i4183 *  (int32_t)32928)) + (i4184 *  (int32_t)4704)) + (i4185 *  (int32_t)672)) + (i4186 *  (int32_t)1));
Arr4DIdxRowM(tmp1734, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4183,i4184,i4185,i4186) = Arr1DIdxRowM(tmp1737, (int32_t)32928,tmp1738);
}
}
}
}
ClearMemSecret1( (int32_t)32928, tmp1737);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672, tmp1732);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1730);

uint64_t* tmp1741 = make_array<uint64_t>( (int32_t)1,  (int32_t)672,  (int32_t)7,  (int32_t)7);

int64_t i4194;

int64_t i4193;

int64_t i4192;

int64_t i4191;

int64_t i4190;

int64_t i4189;

int64_t i4188;

int64_t i4187;
i4187 =  (int64_t)0;
i4188 =  (int64_t)0;
i4189 =  (int64_t)0;
i4190 =  (int64_t)0;
for (uint32_t i4191 =  (int32_t)0; i4191 <  (int32_t)1; i4191++){
for (uint32_t i4193 =  (int32_t)0; i4193 <  (int32_t)7; i4193++){
for (uint32_t i4194 =  (int32_t)0; i4194 <  (int32_t)7; i4194++){
for (uint32_t i4192 =  (int32_t)0; i4192 <  (int32_t)672; i4192++){
Arr4DIdxRowM(tmp1741, (int32_t)1, (int32_t)672, (int32_t)7, (int32_t)7,i4191,i4192,i4193,i4194) = Arr4DIdxRowM(tmp1734, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4187,i4188,i4189,i4190);
i4190 = (i4190 +  (int64_t)1);
if ((i4190 ==  (int64_t)672)) {
i4190 =  (int64_t)0;
i4189 = (i4189 +  (int64_t)1);
if ((i4189 ==  (int64_t)7)) {
i4189 =  (int64_t)0;
i4188 = (i4188 +  (int64_t)1);
if ((i4188 ==  (int64_t)7)) {
i4188 =  (int64_t)0;
i4187 = (i4187 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1734);

uint64_t* tmp1743 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672);

int64_t i4202;

int64_t i4201;

int64_t i4200;

int64_t i4199;

int64_t i4198;

int64_t i4197;

int64_t i4196;

int64_t i4195;
i4195 =  (int64_t)0;
i4196 =  (int64_t)0;
i4197 =  (int64_t)0;
i4198 =  (int64_t)0;
for (uint32_t i4199 =  (int32_t)0; i4199 <  (int32_t)1; i4199++){
for (uint32_t i4202 =  (int32_t)0; i4202 <  (int32_t)672; i4202++){
for (uint32_t i4200 =  (int32_t)0; i4200 <  (int32_t)7; i4200++){
for (uint32_t i4201 =  (int32_t)0; i4201 <  (int32_t)7; i4201++){
Arr4DIdxRowM(tmp1743, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4199,i4200,i4201,i4202) = Arr4DIdxRowM(tmp1741, (int32_t)1, (int32_t)672, (int32_t)7, (int32_t)7,i4195,i4196,i4197,i4198);
i4198 = (i4198 +  (int64_t)1);
if ((i4198 ==  (int64_t)7)) {
i4198 =  (int64_t)0;
i4197 = (i4197 +  (int64_t)1);
if ((i4197 ==  (int64_t)7)) {
i4197 =  (int64_t)0;
i4196 = (i4196 +  (int64_t)1);
if ((i4196 ==  (int64_t)672)) {
i4196 =  (int64_t)0;
i4195 = (i4195 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)672,  (int32_t)7,  (int32_t)7, tmp1741);

uint64_t* tmp1745 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)672,  (int32_t)160);

int64_t i4210;

int64_t i4209;

int64_t i4208;

int64_t i4207;

int64_t i4206;

int64_t i4205;

int64_t i4204;

int64_t i4203;
i4203 =  (int64_t)0;
i4204 =  (int64_t)0;
i4205 =  (int64_t)0;
i4206 =  (int64_t)0;
for (uint32_t i4210 =  (int32_t)0; i4210 <  (int32_t)160; i4210++){
for (uint32_t i4209 =  (int32_t)0; i4209 <  (int32_t)672; i4209++){
for (uint32_t i4207 =  (int32_t)0; i4207 <  (int32_t)1; i4207++){
for (uint32_t i4208 =  (int32_t)0; i4208 <  (int32_t)1; i4208++){
Arr4DIdxRowM(tmp1745, (int32_t)1, (int32_t)1, (int32_t)672, (int32_t)160,i4207,i4208,i4209,i4210) = Arr4DIdxRowM(tmp91, (int32_t)160, (int32_t)672, (int32_t)1, (int32_t)1,i4203,i4204,i4205,i4206);
i4206 = (i4206 +  (int64_t)1);
if ((i4206 ==  (int64_t)1)) {
i4206 =  (int64_t)0;
i4205 = (i4205 +  (int64_t)1);
if ((i4205 ==  (int64_t)1)) {
i4205 =  (int64_t)0;
i4204 = (i4204 +  (int64_t)1);
if ((i4204 ==  (int64_t)672)) {
i4204 =  (int64_t)0;
i4203 = (i4203 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)160,  (int32_t)672,  (int32_t)1,  (int32_t)1, tmp91);

uint64_t* tmp1747 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);
ScaleDown4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1743,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672,  (int32_t)1,  (int32_t)1,  (int32_t)160,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp1743, tmp1745, tmp1747);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)672,  (int32_t)160, tmp1745);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1743);

uint64_t* tmp1750 = make_array<uint64_t>( (int32_t)1,  (int32_t)160,  (int32_t)7,  (int32_t)7);

int64_t i4218;

int64_t i4217;

int64_t i4216;

int64_t i4215;

int64_t i4214;

int64_t i4213;

int64_t i4212;

int64_t i4211;
i4211 =  (int64_t)0;
i4212 =  (int64_t)0;
i4213 =  (int64_t)0;
i4214 =  (int64_t)0;
for (uint32_t i4215 =  (int32_t)0; i4215 <  (int32_t)1; i4215++){
for (uint32_t i4217 =  (int32_t)0; i4217 <  (int32_t)7; i4217++){
for (uint32_t i4218 =  (int32_t)0; i4218 <  (int32_t)7; i4218++){
for (uint32_t i4216 =  (int32_t)0; i4216 <  (int32_t)160; i4216++){
Arr4DIdxRowM(tmp1750, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i4215,i4216,i4217,i4218) = Arr4DIdxRowM(tmp1747, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i4211,i4212,i4213,i4214);
i4214 = (i4214 +  (int64_t)1);
if ((i4214 ==  (int64_t)160)) {
i4214 =  (int64_t)0;
i4213 = (i4213 +  (int64_t)1);
if ((i4213 ==  (int64_t)7)) {
i4213 =  (int64_t)0;
i4212 = (i4212 +  (int64_t)1);
if ((i4212 ==  (int64_t)7)) {
i4212 =  (int64_t)0;
i4211 = (i4211 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1747);

uint64_t* tmp1752 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);

int64_t i4226;

int64_t i4225;

int64_t i4224;

int64_t i4223;

int64_t i4222;

int64_t i4221;

int64_t i4220;

int64_t i4219;
i4219 =  (int64_t)0;
i4220 =  (int64_t)0;
i4221 =  (int64_t)0;
i4222 =  (int64_t)0;
for (uint32_t i4223 =  (int32_t)0; i4223 <  (int32_t)1; i4223++){
for (uint32_t i4226 =  (int32_t)0; i4226 <  (int32_t)160; i4226++){
for (uint32_t i4224 =  (int32_t)0; i4224 <  (int32_t)7; i4224++){
for (uint32_t i4225 =  (int32_t)0; i4225 <  (int32_t)7; i4225++){
Arr4DIdxRowM(tmp1752, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i4223,i4224,i4225,i4226) = Arr4DIdxRowM(tmp1750, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i4219,i4220,i4221,i4222);
i4222 = (i4222 +  (int64_t)1);
if ((i4222 ==  (int64_t)7)) {
i4222 =  (int64_t)0;
i4221 = (i4221 +  (int64_t)1);
if ((i4221 ==  (int64_t)7)) {
i4221 =  (int64_t)0;
i4220 = (i4220 +  (int64_t)1);
if ((i4220 ==  (int64_t)160)) {
i4220 =  (int64_t)0;
i4219 = (i4219 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)160,  (int32_t)7,  (int32_t)7, tmp1750);

uint64_t* tmp1754 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);
ScaleDown4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1752,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1752, tmp92, tmp93,  (int32_t)0,  (int32_t)23, tmp1754);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1752);

uint64_t* tmp1756 = make_array<uint64_t>( (int32_t)1,  (int32_t)160,  (int32_t)7,  (int32_t)7);

int64_t i4234;

int64_t i4233;

int64_t i4232;

int64_t i4231;

int64_t i4230;

int64_t i4229;

int64_t i4228;

int64_t i4227;
i4227 =  (int64_t)0;
i4228 =  (int64_t)0;
i4229 =  (int64_t)0;
i4230 =  (int64_t)0;
for (uint32_t i4231 =  (int32_t)0; i4231 <  (int32_t)1; i4231++){
for (uint32_t i4233 =  (int32_t)0; i4233 <  (int32_t)7; i4233++){
for (uint32_t i4234 =  (int32_t)0; i4234 <  (int32_t)7; i4234++){
for (uint32_t i4232 =  (int32_t)0; i4232 <  (int32_t)160; i4232++){
Arr4DIdxRowM(tmp1756, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i4231,i4232,i4233,i4234) = Arr4DIdxRowM(tmp1754, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i4227,i4228,i4229,i4230);
i4230 = (i4230 +  (int64_t)1);
if ((i4230 ==  (int64_t)160)) {
i4230 =  (int64_t)0;
i4229 = (i4229 +  (int64_t)1);
if ((i4229 ==  (int64_t)7)) {
i4229 =  (int64_t)0;
i4228 = (i4228 +  (int64_t)1);
if ((i4228 ==  (int64_t)7)) {
i4228 =  (int64_t)0;
i4227 = (i4227 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1754);

uint64_t* tmp1758 = make_array<uint64_t>( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112);

int64_t i4242;

int64_t i4241;

int64_t i4240;

int64_t i4239;

int64_t i4238;

int64_t i4237;

int64_t i4236;

int64_t i4235;
i4235 =  (int64_t)0;
i4236 =  (int64_t)0;
i4237 =  (int64_t)0;
i4238 =  (int64_t)0;
for (uint32_t i4239 =  (int32_t)0; i4239 <  (int32_t)1; i4239++){
for (uint32_t i4242 =  (int32_t)0; i4242 <  (int32_t)112; i4242++){
for (uint32_t i4240 =  (int32_t)0; i4240 <  (int32_t)14; i4240++){
for (uint32_t i4241 =  (int32_t)0; i4241 <  (int32_t)14; i4241++){
Arr4DIdxRowM(tmp1758, (int32_t)1, (int32_t)14, (int32_t)14, (int32_t)112,i4239,i4240,i4241,i4242) = Arr4DIdxRowM(tmp1622, (int32_t)1, (int32_t)112, (int32_t)14, (int32_t)14,i4235,i4236,i4237,i4238);
i4238 = (i4238 +  (int64_t)1);
if ((i4238 ==  (int64_t)14)) {
i4238 =  (int64_t)0;
i4237 = (i4237 +  (int64_t)1);
if ((i4237 ==  (int64_t)14)) {
i4237 =  (int64_t)0;
i4236 = (i4236 +  (int64_t)1);
if ((i4236 ==  (int64_t)112)) {
i4236 =  (int64_t)0;
i4235 = (i4235 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)14,  (int32_t)14, tmp1622);

uint64_t* tmp1760 = make_array<uint64_t>( (int32_t)3,  (int32_t)3,  (int32_t)1,  (int32_t)112);

int64_t i4250;

int64_t i4249;

int64_t i4248;

int64_t i4247;

int64_t i4246;

int64_t i4245;

int64_t i4244;

int64_t i4243;
i4243 =  (int64_t)0;
i4244 =  (int64_t)0;
i4245 =  (int64_t)0;
i4246 =  (int64_t)0;
for (uint32_t i4250 =  (int32_t)0; i4250 <  (int32_t)112; i4250++){
for (uint32_t i4249 =  (int32_t)0; i4249 <  (int32_t)1; i4249++){
for (uint32_t i4247 =  (int32_t)0; i4247 <  (int32_t)3; i4247++){
for (uint32_t i4248 =  (int32_t)0; i4248 <  (int32_t)3; i4248++){
Arr4DIdxRowM(tmp1760, (int32_t)3, (int32_t)3, (int32_t)1, (int32_t)112,i4247,i4248,i4249,i4250) = Arr4DIdxRowM(tmp94, (int32_t)112, (int32_t)1, (int32_t)3, (int32_t)3,i4243,i4244,i4245,i4246);
i4246 = (i4246 +  (int64_t)1);
if ((i4246 ==  (int64_t)3)) {
i4246 =  (int64_t)0;
i4245 = (i4245 +  (int64_t)1);
if ((i4245 ==  (int64_t)3)) {
i4245 =  (int64_t)0;
i4244 = (i4244 +  (int64_t)1);
if ((i4244 ==  (int64_t)1)) {
i4244 =  (int64_t)0;
i4243 = (i4243 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)112,  (int32_t)1,  (int32_t)3,  (int32_t)3, tmp94);

uint64_t* tmp1762 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)112);
ScaleDown4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1758,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112,  (int32_t)3,  (int32_t)3,  (int32_t)112,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)2,  (int32_t)2,  (int32_t)112, tmp1758, tmp1760, tmp1762);
ClearMemSecret4( (int32_t)1,  (int32_t)14,  (int32_t)14,  (int32_t)112, tmp1758);
ClearMemSecret4( (int32_t)3,  (int32_t)3,  (int32_t)1,  (int32_t)112, tmp1760);

uint64_t* tmp1765 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)7,  (int32_t)7);

int64_t i4258;

int64_t i4257;

int64_t i4256;

int64_t i4255;

int64_t i4254;

int64_t i4253;

int64_t i4252;

int64_t i4251;
i4251 =  (int64_t)0;
i4252 =  (int64_t)0;
i4253 =  (int64_t)0;
i4254 =  (int64_t)0;
for (uint32_t i4255 =  (int32_t)0; i4255 <  (int32_t)1; i4255++){
for (uint32_t i4257 =  (int32_t)0; i4257 <  (int32_t)7; i4257++){
for (uint32_t i4258 =  (int32_t)0; i4258 <  (int32_t)7; i4258++){
for (uint32_t i4256 =  (int32_t)0; i4256 <  (int32_t)112; i4256++){
Arr4DIdxRowM(tmp1765, (int32_t)1, (int32_t)112, (int32_t)7, (int32_t)7,i4255,i4256,i4257,i4258) = Arr4DIdxRowM(tmp1762, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)112,i4251,i4252,i4253,i4254);
i4254 = (i4254 +  (int64_t)1);
if ((i4254 ==  (int64_t)112)) {
i4254 =  (int64_t)0;
i4253 = (i4253 +  (int64_t)1);
if ((i4253 ==  (int64_t)7)) {
i4253 =  (int64_t)0;
i4252 = (i4252 +  (int64_t)1);
if ((i4252 ==  (int64_t)7)) {
i4252 =  (int64_t)0;
i4251 = (i4251 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)112, tmp1762);

uint64_t* tmp1767 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)112);

int64_t i4266;

int64_t i4265;

int64_t i4264;

int64_t i4263;

int64_t i4262;

int64_t i4261;

int64_t i4260;

int64_t i4259;
i4259 =  (int64_t)0;
i4260 =  (int64_t)0;
i4261 =  (int64_t)0;
i4262 =  (int64_t)0;
for (uint32_t i4263 =  (int32_t)0; i4263 <  (int32_t)1; i4263++){
for (uint32_t i4266 =  (int32_t)0; i4266 <  (int32_t)112; i4266++){
for (uint32_t i4264 =  (int32_t)0; i4264 <  (int32_t)7; i4264++){
for (uint32_t i4265 =  (int32_t)0; i4265 <  (int32_t)7; i4265++){
Arr4DIdxRowM(tmp1767, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)112,i4263,i4264,i4265,i4266) = Arr4DIdxRowM(tmp1765, (int32_t)1, (int32_t)112, (int32_t)7, (int32_t)7,i4259,i4260,i4261,i4262);
i4262 = (i4262 +  (int64_t)1);
if ((i4262 ==  (int64_t)7)) {
i4262 =  (int64_t)0;
i4261 = (i4261 +  (int64_t)1);
if ((i4261 ==  (int64_t)7)) {
i4261 =  (int64_t)0;
i4260 = (i4260 +  (int64_t)1);
if ((i4260 ==  (int64_t)112)) {
i4260 =  (int64_t)0;
i4259 = (i4259 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)7,  (int32_t)7, tmp1765);

uint64_t* tmp1769 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)112);
ScaleDown4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)112, tmp1767,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)112, tmp1767, tmp75, tmp76,  (int32_t)0,  (int32_t)0, tmp1769);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)112, tmp1767);
ClearMemSecret1( (int32_t)112, tmp75);
ClearMemSecret1( (int32_t)112, tmp76);

uint64_t* tmp1773 = make_array<uint64_t>( (int32_t)1,  (int32_t)112,  (int32_t)7,  (int32_t)7);

int64_t i4274;

int64_t i4273;

int64_t i4272;

int64_t i4271;

int64_t i4270;

int64_t i4269;

int64_t i4268;

int64_t i4267;
i4267 =  (int64_t)0;
i4268 =  (int64_t)0;
i4269 =  (int64_t)0;
i4270 =  (int64_t)0;
for (uint32_t i4271 =  (int32_t)0; i4271 <  (int32_t)1; i4271++){
for (uint32_t i4273 =  (int32_t)0; i4273 <  (int32_t)7; i4273++){
for (uint32_t i4274 =  (int32_t)0; i4274 <  (int32_t)7; i4274++){
for (uint32_t i4272 =  (int32_t)0; i4272 <  (int32_t)112; i4272++){
Arr4DIdxRowM(tmp1773, (int32_t)1, (int32_t)112, (int32_t)7, (int32_t)7,i4271,i4272,i4273,i4274) = Arr4DIdxRowM(tmp1769, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)112,i4267,i4268,i4269,i4270);
i4270 = (i4270 +  (int64_t)1);
if ((i4270 ==  (int64_t)112)) {
i4270 =  (int64_t)0;
i4269 = (i4269 +  (int64_t)1);
if ((i4269 ==  (int64_t)7)) {
i4269 =  (int64_t)0;
i4268 = (i4268 +  (int64_t)1);
if ((i4268 ==  (int64_t)7)) {
i4268 =  (int64_t)0;
i4267 = (i4267 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)112, tmp1769);

uint64_t* tmp1775 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)112);

int64_t i4282;

int64_t i4281;

int64_t i4280;

int64_t i4279;

int64_t i4278;

int64_t i4277;

int64_t i4276;

int64_t i4275;
i4275 =  (int64_t)0;
i4276 =  (int64_t)0;
i4277 =  (int64_t)0;
i4278 =  (int64_t)0;
for (uint32_t i4279 =  (int32_t)0; i4279 <  (int32_t)1; i4279++){
for (uint32_t i4282 =  (int32_t)0; i4282 <  (int32_t)112; i4282++){
for (uint32_t i4280 =  (int32_t)0; i4280 <  (int32_t)7; i4280++){
for (uint32_t i4281 =  (int32_t)0; i4281 <  (int32_t)7; i4281++){
Arr4DIdxRowM(tmp1775, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)112,i4279,i4280,i4281,i4282) = Arr4DIdxRowM(tmp1773, (int32_t)1, (int32_t)112, (int32_t)7, (int32_t)7,i4275,i4276,i4277,i4278);
i4278 = (i4278 +  (int64_t)1);
if ((i4278 ==  (int64_t)7)) {
i4278 =  (int64_t)0;
i4277 = (i4277 +  (int64_t)1);
if ((i4277 ==  (int64_t)7)) {
i4277 =  (int64_t)0;
i4276 = (i4276 +  (int64_t)1);
if ((i4276 ==  (int64_t)112)) {
i4276 =  (int64_t)0;
i4275 = (i4275 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)112,  (int32_t)7,  (int32_t)7, tmp1773);

uint64_t* tmp1777 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)112,  (int32_t)160);

int64_t i4290;

int64_t i4289;

int64_t i4288;

int64_t i4287;

int64_t i4286;

int64_t i4285;

int64_t i4284;

int64_t i4283;
i4283 =  (int64_t)0;
i4284 =  (int64_t)0;
i4285 =  (int64_t)0;
i4286 =  (int64_t)0;
for (uint32_t i4290 =  (int32_t)0; i4290 <  (int32_t)160; i4290++){
for (uint32_t i4289 =  (int32_t)0; i4289 <  (int32_t)112; i4289++){
for (uint32_t i4287 =  (int32_t)0; i4287 <  (int32_t)1; i4287++){
for (uint32_t i4288 =  (int32_t)0; i4288 <  (int32_t)1; i4288++){
Arr4DIdxRowM(tmp1777, (int32_t)1, (int32_t)1, (int32_t)112, (int32_t)160,i4287,i4288,i4289,i4290) = Arr4DIdxRowM(tmp95, (int32_t)160, (int32_t)112, (int32_t)1, (int32_t)1,i4283,i4284,i4285,i4286);
i4286 = (i4286 +  (int64_t)1);
if ((i4286 ==  (int64_t)1)) {
i4286 =  (int64_t)0;
i4285 = (i4285 +  (int64_t)1);
if ((i4285 ==  (int64_t)1)) {
i4285 =  (int64_t)0;
i4284 = (i4284 +  (int64_t)1);
if ((i4284 ==  (int64_t)112)) {
i4284 =  (int64_t)0;
i4283 = (i4283 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)160,  (int32_t)112,  (int32_t)1,  (int32_t)1, tmp95);

uint64_t* tmp1779 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);
ScaleDown4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)112, tmp1775,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)112,  (int32_t)1,  (int32_t)1,  (int32_t)160,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp1775, tmp1777, tmp1779);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)112, tmp1775);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)112,  (int32_t)160, tmp1777);

uint64_t* tmp1782 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)160);

int64_t i4295;

int64_t i4294;

int64_t i4293;

int64_t i4292;

int64_t i4291;
i4291 =  (int64_t)0;
for (uint32_t i4292 =  (int32_t)0; i4292 <  (int32_t)1; i4292++){
for (uint32_t i4293 =  (int32_t)0; i4293 <  (int32_t)1; i4293++){
for (uint32_t i4294 =  (int32_t)0; i4294 <  (int32_t)1; i4294++){
for (uint32_t i4295 =  (int32_t)0; i4295 <  (int32_t)160; i4295++){
Arr4DIdxRowM(tmp1782, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)160,i4292,i4293,i4294,i4295) = Arr1DIdxRowM(tmp93, (int32_t)160,i4291);
i4291 = (i4291 +  (int64_t)1);
}
}
}
}

uint64_t* tmp1783 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);
for (uint32_t i0 =  (int32_t)0; i0 <  (int32_t)1; i0++){
for (uint32_t i1 =  (int32_t)0; i1 <  (int32_t)7; i1++){
for (uint32_t i2 =  (int32_t)0; i2 <  (int32_t)7; i2++){
for (uint32_t i3 =  (int32_t)0; i3 <  (int32_t)160; i3++){
Arr4DIdxRowM(tmp1783, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i0,i1,i2,i3) = SecretAdd(Arr4DIdxRowM(tmp1779, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i0,i1,i2,i3), Arr4DIdxRowM(tmp1782, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)160,i0, (int32_t)0, (int32_t)0,i3));
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)160, tmp1782);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1779);

uint64_t* tmp1786 = make_array<uint64_t>( (int32_t)1,  (int32_t)160,  (int32_t)7,  (int32_t)7);

int64_t i4303;

int64_t i4302;

int64_t i4301;

int64_t i4300;

int64_t i4299;

int64_t i4298;

int64_t i4297;

int64_t i4296;
i4296 =  (int64_t)0;
i4297 =  (int64_t)0;
i4298 =  (int64_t)0;
i4299 =  (int64_t)0;
for (uint32_t i4300 =  (int32_t)0; i4300 <  (int32_t)1; i4300++){
for (uint32_t i4302 =  (int32_t)0; i4302 <  (int32_t)7; i4302++){
for (uint32_t i4303 =  (int32_t)0; i4303 <  (int32_t)7; i4303++){
for (uint32_t i4301 =  (int32_t)0; i4301 <  (int32_t)160; i4301++){
Arr4DIdxRowM(tmp1786, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i4300,i4301,i4302,i4303) = Arr4DIdxRowM(tmp1783, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i4296,i4297,i4298,i4299);
i4299 = (i4299 +  (int64_t)1);
if ((i4299 ==  (int64_t)160)) {
i4299 =  (int64_t)0;
i4298 = (i4298 +  (int64_t)1);
if ((i4298 ==  (int64_t)7)) {
i4298 =  (int64_t)0;
i4297 = (i4297 +  (int64_t)1);
if ((i4297 ==  (int64_t)7)) {
i4297 =  (int64_t)0;
i4296 = (i4296 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1783);

uint64_t* tmp1788 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);

int64_t i4311;

int64_t i4310;

int64_t i4309;

int64_t i4308;

int64_t i4307;

int64_t i4306;

int64_t i4305;

int64_t i4304;
i4304 =  (int64_t)0;
i4305 =  (int64_t)0;
i4306 =  (int64_t)0;
i4307 =  (int64_t)0;
for (uint32_t i4308 =  (int32_t)0; i4308 <  (int32_t)1; i4308++){
for (uint32_t i4311 =  (int32_t)0; i4311 <  (int32_t)160; i4311++){
for (uint32_t i4309 =  (int32_t)0; i4309 <  (int32_t)7; i4309++){
for (uint32_t i4310 =  (int32_t)0; i4310 <  (int32_t)7; i4310++){
Arr4DIdxRowM(tmp1788, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i4308,i4309,i4310,i4311) = Arr4DIdxRowM(tmp1786, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i4304,i4305,i4306,i4307);
i4307 = (i4307 +  (int64_t)1);
if ((i4307 ==  (int64_t)7)) {
i4307 =  (int64_t)0;
i4306 = (i4306 +  (int64_t)1);
if ((i4306 ==  (int64_t)7)) {
i4306 =  (int64_t)0;
i4305 = (i4305 +  (int64_t)1);
if ((i4305 ==  (int64_t)160)) {
i4305 =  (int64_t)0;
i4304 = (i4304 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)160,  (int32_t)7,  (int32_t)7, tmp1786);

uint64_t* tmp1790 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);
ScaleDown4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1788,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1788, tmp92, tmp93,  (int32_t)0,  (int32_t)0, tmp1790);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1788);

uint64_t* tmp1792 = make_array<uint64_t>( (int32_t)1,  (int32_t)160,  (int32_t)7,  (int32_t)7);

int64_t i4319;

int64_t i4318;

int64_t i4317;

int64_t i4316;

int64_t i4315;

int64_t i4314;

int64_t i4313;

int64_t i4312;
i4312 =  (int64_t)0;
i4313 =  (int64_t)0;
i4314 =  (int64_t)0;
i4315 =  (int64_t)0;
for (uint32_t i4316 =  (int32_t)0; i4316 <  (int32_t)1; i4316++){
for (uint32_t i4318 =  (int32_t)0; i4318 <  (int32_t)7; i4318++){
for (uint32_t i4319 =  (int32_t)0; i4319 <  (int32_t)7; i4319++){
for (uint32_t i4317 =  (int32_t)0; i4317 <  (int32_t)160; i4317++){
Arr4DIdxRowM(tmp1792, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i4316,i4317,i4318,i4319) = Arr4DIdxRowM(tmp1790, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i4312,i4313,i4314,i4315);
i4315 = (i4315 +  (int64_t)1);
if ((i4315 ==  (int64_t)160)) {
i4315 =  (int64_t)0;
i4314 = (i4314 +  (int64_t)1);
if ((i4314 ==  (int64_t)7)) {
i4314 =  (int64_t)0;
i4313 = (i4313 +  (int64_t)1);
if ((i4313 ==  (int64_t)7)) {
i4313 =  (int64_t)0;
i4312 = (i4312 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1790);

uint64_t* tmp1794 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);

int64_t i4327;

int64_t i4326;

int64_t i4325;

int64_t i4324;

int64_t i4323;

int64_t i4322;

int64_t i4321;

int64_t i4320;
i4320 =  (int64_t)0;
i4321 =  (int64_t)0;
i4322 =  (int64_t)0;
i4323 =  (int64_t)0;
for (uint32_t i4324 =  (int32_t)0; i4324 <  (int32_t)1; i4324++){
for (uint32_t i4327 =  (int32_t)0; i4327 <  (int32_t)160; i4327++){
for (uint32_t i4325 =  (int32_t)0; i4325 <  (int32_t)7; i4325++){
for (uint32_t i4326 =  (int32_t)0; i4326 <  (int32_t)7; i4326++){
Arr4DIdxRowM(tmp1794, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i4324,i4325,i4326,i4327) = Arr4DIdxRowM(tmp1756, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i4320,i4321,i4322,i4323);
i4323 = (i4323 +  (int64_t)1);
if ((i4323 ==  (int64_t)7)) {
i4323 =  (int64_t)0;
i4322 = (i4322 +  (int64_t)1);
if ((i4322 ==  (int64_t)7)) {
i4322 =  (int64_t)0;
i4321 = (i4321 +  (int64_t)1);
if ((i4321 ==  (int64_t)160)) {
i4321 =  (int64_t)0;
i4320 = (i4320 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)160,  (int32_t)7,  (int32_t)7, tmp1756);

uint64_t* tmp1796 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);

int64_t i4335;

int64_t i4334;

int64_t i4333;

int64_t i4332;

int64_t i4331;

int64_t i4330;

int64_t i4329;

int64_t i4328;
i4328 =  (int64_t)0;
i4329 =  (int64_t)0;
i4330 =  (int64_t)0;
i4331 =  (int64_t)0;
for (uint32_t i4332 =  (int32_t)0; i4332 <  (int32_t)1; i4332++){
for (uint32_t i4335 =  (int32_t)0; i4335 <  (int32_t)160; i4335++){
for (uint32_t i4333 =  (int32_t)0; i4333 <  (int32_t)7; i4333++){
for (uint32_t i4334 =  (int32_t)0; i4334 <  (int32_t)7; i4334++){
Arr4DIdxRowM(tmp1796, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i4332,i4333,i4334,i4335) = Arr4DIdxRowM(tmp1792, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i4328,i4329,i4330,i4331);
i4331 = (i4331 +  (int64_t)1);
if ((i4331 ==  (int64_t)7)) {
i4331 =  (int64_t)0;
i4330 = (i4330 +  (int64_t)1);
if ((i4330 ==  (int64_t)7)) {
i4330 =  (int64_t)0;
i4329 = (i4329 +  (int64_t)1);
if ((i4329 ==  (int64_t)160)) {
i4329 =  (int64_t)0;
i4328 = (i4328 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)160,  (int32_t)7,  (int32_t)7, tmp1792);

uint64_t* tmp1798 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);
for (uint32_t i0 =  (int32_t)0; i0 <  (int32_t)1; i0++){
for (uint32_t i1 =  (int32_t)0; i1 <  (int32_t)7; i1++){
for (uint32_t i2 =  (int32_t)0; i2 <  (int32_t)7; i2++){
for (uint32_t i3 =  (int32_t)0; i3 <  (int32_t)160; i3++){
Arr4DIdxRowM(tmp1798, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i0,i1,i2,i3) = SecretAdd(Arr4DIdxRowM(tmp1794, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i0,i1,i2,i3), Arr4DIdxRowM(tmp1796, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i0,i1,i2,i3));
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1796);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1794);

uint64_t* tmp1801 = make_array<uint64_t>( (int32_t)1,  (int32_t)160,  (int32_t)7,  (int32_t)7);

int64_t i4343;

int64_t i4342;

int64_t i4341;

int64_t i4340;

int64_t i4339;

int64_t i4338;

int64_t i4337;

int64_t i4336;
i4336 =  (int64_t)0;
i4337 =  (int64_t)0;
i4338 =  (int64_t)0;
i4339 =  (int64_t)0;
for (uint32_t i4340 =  (int32_t)0; i4340 <  (int32_t)1; i4340++){
for (uint32_t i4342 =  (int32_t)0; i4342 <  (int32_t)7; i4342++){
for (uint32_t i4343 =  (int32_t)0; i4343 <  (int32_t)7; i4343++){
for (uint32_t i4341 =  (int32_t)0; i4341 <  (int32_t)160; i4341++){
Arr4DIdxRowM(tmp1801, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i4340,i4341,i4342,i4343) = Arr4DIdxRowM(tmp1798, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i4336,i4337,i4338,i4339);
i4339 = (i4339 +  (int64_t)1);
if ((i4339 ==  (int64_t)160)) {
i4339 =  (int64_t)0;
i4338 = (i4338 +  (int64_t)1);
if ((i4338 ==  (int64_t)7)) {
i4338 =  (int64_t)0;
i4337 = (i4337 +  (int64_t)1);
if ((i4337 ==  (int64_t)7)) {
i4337 =  (int64_t)0;
i4336 = (i4336 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1798);

uint64_t* tmp1803 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);

int64_t i4351;

int64_t i4350;

int64_t i4349;

int64_t i4348;

int64_t i4347;

int64_t i4346;

int64_t i4345;

int64_t i4344;
i4344 =  (int64_t)0;
i4345 =  (int64_t)0;
i4346 =  (int64_t)0;
i4347 =  (int64_t)0;
for (uint32_t i4348 =  (int32_t)0; i4348 <  (int32_t)1; i4348++){
for (uint32_t i4351 =  (int32_t)0; i4351 <  (int32_t)160; i4351++){
for (uint32_t i4349 =  (int32_t)0; i4349 <  (int32_t)7; i4349++){
for (uint32_t i4350 =  (int32_t)0; i4350 <  (int32_t)7; i4350++){
Arr4DIdxRowM(tmp1803, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i4348,i4349,i4350,i4351) = Arr4DIdxRowM(tmp1801, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i4344,i4345,i4346,i4347);
i4347 = (i4347 +  (int64_t)1);
if ((i4347 ==  (int64_t)7)) {
i4347 =  (int64_t)0;
i4346 = (i4346 +  (int64_t)1);
if ((i4346 ==  (int64_t)7)) {
i4346 =  (int64_t)0;
i4345 = (i4345 +  (int64_t)1);
if ((i4345 ==  (int64_t)160)) {
i4345 =  (int64_t)0;
i4344 = (i4344 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp1804 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);
HardSigmoid4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1803, tmp1804,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1803);

uint64_t* tmp1806 = make_array<uint64_t>( (int32_t)1,  (int32_t)160,  (int32_t)7,  (int32_t)7);

int64_t i4359;

int64_t i4358;

int64_t i4357;

int64_t i4356;

int64_t i4355;

int64_t i4354;

int64_t i4353;

int64_t i4352;
i4352 =  (int64_t)0;
i4353 =  (int64_t)0;
i4354 =  (int64_t)0;
i4355 =  (int64_t)0;
for (uint32_t i4356 =  (int32_t)0; i4356 <  (int32_t)1; i4356++){
for (uint32_t i4358 =  (int32_t)0; i4358 <  (int32_t)7; i4358++){
for (uint32_t i4359 =  (int32_t)0; i4359 <  (int32_t)7; i4359++){
for (uint32_t i4357 =  (int32_t)0; i4357 <  (int32_t)160; i4357++){
Arr4DIdxRowM(tmp1806, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i4356,i4357,i4358,i4359) = Arr4DIdxRowM(tmp1804, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i4352,i4353,i4354,i4355);
i4355 = (i4355 +  (int64_t)1);
if ((i4355 ==  (int64_t)160)) {
i4355 =  (int64_t)0;
i4354 = (i4354 +  (int64_t)1);
if ((i4354 ==  (int64_t)7)) {
i4354 =  (int64_t)0;
i4353 = (i4353 +  (int64_t)1);
if ((i4353 ==  (int64_t)7)) {
i4353 =  (int64_t)0;
i4352 = (i4352 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1804);

uint64_t* tmp1808 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);

int64_t i4367;

int64_t i4366;

int64_t i4365;

int64_t i4364;

int64_t i4363;

int64_t i4362;

int64_t i4361;

int64_t i4360;
i4360 =  (int64_t)0;
i4361 =  (int64_t)0;
i4362 =  (int64_t)0;
i4363 =  (int64_t)0;
for (uint32_t i4364 =  (int32_t)0; i4364 <  (int32_t)1; i4364++){
for (uint32_t i4367 =  (int32_t)0; i4367 <  (int32_t)160; i4367++){
for (uint32_t i4365 =  (int32_t)0; i4365 <  (int32_t)7; i4365++){
for (uint32_t i4366 =  (int32_t)0; i4366 <  (int32_t)7; i4366++){
Arr4DIdxRowM(tmp1808, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i4364,i4365,i4366,i4367) = Arr4DIdxRowM(tmp1801, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i4360,i4361,i4362,i4363);
i4363 = (i4363 +  (int64_t)1);
if ((i4363 ==  (int64_t)7)) {
i4363 =  (int64_t)0;
i4362 = (i4362 +  (int64_t)1);
if ((i4362 ==  (int64_t)7)) {
i4362 =  (int64_t)0;
i4361 = (i4361 +  (int64_t)1);
if ((i4361 ==  (int64_t)160)) {
i4361 =  (int64_t)0;
i4360 = (i4360 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)160,  (int32_t)7,  (int32_t)7, tmp1801);

uint64_t* tmp1810 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);

int64_t i4375;

int64_t i4374;

int64_t i4373;

int64_t i4372;

int64_t i4371;

int64_t i4370;

int64_t i4369;

int64_t i4368;
i4368 =  (int64_t)0;
i4369 =  (int64_t)0;
i4370 =  (int64_t)0;
i4371 =  (int64_t)0;
for (uint32_t i4372 =  (int32_t)0; i4372 <  (int32_t)1; i4372++){
for (uint32_t i4375 =  (int32_t)0; i4375 <  (int32_t)160; i4375++){
for (uint32_t i4373 =  (int32_t)0; i4373 <  (int32_t)7; i4373++){
for (uint32_t i4374 =  (int32_t)0; i4374 <  (int32_t)7; i4374++){
Arr4DIdxRowM(tmp1810, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i4372,i4373,i4374,i4375) = Arr4DIdxRowM(tmp1806, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i4368,i4369,i4370,i4371);
i4371 = (i4371 +  (int64_t)1);
if ((i4371 ==  (int64_t)7)) {
i4371 =  (int64_t)0;
i4370 = (i4370 +  (int64_t)1);
if ((i4370 ==  (int64_t)7)) {
i4370 =  (int64_t)0;
i4369 = (i4369 +  (int64_t)1);
if ((i4369 ==  (int64_t)160)) {
i4369 =  (int64_t)0;
i4368 = (i4368 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)160,  (int32_t)7,  (int32_t)7, tmp1806);
ScaleDown4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1808,  (int32_t)23);

uint64_t* tmp1812 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);

uint64_t* tmp1813 = make_array<uint64_t>( (int32_t)7840);

uint64_t* tmp1814 = make_array<uint64_t>( (int32_t)7840);

uint64_t* tmp1815 = make_array<uint64_t>( (int32_t)7840);

int32_t tmp1816;
for (uint32_t i4376 =  (int32_t)0; i4376 <  (int32_t)1; i4376++){
for (uint32_t i4377 =  (int32_t)0; i4377 <  (int32_t)7; i4377++){
for (uint32_t i4378 =  (int32_t)0; i4378 <  (int32_t)7; i4378++){
for (uint32_t i4379 =  (int32_t)0; i4379 <  (int32_t)160; i4379++){
tmp1816 = (((( (int32_t)0 + (i4376 *  (int32_t)7840)) + (i4377 *  (int32_t)1120)) + (i4378 *  (int32_t)160)) + (i4379 *  (int32_t)1));
Arr1DIdxRowM(tmp1813, (int32_t)7840,tmp1816) = Arr4DIdxRowM(tmp1808, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i4376,i4377,i4378,i4379);
Arr1DIdxRowM(tmp1814, (int32_t)7840,tmp1816) = Arr4DIdxRowM(tmp1810, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i4376,i4377,i4378,i4379);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)7840, tmp1813, tmp1814, tmp1815);
ClearMemSecret1( (int32_t)7840, tmp1813);
ClearMemSecret1( (int32_t)7840, tmp1814);
for (uint32_t i4376 =  (int32_t)0; i4376 <  (int32_t)1; i4376++){
for (uint32_t i4377 =  (int32_t)0; i4377 <  (int32_t)7; i4377++){
for (uint32_t i4378 =  (int32_t)0; i4378 <  (int32_t)7; i4378++){
for (uint32_t i4379 =  (int32_t)0; i4379 <  (int32_t)160; i4379++){
tmp1816 = (((( (int32_t)0 + (i4376 *  (int32_t)7840)) + (i4377 *  (int32_t)1120)) + (i4378 *  (int32_t)160)) + (i4379 *  (int32_t)1));
Arr4DIdxRowM(tmp1812, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i4376,i4377,i4378,i4379) = Arr1DIdxRowM(tmp1815, (int32_t)7840,tmp1816);
}
}
}
}
ClearMemSecret1( (int32_t)7840, tmp1815);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1810);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1808);

uint64_t* tmp1819 = make_array<uint64_t>( (int32_t)1,  (int32_t)160,  (int32_t)7,  (int32_t)7);

int64_t i4387;

int64_t i4386;

int64_t i4385;

int64_t i4384;

int64_t i4383;

int64_t i4382;

int64_t i4381;

int64_t i4380;
i4380 =  (int64_t)0;
i4381 =  (int64_t)0;
i4382 =  (int64_t)0;
i4383 =  (int64_t)0;
for (uint32_t i4384 =  (int32_t)0; i4384 <  (int32_t)1; i4384++){
for (uint32_t i4386 =  (int32_t)0; i4386 <  (int32_t)7; i4386++){
for (uint32_t i4387 =  (int32_t)0; i4387 <  (int32_t)7; i4387++){
for (uint32_t i4385 =  (int32_t)0; i4385 <  (int32_t)160; i4385++){
Arr4DIdxRowM(tmp1819, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i4384,i4385,i4386,i4387) = Arr4DIdxRowM(tmp1812, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i4380,i4381,i4382,i4383);
i4383 = (i4383 +  (int64_t)1);
if ((i4383 ==  (int64_t)160)) {
i4383 =  (int64_t)0;
i4382 = (i4382 +  (int64_t)1);
if ((i4382 ==  (int64_t)7)) {
i4382 =  (int64_t)0;
i4381 = (i4381 +  (int64_t)1);
if ((i4381 ==  (int64_t)7)) {
i4381 =  (int64_t)0;
i4380 = (i4380 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1812);

uint64_t* tmp1821 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);

int64_t i4395;

int64_t i4394;

int64_t i4393;

int64_t i4392;

int64_t i4391;

int64_t i4390;

int64_t i4389;

int64_t i4388;
i4388 =  (int64_t)0;
i4389 =  (int64_t)0;
i4390 =  (int64_t)0;
i4391 =  (int64_t)0;
for (uint32_t i4392 =  (int32_t)0; i4392 <  (int32_t)1; i4392++){
for (uint32_t i4395 =  (int32_t)0; i4395 <  (int32_t)160; i4395++){
for (uint32_t i4393 =  (int32_t)0; i4393 <  (int32_t)7; i4393++){
for (uint32_t i4394 =  (int32_t)0; i4394 <  (int32_t)7; i4394++){
Arr4DIdxRowM(tmp1821, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i4392,i4393,i4394,i4395) = Arr4DIdxRowM(tmp1819, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i4388,i4389,i4390,i4391);
i4391 = (i4391 +  (int64_t)1);
if ((i4391 ==  (int64_t)7)) {
i4391 =  (int64_t)0;
i4390 = (i4390 +  (int64_t)1);
if ((i4390 ==  (int64_t)7)) {
i4390 =  (int64_t)0;
i4389 = (i4389 +  (int64_t)1);
if ((i4389 ==  (int64_t)160)) {
i4389 =  (int64_t)0;
i4388 = (i4388 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp1822 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)160,  (int32_t)672);

int64_t i4403;

int64_t i4402;

int64_t i4401;

int64_t i4400;

int64_t i4399;

int64_t i4398;

int64_t i4397;

int64_t i4396;
i4396 =  (int64_t)0;
i4397 =  (int64_t)0;
i4398 =  (int64_t)0;
i4399 =  (int64_t)0;
for (uint32_t i4403 =  (int32_t)0; i4403 <  (int32_t)672; i4403++){
for (uint32_t i4402 =  (int32_t)0; i4402 <  (int32_t)160; i4402++){
for (uint32_t i4400 =  (int32_t)0; i4400 <  (int32_t)1; i4400++){
for (uint32_t i4401 =  (int32_t)0; i4401 <  (int32_t)1; i4401++){
Arr4DIdxRowM(tmp1822, (int32_t)1, (int32_t)1, (int32_t)160, (int32_t)672,i4400,i4401,i4402,i4403) = Arr4DIdxRowM(tmp96, (int32_t)672, (int32_t)160, (int32_t)1, (int32_t)1,i4396,i4397,i4398,i4399);
i4399 = (i4399 +  (int64_t)1);
if ((i4399 ==  (int64_t)1)) {
i4399 =  (int64_t)0;
i4398 = (i4398 +  (int64_t)1);
if ((i4398 ==  (int64_t)1)) {
i4398 =  (int64_t)0;
i4397 = (i4397 +  (int64_t)1);
if ((i4397 ==  (int64_t)160)) {
i4397 =  (int64_t)0;
i4396 = (i4396 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)672,  (int32_t)160,  (int32_t)1,  (int32_t)1, tmp96);

uint64_t* tmp1824 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672);
ScaleDown4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1821,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160,  (int32_t)1,  (int32_t)1,  (int32_t)672,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp1821, tmp1822, tmp1824);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1821);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)160,  (int32_t)672, tmp1822);

uint64_t* tmp1827 = make_array<uint64_t>( (int32_t)1,  (int32_t)672,  (int32_t)7,  (int32_t)7);

int64_t i4411;

int64_t i4410;

int64_t i4409;

int64_t i4408;

int64_t i4407;

int64_t i4406;

int64_t i4405;

int64_t i4404;
i4404 =  (int64_t)0;
i4405 =  (int64_t)0;
i4406 =  (int64_t)0;
i4407 =  (int64_t)0;
for (uint32_t i4408 =  (int32_t)0; i4408 <  (int32_t)1; i4408++){
for (uint32_t i4410 =  (int32_t)0; i4410 <  (int32_t)7; i4410++){
for (uint32_t i4411 =  (int32_t)0; i4411 <  (int32_t)7; i4411++){
for (uint32_t i4409 =  (int32_t)0; i4409 <  (int32_t)672; i4409++){
Arr4DIdxRowM(tmp1827, (int32_t)1, (int32_t)672, (int32_t)7, (int32_t)7,i4408,i4409,i4410,i4411) = Arr4DIdxRowM(tmp1824, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4404,i4405,i4406,i4407);
i4407 = (i4407 +  (int64_t)1);
if ((i4407 ==  (int64_t)672)) {
i4407 =  (int64_t)0;
i4406 = (i4406 +  (int64_t)1);
if ((i4406 ==  (int64_t)7)) {
i4406 =  (int64_t)0;
i4405 = (i4405 +  (int64_t)1);
if ((i4405 ==  (int64_t)7)) {
i4405 =  (int64_t)0;
i4404 = (i4404 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1824);

uint64_t* tmp1829 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672);

int64_t i4419;

int64_t i4418;

int64_t i4417;

int64_t i4416;

int64_t i4415;

int64_t i4414;

int64_t i4413;

int64_t i4412;
i4412 =  (int64_t)0;
i4413 =  (int64_t)0;
i4414 =  (int64_t)0;
i4415 =  (int64_t)0;
for (uint32_t i4416 =  (int32_t)0; i4416 <  (int32_t)1; i4416++){
for (uint32_t i4419 =  (int32_t)0; i4419 <  (int32_t)672; i4419++){
for (uint32_t i4417 =  (int32_t)0; i4417 <  (int32_t)7; i4417++){
for (uint32_t i4418 =  (int32_t)0; i4418 <  (int32_t)7; i4418++){
Arr4DIdxRowM(tmp1829, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4416,i4417,i4418,i4419) = Arr4DIdxRowM(tmp1827, (int32_t)1, (int32_t)672, (int32_t)7, (int32_t)7,i4412,i4413,i4414,i4415);
i4415 = (i4415 +  (int64_t)1);
if ((i4415 ==  (int64_t)7)) {
i4415 =  (int64_t)0;
i4414 = (i4414 +  (int64_t)1);
if ((i4414 ==  (int64_t)7)) {
i4414 =  (int64_t)0;
i4413 = (i4413 +  (int64_t)1);
if ((i4413 ==  (int64_t)672)) {
i4413 =  (int64_t)0;
i4412 = (i4412 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)672,  (int32_t)7,  (int32_t)7, tmp1827);

uint64_t* tmp1831 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672);
ScaleDown4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1829,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1829, tmp79, tmp80,  (int32_t)0,  (int32_t)0, tmp1831);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1829);

uint64_t* tmp1833 = make_array<uint64_t>( (int32_t)1,  (int32_t)672,  (int32_t)7,  (int32_t)7);

int64_t i4427;

int64_t i4426;

int64_t i4425;

int64_t i4424;

int64_t i4423;

int64_t i4422;

int64_t i4421;

int64_t i4420;
i4420 =  (int64_t)0;
i4421 =  (int64_t)0;
i4422 =  (int64_t)0;
i4423 =  (int64_t)0;
for (uint32_t i4424 =  (int32_t)0; i4424 <  (int32_t)1; i4424++){
for (uint32_t i4426 =  (int32_t)0; i4426 <  (int32_t)7; i4426++){
for (uint32_t i4427 =  (int32_t)0; i4427 <  (int32_t)7; i4427++){
for (uint32_t i4425 =  (int32_t)0; i4425 <  (int32_t)672; i4425++){
Arr4DIdxRowM(tmp1833, (int32_t)1, (int32_t)672, (int32_t)7, (int32_t)7,i4424,i4425,i4426,i4427) = Arr4DIdxRowM(tmp1831, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4420,i4421,i4422,i4423);
i4423 = (i4423 +  (int64_t)1);
if ((i4423 ==  (int64_t)672)) {
i4423 =  (int64_t)0;
i4422 = (i4422 +  (int64_t)1);
if ((i4422 ==  (int64_t)7)) {
i4422 =  (int64_t)0;
i4421 = (i4421 +  (int64_t)1);
if ((i4421 ==  (int64_t)7)) {
i4421 =  (int64_t)0;
i4420 = (i4420 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1831);

uint64_t* tmp1835 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672);

int64_t i4435;

int64_t i4434;

int64_t i4433;

int64_t i4432;

int64_t i4431;

int64_t i4430;

int64_t i4429;

int64_t i4428;
i4428 =  (int64_t)0;
i4429 =  (int64_t)0;
i4430 =  (int64_t)0;
i4431 =  (int64_t)0;
for (uint32_t i4432 =  (int32_t)0; i4432 <  (int32_t)1; i4432++){
for (uint32_t i4435 =  (int32_t)0; i4435 <  (int32_t)672; i4435++){
for (uint32_t i4433 =  (int32_t)0; i4433 <  (int32_t)7; i4433++){
for (uint32_t i4434 =  (int32_t)0; i4434 <  (int32_t)7; i4434++){
Arr4DIdxRowM(tmp1835, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4432,i4433,i4434,i4435) = Arr4DIdxRowM(tmp1833, (int32_t)1, (int32_t)672, (int32_t)7, (int32_t)7,i4428,i4429,i4430,i4431);
i4431 = (i4431 +  (int64_t)1);
if ((i4431 ==  (int64_t)7)) {
i4431 =  (int64_t)0;
i4430 = (i4430 +  (int64_t)1);
if ((i4430 ==  (int64_t)7)) {
i4430 =  (int64_t)0;
i4429 = (i4429 +  (int64_t)1);
if ((i4429 ==  (int64_t)672)) {
i4429 =  (int64_t)0;
i4428 = (i4428 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp1836 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672);
HardSigmoid4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1835, tmp1836,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1835);

uint64_t* tmp1838 = make_array<uint64_t>( (int32_t)1,  (int32_t)672,  (int32_t)7,  (int32_t)7);

int64_t i4443;

int64_t i4442;

int64_t i4441;

int64_t i4440;

int64_t i4439;

int64_t i4438;

int64_t i4437;

int64_t i4436;
i4436 =  (int64_t)0;
i4437 =  (int64_t)0;
i4438 =  (int64_t)0;
i4439 =  (int64_t)0;
for (uint32_t i4440 =  (int32_t)0; i4440 <  (int32_t)1; i4440++){
for (uint32_t i4442 =  (int32_t)0; i4442 <  (int32_t)7; i4442++){
for (uint32_t i4443 =  (int32_t)0; i4443 <  (int32_t)7; i4443++){
for (uint32_t i4441 =  (int32_t)0; i4441 <  (int32_t)672; i4441++){
Arr4DIdxRowM(tmp1838, (int32_t)1, (int32_t)672, (int32_t)7, (int32_t)7,i4440,i4441,i4442,i4443) = Arr4DIdxRowM(tmp1836, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4436,i4437,i4438,i4439);
i4439 = (i4439 +  (int64_t)1);
if ((i4439 ==  (int64_t)672)) {
i4439 =  (int64_t)0;
i4438 = (i4438 +  (int64_t)1);
if ((i4438 ==  (int64_t)7)) {
i4438 =  (int64_t)0;
i4437 = (i4437 +  (int64_t)1);
if ((i4437 ==  (int64_t)7)) {
i4437 =  (int64_t)0;
i4436 = (i4436 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1836);

uint64_t* tmp1840 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672);

int64_t i4451;

int64_t i4450;

int64_t i4449;

int64_t i4448;

int64_t i4447;

int64_t i4446;

int64_t i4445;

int64_t i4444;
i4444 =  (int64_t)0;
i4445 =  (int64_t)0;
i4446 =  (int64_t)0;
i4447 =  (int64_t)0;
for (uint32_t i4448 =  (int32_t)0; i4448 <  (int32_t)1; i4448++){
for (uint32_t i4451 =  (int32_t)0; i4451 <  (int32_t)672; i4451++){
for (uint32_t i4449 =  (int32_t)0; i4449 <  (int32_t)7; i4449++){
for (uint32_t i4450 =  (int32_t)0; i4450 <  (int32_t)7; i4450++){
Arr4DIdxRowM(tmp1840, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4448,i4449,i4450,i4451) = Arr4DIdxRowM(tmp1833, (int32_t)1, (int32_t)672, (int32_t)7, (int32_t)7,i4444,i4445,i4446,i4447);
i4447 = (i4447 +  (int64_t)1);
if ((i4447 ==  (int64_t)7)) {
i4447 =  (int64_t)0;
i4446 = (i4446 +  (int64_t)1);
if ((i4446 ==  (int64_t)7)) {
i4446 =  (int64_t)0;
i4445 = (i4445 +  (int64_t)1);
if ((i4445 ==  (int64_t)672)) {
i4445 =  (int64_t)0;
i4444 = (i4444 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)672,  (int32_t)7,  (int32_t)7, tmp1833);

uint64_t* tmp1842 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672);

int64_t i4459;

int64_t i4458;

int64_t i4457;

int64_t i4456;

int64_t i4455;

int64_t i4454;

int64_t i4453;

int64_t i4452;
i4452 =  (int64_t)0;
i4453 =  (int64_t)0;
i4454 =  (int64_t)0;
i4455 =  (int64_t)0;
for (uint32_t i4456 =  (int32_t)0; i4456 <  (int32_t)1; i4456++){
for (uint32_t i4459 =  (int32_t)0; i4459 <  (int32_t)672; i4459++){
for (uint32_t i4457 =  (int32_t)0; i4457 <  (int32_t)7; i4457++){
for (uint32_t i4458 =  (int32_t)0; i4458 <  (int32_t)7; i4458++){
Arr4DIdxRowM(tmp1842, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4456,i4457,i4458,i4459) = Arr4DIdxRowM(tmp1838, (int32_t)1, (int32_t)672, (int32_t)7, (int32_t)7,i4452,i4453,i4454,i4455);
i4455 = (i4455 +  (int64_t)1);
if ((i4455 ==  (int64_t)7)) {
i4455 =  (int64_t)0;
i4454 = (i4454 +  (int64_t)1);
if ((i4454 ==  (int64_t)7)) {
i4454 =  (int64_t)0;
i4453 = (i4453 +  (int64_t)1);
if ((i4453 ==  (int64_t)672)) {
i4453 =  (int64_t)0;
i4452 = (i4452 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)672,  (int32_t)7,  (int32_t)7, tmp1838);
ScaleDown4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1840,  (int32_t)23);

uint64_t* tmp1844 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672);

uint64_t* tmp1845 = make_array<uint64_t>( (int32_t)32928);

uint64_t* tmp1846 = make_array<uint64_t>( (int32_t)32928);

uint64_t* tmp1847 = make_array<uint64_t>( (int32_t)32928);

int32_t tmp1848;
for (uint32_t i4460 =  (int32_t)0; i4460 <  (int32_t)1; i4460++){
for (uint32_t i4461 =  (int32_t)0; i4461 <  (int32_t)7; i4461++){
for (uint32_t i4462 =  (int32_t)0; i4462 <  (int32_t)7; i4462++){
for (uint32_t i4463 =  (int32_t)0; i4463 <  (int32_t)672; i4463++){
tmp1848 = (((( (int32_t)0 + (i4460 *  (int32_t)32928)) + (i4461 *  (int32_t)4704)) + (i4462 *  (int32_t)672)) + (i4463 *  (int32_t)1));
Arr1DIdxRowM(tmp1845, (int32_t)32928,tmp1848) = Arr4DIdxRowM(tmp1840, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4460,i4461,i4462,i4463);
Arr1DIdxRowM(tmp1846, (int32_t)32928,tmp1848) = Arr4DIdxRowM(tmp1842, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4460,i4461,i4462,i4463);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)32928, tmp1845, tmp1846, tmp1847);
ClearMemSecret1( (int32_t)32928, tmp1845);
ClearMemSecret1( (int32_t)32928, tmp1846);
for (uint32_t i4460 =  (int32_t)0; i4460 <  (int32_t)1; i4460++){
for (uint32_t i4461 =  (int32_t)0; i4461 <  (int32_t)7; i4461++){
for (uint32_t i4462 =  (int32_t)0; i4462 <  (int32_t)7; i4462++){
for (uint32_t i4463 =  (int32_t)0; i4463 <  (int32_t)672; i4463++){
tmp1848 = (((( (int32_t)0 + (i4460 *  (int32_t)32928)) + (i4461 *  (int32_t)4704)) + (i4462 *  (int32_t)672)) + (i4463 *  (int32_t)1));
Arr4DIdxRowM(tmp1844, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4460,i4461,i4462,i4463) = Arr1DIdxRowM(tmp1847, (int32_t)32928,tmp1848);
}
}
}
}
ClearMemSecret1( (int32_t)32928, tmp1847);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1842);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1840);

uint64_t* tmp1851 = make_array<uint64_t>( (int32_t)1,  (int32_t)672,  (int32_t)7,  (int32_t)7);

int64_t i4471;

int64_t i4470;

int64_t i4469;

int64_t i4468;

int64_t i4467;

int64_t i4466;

int64_t i4465;

int64_t i4464;
i4464 =  (int64_t)0;
i4465 =  (int64_t)0;
i4466 =  (int64_t)0;
i4467 =  (int64_t)0;
for (uint32_t i4468 =  (int32_t)0; i4468 <  (int32_t)1; i4468++){
for (uint32_t i4470 =  (int32_t)0; i4470 <  (int32_t)7; i4470++){
for (uint32_t i4471 =  (int32_t)0; i4471 <  (int32_t)7; i4471++){
for (uint32_t i4469 =  (int32_t)0; i4469 <  (int32_t)672; i4469++){
Arr4DIdxRowM(tmp1851, (int32_t)1, (int32_t)672, (int32_t)7, (int32_t)7,i4468,i4469,i4470,i4471) = Arr4DIdxRowM(tmp1844, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4464,i4465,i4466,i4467);
i4467 = (i4467 +  (int64_t)1);
if ((i4467 ==  (int64_t)672)) {
i4467 =  (int64_t)0;
i4466 = (i4466 +  (int64_t)1);
if ((i4466 ==  (int64_t)7)) {
i4466 =  (int64_t)0;
i4465 = (i4465 +  (int64_t)1);
if ((i4465 ==  (int64_t)7)) {
i4465 =  (int64_t)0;
i4464 = (i4464 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1844);

uint64_t* tmp1853 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672);

int64_t i4479;

int64_t i4478;

int64_t i4477;

int64_t i4476;

int64_t i4475;

int64_t i4474;

int64_t i4473;

int64_t i4472;
i4472 =  (int64_t)0;
i4473 =  (int64_t)0;
i4474 =  (int64_t)0;
i4475 =  (int64_t)0;
for (uint32_t i4476 =  (int32_t)0; i4476 <  (int32_t)1; i4476++){
for (uint32_t i4479 =  (int32_t)0; i4479 <  (int32_t)672; i4479++){
for (uint32_t i4477 =  (int32_t)0; i4477 <  (int32_t)7; i4477++){
for (uint32_t i4478 =  (int32_t)0; i4478 <  (int32_t)7; i4478++){
Arr4DIdxRowM(tmp1853, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4476,i4477,i4478,i4479) = Arr4DIdxRowM(tmp1851, (int32_t)1, (int32_t)672, (int32_t)7, (int32_t)7,i4472,i4473,i4474,i4475);
i4475 = (i4475 +  (int64_t)1);
if ((i4475 ==  (int64_t)7)) {
i4475 =  (int64_t)0;
i4474 = (i4474 +  (int64_t)1);
if ((i4474 ==  (int64_t)7)) {
i4474 =  (int64_t)0;
i4473 = (i4473 +  (int64_t)1);
if ((i4473 ==  (int64_t)672)) {
i4473 =  (int64_t)0;
i4472 = (i4472 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)672,  (int32_t)7,  (int32_t)7, tmp1851);

uint64_t* tmp1855 = make_array<uint64_t>( (int32_t)5,  (int32_t)5,  (int32_t)1,  (int32_t)672);

int64_t i4487;

int64_t i4486;

int64_t i4485;

int64_t i4484;

int64_t i4483;

int64_t i4482;

int64_t i4481;

int64_t i4480;
i4480 =  (int64_t)0;
i4481 =  (int64_t)0;
i4482 =  (int64_t)0;
i4483 =  (int64_t)0;
for (uint32_t i4487 =  (int32_t)0; i4487 <  (int32_t)672; i4487++){
for (uint32_t i4486 =  (int32_t)0; i4486 <  (int32_t)1; i4486++){
for (uint32_t i4484 =  (int32_t)0; i4484 <  (int32_t)5; i4484++){
for (uint32_t i4485 =  (int32_t)0; i4485 <  (int32_t)5; i4485++){
Arr4DIdxRowM(tmp1855, (int32_t)5, (int32_t)5, (int32_t)1, (int32_t)672,i4484,i4485,i4486,i4487) = Arr4DIdxRowM(tmp97, (int32_t)672, (int32_t)1, (int32_t)5, (int32_t)5,i4480,i4481,i4482,i4483);
i4483 = (i4483 +  (int64_t)1);
if ((i4483 ==  (int64_t)5)) {
i4483 =  (int64_t)0;
i4482 = (i4482 +  (int64_t)1);
if ((i4482 ==  (int64_t)5)) {
i4482 =  (int64_t)0;
i4481 = (i4481 +  (int64_t)1);
if ((i4481 ==  (int64_t)1)) {
i4481 =  (int64_t)0;
i4480 = (i4480 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)672,  (int32_t)1,  (int32_t)5,  (int32_t)5, tmp97);

uint64_t* tmp1857 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672);
ScaleDown4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1853,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672,  (int32_t)5,  (int32_t)5,  (int32_t)672,  (int32_t)2,  (int32_t)2,  (int32_t)2,  (int32_t)2,  (int32_t)1,  (int32_t)1,  (int32_t)672, tmp1853, tmp1855, tmp1857);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1853);
ClearMemSecret4( (int32_t)5,  (int32_t)5,  (int32_t)1,  (int32_t)672, tmp1855);

uint64_t* tmp1860 = make_array<uint64_t>( (int32_t)1,  (int32_t)672,  (int32_t)7,  (int32_t)7);

int64_t i4495;

int64_t i4494;

int64_t i4493;

int64_t i4492;

int64_t i4491;

int64_t i4490;

int64_t i4489;

int64_t i4488;
i4488 =  (int64_t)0;
i4489 =  (int64_t)0;
i4490 =  (int64_t)0;
i4491 =  (int64_t)0;
for (uint32_t i4492 =  (int32_t)0; i4492 <  (int32_t)1; i4492++){
for (uint32_t i4494 =  (int32_t)0; i4494 <  (int32_t)7; i4494++){
for (uint32_t i4495 =  (int32_t)0; i4495 <  (int32_t)7; i4495++){
for (uint32_t i4493 =  (int32_t)0; i4493 <  (int32_t)672; i4493++){
Arr4DIdxRowM(tmp1860, (int32_t)1, (int32_t)672, (int32_t)7, (int32_t)7,i4492,i4493,i4494,i4495) = Arr4DIdxRowM(tmp1857, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4488,i4489,i4490,i4491);
i4491 = (i4491 +  (int64_t)1);
if ((i4491 ==  (int64_t)672)) {
i4491 =  (int64_t)0;
i4490 = (i4490 +  (int64_t)1);
if ((i4490 ==  (int64_t)7)) {
i4490 =  (int64_t)0;
i4489 = (i4489 +  (int64_t)1);
if ((i4489 ==  (int64_t)7)) {
i4489 =  (int64_t)0;
i4488 = (i4488 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1857);

uint64_t* tmp1862 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672);

int64_t i4503;

int64_t i4502;

int64_t i4501;

int64_t i4500;

int64_t i4499;

int64_t i4498;

int64_t i4497;

int64_t i4496;
i4496 =  (int64_t)0;
i4497 =  (int64_t)0;
i4498 =  (int64_t)0;
i4499 =  (int64_t)0;
for (uint32_t i4500 =  (int32_t)0; i4500 <  (int32_t)1; i4500++){
for (uint32_t i4503 =  (int32_t)0; i4503 <  (int32_t)672; i4503++){
for (uint32_t i4501 =  (int32_t)0; i4501 <  (int32_t)7; i4501++){
for (uint32_t i4502 =  (int32_t)0; i4502 <  (int32_t)7; i4502++){
Arr4DIdxRowM(tmp1862, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4500,i4501,i4502,i4503) = Arr4DIdxRowM(tmp1860, (int32_t)1, (int32_t)672, (int32_t)7, (int32_t)7,i4496,i4497,i4498,i4499);
i4499 = (i4499 +  (int64_t)1);
if ((i4499 ==  (int64_t)7)) {
i4499 =  (int64_t)0;
i4498 = (i4498 +  (int64_t)1);
if ((i4498 ==  (int64_t)7)) {
i4498 =  (int64_t)0;
i4497 = (i4497 +  (int64_t)1);
if ((i4497 ==  (int64_t)672)) {
i4497 =  (int64_t)0;
i4496 = (i4496 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)672,  (int32_t)7,  (int32_t)7, tmp1860);

uint64_t* tmp1864 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672);
ScaleDown4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1862,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1862, tmp79, tmp80,  (int32_t)0,  (int32_t)0, tmp1864);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1862);
ClearMemSecret1( (int32_t)672, tmp80);
ClearMemSecret1( (int32_t)672, tmp79);

uint64_t* tmp1868 = make_array<uint64_t>( (int32_t)1,  (int32_t)672,  (int32_t)7,  (int32_t)7);

int64_t i4511;

int64_t i4510;

int64_t i4509;

int64_t i4508;

int64_t i4507;

int64_t i4506;

int64_t i4505;

int64_t i4504;
i4504 =  (int64_t)0;
i4505 =  (int64_t)0;
i4506 =  (int64_t)0;
i4507 =  (int64_t)0;
for (uint32_t i4508 =  (int32_t)0; i4508 <  (int32_t)1; i4508++){
for (uint32_t i4510 =  (int32_t)0; i4510 <  (int32_t)7; i4510++){
for (uint32_t i4511 =  (int32_t)0; i4511 <  (int32_t)7; i4511++){
for (uint32_t i4509 =  (int32_t)0; i4509 <  (int32_t)672; i4509++){
Arr4DIdxRowM(tmp1868, (int32_t)1, (int32_t)672, (int32_t)7, (int32_t)7,i4508,i4509,i4510,i4511) = Arr4DIdxRowM(tmp1864, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4504,i4505,i4506,i4507);
i4507 = (i4507 +  (int64_t)1);
if ((i4507 ==  (int64_t)672)) {
i4507 =  (int64_t)0;
i4506 = (i4506 +  (int64_t)1);
if ((i4506 ==  (int64_t)7)) {
i4506 =  (int64_t)0;
i4505 = (i4505 +  (int64_t)1);
if ((i4505 ==  (int64_t)7)) {
i4505 =  (int64_t)0;
i4504 = (i4504 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1864);

uint64_t* tmp1870 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672);

int64_t i4519;

int64_t i4518;

int64_t i4517;

int64_t i4516;

int64_t i4515;

int64_t i4514;

int64_t i4513;

int64_t i4512;
i4512 =  (int64_t)0;
i4513 =  (int64_t)0;
i4514 =  (int64_t)0;
i4515 =  (int64_t)0;
for (uint32_t i4516 =  (int32_t)0; i4516 <  (int32_t)1; i4516++){
for (uint32_t i4519 =  (int32_t)0; i4519 <  (int32_t)672; i4519++){
for (uint32_t i4517 =  (int32_t)0; i4517 <  (int32_t)7; i4517++){
for (uint32_t i4518 =  (int32_t)0; i4518 <  (int32_t)7; i4518++){
Arr4DIdxRowM(tmp1870, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4516,i4517,i4518,i4519) = Arr4DIdxRowM(tmp1868, (int32_t)1, (int32_t)672, (int32_t)7, (int32_t)7,i4512,i4513,i4514,i4515);
i4515 = (i4515 +  (int64_t)1);
if ((i4515 ==  (int64_t)7)) {
i4515 =  (int64_t)0;
i4514 = (i4514 +  (int64_t)1);
if ((i4514 ==  (int64_t)7)) {
i4514 =  (int64_t)0;
i4513 = (i4513 +  (int64_t)1);
if ((i4513 ==  (int64_t)672)) {
i4513 =  (int64_t)0;
i4512 = (i4512 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp1871 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672);
HardSigmoid4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1870, tmp1871,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1870);

uint64_t* tmp1873 = make_array<uint64_t>( (int32_t)1,  (int32_t)672,  (int32_t)7,  (int32_t)7);

int64_t i4527;

int64_t i4526;

int64_t i4525;

int64_t i4524;

int64_t i4523;

int64_t i4522;

int64_t i4521;

int64_t i4520;
i4520 =  (int64_t)0;
i4521 =  (int64_t)0;
i4522 =  (int64_t)0;
i4523 =  (int64_t)0;
for (uint32_t i4524 =  (int32_t)0; i4524 <  (int32_t)1; i4524++){
for (uint32_t i4526 =  (int32_t)0; i4526 <  (int32_t)7; i4526++){
for (uint32_t i4527 =  (int32_t)0; i4527 <  (int32_t)7; i4527++){
for (uint32_t i4525 =  (int32_t)0; i4525 <  (int32_t)672; i4525++){
Arr4DIdxRowM(tmp1873, (int32_t)1, (int32_t)672, (int32_t)7, (int32_t)7,i4524,i4525,i4526,i4527) = Arr4DIdxRowM(tmp1871, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4520,i4521,i4522,i4523);
i4523 = (i4523 +  (int64_t)1);
if ((i4523 ==  (int64_t)672)) {
i4523 =  (int64_t)0;
i4522 = (i4522 +  (int64_t)1);
if ((i4522 ==  (int64_t)7)) {
i4522 =  (int64_t)0;
i4521 = (i4521 +  (int64_t)1);
if ((i4521 ==  (int64_t)7)) {
i4521 =  (int64_t)0;
i4520 = (i4520 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1871);

uint64_t* tmp1875 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672);

int64_t i4535;

int64_t i4534;

int64_t i4533;

int64_t i4532;

int64_t i4531;

int64_t i4530;

int64_t i4529;

int64_t i4528;
i4528 =  (int64_t)0;
i4529 =  (int64_t)0;
i4530 =  (int64_t)0;
i4531 =  (int64_t)0;
for (uint32_t i4532 =  (int32_t)0; i4532 <  (int32_t)1; i4532++){
for (uint32_t i4535 =  (int32_t)0; i4535 <  (int32_t)672; i4535++){
for (uint32_t i4533 =  (int32_t)0; i4533 <  (int32_t)7; i4533++){
for (uint32_t i4534 =  (int32_t)0; i4534 <  (int32_t)7; i4534++){
Arr4DIdxRowM(tmp1875, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4532,i4533,i4534,i4535) = Arr4DIdxRowM(tmp1868, (int32_t)1, (int32_t)672, (int32_t)7, (int32_t)7,i4528,i4529,i4530,i4531);
i4531 = (i4531 +  (int64_t)1);
if ((i4531 ==  (int64_t)7)) {
i4531 =  (int64_t)0;
i4530 = (i4530 +  (int64_t)1);
if ((i4530 ==  (int64_t)7)) {
i4530 =  (int64_t)0;
i4529 = (i4529 +  (int64_t)1);
if ((i4529 ==  (int64_t)672)) {
i4529 =  (int64_t)0;
i4528 = (i4528 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)672,  (int32_t)7,  (int32_t)7, tmp1868);

uint64_t* tmp1877 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672);

int64_t i4543;

int64_t i4542;

int64_t i4541;

int64_t i4540;

int64_t i4539;

int64_t i4538;

int64_t i4537;

int64_t i4536;
i4536 =  (int64_t)0;
i4537 =  (int64_t)0;
i4538 =  (int64_t)0;
i4539 =  (int64_t)0;
for (uint32_t i4540 =  (int32_t)0; i4540 <  (int32_t)1; i4540++){
for (uint32_t i4543 =  (int32_t)0; i4543 <  (int32_t)672; i4543++){
for (uint32_t i4541 =  (int32_t)0; i4541 <  (int32_t)7; i4541++){
for (uint32_t i4542 =  (int32_t)0; i4542 <  (int32_t)7; i4542++){
Arr4DIdxRowM(tmp1877, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4540,i4541,i4542,i4543) = Arr4DIdxRowM(tmp1873, (int32_t)1, (int32_t)672, (int32_t)7, (int32_t)7,i4536,i4537,i4538,i4539);
i4539 = (i4539 +  (int64_t)1);
if ((i4539 ==  (int64_t)7)) {
i4539 =  (int64_t)0;
i4538 = (i4538 +  (int64_t)1);
if ((i4538 ==  (int64_t)7)) {
i4538 =  (int64_t)0;
i4537 = (i4537 +  (int64_t)1);
if ((i4537 ==  (int64_t)672)) {
i4537 =  (int64_t)0;
i4536 = (i4536 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)672,  (int32_t)7,  (int32_t)7, tmp1873);
ScaleDown4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1875,  (int32_t)23);

uint64_t* tmp1879 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672);

uint64_t* tmp1880 = make_array<uint64_t>( (int32_t)32928);

uint64_t* tmp1881 = make_array<uint64_t>( (int32_t)32928);

uint64_t* tmp1882 = make_array<uint64_t>( (int32_t)32928);

int32_t tmp1883;
for (uint32_t i4544 =  (int32_t)0; i4544 <  (int32_t)1; i4544++){
for (uint32_t i4545 =  (int32_t)0; i4545 <  (int32_t)7; i4545++){
for (uint32_t i4546 =  (int32_t)0; i4546 <  (int32_t)7; i4546++){
for (uint32_t i4547 =  (int32_t)0; i4547 <  (int32_t)672; i4547++){
tmp1883 = (((( (int32_t)0 + (i4544 *  (int32_t)32928)) + (i4545 *  (int32_t)4704)) + (i4546 *  (int32_t)672)) + (i4547 *  (int32_t)1));
Arr1DIdxRowM(tmp1880, (int32_t)32928,tmp1883) = Arr4DIdxRowM(tmp1875, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4544,i4545,i4546,i4547);
Arr1DIdxRowM(tmp1881, (int32_t)32928,tmp1883) = Arr4DIdxRowM(tmp1877, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4544,i4545,i4546,i4547);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)32928, tmp1880, tmp1881, tmp1882);
ClearMemSecret1( (int32_t)32928, tmp1880);
ClearMemSecret1( (int32_t)32928, tmp1881);
for (uint32_t i4544 =  (int32_t)0; i4544 <  (int32_t)1; i4544++){
for (uint32_t i4545 =  (int32_t)0; i4545 <  (int32_t)7; i4545++){
for (uint32_t i4546 =  (int32_t)0; i4546 <  (int32_t)7; i4546++){
for (uint32_t i4547 =  (int32_t)0; i4547 <  (int32_t)672; i4547++){
tmp1883 = (((( (int32_t)0 + (i4544 *  (int32_t)32928)) + (i4545 *  (int32_t)4704)) + (i4546 *  (int32_t)672)) + (i4547 *  (int32_t)1));
Arr4DIdxRowM(tmp1879, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4544,i4545,i4546,i4547) = Arr1DIdxRowM(tmp1882, (int32_t)32928,tmp1883);
}
}
}
}
ClearMemSecret1( (int32_t)32928, tmp1882);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1877);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1875);

uint64_t* tmp1886 = make_array<uint64_t>( (int32_t)1,  (int32_t)672,  (int32_t)7,  (int32_t)7);

int64_t i4555;

int64_t i4554;

int64_t i4553;

int64_t i4552;

int64_t i4551;

int64_t i4550;

int64_t i4549;

int64_t i4548;
i4548 =  (int64_t)0;
i4549 =  (int64_t)0;
i4550 =  (int64_t)0;
i4551 =  (int64_t)0;
for (uint32_t i4552 =  (int32_t)0; i4552 <  (int32_t)1; i4552++){
for (uint32_t i4554 =  (int32_t)0; i4554 <  (int32_t)7; i4554++){
for (uint32_t i4555 =  (int32_t)0; i4555 <  (int32_t)7; i4555++){
for (uint32_t i4553 =  (int32_t)0; i4553 <  (int32_t)672; i4553++){
Arr4DIdxRowM(tmp1886, (int32_t)1, (int32_t)672, (int32_t)7, (int32_t)7,i4552,i4553,i4554,i4555) = Arr4DIdxRowM(tmp1879, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4548,i4549,i4550,i4551);
i4551 = (i4551 +  (int64_t)1);
if ((i4551 ==  (int64_t)672)) {
i4551 =  (int64_t)0;
i4550 = (i4550 +  (int64_t)1);
if ((i4550 ==  (int64_t)7)) {
i4550 =  (int64_t)0;
i4549 = (i4549 +  (int64_t)1);
if ((i4549 ==  (int64_t)7)) {
i4549 =  (int64_t)0;
i4548 = (i4548 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1879);

uint64_t* tmp1888 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672);

int64_t i4563;

int64_t i4562;

int64_t i4561;

int64_t i4560;

int64_t i4559;

int64_t i4558;

int64_t i4557;

int64_t i4556;
i4556 =  (int64_t)0;
i4557 =  (int64_t)0;
i4558 =  (int64_t)0;
i4559 =  (int64_t)0;
for (uint32_t i4560 =  (int32_t)0; i4560 <  (int32_t)1; i4560++){
for (uint32_t i4563 =  (int32_t)0; i4563 <  (int32_t)672; i4563++){
for (uint32_t i4561 =  (int32_t)0; i4561 <  (int32_t)7; i4561++){
for (uint32_t i4562 =  (int32_t)0; i4562 <  (int32_t)7; i4562++){
Arr4DIdxRowM(tmp1888, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4560,i4561,i4562,i4563) = Arr4DIdxRowM(tmp1886, (int32_t)1, (int32_t)672, (int32_t)7, (int32_t)7,i4556,i4557,i4558,i4559);
i4559 = (i4559 +  (int64_t)1);
if ((i4559 ==  (int64_t)7)) {
i4559 =  (int64_t)0;
i4558 = (i4558 +  (int64_t)1);
if ((i4558 ==  (int64_t)7)) {
i4558 =  (int64_t)0;
i4557 = (i4557 +  (int64_t)1);
if ((i4557 ==  (int64_t)672)) {
i4557 =  (int64_t)0;
i4556 = (i4556 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp1889 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672);
AvgPool( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672,  (int32_t)7,  (int32_t)7,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1888, tmp1889);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1888);

uint64_t* tmp1891 = make_array<uint64_t>( (int32_t)1,  (int32_t)672,  (int32_t)1,  (int32_t)1);

int64_t i4571;

int64_t i4570;

int64_t i4569;

int64_t i4568;

int64_t i4567;

int64_t i4566;

int64_t i4565;

int64_t i4564;
i4564 =  (int64_t)0;
i4565 =  (int64_t)0;
i4566 =  (int64_t)0;
i4567 =  (int64_t)0;
for (uint32_t i4568 =  (int32_t)0; i4568 <  (int32_t)1; i4568++){
for (uint32_t i4570 =  (int32_t)0; i4570 <  (int32_t)1; i4570++){
for (uint32_t i4571 =  (int32_t)0; i4571 <  (int32_t)1; i4571++){
for (uint32_t i4569 =  (int32_t)0; i4569 <  (int32_t)672; i4569++){
Arr4DIdxRowM(tmp1891, (int32_t)1, (int32_t)672, (int32_t)1, (int32_t)1,i4568,i4569,i4570,i4571) = Arr4DIdxRowM(tmp1889, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)672,i4564,i4565,i4566,i4567);
i4567 = (i4567 +  (int64_t)1);
if ((i4567 ==  (int64_t)672)) {
i4567 =  (int64_t)0;
i4566 = (i4566 +  (int64_t)1);
if ((i4566 ==  (int64_t)1)) {
i4566 =  (int64_t)0;
i4565 = (i4565 +  (int64_t)1);
if ((i4565 ==  (int64_t)1)) {
i4565 =  (int64_t)0;
i4564 = (i4564 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672, tmp1889);

uint64_t* tmp1893 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672);

int64_t i4579;

int64_t i4578;

int64_t i4577;

int64_t i4576;

int64_t i4575;

int64_t i4574;

int64_t i4573;

int64_t i4572;
i4572 =  (int64_t)0;
i4573 =  (int64_t)0;
i4574 =  (int64_t)0;
i4575 =  (int64_t)0;
for (uint32_t i4576 =  (int32_t)0; i4576 <  (int32_t)1; i4576++){
for (uint32_t i4579 =  (int32_t)0; i4579 <  (int32_t)672; i4579++){
for (uint32_t i4577 =  (int32_t)0; i4577 <  (int32_t)1; i4577++){
for (uint32_t i4578 =  (int32_t)0; i4578 <  (int32_t)1; i4578++){
Arr4DIdxRowM(tmp1893, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)672,i4576,i4577,i4578,i4579) = Arr4DIdxRowM(tmp1891, (int32_t)1, (int32_t)672, (int32_t)1, (int32_t)1,i4572,i4573,i4574,i4575);
i4575 = (i4575 +  (int64_t)1);
if ((i4575 ==  (int64_t)1)) {
i4575 =  (int64_t)0;
i4574 = (i4574 +  (int64_t)1);
if ((i4574 ==  (int64_t)1)) {
i4574 =  (int64_t)0;
i4573 = (i4573 +  (int64_t)1);
if ((i4573 ==  (int64_t)672)) {
i4573 =  (int64_t)0;
i4572 = (i4572 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)672,  (int32_t)1,  (int32_t)1, tmp1891);

uint64_t* tmp1895 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)672,  (int32_t)168);

int64_t i4587;

int64_t i4586;

int64_t i4585;

int64_t i4584;

int64_t i4583;

int64_t i4582;

int64_t i4581;

int64_t i4580;
i4580 =  (int64_t)0;
i4581 =  (int64_t)0;
i4582 =  (int64_t)0;
i4583 =  (int64_t)0;
for (uint32_t i4587 =  (int32_t)0; i4587 <  (int32_t)168; i4587++){
for (uint32_t i4586 =  (int32_t)0; i4586 <  (int32_t)672; i4586++){
for (uint32_t i4584 =  (int32_t)0; i4584 <  (int32_t)1; i4584++){
for (uint32_t i4585 =  (int32_t)0; i4585 <  (int32_t)1; i4585++){
Arr4DIdxRowM(tmp1895, (int32_t)1, (int32_t)1, (int32_t)672, (int32_t)168,i4584,i4585,i4586,i4587) = Arr4DIdxRowM(tmp98, (int32_t)168, (int32_t)672, (int32_t)1, (int32_t)1,i4580,i4581,i4582,i4583);
i4583 = (i4583 +  (int64_t)1);
if ((i4583 ==  (int64_t)1)) {
i4583 =  (int64_t)0;
i4582 = (i4582 +  (int64_t)1);
if ((i4582 ==  (int64_t)1)) {
i4582 =  (int64_t)0;
i4581 = (i4581 +  (int64_t)1);
if ((i4581 ==  (int64_t)672)) {
i4581 =  (int64_t)0;
i4580 = (i4580 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)168,  (int32_t)672,  (int32_t)1,  (int32_t)1, tmp98);

uint64_t* tmp1897 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168);
ScaleDown4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672, tmp1893,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672,  (int32_t)1,  (int32_t)1,  (int32_t)168,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp1893, tmp1895, tmp1897);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)672,  (int32_t)168, tmp1895);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672, tmp1893);

uint64_t* tmp1900 = make_array<uint64_t>( (int32_t)1,  (int32_t)168,  (int32_t)1,  (int32_t)1);

int64_t i4595;

int64_t i4594;

int64_t i4593;

int64_t i4592;

int64_t i4591;

int64_t i4590;

int64_t i4589;

int64_t i4588;
i4588 =  (int64_t)0;
i4589 =  (int64_t)0;
i4590 =  (int64_t)0;
i4591 =  (int64_t)0;
for (uint32_t i4592 =  (int32_t)0; i4592 <  (int32_t)1; i4592++){
for (uint32_t i4594 =  (int32_t)0; i4594 <  (int32_t)1; i4594++){
for (uint32_t i4595 =  (int32_t)0; i4595 <  (int32_t)1; i4595++){
for (uint32_t i4593 =  (int32_t)0; i4593 <  (int32_t)168; i4593++){
Arr4DIdxRowM(tmp1900, (int32_t)1, (int32_t)168, (int32_t)1, (int32_t)1,i4592,i4593,i4594,i4595) = Arr4DIdxRowM(tmp1897, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)168,i4588,i4589,i4590,i4591);
i4591 = (i4591 +  (int64_t)1);
if ((i4591 ==  (int64_t)168)) {
i4591 =  (int64_t)0;
i4590 = (i4590 +  (int64_t)1);
if ((i4590 ==  (int64_t)1)) {
i4590 =  (int64_t)0;
i4589 = (i4589 +  (int64_t)1);
if ((i4589 ==  (int64_t)1)) {
i4589 =  (int64_t)0;
i4588 = (i4588 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168, tmp1897);

uint64_t* tmp1902 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168);

int64_t i4603;

int64_t i4602;

int64_t i4601;

int64_t i4600;

int64_t i4599;

int64_t i4598;

int64_t i4597;

int64_t i4596;
i4596 =  (int64_t)0;
i4597 =  (int64_t)0;
i4598 =  (int64_t)0;
i4599 =  (int64_t)0;
for (uint32_t i4600 =  (int32_t)0; i4600 <  (int32_t)1; i4600++){
for (uint32_t i4603 =  (int32_t)0; i4603 <  (int32_t)168; i4603++){
for (uint32_t i4601 =  (int32_t)0; i4601 <  (int32_t)1; i4601++){
for (uint32_t i4602 =  (int32_t)0; i4602 <  (int32_t)1; i4602++){
Arr4DIdxRowM(tmp1902, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)168,i4600,i4601,i4602,i4603) = Arr4DIdxRowM(tmp1900, (int32_t)1, (int32_t)168, (int32_t)1, (int32_t)1,i4596,i4597,i4598,i4599);
i4599 = (i4599 +  (int64_t)1);
if ((i4599 ==  (int64_t)1)) {
i4599 =  (int64_t)0;
i4598 = (i4598 +  (int64_t)1);
if ((i4598 ==  (int64_t)1)) {
i4598 =  (int64_t)0;
i4597 = (i4597 +  (int64_t)1);
if ((i4597 ==  (int64_t)168)) {
i4597 =  (int64_t)0;
i4596 = (i4596 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)168,  (int32_t)1,  (int32_t)1, tmp1900);

uint64_t* tmp1904 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168);
ScaleDown4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168, tmp1902,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168, tmp1902, tmp83, tmp84,  (int32_t)0,  (int32_t)0, tmp1904);
ClearMemSecret1( (int32_t)168, tmp84);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168, tmp1902);
ClearMemSecret1( (int32_t)168, tmp83);

uint64_t* tmp1908 = make_array<uint64_t>( (int32_t)1,  (int32_t)168,  (int32_t)1,  (int32_t)1);

int64_t i4611;

int64_t i4610;

int64_t i4609;

int64_t i4608;

int64_t i4607;

int64_t i4606;

int64_t i4605;

int64_t i4604;
i4604 =  (int64_t)0;
i4605 =  (int64_t)0;
i4606 =  (int64_t)0;
i4607 =  (int64_t)0;
for (uint32_t i4608 =  (int32_t)0; i4608 <  (int32_t)1; i4608++){
for (uint32_t i4610 =  (int32_t)0; i4610 <  (int32_t)1; i4610++){
for (uint32_t i4611 =  (int32_t)0; i4611 <  (int32_t)1; i4611++){
for (uint32_t i4609 =  (int32_t)0; i4609 <  (int32_t)168; i4609++){
Arr4DIdxRowM(tmp1908, (int32_t)1, (int32_t)168, (int32_t)1, (int32_t)1,i4608,i4609,i4610,i4611) = Arr4DIdxRowM(tmp1904, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)168,i4604,i4605,i4606,i4607);
i4607 = (i4607 +  (int64_t)1);
if ((i4607 ==  (int64_t)168)) {
i4607 =  (int64_t)0;
i4606 = (i4606 +  (int64_t)1);
if ((i4606 ==  (int64_t)1)) {
i4606 =  (int64_t)0;
i4605 = (i4605 +  (int64_t)1);
if ((i4605 ==  (int64_t)1)) {
i4605 =  (int64_t)0;
i4604 = (i4604 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168, tmp1904);

uint64_t* tmp1910 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168);

int64_t i4619;

int64_t i4618;

int64_t i4617;

int64_t i4616;

int64_t i4615;

int64_t i4614;

int64_t i4613;

int64_t i4612;
i4612 =  (int64_t)0;
i4613 =  (int64_t)0;
i4614 =  (int64_t)0;
i4615 =  (int64_t)0;
for (uint32_t i4616 =  (int32_t)0; i4616 <  (int32_t)1; i4616++){
for (uint32_t i4619 =  (int32_t)0; i4619 <  (int32_t)168; i4619++){
for (uint32_t i4617 =  (int32_t)0; i4617 <  (int32_t)1; i4617++){
for (uint32_t i4618 =  (int32_t)0; i4618 <  (int32_t)1; i4618++){
Arr4DIdxRowM(tmp1910, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)168,i4616,i4617,i4618,i4619) = Arr4DIdxRowM(tmp1908, (int32_t)1, (int32_t)168, (int32_t)1, (int32_t)1,i4612,i4613,i4614,i4615);
i4615 = (i4615 +  (int64_t)1);
if ((i4615 ==  (int64_t)1)) {
i4615 =  (int64_t)0;
i4614 = (i4614 +  (int64_t)1);
if ((i4614 ==  (int64_t)1)) {
i4614 =  (int64_t)0;
i4613 = (i4613 +  (int64_t)1);
if ((i4613 ==  (int64_t)168)) {
i4613 =  (int64_t)0;
i4612 = (i4612 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)168,  (int32_t)1,  (int32_t)1, tmp1908);

uint64_t* tmp1912 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168);
Relu4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168, tmp1910, tmp1912,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168, tmp1910);

uint64_t* tmp1914 = make_array<uint64_t>( (int32_t)1,  (int32_t)168,  (int32_t)1,  (int32_t)1);

int64_t i4627;

int64_t i4626;

int64_t i4625;

int64_t i4624;

int64_t i4623;

int64_t i4622;

int64_t i4621;

int64_t i4620;
i4620 =  (int64_t)0;
i4621 =  (int64_t)0;
i4622 =  (int64_t)0;
i4623 =  (int64_t)0;
for (uint32_t i4624 =  (int32_t)0; i4624 <  (int32_t)1; i4624++){
for (uint32_t i4626 =  (int32_t)0; i4626 <  (int32_t)1; i4626++){
for (uint32_t i4627 =  (int32_t)0; i4627 <  (int32_t)1; i4627++){
for (uint32_t i4625 =  (int32_t)0; i4625 <  (int32_t)168; i4625++){
Arr4DIdxRowM(tmp1914, (int32_t)1, (int32_t)168, (int32_t)1, (int32_t)1,i4624,i4625,i4626,i4627) = Arr4DIdxRowM(tmp1912, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)168,i4620,i4621,i4622,i4623);
i4623 = (i4623 +  (int64_t)1);
if ((i4623 ==  (int64_t)168)) {
i4623 =  (int64_t)0;
i4622 = (i4622 +  (int64_t)1);
if ((i4622 ==  (int64_t)1)) {
i4622 =  (int64_t)0;
i4621 = (i4621 +  (int64_t)1);
if ((i4621 ==  (int64_t)1)) {
i4621 =  (int64_t)0;
i4620 = (i4620 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168, tmp1912);

uint64_t* tmp1916 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168);

int64_t i4635;

int64_t i4634;

int64_t i4633;

int64_t i4632;

int64_t i4631;

int64_t i4630;

int64_t i4629;

int64_t i4628;
i4628 =  (int64_t)0;
i4629 =  (int64_t)0;
i4630 =  (int64_t)0;
i4631 =  (int64_t)0;
for (uint32_t i4632 =  (int32_t)0; i4632 <  (int32_t)1; i4632++){
for (uint32_t i4635 =  (int32_t)0; i4635 <  (int32_t)168; i4635++){
for (uint32_t i4633 =  (int32_t)0; i4633 <  (int32_t)1; i4633++){
for (uint32_t i4634 =  (int32_t)0; i4634 <  (int32_t)1; i4634++){
Arr4DIdxRowM(tmp1916, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)168,i4632,i4633,i4634,i4635) = Arr4DIdxRowM(tmp1914, (int32_t)1, (int32_t)168, (int32_t)1, (int32_t)1,i4628,i4629,i4630,i4631);
i4631 = (i4631 +  (int64_t)1);
if ((i4631 ==  (int64_t)1)) {
i4631 =  (int64_t)0;
i4630 = (i4630 +  (int64_t)1);
if ((i4630 ==  (int64_t)1)) {
i4630 =  (int64_t)0;
i4629 = (i4629 +  (int64_t)1);
if ((i4629 ==  (int64_t)168)) {
i4629 =  (int64_t)0;
i4628 = (i4628 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)168,  (int32_t)1,  (int32_t)1, tmp1914);

uint64_t* tmp1918 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)168,  (int32_t)672);

int64_t i4643;

int64_t i4642;

int64_t i4641;

int64_t i4640;

int64_t i4639;

int64_t i4638;

int64_t i4637;

int64_t i4636;
i4636 =  (int64_t)0;
i4637 =  (int64_t)0;
i4638 =  (int64_t)0;
i4639 =  (int64_t)0;
for (uint32_t i4643 =  (int32_t)0; i4643 <  (int32_t)672; i4643++){
for (uint32_t i4642 =  (int32_t)0; i4642 <  (int32_t)168; i4642++){
for (uint32_t i4640 =  (int32_t)0; i4640 <  (int32_t)1; i4640++){
for (uint32_t i4641 =  (int32_t)0; i4641 <  (int32_t)1; i4641++){
Arr4DIdxRowM(tmp1918, (int32_t)1, (int32_t)1, (int32_t)168, (int32_t)672,i4640,i4641,i4642,i4643) = Arr4DIdxRowM(tmp99, (int32_t)672, (int32_t)168, (int32_t)1, (int32_t)1,i4636,i4637,i4638,i4639);
i4639 = (i4639 +  (int64_t)1);
if ((i4639 ==  (int64_t)1)) {
i4639 =  (int64_t)0;
i4638 = (i4638 +  (int64_t)1);
if ((i4638 ==  (int64_t)1)) {
i4638 =  (int64_t)0;
i4637 = (i4637 +  (int64_t)1);
if ((i4637 ==  (int64_t)168)) {
i4637 =  (int64_t)0;
i4636 = (i4636 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)672,  (int32_t)168,  (int32_t)1,  (int32_t)1, tmp99);

uint64_t* tmp1920 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168,  (int32_t)1,  (int32_t)1,  (int32_t)672,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp1916, tmp1918, tmp1920);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)168,  (int32_t)672, tmp1918);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)168, tmp1916);

uint64_t* tmp1923 = make_array<uint64_t>( (int32_t)1,  (int32_t)672,  (int32_t)1,  (int32_t)1);

int64_t i4651;

int64_t i4650;

int64_t i4649;

int64_t i4648;

int64_t i4647;

int64_t i4646;

int64_t i4645;

int64_t i4644;
i4644 =  (int64_t)0;
i4645 =  (int64_t)0;
i4646 =  (int64_t)0;
i4647 =  (int64_t)0;
for (uint32_t i4648 =  (int32_t)0; i4648 <  (int32_t)1; i4648++){
for (uint32_t i4650 =  (int32_t)0; i4650 <  (int32_t)1; i4650++){
for (uint32_t i4651 =  (int32_t)0; i4651 <  (int32_t)1; i4651++){
for (uint32_t i4649 =  (int32_t)0; i4649 <  (int32_t)672; i4649++){
Arr4DIdxRowM(tmp1923, (int32_t)1, (int32_t)672, (int32_t)1, (int32_t)1,i4648,i4649,i4650,i4651) = Arr4DIdxRowM(tmp1920, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)672,i4644,i4645,i4646,i4647);
i4647 = (i4647 +  (int64_t)1);
if ((i4647 ==  (int64_t)672)) {
i4647 =  (int64_t)0;
i4646 = (i4646 +  (int64_t)1);
if ((i4646 ==  (int64_t)1)) {
i4646 =  (int64_t)0;
i4645 = (i4645 +  (int64_t)1);
if ((i4645 ==  (int64_t)1)) {
i4645 =  (int64_t)0;
i4644 = (i4644 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672, tmp1920);

uint64_t* tmp1925 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672);

int64_t i4659;

int64_t i4658;

int64_t i4657;

int64_t i4656;

int64_t i4655;

int64_t i4654;

int64_t i4653;

int64_t i4652;
i4652 =  (int64_t)0;
i4653 =  (int64_t)0;
i4654 =  (int64_t)0;
i4655 =  (int64_t)0;
for (uint32_t i4656 =  (int32_t)0; i4656 <  (int32_t)1; i4656++){
for (uint32_t i4659 =  (int32_t)0; i4659 <  (int32_t)672; i4659++){
for (uint32_t i4657 =  (int32_t)0; i4657 <  (int32_t)1; i4657++){
for (uint32_t i4658 =  (int32_t)0; i4658 <  (int32_t)1; i4658++){
Arr4DIdxRowM(tmp1925, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)672,i4656,i4657,i4658,i4659) = Arr4DIdxRowM(tmp1923, (int32_t)1, (int32_t)672, (int32_t)1, (int32_t)1,i4652,i4653,i4654,i4655);
i4655 = (i4655 +  (int64_t)1);
if ((i4655 ==  (int64_t)1)) {
i4655 =  (int64_t)0;
i4654 = (i4654 +  (int64_t)1);
if ((i4654 ==  (int64_t)1)) {
i4654 =  (int64_t)0;
i4653 = (i4653 +  (int64_t)1);
if ((i4653 ==  (int64_t)672)) {
i4653 =  (int64_t)0;
i4652 = (i4652 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)672,  (int32_t)1,  (int32_t)1, tmp1923);

uint64_t* tmp1927 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672);
HardSigmoid4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672, tmp1925, tmp1927,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672, tmp1925);

uint64_t* tmp1929 = make_array<uint64_t>( (int32_t)1,  (int32_t)672,  (int32_t)1,  (int32_t)1);

int64_t i4667;

int64_t i4666;

int64_t i4665;

int64_t i4664;

int64_t i4663;

int64_t i4662;

int64_t i4661;

int64_t i4660;
i4660 =  (int64_t)0;
i4661 =  (int64_t)0;
i4662 =  (int64_t)0;
i4663 =  (int64_t)0;
for (uint32_t i4664 =  (int32_t)0; i4664 <  (int32_t)1; i4664++){
for (uint32_t i4666 =  (int32_t)0; i4666 <  (int32_t)1; i4666++){
for (uint32_t i4667 =  (int32_t)0; i4667 <  (int32_t)1; i4667++){
for (uint32_t i4665 =  (int32_t)0; i4665 <  (int32_t)672; i4665++){
Arr4DIdxRowM(tmp1929, (int32_t)1, (int32_t)672, (int32_t)1, (int32_t)1,i4664,i4665,i4666,i4667) = Arr4DIdxRowM(tmp1927, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)672,i4660,i4661,i4662,i4663);
i4663 = (i4663 +  (int64_t)1);
if ((i4663 ==  (int64_t)672)) {
i4663 =  (int64_t)0;
i4662 = (i4662 +  (int64_t)1);
if ((i4662 ==  (int64_t)1)) {
i4662 =  (int64_t)0;
i4661 = (i4661 +  (int64_t)1);
if ((i4661 ==  (int64_t)1)) {
i4661 =  (int64_t)0;
i4660 = (i4660 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672, tmp1927);

uint64_t* tmp1931 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672);

int64_t i4675;

int64_t i4674;

int64_t i4673;

int64_t i4672;

int64_t i4671;

int64_t i4670;

int64_t i4669;

int64_t i4668;
i4668 =  (int64_t)0;
i4669 =  (int64_t)0;
i4670 =  (int64_t)0;
i4671 =  (int64_t)0;
for (uint32_t i4672 =  (int32_t)0; i4672 <  (int32_t)1; i4672++){
for (uint32_t i4675 =  (int32_t)0; i4675 <  (int32_t)672; i4675++){
for (uint32_t i4673 =  (int32_t)0; i4673 <  (int32_t)7; i4673++){
for (uint32_t i4674 =  (int32_t)0; i4674 <  (int32_t)7; i4674++){
Arr4DIdxRowM(tmp1931, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4672,i4673,i4674,i4675) = Arr4DIdxRowM(tmp1886, (int32_t)1, (int32_t)672, (int32_t)7, (int32_t)7,i4668,i4669,i4670,i4671);
i4671 = (i4671 +  (int64_t)1);
if ((i4671 ==  (int64_t)7)) {
i4671 =  (int64_t)0;
i4670 = (i4670 +  (int64_t)1);
if ((i4670 ==  (int64_t)7)) {
i4670 =  (int64_t)0;
i4669 = (i4669 +  (int64_t)1);
if ((i4669 ==  (int64_t)672)) {
i4669 =  (int64_t)0;
i4668 = (i4668 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)672,  (int32_t)7,  (int32_t)7, tmp1886);

uint64_t* tmp1933 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672);

int64_t i4683;

int64_t i4682;

int64_t i4681;

int64_t i4680;

int64_t i4679;

int64_t i4678;

int64_t i4677;

int64_t i4676;
i4676 =  (int64_t)0;
i4677 =  (int64_t)0;
i4678 =  (int64_t)0;
i4679 =  (int64_t)0;
for (uint32_t i4680 =  (int32_t)0; i4680 <  (int32_t)1; i4680++){
for (uint32_t i4683 =  (int32_t)0; i4683 <  (int32_t)672; i4683++){
for (uint32_t i4681 =  (int32_t)0; i4681 <  (int32_t)1; i4681++){
for (uint32_t i4682 =  (int32_t)0; i4682 <  (int32_t)1; i4682++){
Arr4DIdxRowM(tmp1933, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)672,i4680,i4681,i4682,i4683) = Arr4DIdxRowM(tmp1929, (int32_t)1, (int32_t)672, (int32_t)1, (int32_t)1,i4676,i4677,i4678,i4679);
i4679 = (i4679 +  (int64_t)1);
if ((i4679 ==  (int64_t)1)) {
i4679 =  (int64_t)0;
i4678 = (i4678 +  (int64_t)1);
if ((i4678 ==  (int64_t)1)) {
i4678 =  (int64_t)0;
i4677 = (i4677 +  (int64_t)1);
if ((i4677 ==  (int64_t)672)) {
i4677 =  (int64_t)0;
i4676 = (i4676 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)672,  (int32_t)1,  (int32_t)1, tmp1929);
ScaleDown4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1931,  (int32_t)23);

uint64_t* tmp1935 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672);

uint64_t* tmp1936 = make_array<uint64_t>( (int32_t)32928);

uint64_t* tmp1937 = make_array<uint64_t>( (int32_t)32928);

uint64_t* tmp1938 = make_array<uint64_t>( (int32_t)32928);

int32_t tmp1939;
for (uint32_t i4684 =  (int32_t)0; i4684 <  (int32_t)1; i4684++){
for (uint32_t i4685 =  (int32_t)0; i4685 <  (int32_t)7; i4685++){
for (uint32_t i4686 =  (int32_t)0; i4686 <  (int32_t)7; i4686++){
for (uint32_t i4687 =  (int32_t)0; i4687 <  (int32_t)672; i4687++){
tmp1939 = (((( (int32_t)0 + (i4684 *  (int32_t)32928)) + (i4685 *  (int32_t)4704)) + (i4686 *  (int32_t)672)) + (i4687 *  (int32_t)1));
Arr1DIdxRowM(tmp1936, (int32_t)32928,tmp1939) = Arr4DIdxRowM(tmp1931, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4684,i4685,i4686,i4687);
Arr1DIdxRowM(tmp1937, (int32_t)32928,tmp1939) = Arr4DIdxRowM(tmp1933, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)672,i4684, (int32_t)0, (int32_t)0,i4687);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)32928, tmp1936, tmp1937, tmp1938);
ClearMemSecret1( (int32_t)32928, tmp1936);
ClearMemSecret1( (int32_t)32928, tmp1937);
for (uint32_t i4684 =  (int32_t)0; i4684 <  (int32_t)1; i4684++){
for (uint32_t i4685 =  (int32_t)0; i4685 <  (int32_t)7; i4685++){
for (uint32_t i4686 =  (int32_t)0; i4686 <  (int32_t)7; i4686++){
for (uint32_t i4687 =  (int32_t)0; i4687 <  (int32_t)672; i4687++){
tmp1939 = (((( (int32_t)0 + (i4684 *  (int32_t)32928)) + (i4685 *  (int32_t)4704)) + (i4686 *  (int32_t)672)) + (i4687 *  (int32_t)1));
Arr4DIdxRowM(tmp1935, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4684,i4685,i4686,i4687) = Arr1DIdxRowM(tmp1938, (int32_t)32928,tmp1939);
}
}
}
}
ClearMemSecret1( (int32_t)32928, tmp1938);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1931);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)672, tmp1933);

uint64_t* tmp1942 = make_array<uint64_t>( (int32_t)1,  (int32_t)672,  (int32_t)7,  (int32_t)7);

int64_t i4695;

int64_t i4694;

int64_t i4693;

int64_t i4692;

int64_t i4691;

int64_t i4690;

int64_t i4689;

int64_t i4688;
i4688 =  (int64_t)0;
i4689 =  (int64_t)0;
i4690 =  (int64_t)0;
i4691 =  (int64_t)0;
for (uint32_t i4692 =  (int32_t)0; i4692 <  (int32_t)1; i4692++){
for (uint32_t i4694 =  (int32_t)0; i4694 <  (int32_t)7; i4694++){
for (uint32_t i4695 =  (int32_t)0; i4695 <  (int32_t)7; i4695++){
for (uint32_t i4693 =  (int32_t)0; i4693 <  (int32_t)672; i4693++){
Arr4DIdxRowM(tmp1942, (int32_t)1, (int32_t)672, (int32_t)7, (int32_t)7,i4692,i4693,i4694,i4695) = Arr4DIdxRowM(tmp1935, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4688,i4689,i4690,i4691);
i4691 = (i4691 +  (int64_t)1);
if ((i4691 ==  (int64_t)672)) {
i4691 =  (int64_t)0;
i4690 = (i4690 +  (int64_t)1);
if ((i4690 ==  (int64_t)7)) {
i4690 =  (int64_t)0;
i4689 = (i4689 +  (int64_t)1);
if ((i4689 ==  (int64_t)7)) {
i4689 =  (int64_t)0;
i4688 = (i4688 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1935);

uint64_t* tmp1944 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672);

int64_t i4703;

int64_t i4702;

int64_t i4701;

int64_t i4700;

int64_t i4699;

int64_t i4698;

int64_t i4697;

int64_t i4696;
i4696 =  (int64_t)0;
i4697 =  (int64_t)0;
i4698 =  (int64_t)0;
i4699 =  (int64_t)0;
for (uint32_t i4700 =  (int32_t)0; i4700 <  (int32_t)1; i4700++){
for (uint32_t i4703 =  (int32_t)0; i4703 <  (int32_t)672; i4703++){
for (uint32_t i4701 =  (int32_t)0; i4701 <  (int32_t)7; i4701++){
for (uint32_t i4702 =  (int32_t)0; i4702 <  (int32_t)7; i4702++){
Arr4DIdxRowM(tmp1944, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)672,i4700,i4701,i4702,i4703) = Arr4DIdxRowM(tmp1942, (int32_t)1, (int32_t)672, (int32_t)7, (int32_t)7,i4696,i4697,i4698,i4699);
i4699 = (i4699 +  (int64_t)1);
if ((i4699 ==  (int64_t)7)) {
i4699 =  (int64_t)0;
i4698 = (i4698 +  (int64_t)1);
if ((i4698 ==  (int64_t)7)) {
i4698 =  (int64_t)0;
i4697 = (i4697 +  (int64_t)1);
if ((i4697 ==  (int64_t)672)) {
i4697 =  (int64_t)0;
i4696 = (i4696 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)672,  (int32_t)7,  (int32_t)7, tmp1942);

uint64_t* tmp1946 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)672,  (int32_t)160);

int64_t i4711;

int64_t i4710;

int64_t i4709;

int64_t i4708;

int64_t i4707;

int64_t i4706;

int64_t i4705;

int64_t i4704;
i4704 =  (int64_t)0;
i4705 =  (int64_t)0;
i4706 =  (int64_t)0;
i4707 =  (int64_t)0;
for (uint32_t i4711 =  (int32_t)0; i4711 <  (int32_t)160; i4711++){
for (uint32_t i4710 =  (int32_t)0; i4710 <  (int32_t)672; i4710++){
for (uint32_t i4708 =  (int32_t)0; i4708 <  (int32_t)1; i4708++){
for (uint32_t i4709 =  (int32_t)0; i4709 <  (int32_t)1; i4709++){
Arr4DIdxRowM(tmp1946, (int32_t)1, (int32_t)1, (int32_t)672, (int32_t)160,i4708,i4709,i4710,i4711) = Arr4DIdxRowM(tmp100, (int32_t)160, (int32_t)672, (int32_t)1, (int32_t)1,i4704,i4705,i4706,i4707);
i4707 = (i4707 +  (int64_t)1);
if ((i4707 ==  (int64_t)1)) {
i4707 =  (int64_t)0;
i4706 = (i4706 +  (int64_t)1);
if ((i4706 ==  (int64_t)1)) {
i4706 =  (int64_t)0;
i4705 = (i4705 +  (int64_t)1);
if ((i4705 ==  (int64_t)672)) {
i4705 =  (int64_t)0;
i4704 = (i4704 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)160,  (int32_t)672,  (int32_t)1,  (int32_t)1, tmp100);

uint64_t* tmp1948 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);
ScaleDown4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1944,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672,  (int32_t)1,  (int32_t)1,  (int32_t)160,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp1944, tmp1946, tmp1948);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)672, tmp1944);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)672,  (int32_t)160, tmp1946);

uint64_t* tmp1951 = make_array<uint64_t>( (int32_t)1,  (int32_t)160,  (int32_t)7,  (int32_t)7);

int64_t i4719;

int64_t i4718;

int64_t i4717;

int64_t i4716;

int64_t i4715;

int64_t i4714;

int64_t i4713;

int64_t i4712;
i4712 =  (int64_t)0;
i4713 =  (int64_t)0;
i4714 =  (int64_t)0;
i4715 =  (int64_t)0;
for (uint32_t i4716 =  (int32_t)0; i4716 <  (int32_t)1; i4716++){
for (uint32_t i4718 =  (int32_t)0; i4718 <  (int32_t)7; i4718++){
for (uint32_t i4719 =  (int32_t)0; i4719 <  (int32_t)7; i4719++){
for (uint32_t i4717 =  (int32_t)0; i4717 <  (int32_t)160; i4717++){
Arr4DIdxRowM(tmp1951, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i4716,i4717,i4718,i4719) = Arr4DIdxRowM(tmp1948, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i4712,i4713,i4714,i4715);
i4715 = (i4715 +  (int64_t)1);
if ((i4715 ==  (int64_t)160)) {
i4715 =  (int64_t)0;
i4714 = (i4714 +  (int64_t)1);
if ((i4714 ==  (int64_t)7)) {
i4714 =  (int64_t)0;
i4713 = (i4713 +  (int64_t)1);
if ((i4713 ==  (int64_t)7)) {
i4713 =  (int64_t)0;
i4712 = (i4712 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1948);

uint64_t* tmp1953 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);

int64_t i4727;

int64_t i4726;

int64_t i4725;

int64_t i4724;

int64_t i4723;

int64_t i4722;

int64_t i4721;

int64_t i4720;
i4720 =  (int64_t)0;
i4721 =  (int64_t)0;
i4722 =  (int64_t)0;
i4723 =  (int64_t)0;
for (uint32_t i4724 =  (int32_t)0; i4724 <  (int32_t)1; i4724++){
for (uint32_t i4727 =  (int32_t)0; i4727 <  (int32_t)160; i4727++){
for (uint32_t i4725 =  (int32_t)0; i4725 <  (int32_t)7; i4725++){
for (uint32_t i4726 =  (int32_t)0; i4726 <  (int32_t)7; i4726++){
Arr4DIdxRowM(tmp1953, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i4724,i4725,i4726,i4727) = Arr4DIdxRowM(tmp1951, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i4720,i4721,i4722,i4723);
i4723 = (i4723 +  (int64_t)1);
if ((i4723 ==  (int64_t)7)) {
i4723 =  (int64_t)0;
i4722 = (i4722 +  (int64_t)1);
if ((i4722 ==  (int64_t)7)) {
i4722 =  (int64_t)0;
i4721 = (i4721 +  (int64_t)1);
if ((i4721 ==  (int64_t)160)) {
i4721 =  (int64_t)0;
i4720 = (i4720 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)160,  (int32_t)7,  (int32_t)7, tmp1951);

uint64_t* tmp1955 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);
ScaleDown4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1953,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1953, tmp92, tmp93,  (int32_t)0,  (int32_t)0, tmp1955);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1953);

uint64_t* tmp1957 = make_array<uint64_t>( (int32_t)1,  (int32_t)160,  (int32_t)7,  (int32_t)7);

int64_t i4735;

int64_t i4734;

int64_t i4733;

int64_t i4732;

int64_t i4731;

int64_t i4730;

int64_t i4729;

int64_t i4728;
i4728 =  (int64_t)0;
i4729 =  (int64_t)0;
i4730 =  (int64_t)0;
i4731 =  (int64_t)0;
for (uint32_t i4732 =  (int32_t)0; i4732 <  (int32_t)1; i4732++){
for (uint32_t i4734 =  (int32_t)0; i4734 <  (int32_t)7; i4734++){
for (uint32_t i4735 =  (int32_t)0; i4735 <  (int32_t)7; i4735++){
for (uint32_t i4733 =  (int32_t)0; i4733 <  (int32_t)160; i4733++){
Arr4DIdxRowM(tmp1957, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i4732,i4733,i4734,i4735) = Arr4DIdxRowM(tmp1955, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i4728,i4729,i4730,i4731);
i4731 = (i4731 +  (int64_t)1);
if ((i4731 ==  (int64_t)160)) {
i4731 =  (int64_t)0;
i4730 = (i4730 +  (int64_t)1);
if ((i4730 ==  (int64_t)7)) {
i4730 =  (int64_t)0;
i4729 = (i4729 +  (int64_t)1);
if ((i4729 ==  (int64_t)7)) {
i4729 =  (int64_t)0;
i4728 = (i4728 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1955);

uint64_t* tmp1959 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);

int64_t i4743;

int64_t i4742;

int64_t i4741;

int64_t i4740;

int64_t i4739;

int64_t i4738;

int64_t i4737;

int64_t i4736;
i4736 =  (int64_t)0;
i4737 =  (int64_t)0;
i4738 =  (int64_t)0;
i4739 =  (int64_t)0;
for (uint32_t i4740 =  (int32_t)0; i4740 <  (int32_t)1; i4740++){
for (uint32_t i4743 =  (int32_t)0; i4743 <  (int32_t)160; i4743++){
for (uint32_t i4741 =  (int32_t)0; i4741 <  (int32_t)7; i4741++){
for (uint32_t i4742 =  (int32_t)0; i4742 <  (int32_t)7; i4742++){
Arr4DIdxRowM(tmp1959, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i4740,i4741,i4742,i4743) = Arr4DIdxRowM(tmp1957, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i4736,i4737,i4738,i4739);
i4739 = (i4739 +  (int64_t)1);
if ((i4739 ==  (int64_t)7)) {
i4739 =  (int64_t)0;
i4738 = (i4738 +  (int64_t)1);
if ((i4738 ==  (int64_t)7)) {
i4738 =  (int64_t)0;
i4737 = (i4737 +  (int64_t)1);
if ((i4737 ==  (int64_t)160)) {
i4737 =  (int64_t)0;
i4736 = (i4736 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)160,  (int32_t)7,  (int32_t)7, tmp1957);

uint64_t* tmp1961 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);

int64_t i4751;

int64_t i4750;

int64_t i4749;

int64_t i4748;

int64_t i4747;

int64_t i4746;

int64_t i4745;

int64_t i4744;
i4744 =  (int64_t)0;
i4745 =  (int64_t)0;
i4746 =  (int64_t)0;
i4747 =  (int64_t)0;
for (uint32_t i4748 =  (int32_t)0; i4748 <  (int32_t)1; i4748++){
for (uint32_t i4751 =  (int32_t)0; i4751 <  (int32_t)160; i4751++){
for (uint32_t i4749 =  (int32_t)0; i4749 <  (int32_t)7; i4749++){
for (uint32_t i4750 =  (int32_t)0; i4750 <  (int32_t)7; i4750++){
Arr4DIdxRowM(tmp1961, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i4748,i4749,i4750,i4751) = Arr4DIdxRowM(tmp1819, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i4744,i4745,i4746,i4747);
i4747 = (i4747 +  (int64_t)1);
if ((i4747 ==  (int64_t)7)) {
i4747 =  (int64_t)0;
i4746 = (i4746 +  (int64_t)1);
if ((i4746 ==  (int64_t)7)) {
i4746 =  (int64_t)0;
i4745 = (i4745 +  (int64_t)1);
if ((i4745 ==  (int64_t)160)) {
i4745 =  (int64_t)0;
i4744 = (i4744 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)160,  (int32_t)7,  (int32_t)7, tmp1819);

uint64_t* tmp1963 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);
for (uint32_t i0 =  (int32_t)0; i0 <  (int32_t)1; i0++){
for (uint32_t i1 =  (int32_t)0; i1 <  (int32_t)7; i1++){
for (uint32_t i2 =  (int32_t)0; i2 <  (int32_t)7; i2++){
for (uint32_t i3 =  (int32_t)0; i3 <  (int32_t)160; i3++){
Arr4DIdxRowM(tmp1963, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i0,i1,i2,i3) = SecretAdd(Arr4DIdxRowM(tmp1959, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i0,i1,i2,i3), Arr4DIdxRowM(tmp1961, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i0,i1,i2,i3));
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1961);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1959);

uint64_t* tmp1966 = make_array<uint64_t>( (int32_t)1,  (int32_t)160,  (int32_t)7,  (int32_t)7);

int64_t i4759;

int64_t i4758;

int64_t i4757;

int64_t i4756;

int64_t i4755;

int64_t i4754;

int64_t i4753;

int64_t i4752;
i4752 =  (int64_t)0;
i4753 =  (int64_t)0;
i4754 =  (int64_t)0;
i4755 =  (int64_t)0;
for (uint32_t i4756 =  (int32_t)0; i4756 <  (int32_t)1; i4756++){
for (uint32_t i4758 =  (int32_t)0; i4758 <  (int32_t)7; i4758++){
for (uint32_t i4759 =  (int32_t)0; i4759 <  (int32_t)7; i4759++){
for (uint32_t i4757 =  (int32_t)0; i4757 <  (int32_t)160; i4757++){
Arr4DIdxRowM(tmp1966, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i4756,i4757,i4758,i4759) = Arr4DIdxRowM(tmp1963, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i4752,i4753,i4754,i4755);
i4755 = (i4755 +  (int64_t)1);
if ((i4755 ==  (int64_t)160)) {
i4755 =  (int64_t)0;
i4754 = (i4754 +  (int64_t)1);
if ((i4754 ==  (int64_t)7)) {
i4754 =  (int64_t)0;
i4753 = (i4753 +  (int64_t)1);
if ((i4753 ==  (int64_t)7)) {
i4753 =  (int64_t)0;
i4752 = (i4752 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1963);

uint64_t* tmp1968 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);

int64_t i4767;

int64_t i4766;

int64_t i4765;

int64_t i4764;

int64_t i4763;

int64_t i4762;

int64_t i4761;

int64_t i4760;
i4760 =  (int64_t)0;
i4761 =  (int64_t)0;
i4762 =  (int64_t)0;
i4763 =  (int64_t)0;
for (uint32_t i4764 =  (int32_t)0; i4764 <  (int32_t)1; i4764++){
for (uint32_t i4767 =  (int32_t)0; i4767 <  (int32_t)160; i4767++){
for (uint32_t i4765 =  (int32_t)0; i4765 <  (int32_t)7; i4765++){
for (uint32_t i4766 =  (int32_t)0; i4766 <  (int32_t)7; i4766++){
Arr4DIdxRowM(tmp1968, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i4764,i4765,i4766,i4767) = Arr4DIdxRowM(tmp1966, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i4760,i4761,i4762,i4763);
i4763 = (i4763 +  (int64_t)1);
if ((i4763 ==  (int64_t)7)) {
i4763 =  (int64_t)0;
i4762 = (i4762 +  (int64_t)1);
if ((i4762 ==  (int64_t)7)) {
i4762 =  (int64_t)0;
i4761 = (i4761 +  (int64_t)1);
if ((i4761 ==  (int64_t)160)) {
i4761 =  (int64_t)0;
i4760 = (i4760 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp1969 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);
HardSigmoid4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1968, tmp1969,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1968);

uint64_t* tmp1971 = make_array<uint64_t>( (int32_t)1,  (int32_t)160,  (int32_t)7,  (int32_t)7);

int64_t i4775;

int64_t i4774;

int64_t i4773;

int64_t i4772;

int64_t i4771;

int64_t i4770;

int64_t i4769;

int64_t i4768;
i4768 =  (int64_t)0;
i4769 =  (int64_t)0;
i4770 =  (int64_t)0;
i4771 =  (int64_t)0;
for (uint32_t i4772 =  (int32_t)0; i4772 <  (int32_t)1; i4772++){
for (uint32_t i4774 =  (int32_t)0; i4774 <  (int32_t)7; i4774++){
for (uint32_t i4775 =  (int32_t)0; i4775 <  (int32_t)7; i4775++){
for (uint32_t i4773 =  (int32_t)0; i4773 <  (int32_t)160; i4773++){
Arr4DIdxRowM(tmp1971, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i4772,i4773,i4774,i4775) = Arr4DIdxRowM(tmp1969, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i4768,i4769,i4770,i4771);
i4771 = (i4771 +  (int64_t)1);
if ((i4771 ==  (int64_t)160)) {
i4771 =  (int64_t)0;
i4770 = (i4770 +  (int64_t)1);
if ((i4770 ==  (int64_t)7)) {
i4770 =  (int64_t)0;
i4769 = (i4769 +  (int64_t)1);
if ((i4769 ==  (int64_t)7)) {
i4769 =  (int64_t)0;
i4768 = (i4768 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1969);

uint64_t* tmp1973 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);

int64_t i4783;

int64_t i4782;

int64_t i4781;

int64_t i4780;

int64_t i4779;

int64_t i4778;

int64_t i4777;

int64_t i4776;
i4776 =  (int64_t)0;
i4777 =  (int64_t)0;
i4778 =  (int64_t)0;
i4779 =  (int64_t)0;
for (uint32_t i4780 =  (int32_t)0; i4780 <  (int32_t)1; i4780++){
for (uint32_t i4783 =  (int32_t)0; i4783 <  (int32_t)160; i4783++){
for (uint32_t i4781 =  (int32_t)0; i4781 <  (int32_t)7; i4781++){
for (uint32_t i4782 =  (int32_t)0; i4782 <  (int32_t)7; i4782++){
Arr4DIdxRowM(tmp1973, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i4780,i4781,i4782,i4783) = Arr4DIdxRowM(tmp1966, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i4776,i4777,i4778,i4779);
i4779 = (i4779 +  (int64_t)1);
if ((i4779 ==  (int64_t)7)) {
i4779 =  (int64_t)0;
i4778 = (i4778 +  (int64_t)1);
if ((i4778 ==  (int64_t)7)) {
i4778 =  (int64_t)0;
i4777 = (i4777 +  (int64_t)1);
if ((i4777 ==  (int64_t)160)) {
i4777 =  (int64_t)0;
i4776 = (i4776 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)160,  (int32_t)7,  (int32_t)7, tmp1966);

uint64_t* tmp1975 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);

int64_t i4791;

int64_t i4790;

int64_t i4789;

int64_t i4788;

int64_t i4787;

int64_t i4786;

int64_t i4785;

int64_t i4784;
i4784 =  (int64_t)0;
i4785 =  (int64_t)0;
i4786 =  (int64_t)0;
i4787 =  (int64_t)0;
for (uint32_t i4788 =  (int32_t)0; i4788 <  (int32_t)1; i4788++){
for (uint32_t i4791 =  (int32_t)0; i4791 <  (int32_t)160; i4791++){
for (uint32_t i4789 =  (int32_t)0; i4789 <  (int32_t)7; i4789++){
for (uint32_t i4790 =  (int32_t)0; i4790 <  (int32_t)7; i4790++){
Arr4DIdxRowM(tmp1975, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i4788,i4789,i4790,i4791) = Arr4DIdxRowM(tmp1971, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i4784,i4785,i4786,i4787);
i4787 = (i4787 +  (int64_t)1);
if ((i4787 ==  (int64_t)7)) {
i4787 =  (int64_t)0;
i4786 = (i4786 +  (int64_t)1);
if ((i4786 ==  (int64_t)7)) {
i4786 =  (int64_t)0;
i4785 = (i4785 +  (int64_t)1);
if ((i4785 ==  (int64_t)160)) {
i4785 =  (int64_t)0;
i4784 = (i4784 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)160,  (int32_t)7,  (int32_t)7, tmp1971);
ScaleDown4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1973,  (int32_t)23);

uint64_t* tmp1977 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);

uint64_t* tmp1978 = make_array<uint64_t>( (int32_t)7840);

uint64_t* tmp1979 = make_array<uint64_t>( (int32_t)7840);

uint64_t* tmp1980 = make_array<uint64_t>( (int32_t)7840);

int32_t tmp1981;
for (uint32_t i4792 =  (int32_t)0; i4792 <  (int32_t)1; i4792++){
for (uint32_t i4793 =  (int32_t)0; i4793 <  (int32_t)7; i4793++){
for (uint32_t i4794 =  (int32_t)0; i4794 <  (int32_t)7; i4794++){
for (uint32_t i4795 =  (int32_t)0; i4795 <  (int32_t)160; i4795++){
tmp1981 = (((( (int32_t)0 + (i4792 *  (int32_t)7840)) + (i4793 *  (int32_t)1120)) + (i4794 *  (int32_t)160)) + (i4795 *  (int32_t)1));
Arr1DIdxRowM(tmp1978, (int32_t)7840,tmp1981) = Arr4DIdxRowM(tmp1973, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i4792,i4793,i4794,i4795);
Arr1DIdxRowM(tmp1979, (int32_t)7840,tmp1981) = Arr4DIdxRowM(tmp1975, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i4792,i4793,i4794,i4795);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)7840, tmp1978, tmp1979, tmp1980);
ClearMemSecret1( (int32_t)7840, tmp1978);
ClearMemSecret1( (int32_t)7840, tmp1979);
for (uint32_t i4792 =  (int32_t)0; i4792 <  (int32_t)1; i4792++){
for (uint32_t i4793 =  (int32_t)0; i4793 <  (int32_t)7; i4793++){
for (uint32_t i4794 =  (int32_t)0; i4794 <  (int32_t)7; i4794++){
for (uint32_t i4795 =  (int32_t)0; i4795 <  (int32_t)160; i4795++){
tmp1981 = (((( (int32_t)0 + (i4792 *  (int32_t)7840)) + (i4793 *  (int32_t)1120)) + (i4794 *  (int32_t)160)) + (i4795 *  (int32_t)1));
Arr4DIdxRowM(tmp1977, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i4792,i4793,i4794,i4795) = Arr1DIdxRowM(tmp1980, (int32_t)7840,tmp1981);
}
}
}
}
ClearMemSecret1( (int32_t)7840, tmp1980);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1973);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1975);

uint64_t* tmp1984 = make_array<uint64_t>( (int32_t)1,  (int32_t)160,  (int32_t)7,  (int32_t)7);

int64_t i4803;

int64_t i4802;

int64_t i4801;

int64_t i4800;

int64_t i4799;

int64_t i4798;

int64_t i4797;

int64_t i4796;
i4796 =  (int64_t)0;
i4797 =  (int64_t)0;
i4798 =  (int64_t)0;
i4799 =  (int64_t)0;
for (uint32_t i4800 =  (int32_t)0; i4800 <  (int32_t)1; i4800++){
for (uint32_t i4802 =  (int32_t)0; i4802 <  (int32_t)7; i4802++){
for (uint32_t i4803 =  (int32_t)0; i4803 <  (int32_t)7; i4803++){
for (uint32_t i4801 =  (int32_t)0; i4801 <  (int32_t)160; i4801++){
Arr4DIdxRowM(tmp1984, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i4800,i4801,i4802,i4803) = Arr4DIdxRowM(tmp1977, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i4796,i4797,i4798,i4799);
i4799 = (i4799 +  (int64_t)1);
if ((i4799 ==  (int64_t)160)) {
i4799 =  (int64_t)0;
i4798 = (i4798 +  (int64_t)1);
if ((i4798 ==  (int64_t)7)) {
i4798 =  (int64_t)0;
i4797 = (i4797 +  (int64_t)1);
if ((i4797 ==  (int64_t)7)) {
i4797 =  (int64_t)0;
i4796 = (i4796 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1977);

uint64_t* tmp1986 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);

int64_t i4811;

int64_t i4810;

int64_t i4809;

int64_t i4808;

int64_t i4807;

int64_t i4806;

int64_t i4805;

int64_t i4804;
i4804 =  (int64_t)0;
i4805 =  (int64_t)0;
i4806 =  (int64_t)0;
i4807 =  (int64_t)0;
for (uint32_t i4808 =  (int32_t)0; i4808 <  (int32_t)1; i4808++){
for (uint32_t i4811 =  (int32_t)0; i4811 <  (int32_t)160; i4811++){
for (uint32_t i4809 =  (int32_t)0; i4809 <  (int32_t)7; i4809++){
for (uint32_t i4810 =  (int32_t)0; i4810 <  (int32_t)7; i4810++){
Arr4DIdxRowM(tmp1986, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i4808,i4809,i4810,i4811) = Arr4DIdxRowM(tmp1984, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i4804,i4805,i4806,i4807);
i4807 = (i4807 +  (int64_t)1);
if ((i4807 ==  (int64_t)7)) {
i4807 =  (int64_t)0;
i4806 = (i4806 +  (int64_t)1);
if ((i4806 ==  (int64_t)7)) {
i4806 =  (int64_t)0;
i4805 = (i4805 +  (int64_t)1);
if ((i4805 ==  (int64_t)160)) {
i4805 =  (int64_t)0;
i4804 = (i4804 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp1987 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)160,  (int32_t)960);

int64_t i4819;

int64_t i4818;

int64_t i4817;

int64_t i4816;

int64_t i4815;

int64_t i4814;

int64_t i4813;

int64_t i4812;
i4812 =  (int64_t)0;
i4813 =  (int64_t)0;
i4814 =  (int64_t)0;
i4815 =  (int64_t)0;
for (uint32_t i4819 =  (int32_t)0; i4819 <  (int32_t)960; i4819++){
for (uint32_t i4818 =  (int32_t)0; i4818 <  (int32_t)160; i4818++){
for (uint32_t i4816 =  (int32_t)0; i4816 <  (int32_t)1; i4816++){
for (uint32_t i4817 =  (int32_t)0; i4817 <  (int32_t)1; i4817++){
Arr4DIdxRowM(tmp1987, (int32_t)1, (int32_t)1, (int32_t)160, (int32_t)960,i4816,i4817,i4818,i4819) = Arr4DIdxRowM(tmp101, (int32_t)960, (int32_t)160, (int32_t)1, (int32_t)1,i4812,i4813,i4814,i4815);
i4815 = (i4815 +  (int64_t)1);
if ((i4815 ==  (int64_t)1)) {
i4815 =  (int64_t)0;
i4814 = (i4814 +  (int64_t)1);
if ((i4814 ==  (int64_t)1)) {
i4814 =  (int64_t)0;
i4813 = (i4813 +  (int64_t)1);
if ((i4813 ==  (int64_t)160)) {
i4813 =  (int64_t)0;
i4812 = (i4812 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)960,  (int32_t)160,  (int32_t)1,  (int32_t)1, tmp101);

uint64_t* tmp1989 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960);
ScaleDown4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1986,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160,  (int32_t)1,  (int32_t)1,  (int32_t)960,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp1986, tmp1987, tmp1989);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp1986);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)160,  (int32_t)960, tmp1987);

uint64_t* tmp1992 = make_array<uint64_t>( (int32_t)1,  (int32_t)960,  (int32_t)7,  (int32_t)7);

int64_t i4827;

int64_t i4826;

int64_t i4825;

int64_t i4824;

int64_t i4823;

int64_t i4822;

int64_t i4821;

int64_t i4820;
i4820 =  (int64_t)0;
i4821 =  (int64_t)0;
i4822 =  (int64_t)0;
i4823 =  (int64_t)0;
for (uint32_t i4824 =  (int32_t)0; i4824 <  (int32_t)1; i4824++){
for (uint32_t i4826 =  (int32_t)0; i4826 <  (int32_t)7; i4826++){
for (uint32_t i4827 =  (int32_t)0; i4827 <  (int32_t)7; i4827++){
for (uint32_t i4825 =  (int32_t)0; i4825 <  (int32_t)960; i4825++){
Arr4DIdxRowM(tmp1992, (int32_t)1, (int32_t)960, (int32_t)7, (int32_t)7,i4824,i4825,i4826,i4827) = Arr4DIdxRowM(tmp1989, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i4820,i4821,i4822,i4823);
i4823 = (i4823 +  (int64_t)1);
if ((i4823 ==  (int64_t)960)) {
i4823 =  (int64_t)0;
i4822 = (i4822 +  (int64_t)1);
if ((i4822 ==  (int64_t)7)) {
i4822 =  (int64_t)0;
i4821 = (i4821 +  (int64_t)1);
if ((i4821 ==  (int64_t)7)) {
i4821 =  (int64_t)0;
i4820 = (i4820 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp1989);

uint64_t* tmp1994 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960);

int64_t i4835;

int64_t i4834;

int64_t i4833;

int64_t i4832;

int64_t i4831;

int64_t i4830;

int64_t i4829;

int64_t i4828;
i4828 =  (int64_t)0;
i4829 =  (int64_t)0;
i4830 =  (int64_t)0;
i4831 =  (int64_t)0;
for (uint32_t i4832 =  (int32_t)0; i4832 <  (int32_t)1; i4832++){
for (uint32_t i4835 =  (int32_t)0; i4835 <  (int32_t)960; i4835++){
for (uint32_t i4833 =  (int32_t)0; i4833 <  (int32_t)7; i4833++){
for (uint32_t i4834 =  (int32_t)0; i4834 <  (int32_t)7; i4834++){
Arr4DIdxRowM(tmp1994, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i4832,i4833,i4834,i4835) = Arr4DIdxRowM(tmp1992, (int32_t)1, (int32_t)960, (int32_t)7, (int32_t)7,i4828,i4829,i4830,i4831);
i4831 = (i4831 +  (int64_t)1);
if ((i4831 ==  (int64_t)7)) {
i4831 =  (int64_t)0;
i4830 = (i4830 +  (int64_t)1);
if ((i4830 ==  (int64_t)7)) {
i4830 =  (int64_t)0;
i4829 = (i4829 +  (int64_t)1);
if ((i4829 ==  (int64_t)960)) {
i4829 =  (int64_t)0;
i4828 = (i4828 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)960,  (int32_t)7,  (int32_t)7, tmp1992);

uint64_t* tmp1996 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960);
ScaleDown4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp1994,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp1994, tmp102, tmp103,  (int32_t)0,  (int32_t)23, tmp1996);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp1994);

uint64_t* tmp1998 = make_array<uint64_t>( (int32_t)1,  (int32_t)960,  (int32_t)7,  (int32_t)7);

int64_t i4843;

int64_t i4842;

int64_t i4841;

int64_t i4840;

int64_t i4839;

int64_t i4838;

int64_t i4837;

int64_t i4836;
i4836 =  (int64_t)0;
i4837 =  (int64_t)0;
i4838 =  (int64_t)0;
i4839 =  (int64_t)0;
for (uint32_t i4840 =  (int32_t)0; i4840 <  (int32_t)1; i4840++){
for (uint32_t i4842 =  (int32_t)0; i4842 <  (int32_t)7; i4842++){
for (uint32_t i4843 =  (int32_t)0; i4843 <  (int32_t)7; i4843++){
for (uint32_t i4841 =  (int32_t)0; i4841 <  (int32_t)960; i4841++){
Arr4DIdxRowM(tmp1998, (int32_t)1, (int32_t)960, (int32_t)7, (int32_t)7,i4840,i4841,i4842,i4843) = Arr4DIdxRowM(tmp1996, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i4836,i4837,i4838,i4839);
i4839 = (i4839 +  (int64_t)1);
if ((i4839 ==  (int64_t)960)) {
i4839 =  (int64_t)0;
i4838 = (i4838 +  (int64_t)1);
if ((i4838 ==  (int64_t)7)) {
i4838 =  (int64_t)0;
i4837 = (i4837 +  (int64_t)1);
if ((i4837 ==  (int64_t)7)) {
i4837 =  (int64_t)0;
i4836 = (i4836 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp1996);

uint64_t* tmp2000 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960);

int64_t i4851;

int64_t i4850;

int64_t i4849;

int64_t i4848;

int64_t i4847;

int64_t i4846;

int64_t i4845;

int64_t i4844;
i4844 =  (int64_t)0;
i4845 =  (int64_t)0;
i4846 =  (int64_t)0;
i4847 =  (int64_t)0;
for (uint32_t i4848 =  (int32_t)0; i4848 <  (int32_t)1; i4848++){
for (uint32_t i4851 =  (int32_t)0; i4851 <  (int32_t)960; i4851++){
for (uint32_t i4849 =  (int32_t)0; i4849 <  (int32_t)7; i4849++){
for (uint32_t i4850 =  (int32_t)0; i4850 <  (int32_t)7; i4850++){
Arr4DIdxRowM(tmp2000, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i4848,i4849,i4850,i4851) = Arr4DIdxRowM(tmp1998, (int32_t)1, (int32_t)960, (int32_t)7, (int32_t)7,i4844,i4845,i4846,i4847);
i4847 = (i4847 +  (int64_t)1);
if ((i4847 ==  (int64_t)7)) {
i4847 =  (int64_t)0;
i4846 = (i4846 +  (int64_t)1);
if ((i4846 ==  (int64_t)7)) {
i4846 =  (int64_t)0;
i4845 = (i4845 +  (int64_t)1);
if ((i4845 ==  (int64_t)960)) {
i4845 =  (int64_t)0;
i4844 = (i4844 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp2001 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960);
HardSigmoid4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2000, tmp2001,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2000);

uint64_t* tmp2003 = make_array<uint64_t>( (int32_t)1,  (int32_t)960,  (int32_t)7,  (int32_t)7);

int64_t i4859;

int64_t i4858;

int64_t i4857;

int64_t i4856;

int64_t i4855;

int64_t i4854;

int64_t i4853;

int64_t i4852;
i4852 =  (int64_t)0;
i4853 =  (int64_t)0;
i4854 =  (int64_t)0;
i4855 =  (int64_t)0;
for (uint32_t i4856 =  (int32_t)0; i4856 <  (int32_t)1; i4856++){
for (uint32_t i4858 =  (int32_t)0; i4858 <  (int32_t)7; i4858++){
for (uint32_t i4859 =  (int32_t)0; i4859 <  (int32_t)7; i4859++){
for (uint32_t i4857 =  (int32_t)0; i4857 <  (int32_t)960; i4857++){
Arr4DIdxRowM(tmp2003, (int32_t)1, (int32_t)960, (int32_t)7, (int32_t)7,i4856,i4857,i4858,i4859) = Arr4DIdxRowM(tmp2001, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i4852,i4853,i4854,i4855);
i4855 = (i4855 +  (int64_t)1);
if ((i4855 ==  (int64_t)960)) {
i4855 =  (int64_t)0;
i4854 = (i4854 +  (int64_t)1);
if ((i4854 ==  (int64_t)7)) {
i4854 =  (int64_t)0;
i4853 = (i4853 +  (int64_t)1);
if ((i4853 ==  (int64_t)7)) {
i4853 =  (int64_t)0;
i4852 = (i4852 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2001);

uint64_t* tmp2005 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960);

int64_t i4867;

int64_t i4866;

int64_t i4865;

int64_t i4864;

int64_t i4863;

int64_t i4862;

int64_t i4861;

int64_t i4860;
i4860 =  (int64_t)0;
i4861 =  (int64_t)0;
i4862 =  (int64_t)0;
i4863 =  (int64_t)0;
for (uint32_t i4864 =  (int32_t)0; i4864 <  (int32_t)1; i4864++){
for (uint32_t i4867 =  (int32_t)0; i4867 <  (int32_t)960; i4867++){
for (uint32_t i4865 =  (int32_t)0; i4865 <  (int32_t)7; i4865++){
for (uint32_t i4866 =  (int32_t)0; i4866 <  (int32_t)7; i4866++){
Arr4DIdxRowM(tmp2005, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i4864,i4865,i4866,i4867) = Arr4DIdxRowM(tmp1998, (int32_t)1, (int32_t)960, (int32_t)7, (int32_t)7,i4860,i4861,i4862,i4863);
i4863 = (i4863 +  (int64_t)1);
if ((i4863 ==  (int64_t)7)) {
i4863 =  (int64_t)0;
i4862 = (i4862 +  (int64_t)1);
if ((i4862 ==  (int64_t)7)) {
i4862 =  (int64_t)0;
i4861 = (i4861 +  (int64_t)1);
if ((i4861 ==  (int64_t)960)) {
i4861 =  (int64_t)0;
i4860 = (i4860 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)960,  (int32_t)7,  (int32_t)7, tmp1998);

uint64_t* tmp2007 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960);

int64_t i4875;

int64_t i4874;

int64_t i4873;

int64_t i4872;

int64_t i4871;

int64_t i4870;

int64_t i4869;

int64_t i4868;
i4868 =  (int64_t)0;
i4869 =  (int64_t)0;
i4870 =  (int64_t)0;
i4871 =  (int64_t)0;
for (uint32_t i4872 =  (int32_t)0; i4872 <  (int32_t)1; i4872++){
for (uint32_t i4875 =  (int32_t)0; i4875 <  (int32_t)960; i4875++){
for (uint32_t i4873 =  (int32_t)0; i4873 <  (int32_t)7; i4873++){
for (uint32_t i4874 =  (int32_t)0; i4874 <  (int32_t)7; i4874++){
Arr4DIdxRowM(tmp2007, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i4872,i4873,i4874,i4875) = Arr4DIdxRowM(tmp2003, (int32_t)1, (int32_t)960, (int32_t)7, (int32_t)7,i4868,i4869,i4870,i4871);
i4871 = (i4871 +  (int64_t)1);
if ((i4871 ==  (int64_t)7)) {
i4871 =  (int64_t)0;
i4870 = (i4870 +  (int64_t)1);
if ((i4870 ==  (int64_t)7)) {
i4870 =  (int64_t)0;
i4869 = (i4869 +  (int64_t)1);
if ((i4869 ==  (int64_t)960)) {
i4869 =  (int64_t)0;
i4868 = (i4868 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)960,  (int32_t)7,  (int32_t)7, tmp2003);
ScaleDown4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2005,  (int32_t)23);

uint64_t* tmp2009 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960);

uint64_t* tmp2010 = make_array<uint64_t>( (int32_t)47040);

uint64_t* tmp2011 = make_array<uint64_t>( (int32_t)47040);

uint64_t* tmp2012 = make_array<uint64_t>( (int32_t)47040);

int32_t tmp2013;
for (uint32_t i4876 =  (int32_t)0; i4876 <  (int32_t)1; i4876++){
for (uint32_t i4877 =  (int32_t)0; i4877 <  (int32_t)7; i4877++){
for (uint32_t i4878 =  (int32_t)0; i4878 <  (int32_t)7; i4878++){
for (uint32_t i4879 =  (int32_t)0; i4879 <  (int32_t)960; i4879++){
tmp2013 = (((( (int32_t)0 + (i4876 *  (int32_t)47040)) + (i4877 *  (int32_t)6720)) + (i4878 *  (int32_t)960)) + (i4879 *  (int32_t)1));
Arr1DIdxRowM(tmp2010, (int32_t)47040,tmp2013) = Arr4DIdxRowM(tmp2005, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i4876,i4877,i4878,i4879);
Arr1DIdxRowM(tmp2011, (int32_t)47040,tmp2013) = Arr4DIdxRowM(tmp2007, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i4876,i4877,i4878,i4879);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)47040, tmp2010, tmp2011, tmp2012);
ClearMemSecret1( (int32_t)47040, tmp2010);
ClearMemSecret1( (int32_t)47040, tmp2011);
for (uint32_t i4876 =  (int32_t)0; i4876 <  (int32_t)1; i4876++){
for (uint32_t i4877 =  (int32_t)0; i4877 <  (int32_t)7; i4877++){
for (uint32_t i4878 =  (int32_t)0; i4878 <  (int32_t)7; i4878++){
for (uint32_t i4879 =  (int32_t)0; i4879 <  (int32_t)960; i4879++){
tmp2013 = (((( (int32_t)0 + (i4876 *  (int32_t)47040)) + (i4877 *  (int32_t)6720)) + (i4878 *  (int32_t)960)) + (i4879 *  (int32_t)1));
Arr4DIdxRowM(tmp2009, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i4876,i4877,i4878,i4879) = Arr1DIdxRowM(tmp2012, (int32_t)47040,tmp2013);
}
}
}
}
ClearMemSecret1( (int32_t)47040, tmp2012);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2007);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2005);

uint64_t* tmp2016 = make_array<uint64_t>( (int32_t)1,  (int32_t)960,  (int32_t)7,  (int32_t)7);

int64_t i4887;

int64_t i4886;

int64_t i4885;

int64_t i4884;

int64_t i4883;

int64_t i4882;

int64_t i4881;

int64_t i4880;
i4880 =  (int64_t)0;
i4881 =  (int64_t)0;
i4882 =  (int64_t)0;
i4883 =  (int64_t)0;
for (uint32_t i4884 =  (int32_t)0; i4884 <  (int32_t)1; i4884++){
for (uint32_t i4886 =  (int32_t)0; i4886 <  (int32_t)7; i4886++){
for (uint32_t i4887 =  (int32_t)0; i4887 <  (int32_t)7; i4887++){
for (uint32_t i4885 =  (int32_t)0; i4885 <  (int32_t)960; i4885++){
Arr4DIdxRowM(tmp2016, (int32_t)1, (int32_t)960, (int32_t)7, (int32_t)7,i4884,i4885,i4886,i4887) = Arr4DIdxRowM(tmp2009, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i4880,i4881,i4882,i4883);
i4883 = (i4883 +  (int64_t)1);
if ((i4883 ==  (int64_t)960)) {
i4883 =  (int64_t)0;
i4882 = (i4882 +  (int64_t)1);
if ((i4882 ==  (int64_t)7)) {
i4882 =  (int64_t)0;
i4881 = (i4881 +  (int64_t)1);
if ((i4881 ==  (int64_t)7)) {
i4881 =  (int64_t)0;
i4880 = (i4880 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2009);

uint64_t* tmp2018 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960);

int64_t i4895;

int64_t i4894;

int64_t i4893;

int64_t i4892;

int64_t i4891;

int64_t i4890;

int64_t i4889;

int64_t i4888;
i4888 =  (int64_t)0;
i4889 =  (int64_t)0;
i4890 =  (int64_t)0;
i4891 =  (int64_t)0;
for (uint32_t i4892 =  (int32_t)0; i4892 <  (int32_t)1; i4892++){
for (uint32_t i4895 =  (int32_t)0; i4895 <  (int32_t)960; i4895++){
for (uint32_t i4893 =  (int32_t)0; i4893 <  (int32_t)7; i4893++){
for (uint32_t i4894 =  (int32_t)0; i4894 <  (int32_t)7; i4894++){
Arr4DIdxRowM(tmp2018, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i4892,i4893,i4894,i4895) = Arr4DIdxRowM(tmp2016, (int32_t)1, (int32_t)960, (int32_t)7, (int32_t)7,i4888,i4889,i4890,i4891);
i4891 = (i4891 +  (int64_t)1);
if ((i4891 ==  (int64_t)7)) {
i4891 =  (int64_t)0;
i4890 = (i4890 +  (int64_t)1);
if ((i4890 ==  (int64_t)7)) {
i4890 =  (int64_t)0;
i4889 = (i4889 +  (int64_t)1);
if ((i4889 ==  (int64_t)960)) {
i4889 =  (int64_t)0;
i4888 = (i4888 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)960,  (int32_t)7,  (int32_t)7, tmp2016);

uint64_t* tmp2020 = make_array<uint64_t>( (int32_t)5,  (int32_t)5,  (int32_t)1,  (int32_t)960);

int64_t i4903;

int64_t i4902;

int64_t i4901;

int64_t i4900;

int64_t i4899;

int64_t i4898;

int64_t i4897;

int64_t i4896;
i4896 =  (int64_t)0;
i4897 =  (int64_t)0;
i4898 =  (int64_t)0;
i4899 =  (int64_t)0;
for (uint32_t i4903 =  (int32_t)0; i4903 <  (int32_t)960; i4903++){
for (uint32_t i4902 =  (int32_t)0; i4902 <  (int32_t)1; i4902++){
for (uint32_t i4900 =  (int32_t)0; i4900 <  (int32_t)5; i4900++){
for (uint32_t i4901 =  (int32_t)0; i4901 <  (int32_t)5; i4901++){
Arr4DIdxRowM(tmp2020, (int32_t)5, (int32_t)5, (int32_t)1, (int32_t)960,i4900,i4901,i4902,i4903) = Arr4DIdxRowM(tmp104, (int32_t)960, (int32_t)1, (int32_t)5, (int32_t)5,i4896,i4897,i4898,i4899);
i4899 = (i4899 +  (int64_t)1);
if ((i4899 ==  (int64_t)5)) {
i4899 =  (int64_t)0;
i4898 = (i4898 +  (int64_t)1);
if ((i4898 ==  (int64_t)5)) {
i4898 =  (int64_t)0;
i4897 = (i4897 +  (int64_t)1);
if ((i4897 ==  (int64_t)1)) {
i4897 =  (int64_t)0;
i4896 = (i4896 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)960,  (int32_t)1,  (int32_t)5,  (int32_t)5, tmp104);

uint64_t* tmp2022 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960);
ScaleDown4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2018,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960,  (int32_t)5,  (int32_t)5,  (int32_t)960,  (int32_t)2,  (int32_t)2,  (int32_t)2,  (int32_t)2,  (int32_t)1,  (int32_t)1,  (int32_t)960, tmp2018, tmp2020, tmp2022);
ClearMemSecret4( (int32_t)5,  (int32_t)5,  (int32_t)1,  (int32_t)960, tmp2020);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2018);

uint64_t* tmp2025 = make_array<uint64_t>( (int32_t)1,  (int32_t)960,  (int32_t)7,  (int32_t)7);

int64_t i4911;

int64_t i4910;

int64_t i4909;

int64_t i4908;

int64_t i4907;

int64_t i4906;

int64_t i4905;

int64_t i4904;
i4904 =  (int64_t)0;
i4905 =  (int64_t)0;
i4906 =  (int64_t)0;
i4907 =  (int64_t)0;
for (uint32_t i4908 =  (int32_t)0; i4908 <  (int32_t)1; i4908++){
for (uint32_t i4910 =  (int32_t)0; i4910 <  (int32_t)7; i4910++){
for (uint32_t i4911 =  (int32_t)0; i4911 <  (int32_t)7; i4911++){
for (uint32_t i4909 =  (int32_t)0; i4909 <  (int32_t)960; i4909++){
Arr4DIdxRowM(tmp2025, (int32_t)1, (int32_t)960, (int32_t)7, (int32_t)7,i4908,i4909,i4910,i4911) = Arr4DIdxRowM(tmp2022, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i4904,i4905,i4906,i4907);
i4907 = (i4907 +  (int64_t)1);
if ((i4907 ==  (int64_t)960)) {
i4907 =  (int64_t)0;
i4906 = (i4906 +  (int64_t)1);
if ((i4906 ==  (int64_t)7)) {
i4906 =  (int64_t)0;
i4905 = (i4905 +  (int64_t)1);
if ((i4905 ==  (int64_t)7)) {
i4905 =  (int64_t)0;
i4904 = (i4904 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2022);

uint64_t* tmp2027 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960);

int64_t i4919;

int64_t i4918;

int64_t i4917;

int64_t i4916;

int64_t i4915;

int64_t i4914;

int64_t i4913;

int64_t i4912;
i4912 =  (int64_t)0;
i4913 =  (int64_t)0;
i4914 =  (int64_t)0;
i4915 =  (int64_t)0;
for (uint32_t i4916 =  (int32_t)0; i4916 <  (int32_t)1; i4916++){
for (uint32_t i4919 =  (int32_t)0; i4919 <  (int32_t)960; i4919++){
for (uint32_t i4917 =  (int32_t)0; i4917 <  (int32_t)7; i4917++){
for (uint32_t i4918 =  (int32_t)0; i4918 <  (int32_t)7; i4918++){
Arr4DIdxRowM(tmp2027, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i4916,i4917,i4918,i4919) = Arr4DIdxRowM(tmp2025, (int32_t)1, (int32_t)960, (int32_t)7, (int32_t)7,i4912,i4913,i4914,i4915);
i4915 = (i4915 +  (int64_t)1);
if ((i4915 ==  (int64_t)7)) {
i4915 =  (int64_t)0;
i4914 = (i4914 +  (int64_t)1);
if ((i4914 ==  (int64_t)7)) {
i4914 =  (int64_t)0;
i4913 = (i4913 +  (int64_t)1);
if ((i4913 ==  (int64_t)960)) {
i4913 =  (int64_t)0;
i4912 = (i4912 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)960,  (int32_t)7,  (int32_t)7, tmp2025);

uint64_t* tmp2029 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960);
ScaleDown4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2027,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2027, tmp102, tmp103,  (int32_t)0,  (int32_t)0, tmp2029);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2027);

uint64_t* tmp2031 = make_array<uint64_t>( (int32_t)1,  (int32_t)960,  (int32_t)7,  (int32_t)7);

int64_t i4927;

int64_t i4926;

int64_t i4925;

int64_t i4924;

int64_t i4923;

int64_t i4922;

int64_t i4921;

int64_t i4920;
i4920 =  (int64_t)0;
i4921 =  (int64_t)0;
i4922 =  (int64_t)0;
i4923 =  (int64_t)0;
for (uint32_t i4924 =  (int32_t)0; i4924 <  (int32_t)1; i4924++){
for (uint32_t i4926 =  (int32_t)0; i4926 <  (int32_t)7; i4926++){
for (uint32_t i4927 =  (int32_t)0; i4927 <  (int32_t)7; i4927++){
for (uint32_t i4925 =  (int32_t)0; i4925 <  (int32_t)960; i4925++){
Arr4DIdxRowM(tmp2031, (int32_t)1, (int32_t)960, (int32_t)7, (int32_t)7,i4924,i4925,i4926,i4927) = Arr4DIdxRowM(tmp2029, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i4920,i4921,i4922,i4923);
i4923 = (i4923 +  (int64_t)1);
if ((i4923 ==  (int64_t)960)) {
i4923 =  (int64_t)0;
i4922 = (i4922 +  (int64_t)1);
if ((i4922 ==  (int64_t)7)) {
i4922 =  (int64_t)0;
i4921 = (i4921 +  (int64_t)1);
if ((i4921 ==  (int64_t)7)) {
i4921 =  (int64_t)0;
i4920 = (i4920 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2029);

uint64_t* tmp2033 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960);

int64_t i4935;

int64_t i4934;

int64_t i4933;

int64_t i4932;

int64_t i4931;

int64_t i4930;

int64_t i4929;

int64_t i4928;
i4928 =  (int64_t)0;
i4929 =  (int64_t)0;
i4930 =  (int64_t)0;
i4931 =  (int64_t)0;
for (uint32_t i4932 =  (int32_t)0; i4932 <  (int32_t)1; i4932++){
for (uint32_t i4935 =  (int32_t)0; i4935 <  (int32_t)960; i4935++){
for (uint32_t i4933 =  (int32_t)0; i4933 <  (int32_t)7; i4933++){
for (uint32_t i4934 =  (int32_t)0; i4934 <  (int32_t)7; i4934++){
Arr4DIdxRowM(tmp2033, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i4932,i4933,i4934,i4935) = Arr4DIdxRowM(tmp2031, (int32_t)1, (int32_t)960, (int32_t)7, (int32_t)7,i4928,i4929,i4930,i4931);
i4931 = (i4931 +  (int64_t)1);
if ((i4931 ==  (int64_t)7)) {
i4931 =  (int64_t)0;
i4930 = (i4930 +  (int64_t)1);
if ((i4930 ==  (int64_t)7)) {
i4930 =  (int64_t)0;
i4929 = (i4929 +  (int64_t)1);
if ((i4929 ==  (int64_t)960)) {
i4929 =  (int64_t)0;
i4928 = (i4928 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp2034 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960);
HardSigmoid4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2033, tmp2034,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2033);

uint64_t* tmp2036 = make_array<uint64_t>( (int32_t)1,  (int32_t)960,  (int32_t)7,  (int32_t)7);

int64_t i4943;

int64_t i4942;

int64_t i4941;

int64_t i4940;

int64_t i4939;

int64_t i4938;

int64_t i4937;

int64_t i4936;
i4936 =  (int64_t)0;
i4937 =  (int64_t)0;
i4938 =  (int64_t)0;
i4939 =  (int64_t)0;
for (uint32_t i4940 =  (int32_t)0; i4940 <  (int32_t)1; i4940++){
for (uint32_t i4942 =  (int32_t)0; i4942 <  (int32_t)7; i4942++){
for (uint32_t i4943 =  (int32_t)0; i4943 <  (int32_t)7; i4943++){
for (uint32_t i4941 =  (int32_t)0; i4941 <  (int32_t)960; i4941++){
Arr4DIdxRowM(tmp2036, (int32_t)1, (int32_t)960, (int32_t)7, (int32_t)7,i4940,i4941,i4942,i4943) = Arr4DIdxRowM(tmp2034, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i4936,i4937,i4938,i4939);
i4939 = (i4939 +  (int64_t)1);
if ((i4939 ==  (int64_t)960)) {
i4939 =  (int64_t)0;
i4938 = (i4938 +  (int64_t)1);
if ((i4938 ==  (int64_t)7)) {
i4938 =  (int64_t)0;
i4937 = (i4937 +  (int64_t)1);
if ((i4937 ==  (int64_t)7)) {
i4937 =  (int64_t)0;
i4936 = (i4936 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2034);

uint64_t* tmp2038 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960);

int64_t i4951;

int64_t i4950;

int64_t i4949;

int64_t i4948;

int64_t i4947;

int64_t i4946;

int64_t i4945;

int64_t i4944;
i4944 =  (int64_t)0;
i4945 =  (int64_t)0;
i4946 =  (int64_t)0;
i4947 =  (int64_t)0;
for (uint32_t i4948 =  (int32_t)0; i4948 <  (int32_t)1; i4948++){
for (uint32_t i4951 =  (int32_t)0; i4951 <  (int32_t)960; i4951++){
for (uint32_t i4949 =  (int32_t)0; i4949 <  (int32_t)7; i4949++){
for (uint32_t i4950 =  (int32_t)0; i4950 <  (int32_t)7; i4950++){
Arr4DIdxRowM(tmp2038, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i4948,i4949,i4950,i4951) = Arr4DIdxRowM(tmp2031, (int32_t)1, (int32_t)960, (int32_t)7, (int32_t)7,i4944,i4945,i4946,i4947);
i4947 = (i4947 +  (int64_t)1);
if ((i4947 ==  (int64_t)7)) {
i4947 =  (int64_t)0;
i4946 = (i4946 +  (int64_t)1);
if ((i4946 ==  (int64_t)7)) {
i4946 =  (int64_t)0;
i4945 = (i4945 +  (int64_t)1);
if ((i4945 ==  (int64_t)960)) {
i4945 =  (int64_t)0;
i4944 = (i4944 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)960,  (int32_t)7,  (int32_t)7, tmp2031);

uint64_t* tmp2040 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960);

int64_t i4959;

int64_t i4958;

int64_t i4957;

int64_t i4956;

int64_t i4955;

int64_t i4954;

int64_t i4953;

int64_t i4952;
i4952 =  (int64_t)0;
i4953 =  (int64_t)0;
i4954 =  (int64_t)0;
i4955 =  (int64_t)0;
for (uint32_t i4956 =  (int32_t)0; i4956 <  (int32_t)1; i4956++){
for (uint32_t i4959 =  (int32_t)0; i4959 <  (int32_t)960; i4959++){
for (uint32_t i4957 =  (int32_t)0; i4957 <  (int32_t)7; i4957++){
for (uint32_t i4958 =  (int32_t)0; i4958 <  (int32_t)7; i4958++){
Arr4DIdxRowM(tmp2040, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i4956,i4957,i4958,i4959) = Arr4DIdxRowM(tmp2036, (int32_t)1, (int32_t)960, (int32_t)7, (int32_t)7,i4952,i4953,i4954,i4955);
i4955 = (i4955 +  (int64_t)1);
if ((i4955 ==  (int64_t)7)) {
i4955 =  (int64_t)0;
i4954 = (i4954 +  (int64_t)1);
if ((i4954 ==  (int64_t)7)) {
i4954 =  (int64_t)0;
i4953 = (i4953 +  (int64_t)1);
if ((i4953 ==  (int64_t)960)) {
i4953 =  (int64_t)0;
i4952 = (i4952 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)960,  (int32_t)7,  (int32_t)7, tmp2036);
ScaleDown4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2038,  (int32_t)23);

uint64_t* tmp2042 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960);

uint64_t* tmp2043 = make_array<uint64_t>( (int32_t)47040);

uint64_t* tmp2044 = make_array<uint64_t>( (int32_t)47040);

uint64_t* tmp2045 = make_array<uint64_t>( (int32_t)47040);

int32_t tmp2046;
for (uint32_t i4960 =  (int32_t)0; i4960 <  (int32_t)1; i4960++){
for (uint32_t i4961 =  (int32_t)0; i4961 <  (int32_t)7; i4961++){
for (uint32_t i4962 =  (int32_t)0; i4962 <  (int32_t)7; i4962++){
for (uint32_t i4963 =  (int32_t)0; i4963 <  (int32_t)960; i4963++){
tmp2046 = (((( (int32_t)0 + (i4960 *  (int32_t)47040)) + (i4961 *  (int32_t)6720)) + (i4962 *  (int32_t)960)) + (i4963 *  (int32_t)1));
Arr1DIdxRowM(tmp2043, (int32_t)47040,tmp2046) = Arr4DIdxRowM(tmp2038, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i4960,i4961,i4962,i4963);
Arr1DIdxRowM(tmp2044, (int32_t)47040,tmp2046) = Arr4DIdxRowM(tmp2040, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i4960,i4961,i4962,i4963);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)47040, tmp2043, tmp2044, tmp2045);
ClearMemSecret1( (int32_t)47040, tmp2043);
ClearMemSecret1( (int32_t)47040, tmp2044);
for (uint32_t i4960 =  (int32_t)0; i4960 <  (int32_t)1; i4960++){
for (uint32_t i4961 =  (int32_t)0; i4961 <  (int32_t)7; i4961++){
for (uint32_t i4962 =  (int32_t)0; i4962 <  (int32_t)7; i4962++){
for (uint32_t i4963 =  (int32_t)0; i4963 <  (int32_t)960; i4963++){
tmp2046 = (((( (int32_t)0 + (i4960 *  (int32_t)47040)) + (i4961 *  (int32_t)6720)) + (i4962 *  (int32_t)960)) + (i4963 *  (int32_t)1));
Arr4DIdxRowM(tmp2042, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i4960,i4961,i4962,i4963) = Arr1DIdxRowM(tmp2045, (int32_t)47040,tmp2046);
}
}
}
}
ClearMemSecret1( (int32_t)47040, tmp2045);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2040);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2038);

uint64_t* tmp2049 = make_array<uint64_t>( (int32_t)1,  (int32_t)960,  (int32_t)7,  (int32_t)7);

int64_t i4971;

int64_t i4970;

int64_t i4969;

int64_t i4968;

int64_t i4967;

int64_t i4966;

int64_t i4965;

int64_t i4964;
i4964 =  (int64_t)0;
i4965 =  (int64_t)0;
i4966 =  (int64_t)0;
i4967 =  (int64_t)0;
for (uint32_t i4968 =  (int32_t)0; i4968 <  (int32_t)1; i4968++){
for (uint32_t i4970 =  (int32_t)0; i4970 <  (int32_t)7; i4970++){
for (uint32_t i4971 =  (int32_t)0; i4971 <  (int32_t)7; i4971++){
for (uint32_t i4969 =  (int32_t)0; i4969 <  (int32_t)960; i4969++){
Arr4DIdxRowM(tmp2049, (int32_t)1, (int32_t)960, (int32_t)7, (int32_t)7,i4968,i4969,i4970,i4971) = Arr4DIdxRowM(tmp2042, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i4964,i4965,i4966,i4967);
i4967 = (i4967 +  (int64_t)1);
if ((i4967 ==  (int64_t)960)) {
i4967 =  (int64_t)0;
i4966 = (i4966 +  (int64_t)1);
if ((i4966 ==  (int64_t)7)) {
i4966 =  (int64_t)0;
i4965 = (i4965 +  (int64_t)1);
if ((i4965 ==  (int64_t)7)) {
i4965 =  (int64_t)0;
i4964 = (i4964 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2042);

uint64_t* tmp2051 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960);

int64_t i4979;

int64_t i4978;

int64_t i4977;

int64_t i4976;

int64_t i4975;

int64_t i4974;

int64_t i4973;

int64_t i4972;
i4972 =  (int64_t)0;
i4973 =  (int64_t)0;
i4974 =  (int64_t)0;
i4975 =  (int64_t)0;
for (uint32_t i4976 =  (int32_t)0; i4976 <  (int32_t)1; i4976++){
for (uint32_t i4979 =  (int32_t)0; i4979 <  (int32_t)960; i4979++){
for (uint32_t i4977 =  (int32_t)0; i4977 <  (int32_t)7; i4977++){
for (uint32_t i4978 =  (int32_t)0; i4978 <  (int32_t)7; i4978++){
Arr4DIdxRowM(tmp2051, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i4976,i4977,i4978,i4979) = Arr4DIdxRowM(tmp2049, (int32_t)1, (int32_t)960, (int32_t)7, (int32_t)7,i4972,i4973,i4974,i4975);
i4975 = (i4975 +  (int64_t)1);
if ((i4975 ==  (int64_t)7)) {
i4975 =  (int64_t)0;
i4974 = (i4974 +  (int64_t)1);
if ((i4974 ==  (int64_t)7)) {
i4974 =  (int64_t)0;
i4973 = (i4973 +  (int64_t)1);
if ((i4973 ==  (int64_t)960)) {
i4973 =  (int64_t)0;
i4972 = (i4972 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp2052 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)960);
AvgPool( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)960,  (int32_t)7,  (int32_t)7,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2051, tmp2052);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2051);

uint64_t* tmp2054 = make_array<uint64_t>( (int32_t)1,  (int32_t)960,  (int32_t)1,  (int32_t)1);

int64_t i4987;

int64_t i4986;

int64_t i4985;

int64_t i4984;

int64_t i4983;

int64_t i4982;

int64_t i4981;

int64_t i4980;
i4980 =  (int64_t)0;
i4981 =  (int64_t)0;
i4982 =  (int64_t)0;
i4983 =  (int64_t)0;
for (uint32_t i4984 =  (int32_t)0; i4984 <  (int32_t)1; i4984++){
for (uint32_t i4986 =  (int32_t)0; i4986 <  (int32_t)1; i4986++){
for (uint32_t i4987 =  (int32_t)0; i4987 <  (int32_t)1; i4987++){
for (uint32_t i4985 =  (int32_t)0; i4985 <  (int32_t)960; i4985++){
Arr4DIdxRowM(tmp2054, (int32_t)1, (int32_t)960, (int32_t)1, (int32_t)1,i4984,i4985,i4986,i4987) = Arr4DIdxRowM(tmp2052, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)960,i4980,i4981,i4982,i4983);
i4983 = (i4983 +  (int64_t)1);
if ((i4983 ==  (int64_t)960)) {
i4983 =  (int64_t)0;
i4982 = (i4982 +  (int64_t)1);
if ((i4982 ==  (int64_t)1)) {
i4982 =  (int64_t)0;
i4981 = (i4981 +  (int64_t)1);
if ((i4981 ==  (int64_t)1)) {
i4981 =  (int64_t)0;
i4980 = (i4980 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)960, tmp2052);

uint64_t* tmp2056 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)960);

int64_t i4995;

int64_t i4994;

int64_t i4993;

int64_t i4992;

int64_t i4991;

int64_t i4990;

int64_t i4989;

int64_t i4988;
i4988 =  (int64_t)0;
i4989 =  (int64_t)0;
i4990 =  (int64_t)0;
i4991 =  (int64_t)0;
for (uint32_t i4992 =  (int32_t)0; i4992 <  (int32_t)1; i4992++){
for (uint32_t i4995 =  (int32_t)0; i4995 <  (int32_t)960; i4995++){
for (uint32_t i4993 =  (int32_t)0; i4993 <  (int32_t)1; i4993++){
for (uint32_t i4994 =  (int32_t)0; i4994 <  (int32_t)1; i4994++){
Arr4DIdxRowM(tmp2056, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)960,i4992,i4993,i4994,i4995) = Arr4DIdxRowM(tmp2054, (int32_t)1, (int32_t)960, (int32_t)1, (int32_t)1,i4988,i4989,i4990,i4991);
i4991 = (i4991 +  (int64_t)1);
if ((i4991 ==  (int64_t)1)) {
i4991 =  (int64_t)0;
i4990 = (i4990 +  (int64_t)1);
if ((i4990 ==  (int64_t)1)) {
i4990 =  (int64_t)0;
i4989 = (i4989 +  (int64_t)1);
if ((i4989 ==  (int64_t)960)) {
i4989 =  (int64_t)0;
i4988 = (i4988 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)960,  (int32_t)1,  (int32_t)1, tmp2054);

uint64_t* tmp2058 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)960,  (int32_t)240);

int64_t i5003;

int64_t i5002;

int64_t i5001;

int64_t i5000;

int64_t i4999;

int64_t i4998;

int64_t i4997;

int64_t i4996;
i4996 =  (int64_t)0;
i4997 =  (int64_t)0;
i4998 =  (int64_t)0;
i4999 =  (int64_t)0;
for (uint32_t i5003 =  (int32_t)0; i5003 <  (int32_t)240; i5003++){
for (uint32_t i5002 =  (int32_t)0; i5002 <  (int32_t)960; i5002++){
for (uint32_t i5000 =  (int32_t)0; i5000 <  (int32_t)1; i5000++){
for (uint32_t i5001 =  (int32_t)0; i5001 <  (int32_t)1; i5001++){
Arr4DIdxRowM(tmp2058, (int32_t)1, (int32_t)1, (int32_t)960, (int32_t)240,i5000,i5001,i5002,i5003) = Arr4DIdxRowM(tmp105, (int32_t)240, (int32_t)960, (int32_t)1, (int32_t)1,i4996,i4997,i4998,i4999);
i4999 = (i4999 +  (int64_t)1);
if ((i4999 ==  (int64_t)1)) {
i4999 =  (int64_t)0;
i4998 = (i4998 +  (int64_t)1);
if ((i4998 ==  (int64_t)1)) {
i4998 =  (int64_t)0;
i4997 = (i4997 +  (int64_t)1);
if ((i4997 ==  (int64_t)960)) {
i4997 =  (int64_t)0;
i4996 = (i4996 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)240,  (int32_t)960,  (int32_t)1,  (int32_t)1, tmp105);

uint64_t* tmp2060 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)240);
ScaleDown4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)960, tmp2056,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)960,  (int32_t)1,  (int32_t)1,  (int32_t)240,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp2056, tmp2058, tmp2060);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)960,  (int32_t)240, tmp2058);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)960, tmp2056);

uint64_t* tmp2063 = make_array<uint64_t>( (int32_t)1,  (int32_t)240,  (int32_t)1,  (int32_t)1);

int64_t i5011;

int64_t i5010;

int64_t i5009;

int64_t i5008;

int64_t i5007;

int64_t i5006;

int64_t i5005;

int64_t i5004;
i5004 =  (int64_t)0;
i5005 =  (int64_t)0;
i5006 =  (int64_t)0;
i5007 =  (int64_t)0;
for (uint32_t i5008 =  (int32_t)0; i5008 <  (int32_t)1; i5008++){
for (uint32_t i5010 =  (int32_t)0; i5010 <  (int32_t)1; i5010++){
for (uint32_t i5011 =  (int32_t)0; i5011 <  (int32_t)1; i5011++){
for (uint32_t i5009 =  (int32_t)0; i5009 <  (int32_t)240; i5009++){
Arr4DIdxRowM(tmp2063, (int32_t)1, (int32_t)240, (int32_t)1, (int32_t)1,i5008,i5009,i5010,i5011) = Arr4DIdxRowM(tmp2060, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)240,i5004,i5005,i5006,i5007);
i5007 = (i5007 +  (int64_t)1);
if ((i5007 ==  (int64_t)240)) {
i5007 =  (int64_t)0;
i5006 = (i5006 +  (int64_t)1);
if ((i5006 ==  (int64_t)1)) {
i5006 =  (int64_t)0;
i5005 = (i5005 +  (int64_t)1);
if ((i5005 ==  (int64_t)1)) {
i5005 =  (int64_t)0;
i5004 = (i5004 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)240, tmp2060);

uint64_t* tmp2065 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)240);

int64_t i5019;

int64_t i5018;

int64_t i5017;

int64_t i5016;

int64_t i5015;

int64_t i5014;

int64_t i5013;

int64_t i5012;
i5012 =  (int64_t)0;
i5013 =  (int64_t)0;
i5014 =  (int64_t)0;
i5015 =  (int64_t)0;
for (uint32_t i5016 =  (int32_t)0; i5016 <  (int32_t)1; i5016++){
for (uint32_t i5019 =  (int32_t)0; i5019 <  (int32_t)240; i5019++){
for (uint32_t i5017 =  (int32_t)0; i5017 <  (int32_t)1; i5017++){
for (uint32_t i5018 =  (int32_t)0; i5018 <  (int32_t)1; i5018++){
Arr4DIdxRowM(tmp2065, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)240,i5016,i5017,i5018,i5019) = Arr4DIdxRowM(tmp2063, (int32_t)1, (int32_t)240, (int32_t)1, (int32_t)1,i5012,i5013,i5014,i5015);
i5015 = (i5015 +  (int64_t)1);
if ((i5015 ==  (int64_t)1)) {
i5015 =  (int64_t)0;
i5014 = (i5014 +  (int64_t)1);
if ((i5014 ==  (int64_t)1)) {
i5014 =  (int64_t)0;
i5013 = (i5013 +  (int64_t)1);
if ((i5013 ==  (int64_t)240)) {
i5013 =  (int64_t)0;
i5012 = (i5012 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)240,  (int32_t)1,  (int32_t)1, tmp2063);

uint64_t* tmp2067 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)240);
ScaleDown4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)240, tmp2065,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)240, tmp2065, tmp47, tmp48,  (int32_t)0,  (int32_t)0, tmp2067);
ClearMemSecret1( (int32_t)240, tmp47);
ClearMemSecret1( (int32_t)240, tmp48);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)240, tmp2065);

uint64_t* tmp2071 = make_array<uint64_t>( (int32_t)1,  (int32_t)240,  (int32_t)1,  (int32_t)1);

int64_t i5027;

int64_t i5026;

int64_t i5025;

int64_t i5024;

int64_t i5023;

int64_t i5022;

int64_t i5021;

int64_t i5020;
i5020 =  (int64_t)0;
i5021 =  (int64_t)0;
i5022 =  (int64_t)0;
i5023 =  (int64_t)0;
for (uint32_t i5024 =  (int32_t)0; i5024 <  (int32_t)1; i5024++){
for (uint32_t i5026 =  (int32_t)0; i5026 <  (int32_t)1; i5026++){
for (uint32_t i5027 =  (int32_t)0; i5027 <  (int32_t)1; i5027++){
for (uint32_t i5025 =  (int32_t)0; i5025 <  (int32_t)240; i5025++){
Arr4DIdxRowM(tmp2071, (int32_t)1, (int32_t)240, (int32_t)1, (int32_t)1,i5024,i5025,i5026,i5027) = Arr4DIdxRowM(tmp2067, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)240,i5020,i5021,i5022,i5023);
i5023 = (i5023 +  (int64_t)1);
if ((i5023 ==  (int64_t)240)) {
i5023 =  (int64_t)0;
i5022 = (i5022 +  (int64_t)1);
if ((i5022 ==  (int64_t)1)) {
i5022 =  (int64_t)0;
i5021 = (i5021 +  (int64_t)1);
if ((i5021 ==  (int64_t)1)) {
i5021 =  (int64_t)0;
i5020 = (i5020 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)240, tmp2067);

uint64_t* tmp2073 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)240);

int64_t i5035;

int64_t i5034;

int64_t i5033;

int64_t i5032;

int64_t i5031;

int64_t i5030;

int64_t i5029;

int64_t i5028;
i5028 =  (int64_t)0;
i5029 =  (int64_t)0;
i5030 =  (int64_t)0;
i5031 =  (int64_t)0;
for (uint32_t i5032 =  (int32_t)0; i5032 <  (int32_t)1; i5032++){
for (uint32_t i5035 =  (int32_t)0; i5035 <  (int32_t)240; i5035++){
for (uint32_t i5033 =  (int32_t)0; i5033 <  (int32_t)1; i5033++){
for (uint32_t i5034 =  (int32_t)0; i5034 <  (int32_t)1; i5034++){
Arr4DIdxRowM(tmp2073, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)240,i5032,i5033,i5034,i5035) = Arr4DIdxRowM(tmp2071, (int32_t)1, (int32_t)240, (int32_t)1, (int32_t)1,i5028,i5029,i5030,i5031);
i5031 = (i5031 +  (int64_t)1);
if ((i5031 ==  (int64_t)1)) {
i5031 =  (int64_t)0;
i5030 = (i5030 +  (int64_t)1);
if ((i5030 ==  (int64_t)1)) {
i5030 =  (int64_t)0;
i5029 = (i5029 +  (int64_t)1);
if ((i5029 ==  (int64_t)240)) {
i5029 =  (int64_t)0;
i5028 = (i5028 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)240,  (int32_t)1,  (int32_t)1, tmp2071);

uint64_t* tmp2075 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)240);
Relu4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)240, tmp2073, tmp2075,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)240, tmp2073);

uint64_t* tmp2077 = make_array<uint64_t>( (int32_t)1,  (int32_t)240,  (int32_t)1,  (int32_t)1);

int64_t i5043;

int64_t i5042;

int64_t i5041;

int64_t i5040;

int64_t i5039;

int64_t i5038;

int64_t i5037;

int64_t i5036;
i5036 =  (int64_t)0;
i5037 =  (int64_t)0;
i5038 =  (int64_t)0;
i5039 =  (int64_t)0;
for (uint32_t i5040 =  (int32_t)0; i5040 <  (int32_t)1; i5040++){
for (uint32_t i5042 =  (int32_t)0; i5042 <  (int32_t)1; i5042++){
for (uint32_t i5043 =  (int32_t)0; i5043 <  (int32_t)1; i5043++){
for (uint32_t i5041 =  (int32_t)0; i5041 <  (int32_t)240; i5041++){
Arr4DIdxRowM(tmp2077, (int32_t)1, (int32_t)240, (int32_t)1, (int32_t)1,i5040,i5041,i5042,i5043) = Arr4DIdxRowM(tmp2075, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)240,i5036,i5037,i5038,i5039);
i5039 = (i5039 +  (int64_t)1);
if ((i5039 ==  (int64_t)240)) {
i5039 =  (int64_t)0;
i5038 = (i5038 +  (int64_t)1);
if ((i5038 ==  (int64_t)1)) {
i5038 =  (int64_t)0;
i5037 = (i5037 +  (int64_t)1);
if ((i5037 ==  (int64_t)1)) {
i5037 =  (int64_t)0;
i5036 = (i5036 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)240, tmp2075);

uint64_t* tmp2079 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)240);

int64_t i5051;

int64_t i5050;

int64_t i5049;

int64_t i5048;

int64_t i5047;

int64_t i5046;

int64_t i5045;

int64_t i5044;
i5044 =  (int64_t)0;
i5045 =  (int64_t)0;
i5046 =  (int64_t)0;
i5047 =  (int64_t)0;
for (uint32_t i5048 =  (int32_t)0; i5048 <  (int32_t)1; i5048++){
for (uint32_t i5051 =  (int32_t)0; i5051 <  (int32_t)240; i5051++){
for (uint32_t i5049 =  (int32_t)0; i5049 <  (int32_t)1; i5049++){
for (uint32_t i5050 =  (int32_t)0; i5050 <  (int32_t)1; i5050++){
Arr4DIdxRowM(tmp2079, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)240,i5048,i5049,i5050,i5051) = Arr4DIdxRowM(tmp2077, (int32_t)1, (int32_t)240, (int32_t)1, (int32_t)1,i5044,i5045,i5046,i5047);
i5047 = (i5047 +  (int64_t)1);
if ((i5047 ==  (int64_t)1)) {
i5047 =  (int64_t)0;
i5046 = (i5046 +  (int64_t)1);
if ((i5046 ==  (int64_t)1)) {
i5046 =  (int64_t)0;
i5045 = (i5045 +  (int64_t)1);
if ((i5045 ==  (int64_t)240)) {
i5045 =  (int64_t)0;
i5044 = (i5044 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)240,  (int32_t)1,  (int32_t)1, tmp2077);

uint64_t* tmp2081 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)240,  (int32_t)960);

int64_t i5059;

int64_t i5058;

int64_t i5057;

int64_t i5056;

int64_t i5055;

int64_t i5054;

int64_t i5053;

int64_t i5052;
i5052 =  (int64_t)0;
i5053 =  (int64_t)0;
i5054 =  (int64_t)0;
i5055 =  (int64_t)0;
for (uint32_t i5059 =  (int32_t)0; i5059 <  (int32_t)960; i5059++){
for (uint32_t i5058 =  (int32_t)0; i5058 <  (int32_t)240; i5058++){
for (uint32_t i5056 =  (int32_t)0; i5056 <  (int32_t)1; i5056++){
for (uint32_t i5057 =  (int32_t)0; i5057 <  (int32_t)1; i5057++){
Arr4DIdxRowM(tmp2081, (int32_t)1, (int32_t)1, (int32_t)240, (int32_t)960,i5056,i5057,i5058,i5059) = Arr4DIdxRowM(tmp106, (int32_t)960, (int32_t)240, (int32_t)1, (int32_t)1,i5052,i5053,i5054,i5055);
i5055 = (i5055 +  (int64_t)1);
if ((i5055 ==  (int64_t)1)) {
i5055 =  (int64_t)0;
i5054 = (i5054 +  (int64_t)1);
if ((i5054 ==  (int64_t)1)) {
i5054 =  (int64_t)0;
i5053 = (i5053 +  (int64_t)1);
if ((i5053 ==  (int64_t)240)) {
i5053 =  (int64_t)0;
i5052 = (i5052 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)960,  (int32_t)240,  (int32_t)1,  (int32_t)1, tmp106);

uint64_t* tmp2083 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)960);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)240,  (int32_t)1,  (int32_t)1,  (int32_t)960,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp2079, tmp2081, tmp2083);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)240,  (int32_t)960, tmp2081);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)240, tmp2079);

uint64_t* tmp2086 = make_array<uint64_t>( (int32_t)1,  (int32_t)960,  (int32_t)1,  (int32_t)1);

int64_t i5067;

int64_t i5066;

int64_t i5065;

int64_t i5064;

int64_t i5063;

int64_t i5062;

int64_t i5061;

int64_t i5060;
i5060 =  (int64_t)0;
i5061 =  (int64_t)0;
i5062 =  (int64_t)0;
i5063 =  (int64_t)0;
for (uint32_t i5064 =  (int32_t)0; i5064 <  (int32_t)1; i5064++){
for (uint32_t i5066 =  (int32_t)0; i5066 <  (int32_t)1; i5066++){
for (uint32_t i5067 =  (int32_t)0; i5067 <  (int32_t)1; i5067++){
for (uint32_t i5065 =  (int32_t)0; i5065 <  (int32_t)960; i5065++){
Arr4DIdxRowM(tmp2086, (int32_t)1, (int32_t)960, (int32_t)1, (int32_t)1,i5064,i5065,i5066,i5067) = Arr4DIdxRowM(tmp2083, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)960,i5060,i5061,i5062,i5063);
i5063 = (i5063 +  (int64_t)1);
if ((i5063 ==  (int64_t)960)) {
i5063 =  (int64_t)0;
i5062 = (i5062 +  (int64_t)1);
if ((i5062 ==  (int64_t)1)) {
i5062 =  (int64_t)0;
i5061 = (i5061 +  (int64_t)1);
if ((i5061 ==  (int64_t)1)) {
i5061 =  (int64_t)0;
i5060 = (i5060 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)960, tmp2083);

uint64_t* tmp2088 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)960);

int64_t i5075;

int64_t i5074;

int64_t i5073;

int64_t i5072;

int64_t i5071;

int64_t i5070;

int64_t i5069;

int64_t i5068;
i5068 =  (int64_t)0;
i5069 =  (int64_t)0;
i5070 =  (int64_t)0;
i5071 =  (int64_t)0;
for (uint32_t i5072 =  (int32_t)0; i5072 <  (int32_t)1; i5072++){
for (uint32_t i5075 =  (int32_t)0; i5075 <  (int32_t)960; i5075++){
for (uint32_t i5073 =  (int32_t)0; i5073 <  (int32_t)1; i5073++){
for (uint32_t i5074 =  (int32_t)0; i5074 <  (int32_t)1; i5074++){
Arr4DIdxRowM(tmp2088, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)960,i5072,i5073,i5074,i5075) = Arr4DIdxRowM(tmp2086, (int32_t)1, (int32_t)960, (int32_t)1, (int32_t)1,i5068,i5069,i5070,i5071);
i5071 = (i5071 +  (int64_t)1);
if ((i5071 ==  (int64_t)1)) {
i5071 =  (int64_t)0;
i5070 = (i5070 +  (int64_t)1);
if ((i5070 ==  (int64_t)1)) {
i5070 =  (int64_t)0;
i5069 = (i5069 +  (int64_t)1);
if ((i5069 ==  (int64_t)960)) {
i5069 =  (int64_t)0;
i5068 = (i5068 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)960,  (int32_t)1,  (int32_t)1, tmp2086);

uint64_t* tmp2090 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)960);
HardSigmoid4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)960, tmp2088, tmp2090,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)960, tmp2088);

uint64_t* tmp2092 = make_array<uint64_t>( (int32_t)1,  (int32_t)960,  (int32_t)1,  (int32_t)1);

int64_t i5083;

int64_t i5082;

int64_t i5081;

int64_t i5080;

int64_t i5079;

int64_t i5078;

int64_t i5077;

int64_t i5076;
i5076 =  (int64_t)0;
i5077 =  (int64_t)0;
i5078 =  (int64_t)0;
i5079 =  (int64_t)0;
for (uint32_t i5080 =  (int32_t)0; i5080 <  (int32_t)1; i5080++){
for (uint32_t i5082 =  (int32_t)0; i5082 <  (int32_t)1; i5082++){
for (uint32_t i5083 =  (int32_t)0; i5083 <  (int32_t)1; i5083++){
for (uint32_t i5081 =  (int32_t)0; i5081 <  (int32_t)960; i5081++){
Arr4DIdxRowM(tmp2092, (int32_t)1, (int32_t)960, (int32_t)1, (int32_t)1,i5080,i5081,i5082,i5083) = Arr4DIdxRowM(tmp2090, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)960,i5076,i5077,i5078,i5079);
i5079 = (i5079 +  (int64_t)1);
if ((i5079 ==  (int64_t)960)) {
i5079 =  (int64_t)0;
i5078 = (i5078 +  (int64_t)1);
if ((i5078 ==  (int64_t)1)) {
i5078 =  (int64_t)0;
i5077 = (i5077 +  (int64_t)1);
if ((i5077 ==  (int64_t)1)) {
i5077 =  (int64_t)0;
i5076 = (i5076 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)960, tmp2090);

uint64_t* tmp2094 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960);

int64_t i5091;

int64_t i5090;

int64_t i5089;

int64_t i5088;

int64_t i5087;

int64_t i5086;

int64_t i5085;

int64_t i5084;
i5084 =  (int64_t)0;
i5085 =  (int64_t)0;
i5086 =  (int64_t)0;
i5087 =  (int64_t)0;
for (uint32_t i5088 =  (int32_t)0; i5088 <  (int32_t)1; i5088++){
for (uint32_t i5091 =  (int32_t)0; i5091 <  (int32_t)960; i5091++){
for (uint32_t i5089 =  (int32_t)0; i5089 <  (int32_t)7; i5089++){
for (uint32_t i5090 =  (int32_t)0; i5090 <  (int32_t)7; i5090++){
Arr4DIdxRowM(tmp2094, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i5088,i5089,i5090,i5091) = Arr4DIdxRowM(tmp2049, (int32_t)1, (int32_t)960, (int32_t)7, (int32_t)7,i5084,i5085,i5086,i5087);
i5087 = (i5087 +  (int64_t)1);
if ((i5087 ==  (int64_t)7)) {
i5087 =  (int64_t)0;
i5086 = (i5086 +  (int64_t)1);
if ((i5086 ==  (int64_t)7)) {
i5086 =  (int64_t)0;
i5085 = (i5085 +  (int64_t)1);
if ((i5085 ==  (int64_t)960)) {
i5085 =  (int64_t)0;
i5084 = (i5084 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)960,  (int32_t)7,  (int32_t)7, tmp2049);

uint64_t* tmp2096 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)960);

int64_t i5099;

int64_t i5098;

int64_t i5097;

int64_t i5096;

int64_t i5095;

int64_t i5094;

int64_t i5093;

int64_t i5092;
i5092 =  (int64_t)0;
i5093 =  (int64_t)0;
i5094 =  (int64_t)0;
i5095 =  (int64_t)0;
for (uint32_t i5096 =  (int32_t)0; i5096 <  (int32_t)1; i5096++){
for (uint32_t i5099 =  (int32_t)0; i5099 <  (int32_t)960; i5099++){
for (uint32_t i5097 =  (int32_t)0; i5097 <  (int32_t)1; i5097++){
for (uint32_t i5098 =  (int32_t)0; i5098 <  (int32_t)1; i5098++){
Arr4DIdxRowM(tmp2096, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)960,i5096,i5097,i5098,i5099) = Arr4DIdxRowM(tmp2092, (int32_t)1, (int32_t)960, (int32_t)1, (int32_t)1,i5092,i5093,i5094,i5095);
i5095 = (i5095 +  (int64_t)1);
if ((i5095 ==  (int64_t)1)) {
i5095 =  (int64_t)0;
i5094 = (i5094 +  (int64_t)1);
if ((i5094 ==  (int64_t)1)) {
i5094 =  (int64_t)0;
i5093 = (i5093 +  (int64_t)1);
if ((i5093 ==  (int64_t)960)) {
i5093 =  (int64_t)0;
i5092 = (i5092 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)960,  (int32_t)1,  (int32_t)1, tmp2092);
ScaleDown4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2094,  (int32_t)23);

uint64_t* tmp2098 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960);

uint64_t* tmp2099 = make_array<uint64_t>( (int32_t)47040);

uint64_t* tmp2100 = make_array<uint64_t>( (int32_t)47040);

uint64_t* tmp2101 = make_array<uint64_t>( (int32_t)47040);

int32_t tmp2102;
for (uint32_t i5100 =  (int32_t)0; i5100 <  (int32_t)1; i5100++){
for (uint32_t i5101 =  (int32_t)0; i5101 <  (int32_t)7; i5101++){
for (uint32_t i5102 =  (int32_t)0; i5102 <  (int32_t)7; i5102++){
for (uint32_t i5103 =  (int32_t)0; i5103 <  (int32_t)960; i5103++){
tmp2102 = (((( (int32_t)0 + (i5100 *  (int32_t)47040)) + (i5101 *  (int32_t)6720)) + (i5102 *  (int32_t)960)) + (i5103 *  (int32_t)1));
Arr1DIdxRowM(tmp2099, (int32_t)47040,tmp2102) = Arr4DIdxRowM(tmp2094, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i5100,i5101,i5102,i5103);
Arr1DIdxRowM(tmp2100, (int32_t)47040,tmp2102) = Arr4DIdxRowM(tmp2096, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)960,i5100, (int32_t)0, (int32_t)0,i5103);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)47040, tmp2099, tmp2100, tmp2101);
ClearMemSecret1( (int32_t)47040, tmp2099);
ClearMemSecret1( (int32_t)47040, tmp2100);
for (uint32_t i5100 =  (int32_t)0; i5100 <  (int32_t)1; i5100++){
for (uint32_t i5101 =  (int32_t)0; i5101 <  (int32_t)7; i5101++){
for (uint32_t i5102 =  (int32_t)0; i5102 <  (int32_t)7; i5102++){
for (uint32_t i5103 =  (int32_t)0; i5103 <  (int32_t)960; i5103++){
tmp2102 = (((( (int32_t)0 + (i5100 *  (int32_t)47040)) + (i5101 *  (int32_t)6720)) + (i5102 *  (int32_t)960)) + (i5103 *  (int32_t)1));
Arr4DIdxRowM(tmp2098, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i5100,i5101,i5102,i5103) = Arr1DIdxRowM(tmp2101, (int32_t)47040,tmp2102);
}
}
}
}
ClearMemSecret1( (int32_t)47040, tmp2101);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)960, tmp2096);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2094);

uint64_t* tmp2105 = make_array<uint64_t>( (int32_t)1,  (int32_t)960,  (int32_t)7,  (int32_t)7);

int64_t i5111;

int64_t i5110;

int64_t i5109;

int64_t i5108;

int64_t i5107;

int64_t i5106;

int64_t i5105;

int64_t i5104;
i5104 =  (int64_t)0;
i5105 =  (int64_t)0;
i5106 =  (int64_t)0;
i5107 =  (int64_t)0;
for (uint32_t i5108 =  (int32_t)0; i5108 <  (int32_t)1; i5108++){
for (uint32_t i5110 =  (int32_t)0; i5110 <  (int32_t)7; i5110++){
for (uint32_t i5111 =  (int32_t)0; i5111 <  (int32_t)7; i5111++){
for (uint32_t i5109 =  (int32_t)0; i5109 <  (int32_t)960; i5109++){
Arr4DIdxRowM(tmp2105, (int32_t)1, (int32_t)960, (int32_t)7, (int32_t)7,i5108,i5109,i5110,i5111) = Arr4DIdxRowM(tmp2098, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i5104,i5105,i5106,i5107);
i5107 = (i5107 +  (int64_t)1);
if ((i5107 ==  (int64_t)960)) {
i5107 =  (int64_t)0;
i5106 = (i5106 +  (int64_t)1);
if ((i5106 ==  (int64_t)7)) {
i5106 =  (int64_t)0;
i5105 = (i5105 +  (int64_t)1);
if ((i5105 ==  (int64_t)7)) {
i5105 =  (int64_t)0;
i5104 = (i5104 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2098);

uint64_t* tmp2107 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960);

int64_t i5119;

int64_t i5118;

int64_t i5117;

int64_t i5116;

int64_t i5115;

int64_t i5114;

int64_t i5113;

int64_t i5112;
i5112 =  (int64_t)0;
i5113 =  (int64_t)0;
i5114 =  (int64_t)0;
i5115 =  (int64_t)0;
for (uint32_t i5116 =  (int32_t)0; i5116 <  (int32_t)1; i5116++){
for (uint32_t i5119 =  (int32_t)0; i5119 <  (int32_t)960; i5119++){
for (uint32_t i5117 =  (int32_t)0; i5117 <  (int32_t)7; i5117++){
for (uint32_t i5118 =  (int32_t)0; i5118 <  (int32_t)7; i5118++){
Arr4DIdxRowM(tmp2107, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i5116,i5117,i5118,i5119) = Arr4DIdxRowM(tmp2105, (int32_t)1, (int32_t)960, (int32_t)7, (int32_t)7,i5112,i5113,i5114,i5115);
i5115 = (i5115 +  (int64_t)1);
if ((i5115 ==  (int64_t)7)) {
i5115 =  (int64_t)0;
i5114 = (i5114 +  (int64_t)1);
if ((i5114 ==  (int64_t)7)) {
i5114 =  (int64_t)0;
i5113 = (i5113 +  (int64_t)1);
if ((i5113 ==  (int64_t)960)) {
i5113 =  (int64_t)0;
i5112 = (i5112 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)960,  (int32_t)7,  (int32_t)7, tmp2105);

uint64_t* tmp2109 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)960,  (int32_t)160);

int64_t i5127;

int64_t i5126;

int64_t i5125;

int64_t i5124;

int64_t i5123;

int64_t i5122;

int64_t i5121;

int64_t i5120;
i5120 =  (int64_t)0;
i5121 =  (int64_t)0;
i5122 =  (int64_t)0;
i5123 =  (int64_t)0;
for (uint32_t i5127 =  (int32_t)0; i5127 <  (int32_t)160; i5127++){
for (uint32_t i5126 =  (int32_t)0; i5126 <  (int32_t)960; i5126++){
for (uint32_t i5124 =  (int32_t)0; i5124 <  (int32_t)1; i5124++){
for (uint32_t i5125 =  (int32_t)0; i5125 <  (int32_t)1; i5125++){
Arr4DIdxRowM(tmp2109, (int32_t)1, (int32_t)1, (int32_t)960, (int32_t)160,i5124,i5125,i5126,i5127) = Arr4DIdxRowM(tmp107, (int32_t)160, (int32_t)960, (int32_t)1, (int32_t)1,i5120,i5121,i5122,i5123);
i5123 = (i5123 +  (int64_t)1);
if ((i5123 ==  (int64_t)1)) {
i5123 =  (int64_t)0;
i5122 = (i5122 +  (int64_t)1);
if ((i5122 ==  (int64_t)1)) {
i5122 =  (int64_t)0;
i5121 = (i5121 +  (int64_t)1);
if ((i5121 ==  (int64_t)960)) {
i5121 =  (int64_t)0;
i5120 = (i5120 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)160,  (int32_t)960,  (int32_t)1,  (int32_t)1, tmp107);

uint64_t* tmp2111 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);
ScaleDown4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2107,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960,  (int32_t)1,  (int32_t)1,  (int32_t)160,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp2107, tmp2109, tmp2111);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2107);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)960,  (int32_t)160, tmp2109);

uint64_t* tmp2114 = make_array<uint64_t>( (int32_t)1,  (int32_t)160,  (int32_t)7,  (int32_t)7);

int64_t i5135;

int64_t i5134;

int64_t i5133;

int64_t i5132;

int64_t i5131;

int64_t i5130;

int64_t i5129;

int64_t i5128;
i5128 =  (int64_t)0;
i5129 =  (int64_t)0;
i5130 =  (int64_t)0;
i5131 =  (int64_t)0;
for (uint32_t i5132 =  (int32_t)0; i5132 <  (int32_t)1; i5132++){
for (uint32_t i5134 =  (int32_t)0; i5134 <  (int32_t)7; i5134++){
for (uint32_t i5135 =  (int32_t)0; i5135 <  (int32_t)7; i5135++){
for (uint32_t i5133 =  (int32_t)0; i5133 <  (int32_t)160; i5133++){
Arr4DIdxRowM(tmp2114, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i5132,i5133,i5134,i5135) = Arr4DIdxRowM(tmp2111, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i5128,i5129,i5130,i5131);
i5131 = (i5131 +  (int64_t)1);
if ((i5131 ==  (int64_t)160)) {
i5131 =  (int64_t)0;
i5130 = (i5130 +  (int64_t)1);
if ((i5130 ==  (int64_t)7)) {
i5130 =  (int64_t)0;
i5129 = (i5129 +  (int64_t)1);
if ((i5129 ==  (int64_t)7)) {
i5129 =  (int64_t)0;
i5128 = (i5128 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp2111);

uint64_t* tmp2116 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);

int64_t i5143;

int64_t i5142;

int64_t i5141;

int64_t i5140;

int64_t i5139;

int64_t i5138;

int64_t i5137;

int64_t i5136;
i5136 =  (int64_t)0;
i5137 =  (int64_t)0;
i5138 =  (int64_t)0;
i5139 =  (int64_t)0;
for (uint32_t i5140 =  (int32_t)0; i5140 <  (int32_t)1; i5140++){
for (uint32_t i5143 =  (int32_t)0; i5143 <  (int32_t)160; i5143++){
for (uint32_t i5141 =  (int32_t)0; i5141 <  (int32_t)7; i5141++){
for (uint32_t i5142 =  (int32_t)0; i5142 <  (int32_t)7; i5142++){
Arr4DIdxRowM(tmp2116, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i5140,i5141,i5142,i5143) = Arr4DIdxRowM(tmp2114, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i5136,i5137,i5138,i5139);
i5139 = (i5139 +  (int64_t)1);
if ((i5139 ==  (int64_t)7)) {
i5139 =  (int64_t)0;
i5138 = (i5138 +  (int64_t)1);
if ((i5138 ==  (int64_t)7)) {
i5138 =  (int64_t)0;
i5137 = (i5137 +  (int64_t)1);
if ((i5137 ==  (int64_t)160)) {
i5137 =  (int64_t)0;
i5136 = (i5136 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)160,  (int32_t)7,  (int32_t)7, tmp2114);

uint64_t* tmp2118 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);
ScaleDown4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp2116,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp2116, tmp92, tmp93,  (int32_t)0,  (int32_t)0, tmp2118);
ClearMemSecret1( (int32_t)160, tmp93);
ClearMemSecret1( (int32_t)160, tmp92);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp2116);

uint64_t* tmp2122 = make_array<uint64_t>( (int32_t)1,  (int32_t)160,  (int32_t)7,  (int32_t)7);

int64_t i5151;

int64_t i5150;

int64_t i5149;

int64_t i5148;

int64_t i5147;

int64_t i5146;

int64_t i5145;

int64_t i5144;
i5144 =  (int64_t)0;
i5145 =  (int64_t)0;
i5146 =  (int64_t)0;
i5147 =  (int64_t)0;
for (uint32_t i5148 =  (int32_t)0; i5148 <  (int32_t)1; i5148++){
for (uint32_t i5150 =  (int32_t)0; i5150 <  (int32_t)7; i5150++){
for (uint32_t i5151 =  (int32_t)0; i5151 <  (int32_t)7; i5151++){
for (uint32_t i5149 =  (int32_t)0; i5149 <  (int32_t)160; i5149++){
Arr4DIdxRowM(tmp2122, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i5148,i5149,i5150,i5151) = Arr4DIdxRowM(tmp2118, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i5144,i5145,i5146,i5147);
i5147 = (i5147 +  (int64_t)1);
if ((i5147 ==  (int64_t)160)) {
i5147 =  (int64_t)0;
i5146 = (i5146 +  (int64_t)1);
if ((i5146 ==  (int64_t)7)) {
i5146 =  (int64_t)0;
i5145 = (i5145 +  (int64_t)1);
if ((i5145 ==  (int64_t)7)) {
i5145 =  (int64_t)0;
i5144 = (i5144 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp2118);

uint64_t* tmp2124 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);

int64_t i5159;

int64_t i5158;

int64_t i5157;

int64_t i5156;

int64_t i5155;

int64_t i5154;

int64_t i5153;

int64_t i5152;
i5152 =  (int64_t)0;
i5153 =  (int64_t)0;
i5154 =  (int64_t)0;
i5155 =  (int64_t)0;
for (uint32_t i5156 =  (int32_t)0; i5156 <  (int32_t)1; i5156++){
for (uint32_t i5159 =  (int32_t)0; i5159 <  (int32_t)160; i5159++){
for (uint32_t i5157 =  (int32_t)0; i5157 <  (int32_t)7; i5157++){
for (uint32_t i5158 =  (int32_t)0; i5158 <  (int32_t)7; i5158++){
Arr4DIdxRowM(tmp2124, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i5156,i5157,i5158,i5159) = Arr4DIdxRowM(tmp2122, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i5152,i5153,i5154,i5155);
i5155 = (i5155 +  (int64_t)1);
if ((i5155 ==  (int64_t)7)) {
i5155 =  (int64_t)0;
i5154 = (i5154 +  (int64_t)1);
if ((i5154 ==  (int64_t)7)) {
i5154 =  (int64_t)0;
i5153 = (i5153 +  (int64_t)1);
if ((i5153 ==  (int64_t)160)) {
i5153 =  (int64_t)0;
i5152 = (i5152 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)160,  (int32_t)7,  (int32_t)7, tmp2122);

uint64_t* tmp2126 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);

int64_t i5167;

int64_t i5166;

int64_t i5165;

int64_t i5164;

int64_t i5163;

int64_t i5162;

int64_t i5161;

int64_t i5160;
i5160 =  (int64_t)0;
i5161 =  (int64_t)0;
i5162 =  (int64_t)0;
i5163 =  (int64_t)0;
for (uint32_t i5164 =  (int32_t)0; i5164 <  (int32_t)1; i5164++){
for (uint32_t i5167 =  (int32_t)0; i5167 <  (int32_t)160; i5167++){
for (uint32_t i5165 =  (int32_t)0; i5165 <  (int32_t)7; i5165++){
for (uint32_t i5166 =  (int32_t)0; i5166 <  (int32_t)7; i5166++){
Arr4DIdxRowM(tmp2126, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i5164,i5165,i5166,i5167) = Arr4DIdxRowM(tmp1984, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i5160,i5161,i5162,i5163);
i5163 = (i5163 +  (int64_t)1);
if ((i5163 ==  (int64_t)7)) {
i5163 =  (int64_t)0;
i5162 = (i5162 +  (int64_t)1);
if ((i5162 ==  (int64_t)7)) {
i5162 =  (int64_t)0;
i5161 = (i5161 +  (int64_t)1);
if ((i5161 ==  (int64_t)160)) {
i5161 =  (int64_t)0;
i5160 = (i5160 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)160,  (int32_t)7,  (int32_t)7, tmp1984);

uint64_t* tmp2128 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);
for (uint32_t i0 =  (int32_t)0; i0 <  (int32_t)1; i0++){
for (uint32_t i1 =  (int32_t)0; i1 <  (int32_t)7; i1++){
for (uint32_t i2 =  (int32_t)0; i2 <  (int32_t)7; i2++){
for (uint32_t i3 =  (int32_t)0; i3 <  (int32_t)160; i3++){
Arr4DIdxRowM(tmp2128, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i0,i1,i2,i3) = SecretAdd(Arr4DIdxRowM(tmp2124, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i0,i1,i2,i3), Arr4DIdxRowM(tmp2126, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i0,i1,i2,i3));
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp2126);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp2124);

uint64_t* tmp2131 = make_array<uint64_t>( (int32_t)1,  (int32_t)160,  (int32_t)7,  (int32_t)7);

int64_t i5175;

int64_t i5174;

int64_t i5173;

int64_t i5172;

int64_t i5171;

int64_t i5170;

int64_t i5169;

int64_t i5168;
i5168 =  (int64_t)0;
i5169 =  (int64_t)0;
i5170 =  (int64_t)0;
i5171 =  (int64_t)0;
for (uint32_t i5172 =  (int32_t)0; i5172 <  (int32_t)1; i5172++){
for (uint32_t i5174 =  (int32_t)0; i5174 <  (int32_t)7; i5174++){
for (uint32_t i5175 =  (int32_t)0; i5175 <  (int32_t)7; i5175++){
for (uint32_t i5173 =  (int32_t)0; i5173 <  (int32_t)160; i5173++){
Arr4DIdxRowM(tmp2131, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i5172,i5173,i5174,i5175) = Arr4DIdxRowM(tmp2128, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i5168,i5169,i5170,i5171);
i5171 = (i5171 +  (int64_t)1);
if ((i5171 ==  (int64_t)160)) {
i5171 =  (int64_t)0;
i5170 = (i5170 +  (int64_t)1);
if ((i5170 ==  (int64_t)7)) {
i5170 =  (int64_t)0;
i5169 = (i5169 +  (int64_t)1);
if ((i5169 ==  (int64_t)7)) {
i5169 =  (int64_t)0;
i5168 = (i5168 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp2128);

uint64_t* tmp2133 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);

int64_t i5183;

int64_t i5182;

int64_t i5181;

int64_t i5180;

int64_t i5179;

int64_t i5178;

int64_t i5177;

int64_t i5176;
i5176 =  (int64_t)0;
i5177 =  (int64_t)0;
i5178 =  (int64_t)0;
i5179 =  (int64_t)0;
for (uint32_t i5180 =  (int32_t)0; i5180 <  (int32_t)1; i5180++){
for (uint32_t i5183 =  (int32_t)0; i5183 <  (int32_t)160; i5183++){
for (uint32_t i5181 =  (int32_t)0; i5181 <  (int32_t)7; i5181++){
for (uint32_t i5182 =  (int32_t)0; i5182 <  (int32_t)7; i5182++){
Arr4DIdxRowM(tmp2133, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i5180,i5181,i5182,i5183) = Arr4DIdxRowM(tmp2131, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i5176,i5177,i5178,i5179);
i5179 = (i5179 +  (int64_t)1);
if ((i5179 ==  (int64_t)7)) {
i5179 =  (int64_t)0;
i5178 = (i5178 +  (int64_t)1);
if ((i5178 ==  (int64_t)7)) {
i5178 =  (int64_t)0;
i5177 = (i5177 +  (int64_t)1);
if ((i5177 ==  (int64_t)160)) {
i5177 =  (int64_t)0;
i5176 = (i5176 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp2134 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);
HardSigmoid4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp2133, tmp2134,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp2133);

uint64_t* tmp2136 = make_array<uint64_t>( (int32_t)1,  (int32_t)160,  (int32_t)7,  (int32_t)7);

int64_t i5191;

int64_t i5190;

int64_t i5189;

int64_t i5188;

int64_t i5187;

int64_t i5186;

int64_t i5185;

int64_t i5184;
i5184 =  (int64_t)0;
i5185 =  (int64_t)0;
i5186 =  (int64_t)0;
i5187 =  (int64_t)0;
for (uint32_t i5188 =  (int32_t)0; i5188 <  (int32_t)1; i5188++){
for (uint32_t i5190 =  (int32_t)0; i5190 <  (int32_t)7; i5190++){
for (uint32_t i5191 =  (int32_t)0; i5191 <  (int32_t)7; i5191++){
for (uint32_t i5189 =  (int32_t)0; i5189 <  (int32_t)160; i5189++){
Arr4DIdxRowM(tmp2136, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i5188,i5189,i5190,i5191) = Arr4DIdxRowM(tmp2134, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i5184,i5185,i5186,i5187);
i5187 = (i5187 +  (int64_t)1);
if ((i5187 ==  (int64_t)160)) {
i5187 =  (int64_t)0;
i5186 = (i5186 +  (int64_t)1);
if ((i5186 ==  (int64_t)7)) {
i5186 =  (int64_t)0;
i5185 = (i5185 +  (int64_t)1);
if ((i5185 ==  (int64_t)7)) {
i5185 =  (int64_t)0;
i5184 = (i5184 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp2134);

uint64_t* tmp2138 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);

int64_t i5199;

int64_t i5198;

int64_t i5197;

int64_t i5196;

int64_t i5195;

int64_t i5194;

int64_t i5193;

int64_t i5192;
i5192 =  (int64_t)0;
i5193 =  (int64_t)0;
i5194 =  (int64_t)0;
i5195 =  (int64_t)0;
for (uint32_t i5196 =  (int32_t)0; i5196 <  (int32_t)1; i5196++){
for (uint32_t i5199 =  (int32_t)0; i5199 <  (int32_t)160; i5199++){
for (uint32_t i5197 =  (int32_t)0; i5197 <  (int32_t)7; i5197++){
for (uint32_t i5198 =  (int32_t)0; i5198 <  (int32_t)7; i5198++){
Arr4DIdxRowM(tmp2138, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i5196,i5197,i5198,i5199) = Arr4DIdxRowM(tmp2131, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i5192,i5193,i5194,i5195);
i5195 = (i5195 +  (int64_t)1);
if ((i5195 ==  (int64_t)7)) {
i5195 =  (int64_t)0;
i5194 = (i5194 +  (int64_t)1);
if ((i5194 ==  (int64_t)7)) {
i5194 =  (int64_t)0;
i5193 = (i5193 +  (int64_t)1);
if ((i5193 ==  (int64_t)160)) {
i5193 =  (int64_t)0;
i5192 = (i5192 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)160,  (int32_t)7,  (int32_t)7, tmp2131);

uint64_t* tmp2140 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);

int64_t i5207;

int64_t i5206;

int64_t i5205;

int64_t i5204;

int64_t i5203;

int64_t i5202;

int64_t i5201;

int64_t i5200;
i5200 =  (int64_t)0;
i5201 =  (int64_t)0;
i5202 =  (int64_t)0;
i5203 =  (int64_t)0;
for (uint32_t i5204 =  (int32_t)0; i5204 <  (int32_t)1; i5204++){
for (uint32_t i5207 =  (int32_t)0; i5207 <  (int32_t)160; i5207++){
for (uint32_t i5205 =  (int32_t)0; i5205 <  (int32_t)7; i5205++){
for (uint32_t i5206 =  (int32_t)0; i5206 <  (int32_t)7; i5206++){
Arr4DIdxRowM(tmp2140, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i5204,i5205,i5206,i5207) = Arr4DIdxRowM(tmp2136, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i5200,i5201,i5202,i5203);
i5203 = (i5203 +  (int64_t)1);
if ((i5203 ==  (int64_t)7)) {
i5203 =  (int64_t)0;
i5202 = (i5202 +  (int64_t)1);
if ((i5202 ==  (int64_t)7)) {
i5202 =  (int64_t)0;
i5201 = (i5201 +  (int64_t)1);
if ((i5201 ==  (int64_t)160)) {
i5201 =  (int64_t)0;
i5200 = (i5200 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)160,  (int32_t)7,  (int32_t)7, tmp2136);
ScaleDown4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp2138,  (int32_t)23);

uint64_t* tmp2142 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);

uint64_t* tmp2143 = make_array<uint64_t>( (int32_t)7840);

uint64_t* tmp2144 = make_array<uint64_t>( (int32_t)7840);

uint64_t* tmp2145 = make_array<uint64_t>( (int32_t)7840);

int32_t tmp2146;
for (uint32_t i5208 =  (int32_t)0; i5208 <  (int32_t)1; i5208++){
for (uint32_t i5209 =  (int32_t)0; i5209 <  (int32_t)7; i5209++){
for (uint32_t i5210 =  (int32_t)0; i5210 <  (int32_t)7; i5210++){
for (uint32_t i5211 =  (int32_t)0; i5211 <  (int32_t)160; i5211++){
tmp2146 = (((( (int32_t)0 + (i5208 *  (int32_t)7840)) + (i5209 *  (int32_t)1120)) + (i5210 *  (int32_t)160)) + (i5211 *  (int32_t)1));
Arr1DIdxRowM(tmp2143, (int32_t)7840,tmp2146) = Arr4DIdxRowM(tmp2138, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i5208,i5209,i5210,i5211);
Arr1DIdxRowM(tmp2144, (int32_t)7840,tmp2146) = Arr4DIdxRowM(tmp2140, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i5208,i5209,i5210,i5211);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)7840, tmp2143, tmp2144, tmp2145);
ClearMemSecret1( (int32_t)7840, tmp2143);
ClearMemSecret1( (int32_t)7840, tmp2144);
for (uint32_t i5208 =  (int32_t)0; i5208 <  (int32_t)1; i5208++){
for (uint32_t i5209 =  (int32_t)0; i5209 <  (int32_t)7; i5209++){
for (uint32_t i5210 =  (int32_t)0; i5210 <  (int32_t)7; i5210++){
for (uint32_t i5211 =  (int32_t)0; i5211 <  (int32_t)160; i5211++){
tmp2146 = (((( (int32_t)0 + (i5208 *  (int32_t)7840)) + (i5209 *  (int32_t)1120)) + (i5210 *  (int32_t)160)) + (i5211 *  (int32_t)1));
Arr4DIdxRowM(tmp2142, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i5208,i5209,i5210,i5211) = Arr1DIdxRowM(tmp2145, (int32_t)7840,tmp2146);
}
}
}
}
ClearMemSecret1( (int32_t)7840, tmp2145);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp2140);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp2138);

uint64_t* tmp2149 = make_array<uint64_t>( (int32_t)1,  (int32_t)160,  (int32_t)7,  (int32_t)7);

int64_t i5219;

int64_t i5218;

int64_t i5217;

int64_t i5216;

int64_t i5215;

int64_t i5214;

int64_t i5213;

int64_t i5212;
i5212 =  (int64_t)0;
i5213 =  (int64_t)0;
i5214 =  (int64_t)0;
i5215 =  (int64_t)0;
for (uint32_t i5216 =  (int32_t)0; i5216 <  (int32_t)1; i5216++){
for (uint32_t i5218 =  (int32_t)0; i5218 <  (int32_t)7; i5218++){
for (uint32_t i5219 =  (int32_t)0; i5219 <  (int32_t)7; i5219++){
for (uint32_t i5217 =  (int32_t)0; i5217 <  (int32_t)160; i5217++){
Arr4DIdxRowM(tmp2149, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i5216,i5217,i5218,i5219) = Arr4DIdxRowM(tmp2142, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i5212,i5213,i5214,i5215);
i5215 = (i5215 +  (int64_t)1);
if ((i5215 ==  (int64_t)160)) {
i5215 =  (int64_t)0;
i5214 = (i5214 +  (int64_t)1);
if ((i5214 ==  (int64_t)7)) {
i5214 =  (int64_t)0;
i5213 = (i5213 +  (int64_t)1);
if ((i5213 ==  (int64_t)7)) {
i5213 =  (int64_t)0;
i5212 = (i5212 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp2142);

uint64_t* tmp2151 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160);

int64_t i5227;

int64_t i5226;

int64_t i5225;

int64_t i5224;

int64_t i5223;

int64_t i5222;

int64_t i5221;

int64_t i5220;
i5220 =  (int64_t)0;
i5221 =  (int64_t)0;
i5222 =  (int64_t)0;
i5223 =  (int64_t)0;
for (uint32_t i5224 =  (int32_t)0; i5224 <  (int32_t)1; i5224++){
for (uint32_t i5227 =  (int32_t)0; i5227 <  (int32_t)160; i5227++){
for (uint32_t i5225 =  (int32_t)0; i5225 <  (int32_t)7; i5225++){
for (uint32_t i5226 =  (int32_t)0; i5226 <  (int32_t)7; i5226++){
Arr4DIdxRowM(tmp2151, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)160,i5224,i5225,i5226,i5227) = Arr4DIdxRowM(tmp2149, (int32_t)1, (int32_t)160, (int32_t)7, (int32_t)7,i5220,i5221,i5222,i5223);
i5223 = (i5223 +  (int64_t)1);
if ((i5223 ==  (int64_t)7)) {
i5223 =  (int64_t)0;
i5222 = (i5222 +  (int64_t)1);
if ((i5222 ==  (int64_t)7)) {
i5222 =  (int64_t)0;
i5221 = (i5221 +  (int64_t)1);
if ((i5221 ==  (int64_t)160)) {
i5221 =  (int64_t)0;
i5220 = (i5220 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)160,  (int32_t)7,  (int32_t)7, tmp2149);

uint64_t* tmp2153 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)160,  (int32_t)960);

int64_t i5235;

int64_t i5234;

int64_t i5233;

int64_t i5232;

int64_t i5231;

int64_t i5230;

int64_t i5229;

int64_t i5228;
i5228 =  (int64_t)0;
i5229 =  (int64_t)0;
i5230 =  (int64_t)0;
i5231 =  (int64_t)0;
for (uint32_t i5235 =  (int32_t)0; i5235 <  (int32_t)960; i5235++){
for (uint32_t i5234 =  (int32_t)0; i5234 <  (int32_t)160; i5234++){
for (uint32_t i5232 =  (int32_t)0; i5232 <  (int32_t)1; i5232++){
for (uint32_t i5233 =  (int32_t)0; i5233 <  (int32_t)1; i5233++){
Arr4DIdxRowM(tmp2153, (int32_t)1, (int32_t)1, (int32_t)160, (int32_t)960,i5232,i5233,i5234,i5235) = Arr4DIdxRowM(tmp108, (int32_t)960, (int32_t)160, (int32_t)1, (int32_t)1,i5228,i5229,i5230,i5231);
i5231 = (i5231 +  (int64_t)1);
if ((i5231 ==  (int64_t)1)) {
i5231 =  (int64_t)0;
i5230 = (i5230 +  (int64_t)1);
if ((i5230 ==  (int64_t)1)) {
i5230 =  (int64_t)0;
i5229 = (i5229 +  (int64_t)1);
if ((i5229 ==  (int64_t)160)) {
i5229 =  (int64_t)0;
i5228 = (i5228 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)960,  (int32_t)160,  (int32_t)1,  (int32_t)1, tmp108);

uint64_t* tmp2155 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960);
ScaleDown4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp2151,  (int32_t)23);
Conv2DGroupWrapper( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160,  (int32_t)1,  (int32_t)1,  (int32_t)960,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1, tmp2151, tmp2153, tmp2155);
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)160,  (int32_t)960, tmp2153);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)160, tmp2151);

uint64_t* tmp2158 = make_array<uint64_t>( (int32_t)1,  (int32_t)960,  (int32_t)7,  (int32_t)7);

int64_t i5243;

int64_t i5242;

int64_t i5241;

int64_t i5240;

int64_t i5239;

int64_t i5238;

int64_t i5237;

int64_t i5236;
i5236 =  (int64_t)0;
i5237 =  (int64_t)0;
i5238 =  (int64_t)0;
i5239 =  (int64_t)0;
for (uint32_t i5240 =  (int32_t)0; i5240 <  (int32_t)1; i5240++){
for (uint32_t i5242 =  (int32_t)0; i5242 <  (int32_t)7; i5242++){
for (uint32_t i5243 =  (int32_t)0; i5243 <  (int32_t)7; i5243++){
for (uint32_t i5241 =  (int32_t)0; i5241 <  (int32_t)960; i5241++){
Arr4DIdxRowM(tmp2158, (int32_t)1, (int32_t)960, (int32_t)7, (int32_t)7,i5240,i5241,i5242,i5243) = Arr4DIdxRowM(tmp2155, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i5236,i5237,i5238,i5239);
i5239 = (i5239 +  (int64_t)1);
if ((i5239 ==  (int64_t)960)) {
i5239 =  (int64_t)0;
i5238 = (i5238 +  (int64_t)1);
if ((i5238 ==  (int64_t)7)) {
i5238 =  (int64_t)0;
i5237 = (i5237 +  (int64_t)1);
if ((i5237 ==  (int64_t)7)) {
i5237 =  (int64_t)0;
i5236 = (i5236 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2155);

uint64_t* tmp2160 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960);

int64_t i5251;

int64_t i5250;

int64_t i5249;

int64_t i5248;

int64_t i5247;

int64_t i5246;

int64_t i5245;

int64_t i5244;
i5244 =  (int64_t)0;
i5245 =  (int64_t)0;
i5246 =  (int64_t)0;
i5247 =  (int64_t)0;
for (uint32_t i5248 =  (int32_t)0; i5248 <  (int32_t)1; i5248++){
for (uint32_t i5251 =  (int32_t)0; i5251 <  (int32_t)960; i5251++){
for (uint32_t i5249 =  (int32_t)0; i5249 <  (int32_t)7; i5249++){
for (uint32_t i5250 =  (int32_t)0; i5250 <  (int32_t)7; i5250++){
Arr4DIdxRowM(tmp2160, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i5248,i5249,i5250,i5251) = Arr4DIdxRowM(tmp2158, (int32_t)1, (int32_t)960, (int32_t)7, (int32_t)7,i5244,i5245,i5246,i5247);
i5247 = (i5247 +  (int64_t)1);
if ((i5247 ==  (int64_t)7)) {
i5247 =  (int64_t)0;
i5246 = (i5246 +  (int64_t)1);
if ((i5246 ==  (int64_t)7)) {
i5246 =  (int64_t)0;
i5245 = (i5245 +  (int64_t)1);
if ((i5245 ==  (int64_t)960)) {
i5245 =  (int64_t)0;
i5244 = (i5244 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)960,  (int32_t)7,  (int32_t)7, tmp2158);

uint64_t* tmp2162 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960);
ScaleDown4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2160,  (int32_t)23);
FusedBatchNorm4411( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2160, tmp102, tmp103,  (int32_t)0,  (int32_t)0, tmp2162);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2160);
ClearMemSecret1( (int32_t)960, tmp102);
ClearMemSecret1( (int32_t)960, tmp103);

uint64_t* tmp2166 = make_array<uint64_t>( (int32_t)1,  (int32_t)960,  (int32_t)7,  (int32_t)7);

int64_t i5259;

int64_t i5258;

int64_t i5257;

int64_t i5256;

int64_t i5255;

int64_t i5254;

int64_t i5253;

int64_t i5252;
i5252 =  (int64_t)0;
i5253 =  (int64_t)0;
i5254 =  (int64_t)0;
i5255 =  (int64_t)0;
for (uint32_t i5256 =  (int32_t)0; i5256 <  (int32_t)1; i5256++){
for (uint32_t i5258 =  (int32_t)0; i5258 <  (int32_t)7; i5258++){
for (uint32_t i5259 =  (int32_t)0; i5259 <  (int32_t)7; i5259++){
for (uint32_t i5257 =  (int32_t)0; i5257 <  (int32_t)960; i5257++){
Arr4DIdxRowM(tmp2166, (int32_t)1, (int32_t)960, (int32_t)7, (int32_t)7,i5256,i5257,i5258,i5259) = Arr4DIdxRowM(tmp2162, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i5252,i5253,i5254,i5255);
i5255 = (i5255 +  (int64_t)1);
if ((i5255 ==  (int64_t)960)) {
i5255 =  (int64_t)0;
i5254 = (i5254 +  (int64_t)1);
if ((i5254 ==  (int64_t)7)) {
i5254 =  (int64_t)0;
i5253 = (i5253 +  (int64_t)1);
if ((i5253 ==  (int64_t)7)) {
i5253 =  (int64_t)0;
i5252 = (i5252 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2162);

uint64_t* tmp2168 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960);

int64_t i5267;

int64_t i5266;

int64_t i5265;

int64_t i5264;

int64_t i5263;

int64_t i5262;

int64_t i5261;

int64_t i5260;
i5260 =  (int64_t)0;
i5261 =  (int64_t)0;
i5262 =  (int64_t)0;
i5263 =  (int64_t)0;
for (uint32_t i5264 =  (int32_t)0; i5264 <  (int32_t)1; i5264++){
for (uint32_t i5267 =  (int32_t)0; i5267 <  (int32_t)960; i5267++){
for (uint32_t i5265 =  (int32_t)0; i5265 <  (int32_t)7; i5265++){
for (uint32_t i5266 =  (int32_t)0; i5266 <  (int32_t)7; i5266++){
Arr4DIdxRowM(tmp2168, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i5264,i5265,i5266,i5267) = Arr4DIdxRowM(tmp2166, (int32_t)1, (int32_t)960, (int32_t)7, (int32_t)7,i5260,i5261,i5262,i5263);
i5263 = (i5263 +  (int64_t)1);
if ((i5263 ==  (int64_t)7)) {
i5263 =  (int64_t)0;
i5262 = (i5262 +  (int64_t)1);
if ((i5262 ==  (int64_t)7)) {
i5262 =  (int64_t)0;
i5261 = (i5261 +  (int64_t)1);
if ((i5261 ==  (int64_t)960)) {
i5261 =  (int64_t)0;
i5260 = (i5260 +  (int64_t)1);
}
}
}
}
}
}
}

uint64_t* tmp2169 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960);
HardSigmoid4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2168, tmp2169,  (int32_t)23, 1);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2168);

uint64_t* tmp2171 = make_array<uint64_t>( (int32_t)1,  (int32_t)960,  (int32_t)7,  (int32_t)7);

int64_t i5275;

int64_t i5274;

int64_t i5273;

int64_t i5272;

int64_t i5271;

int64_t i5270;

int64_t i5269;

int64_t i5268;
i5268 =  (int64_t)0;
i5269 =  (int64_t)0;
i5270 =  (int64_t)0;
i5271 =  (int64_t)0;
for (uint32_t i5272 =  (int32_t)0; i5272 <  (int32_t)1; i5272++){
for (uint32_t i5274 =  (int32_t)0; i5274 <  (int32_t)7; i5274++){
for (uint32_t i5275 =  (int32_t)0; i5275 <  (int32_t)7; i5275++){
for (uint32_t i5273 =  (int32_t)0; i5273 <  (int32_t)960; i5273++){
Arr4DIdxRowM(tmp2171, (int32_t)1, (int32_t)960, (int32_t)7, (int32_t)7,i5272,i5273,i5274,i5275) = Arr4DIdxRowM(tmp2169, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i5268,i5269,i5270,i5271);
i5271 = (i5271 +  (int64_t)1);
if ((i5271 ==  (int64_t)960)) {
i5271 =  (int64_t)0;
i5270 = (i5270 +  (int64_t)1);
if ((i5270 ==  (int64_t)7)) {
i5270 =  (int64_t)0;
i5269 = (i5269 +  (int64_t)1);
if ((i5269 ==  (int64_t)7)) {
i5269 =  (int64_t)0;
i5268 = (i5268 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2169);

uint64_t* tmp2173 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960);

int64_t i5283;

int64_t i5282;

int64_t i5281;

int64_t i5280;

int64_t i5279;

int64_t i5278;

int64_t i5277;

int64_t i5276;
i5276 =  (int64_t)0;
i5277 =  (int64_t)0;
i5278 =  (int64_t)0;
i5279 =  (int64_t)0;
for (uint32_t i5280 =  (int32_t)0; i5280 <  (int32_t)1; i5280++){
for (uint32_t i5283 =  (int32_t)0; i5283 <  (int32_t)960; i5283++){
for (uint32_t i5281 =  (int32_t)0; i5281 <  (int32_t)7; i5281++){
for (uint32_t i5282 =  (int32_t)0; i5282 <  (int32_t)7; i5282++){
Arr4DIdxRowM(tmp2173, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i5280,i5281,i5282,i5283) = Arr4DIdxRowM(tmp2166, (int32_t)1, (int32_t)960, (int32_t)7, (int32_t)7,i5276,i5277,i5278,i5279);
i5279 = (i5279 +  (int64_t)1);
if ((i5279 ==  (int64_t)7)) {
i5279 =  (int64_t)0;
i5278 = (i5278 +  (int64_t)1);
if ((i5278 ==  (int64_t)7)) {
i5278 =  (int64_t)0;
i5277 = (i5277 +  (int64_t)1);
if ((i5277 ==  (int64_t)960)) {
i5277 =  (int64_t)0;
i5276 = (i5276 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)960,  (int32_t)7,  (int32_t)7, tmp2166);

uint64_t* tmp2175 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960);

int64_t i5291;

int64_t i5290;

int64_t i5289;

int64_t i5288;

int64_t i5287;

int64_t i5286;

int64_t i5285;

int64_t i5284;
i5284 =  (int64_t)0;
i5285 =  (int64_t)0;
i5286 =  (int64_t)0;
i5287 =  (int64_t)0;
for (uint32_t i5288 =  (int32_t)0; i5288 <  (int32_t)1; i5288++){
for (uint32_t i5291 =  (int32_t)0; i5291 <  (int32_t)960; i5291++){
for (uint32_t i5289 =  (int32_t)0; i5289 <  (int32_t)7; i5289++){
for (uint32_t i5290 =  (int32_t)0; i5290 <  (int32_t)7; i5290++){
Arr4DIdxRowM(tmp2175, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i5288,i5289,i5290,i5291) = Arr4DIdxRowM(tmp2171, (int32_t)1, (int32_t)960, (int32_t)7, (int32_t)7,i5284,i5285,i5286,i5287);
i5287 = (i5287 +  (int64_t)1);
if ((i5287 ==  (int64_t)7)) {
i5287 =  (int64_t)0;
i5286 = (i5286 +  (int64_t)1);
if ((i5286 ==  (int64_t)7)) {
i5286 =  (int64_t)0;
i5285 = (i5285 +  (int64_t)1);
if ((i5285 ==  (int64_t)960)) {
i5285 =  (int64_t)0;
i5284 = (i5284 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)960,  (int32_t)7,  (int32_t)7, tmp2171);
ScaleDown4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2173,  (int32_t)23);

uint64_t* tmp2177 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960);

uint64_t* tmp2178 = make_array<uint64_t>( (int32_t)47040);

uint64_t* tmp2179 = make_array<uint64_t>( (int32_t)47040);

uint64_t* tmp2180 = make_array<uint64_t>( (int32_t)47040);

int32_t tmp2181;
for (uint32_t i5292 =  (int32_t)0; i5292 <  (int32_t)1; i5292++){
for (uint32_t i5293 =  (int32_t)0; i5293 <  (int32_t)7; i5293++){
for (uint32_t i5294 =  (int32_t)0; i5294 <  (int32_t)7; i5294++){
for (uint32_t i5295 =  (int32_t)0; i5295 <  (int32_t)960; i5295++){
tmp2181 = (((( (int32_t)0 + (i5292 *  (int32_t)47040)) + (i5293 *  (int32_t)6720)) + (i5294 *  (int32_t)960)) + (i5295 *  (int32_t)1));
Arr1DIdxRowM(tmp2178, (int32_t)47040,tmp2181) = Arr4DIdxRowM(tmp2173, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i5292,i5293,i5294,i5295);
Arr1DIdxRowM(tmp2179, (int32_t)47040,tmp2181) = Arr4DIdxRowM(tmp2175, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i5292,i5293,i5294,i5295);
}
}
}
}
ElemWiseSecretSharedVectorMult( (int32_t)47040, tmp2178, tmp2179, tmp2180);
ClearMemSecret1( (int32_t)47040, tmp2178);
ClearMemSecret1( (int32_t)47040, tmp2179);
for (uint32_t i5292 =  (int32_t)0; i5292 <  (int32_t)1; i5292++){
for (uint32_t i5293 =  (int32_t)0; i5293 <  (int32_t)7; i5293++){
for (uint32_t i5294 =  (int32_t)0; i5294 <  (int32_t)7; i5294++){
for (uint32_t i5295 =  (int32_t)0; i5295 <  (int32_t)960; i5295++){
tmp2181 = (((( (int32_t)0 + (i5292 *  (int32_t)47040)) + (i5293 *  (int32_t)6720)) + (i5294 *  (int32_t)960)) + (i5295 *  (int32_t)1));
Arr4DIdxRowM(tmp2177, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i5292,i5293,i5294,i5295) = Arr1DIdxRowM(tmp2180, (int32_t)47040,tmp2181);
}
}
}
}
ClearMemSecret1( (int32_t)47040, tmp2180);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2175);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2173);

uint64_t* tmp2184 = make_array<uint64_t>( (int32_t)1,  (int32_t)960,  (int32_t)7,  (int32_t)7);

int64_t i5303;

int64_t i5302;

int64_t i5301;

int64_t i5300;

int64_t i5299;

int64_t i5298;

int64_t i5297;

int64_t i5296;
i5296 =  (int64_t)0;
i5297 =  (int64_t)0;
i5298 =  (int64_t)0;
i5299 =  (int64_t)0;
for (uint32_t i5300 =  (int32_t)0; i5300 <  (int32_t)1; i5300++){
for (uint32_t i5302 =  (int32_t)0; i5302 <  (int32_t)7; i5302++){
for (uint32_t i5303 =  (int32_t)0; i5303 <  (int32_t)7; i5303++){
for (uint32_t i5301 =  (int32_t)0; i5301 <  (int32_t)960; i5301++){
Arr4DIdxRowM(tmp2184, (int32_t)1, (int32_t)960, (int32_t)7, (int32_t)7,i5300,i5301,i5302,i5303) = Arr4DIdxRowM(tmp2177, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i5296,i5297,i5298,i5299);
i5299 = (i5299 +  (int64_t)1);
if ((i5299 ==  (int64_t)960)) {
i5299 =  (int64_t)0;
i5298 = (i5298 +  (int64_t)1);
if ((i5298 ==  (int64_t)7)) {
i5298 =  (int64_t)0;
i5297 = (i5297 +  (int64_t)1);
if ((i5297 ==  (int64_t)7)) {
i5297 =  (int64_t)0;
i5296 = (i5296 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2177);

uint64_t* tmp2186 = make_array<uint64_t>( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960);

int64_t i5311;

int64_t i5310;

int64_t i5309;

int64_t i5308;

int64_t i5307;

int64_t i5306;

int64_t i5305;

int64_t i5304;
i5304 =  (int64_t)0;
i5305 =  (int64_t)0;
i5306 =  (int64_t)0;
i5307 =  (int64_t)0;
for (uint32_t i5308 =  (int32_t)0; i5308 <  (int32_t)1; i5308++){
for (uint32_t i5311 =  (int32_t)0; i5311 <  (int32_t)960; i5311++){
for (uint32_t i5309 =  (int32_t)0; i5309 <  (int32_t)7; i5309++){
for (uint32_t i5310 =  (int32_t)0; i5310 <  (int32_t)7; i5310++){
Arr4DIdxRowM(tmp2186, (int32_t)1, (int32_t)7, (int32_t)7, (int32_t)960,i5308,i5309,i5310,i5311) = Arr4DIdxRowM(tmp2184, (int32_t)1, (int32_t)960, (int32_t)7, (int32_t)7,i5304,i5305,i5306,i5307);
i5307 = (i5307 +  (int64_t)1);
if ((i5307 ==  (int64_t)7)) {
i5307 =  (int64_t)0;
i5306 = (i5306 +  (int64_t)1);
if ((i5306 ==  (int64_t)7)) {
i5306 =  (int64_t)0;
i5305 = (i5305 +  (int64_t)1);
if ((i5305 ==  (int64_t)960)) {
i5305 =  (int64_t)0;
i5304 = (i5304 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)960,  (int32_t)7,  (int32_t)7, tmp2184);

uint64_t* tmp2188 = make_array<uint64_t>( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)960);
AvgPool( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)960,  (int32_t)7,  (int32_t)7,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)0,  (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2186, tmp2188);
ClearMemSecret4( (int32_t)1,  (int32_t)7,  (int32_t)7,  (int32_t)960, tmp2186);

uint64_t* tmp2190 = make_array<uint64_t>( (int32_t)1,  (int32_t)960,  (int32_t)1,  (int32_t)1);

int64_t i5319;

int64_t i5318;

int64_t i5317;

int64_t i5316;

int64_t i5315;

int64_t i5314;

int64_t i5313;

int64_t i5312;
i5312 =  (int64_t)0;
i5313 =  (int64_t)0;
i5314 =  (int64_t)0;
i5315 =  (int64_t)0;
for (uint32_t i5316 =  (int32_t)0; i5316 <  (int32_t)1; i5316++){
for (uint32_t i5318 =  (int32_t)0; i5318 <  (int32_t)1; i5318++){
for (uint32_t i5319 =  (int32_t)0; i5319 <  (int32_t)1; i5319++){
for (uint32_t i5317 =  (int32_t)0; i5317 <  (int32_t)960; i5317++){
Arr4DIdxRowM(tmp2190, (int32_t)1, (int32_t)960, (int32_t)1, (int32_t)1,i5316,i5317,i5318,i5319) = Arr4DIdxRowM(tmp2188, (int32_t)1, (int32_t)1, (int32_t)1, (int32_t)960,i5312,i5313,i5314,i5315);
i5315 = (i5315 +  (int64_t)1);
if ((i5315 ==  (int64_t)960)) {
i5315 =  (int64_t)0;
i5314 = (i5314 +  (int64_t)1);
if ((i5314 ==  (int64_t)1)) {
i5314 =  (int64_t)0;
i5313 = (i5313 +  (int64_t)1);
if ((i5313 ==  (int64_t)1)) {
i5313 =  (int64_t)0;
i5312 = (i5312 +  (int64_t)1);
}
}
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)1,  (int32_t)1,  (int32_t)960, tmp2188);

uint64_t* tmp2192 = make_array<uint64_t>( (int32_t)1,  (int32_t)960);

int64_t i5325;

int64_t i5324;

int64_t i5323;

int64_t i5322;

int64_t i5321;

int64_t i5320;
i5320 =  (int64_t)0;
i5321 =  (int64_t)0;
i5322 =  (int64_t)0;
i5323 =  (int64_t)0;
for (uint32_t i5324 =  (int32_t)0; i5324 <  (int32_t)1; i5324++){
for (uint32_t i5325 =  (int32_t)0; i5325 <  (int32_t)960; i5325++){
Arr2DIdxRowM(tmp2192, (int32_t)1, (int32_t)960,i5324,i5325) = Arr4DIdxRowM(tmp2190, (int32_t)1, (int32_t)960, (int32_t)1, (int32_t)1,i5320,i5321,i5322,i5323);
i5323 = (i5323 +  (int64_t)1);
if ((i5323 ==  (int64_t)1)) {
i5323 =  (int64_t)0;
i5322 = (i5322 +  (int64_t)1);
if ((i5322 ==  (int64_t)1)) {
i5322 =  (int64_t)0;
i5321 = (i5321 +  (int64_t)1);
if ((i5321 ==  (int64_t)960)) {
i5321 =  (int64_t)0;
i5320 = (i5320 +  (int64_t)1);
}
}
}
}
}
ClearMemSecret4( (int32_t)1,  (int32_t)960,  (int32_t)1,  (int32_t)1, tmp2190);

uint64_t* tmp2194 = make_array<uint64_t>( (int32_t)1,  (int32_t)1280);
ScaleDown2( (int32_t)1,  (int32_t)960, tmp2192,  (int32_t)23);
MatMul2D( (int32_t)1,  (int32_t)960,  (int32_t)1280, tmp2192, tmp111, tmp2194, 0);
ClearMemSecret2( (int32_t)960,  (int32_t)1280, tmp111);
ClearMemSecret2( (int32_t)1,  (int32_t)960, tmp2192);

uint64_t* tmp2197 = make_array<uint64_t>( (int32_t)1,  (int32_t)1280);

int64_t i5329;

int64_t i5328;

int64_t i5327;

int64_t i5326;
i5326 =  (int64_t)0;
i5327 =  (int64_t)0;
for (uint32_t i5328 =  (int32_t)0; i5328 <  (int32_t)1; i5328++){
for (uint32_t i5329 =  (int32_t)0; i5329 <  (int32_t)1280; i5329++){
Arr2DIdxRowM(tmp2197, (int32_t)1, (int32_t)1280,i5328,i5329) = Arr2DIdxRowM(tmp2194, (int32_t)1, (int32_t)1280,i5326,i5327);
i5327 = (i5327 +  (int64_t)1);
if ((i5327 ==  (int64_t)1280)) {
i5327 =  (int64_t)0;
i5326 = (i5326 +  (int64_t)1);
}
}
}

uint64_t* tmp2198 = make_array<uint64_t>( (int32_t)1,  (int32_t)1280);
HardSigmoid2( (int32_t)1,  (int32_t)1280, tmp2197, tmp2198,  (int32_t)23, 1);
ClearMemSecret2( (int32_t)1,  (int32_t)1280, tmp2197);

uint64_t* tmp2200 = make_array<uint64_t>( (int32_t)1,  (int32_t)1280);

int64_t i5333;

int64_t i5332;

int64_t i5331;

int64_t i5330;
i5330 =  (int64_t)0;
i5331 =  (int64_t)0;
for (uint32_t i5332 =  (int32_t)0; i5332 <  (int32_t)1; i5332++){
for (uint32_t i5333 =  (int32_t)0; i5333 <  (int32_t)1280; i5333++){
Arr2DIdxRowM(tmp2200, (int32_t)1, (int32_t)1280,i5332,i5333) = Arr2DIdxRowM(tmp2198, (int32_t)1, (int32_t)1280,i5330,i5331);
i5331 = (i5331 +  (int64_t)1);
if ((i5331 ==  (int64_t)1280)) {
i5331 =  (int64_t)0;
i5330 = (i5330 +  (int64_t)1);
}
}
}
ClearMemSecret2( (int32_t)1,  (int32_t)1280, tmp2198);

uint64_t* tmp2202 = make_array<uint64_t>( (int32_t)1,  (int32_t)1280);

int64_t i5337;

int64_t i5336;

int64_t i5335;

int64_t i5334;
i5334 =  (int64_t)0;
i5335 =  (int64_t)0;
for (uint32_t i5336 =  (int32_t)0; i5336 <  (int32_t)1; i5336++){
for (uint32_t i5337 =  (int32_t)0; i5337 <  (int32_t)1280; i5337++){
Arr2DIdxRowM(tmp2202, (int32_t)1, (int32_t)1280,i5336,i5337) = Arr2DIdxRowM(tmp2194, (int32_t)1, (int32_t)1280,i5334,i5335);
i5335 = (i5335 +  (int64_t)1);
if ((i5335 ==  (int64_t)1280)) {
i5335 =  (int64_t)0;
i5334 = (i5334 +  (int64_t)1);
}
}
}
ClearMemSecret2( (int32_t)1,  (int32_t)1280, tmp2194);

uint64_t* tmp2204 = make_array<uint64_t>( (int32_t)1,  (int32_t)1280);

int64_t i5341;

int64_t i5340;

int64_t i5339;

int64_t i5338;
i5338 =  (int64_t)0;
i5339 =  (int64_t)0;
for (uint32_t i5340 =  (int32_t)0; i5340 <  (int32_t)1; i5340++){
for (uint32_t i5341 =  (int32_t)0; i5341 <  (int32_t)1280; i5341++){
Arr2DIdxRowM(tmp2204, (int32_t)1, (int32_t)1280,i5340,i5341) = Arr2DIdxRowM(tmp2200, (int32_t)1, (int32_t)1280,i5338,i5339);
i5339 = (i5339 +  (int64_t)1);
if ((i5339 ==  (int64_t)1280)) {
i5339 =  (int64_t)0;
i5338 = (i5338 +  (int64_t)1);
}
}
}
ClearMemSecret2( (int32_t)1,  (int32_t)1280, tmp2200);
ScaleDown2( (int32_t)1,  (int32_t)1280, tmp2202,  (int32_t)23);

uint64_t* tmp2206 = make_array<uint64_t>( (int32_t)1,  (int32_t)1280);

uint64_t* tmp2207 = make_array<uint64_t>( (int32_t)1280);

uint64_t* tmp2208 = make_array<uint64_t>( (int32_t)1280);

uint64_t* tmp2209 = make_array<uint64_t>( (int32_t)1280);

int32_t tmp2210;
for (uint32_t i5342 =  (int32_t)0; i5342 <  (int32_t)1; i5342++){
for (uint32_t i5343 =  (int32_t)0; i5343 <  (int32_t)1280; i5343++){
tmp2210 = (( (int32_t)0 + (i5342 *  (int32_t)1280)) + (i5343 *  (int32_t)1));
Arr1DIdxRowM(tmp2207, (int32_t)1280,tmp2210) = Arr2DIdxRowM(tmp2202, (int32_t)1, (int32_t)1280,i5342,i5343);
Arr1DIdxRowM(tmp2208, (int32_t)1280,tmp2210) = Arr2DIdxRowM(tmp2204, (int32_t)1, (int32_t)1280,i5342,i5343);
}
}
ElemWiseSecretSharedVectorMult( (int32_t)1280, tmp2207, tmp2208, tmp2209);
ClearMemSecret1( (int32_t)1280, tmp2207);
ClearMemSecret1( (int32_t)1280, tmp2208);
for (uint32_t i5342 =  (int32_t)0; i5342 <  (int32_t)1; i5342++){
for (uint32_t i5343 =  (int32_t)0; i5343 <  (int32_t)1280; i5343++){
tmp2210 = (( (int32_t)0 + (i5342 *  (int32_t)1280)) + (i5343 *  (int32_t)1));
Arr2DIdxRowM(tmp2206, (int32_t)1, (int32_t)1280,i5342,i5343) = Arr1DIdxRowM(tmp2209, (int32_t)1280,tmp2210);
}
}
ClearMemSecret1( (int32_t)1280, tmp2209);
ClearMemSecret2( (int32_t)1,  (int32_t)1280, tmp2204);
ClearMemSecret2( (int32_t)1,  (int32_t)1280, tmp2202);

uint64_t* tmp2213 = make_array<uint64_t>( (int32_t)1,  (int32_t)1280);

int64_t i5347;

int64_t i5346;

int64_t i5345;

int64_t i5344;
i5344 =  (int64_t)0;
i5345 =  (int64_t)0;
for (uint32_t i5346 =  (int32_t)0; i5346 <  (int32_t)1; i5346++){
for (uint32_t i5347 =  (int32_t)0; i5347 <  (int32_t)1280; i5347++){
Arr2DIdxRowM(tmp2213, (int32_t)1, (int32_t)1280,i5346,i5347) = Arr2DIdxRowM(tmp2206, (int32_t)1, (int32_t)1280,i5344,i5345);
i5345 = (i5345 +  (int64_t)1);
if ((i5345 ==  (int64_t)1280)) {
i5345 =  (int64_t)0;
i5344 = (i5344 +  (int64_t)1);
}
}
}
ClearMemSecret2( (int32_t)1,  (int32_t)1280, tmp2206);
ScaleUp1( (int32_t)1000, tmp110,  (int32_t)23);

uint64_t* tmp2216 = make_array<uint64_t>( (int32_t)1,  (int32_t)1000);

uint64_t* tmp2215 = make_array<uint64_t>( (int32_t)1280,  (int32_t)1000);

int64_t i5349;

int64_t i5348;
for (uint32_t i5348 =  (int32_t)0; i5348 <  (int32_t)1000; i5348++){
for (uint32_t i5349 =  (int32_t)0; i5349 <  (int32_t)1280; i5349++){
Arr2DIdxRowM(tmp2215, (int32_t)1280, (int32_t)1000,i5349,i5348) = Arr2DIdxRowM(tmp109, (int32_t)1000, (int32_t)1280,i5348,i5349);
}
}
ScaleDown2( (int32_t)1,  (int32_t)1280, tmp2213,  (int32_t)23);
MatMul2D( (int32_t)1,  (int32_t)1280,  (int32_t)1000, tmp2213, tmp2215, tmp2216, 0);

uint64_t* tmp2217 = make_array<uint64_t>( (int32_t)1,  (int32_t)1000);
for (uint32_t i0 =  (int32_t)0; i0 <  (int32_t)1; i0++){
for (uint32_t i1 =  (int32_t)0; i1 <  (int32_t)1000; i1++){
Arr2DIdxRowM(tmp2217, (int32_t)1, (int32_t)1000,i0,i1) = SecretAdd(Arr2DIdxRowM(tmp2216, (int32_t)1, (int32_t)1000,i0,i1), Arr1DIdxRowM(tmp110, (int32_t)1000,i1));
}
}
ClearMemSecret2( (int32_t)1,  (int32_t)1280, tmp2213);
ClearMemSecret2( (int32_t)1000,  (int32_t)1280, tmp109);
ClearMemSecret1( (int32_t)1000, tmp110);
ScaleDown2( (int32_t)1,  (int32_t)1000, tmp2217,  (int32_t)23);
EndComputation();
for (uint32_t i0 =  (uint32_t)0; i0 <  (int32_t)1; i0++){
for (uint32_t i1 =  (uint32_t)0; i1 <  (int32_t)1000; i1++){
cout << (funcReconstruct2PCCons(Arr2DIdxRowM(tmp2217, (int32_t)1, (int32_t)1000,i0,i1), 2)) << endl;
}
}
}

